{
  "id": "Candidate124",
  "raw_text": "SUMMARY\nFull Stack Developer with 9+ years of experience in Software Analysis, Design, Development, Implementation and Testing of Object Oriented Applications and Web based Enterprise Applications using JAVA/J2EE technologies.\nExperience in Waterfall, Agile (scrum) methodologies where there is a daily SCRUM meetings to understand the status and resolve any issues and in making web pages cross browser compatible and server scripting languages.\nProficient in UI design, developed Front End using HTML, CSS, JavaScript, JQuery, Ajax, Angular JS, Bootstrap like Node JS and Backbone JS.\nExpertise in DOM manipulation using JavaScript and Angular JS. \nExperience in Core Java concepts such as OOP Concepts, Collections Framework, Exception Handling, I/O System, Multi-Threading, JDBC.\nWorked with Web Sphere Application Server, Oracle Web Logic application server, JBoss Fuse and Apache Tomcat Application Server.\nHighly experience with Java IDE’s like Eclipse, STS, RAD, IntelliJ, NetBeans.\nDesign and Develop reference implementation on jBPM for multiple teams. \nCheck images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. \nExperience in developing with various open source frameworks such as Java Server Faces (JSF), Spring  (Core, IOC, AOP, Batch, Security, Boot) Framework, Struts Framework, Tiles Frameworks and ORM Tools like Hibernate and IBatis.\nExpertise in implementing various J2EE design patterns like Singleton, Session Facade, Data Access Objects (DAO), Factory, Data Transfer Object (DTO) and Business. \nDeveloped app monitoring framework using Drools/Kafka \nExperience in working with XML technologies like XML, XSL, XSD, DTD, XSLT and parsing XML with SAX & DOM parsers. \nDesigned, developed, tested, integrated, and deployed large numbers of complex rules in rule flows, Drools Fusion and Drools CEP.\nDesigning and implementing BPM services for various domains within using tools like Apache camel\nExpertise in developing web services using SOAP, WSDL, RESTful, JAX-WS, JAX-RS, JAX-RPC.\nWorked on translation of diameter protocol for Reinvent client. Manually translated the source code of RF Server module from C, C++ to Java. Manually converted source code in C++ for Client Profile Server to C so that it can be converted to Java using the \"C to Java Translation Tool\".\nStrong skills in RDBMS implementation and development using Oracle, IBM DB2 Database Servers and hands on experience with SQL, PL/SQL.\nHands on work experience on various Enterprise Integration frameworks like Apache Camel\nGood understanding on NoSQL databases like Mongo DB.\nExperience with MOCKITO, JUnit, Log4j in developing test cases and determining application functionality.\nSubversion SVN, CVS, GIT, RTC and Visual Source Safe as versioning software tools. \nHands on experience in building tools like ANT, Maven, Gradle.\nInvolved in issue tracking and agile project management using JIRA.\nExperience in developing applications on Windows, UNIX and Linux platforms.\nHaving Experience on UNIX commands and Deployment of Applications in Server.\nDomain knowledge and business expertise in Banking, finance, Insurance, Healthcare.\nEDUCATION\nBACHELOR OF TECHNOLOGY COMPUTER SCIENECE  ​from VBCE \nPROFESSIONAL PORTFOLIO\nClient:  Volkswagen Group of America, Auburn-hills, Michigan.\t                   \t\t                                                        \nRole: Full Stack Java Developer\nDuration:  May 2017 – till date\nProject: \n TDI Court Settlement, CCCA (Customer Care Capacity Assistance): The purpose of this project is to provide a Customer web based application which will simplify case communication with customer care team and customers, provide online process status, automate email communications throughout process, and enable customers to upload required documents. \nBack Office (BO): There are processes that allow back office agents to search for a case and perform a few of the functions to keep the case moving forward, to help the consumer move back in the process if they need to change some information, or to complete the process entirely on behalf of the consumer.\nResponsibilities:\n• Developing UI using Vaadin frame work and constructing the brand-new CSS style sheets and other UI based components. \n• Actively involved in mock screens development and project start-up phase. \n• Efficiently managed the tasks and working and delivering features in a fast-paced scrum environment. \n• Experience working in Agile development following SCRUM process, Sprint and daily stand-up meetings. \n• Involved in developing the UI, layout and front-end programming for web application that matches requirements of the client. \n• Prepared Technical Design documents with UML diagrams using Microsoft Visio. \n• Involved in building a single page and cross browser compatible web application using Angular-JS (Angular routing). \n• Configured Jenkins jobs, Install Plugins for generating artifacts.\n•Used WebSphere Application Server deploying various components of application.\n• Functionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle    database as the backend.  \n• Worked with advanced MVC framework such as Spring-IOC, AOP, MVC and Batch which is used for implementing       backend functionality. \n• Designed and developed business components using Spring Boot \n\n• Participated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many         requests \n• Support & Enhancement to the existing implementation of correspondence components which are developed using EJBs, JPA      and Web Services / JMS Technologies. \n• Used Hibernate, object/relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema. \n• Used Microservice architecture with Spring Boot based service through REST.\n• Used Java Message Service (JMS) for reliable and asynchronous exchange of important information for status report. \n• Working within SOA based enterprise framework to build web services for Middle Tier processing. \n• Developed SOAP based web services using WSDL, SOAP, JAX-WS and AXIS. \n• Produced as well as consumed RESTful web services using Jersey API's. \n• Followed Java & J2EE design patterns and the coding guidelines to design and develop the application. \n• Fixed defects identified during QA, UAT and Production. \n• Done with Web logic application server set up & deployed the application on it. \n• Worked with SVN which is used as a version control tool in the project. \n• Experience with Unit testing using JUnit and Mockito. \n \nEnvironment: Java 8, J2EE, Restful Web Services, Vaadin 7.0, JavaScript, Spring Framework, Hibernate, JPA, MySQL, Maven, WebLogic 12c, Junit, Oracle, CVS 1.2, Git, Angular JS.\nClient:  Synovus bank, New york.\t                   \t\t                                                        \nRole: Full Stack Java Developer\nDuration:  June  2015 – April 2017\nDescription: \nSynovus Bank is one of the growing commercial banking organization providing banking, brokerage, insurance for personal financial, small business and corporate banking services. Easy online Access was an implementation of online account management system that provides secure online access to customer accounts and keeps track of daily account activity like withdrawals, payments, and trades.  The application also provides customers with online account transfers. Transaction details are first sent to these systems for authorization to communicate with the back end systems. Thus, security of transactions is ensured. \nResponsibilities:\nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nInvolved in the front end using HTML, JavaScript, JQuery, AJAX and Servlets, JSP, Struts2, JSTL.\nUsed Marionette framework to simplify the construction of large scale JavaScript applications.\nWorked with cross-browser issues related to the front end that is created using JavaScript, CSS, HTML, Angular-JS and Node-JS.\nDesigned and created Angular JS factories to make RESTful API calls by using $http and $resource to get the JSON contract.\nExperience using two-way data-binding, directives, controllers, filters, ui-routers and creating custom directives in Angular JS.\nInvolved in the development of presentation layer and GUI responsive development using JSP, HTML5, CSS/CSS3,Bootstrap& used Client Side validations were done using Node-JS, XSLT and JQuery (Masking), and Google graphs XMLDOM.\nImplemented Restful Web services to retrieve data from client side and made REST API calls from Node JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth.\nSpecified, prototyped, developed and tested an object-oriented, multiplatform Java framework containing support to: data structures, common algorithms sockets, threading.\nImplemented MVC architecture using Struts2, JSP, Spring, and Hibernate and used Spring Framework to initialize managed beans and services.\nApache Camel is used to route the incoming message to the valid service queue\nKnowledge of using Apache Camel through Fuse Mediation Router\nUsed Angular, Bootstrap for rich user interface and faster performance and Angular UI Router for routing pages.\nInvolved in development of Agent Verification System using Spring MVC framework. \nUsed Java collection API extensively such as Lists, Sets and Maps.\nDevelopment SOAP and RESTFulWeb services using Apache Axis1, Weblogic, Web Service Tools, Session beans as web services, Spring MVC and Jersey. \nDesigning and implementing BPM services for various domains within using tools like Apache camel\nUsed Spring Security for Authentication and Authorization of the application.\nWorked with DROOLS engine for spring integration and validate business rule before executing in runtime. \nCheck images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. \nProvided public IP to external clients to connect them to JBoss Fuse.  \nDeveloped app monitoring framework using Drools.\nwriting packages/procedures for Java (JBOSS Fuse) facing applications \nHigh level of competency in JBoss Fuse messaging Architecture \nImplemented client-server business applications using Micro services.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the NoSQL MongoDB back-end database by integrating Spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, HibernateQuery Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nImplemented quartz jobs for running the batch jobs based on the cron triggers configured in the spring files. \nDeveloped Unit /Integration test cases using Junit tool.\nUsed Gradle tools for building and deploying the Web applications.\nUsed JIRA tool for tracking stories progress and follow Agile methodology.\nUsed logging techniques provided by Log4j tool for efficient logging and debugging. \nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN). \nInvolved in Maintenance and Enhancements for the project.\nConfigured Jenkins jobs, Install Plugins for generating artifacts.\nSoftware configuration management (Automate CI&CD pipe by using Jenkins)\nDeployed in JBOSS Fuse.\nInvolving in Building the modules in Linux environment with ant script.\nEnvironment:\nJDK1.7 and 8, HTML, CSS, JavaScript, JQuery, Ajax, Angular-JS, Agile, Hibernate, Spring, Spring Security, Spring Boot, Micro services, Servlets, JSP, Struts2, Junit, SOAP, RestFul, WSDL, XML, JBOSS Fuse, BPM,JSON, SoapUI, JAX-WS, Log4j, PL/SQL, web services, Linux, Jenkins, MongoDB, Eclipse, Gradle, Junit, JIRA, SVN, Agile.\nClient:  Gogo LLC, Chicago\nRole: Sr. Java/J2EE Developer\nDuration: May 2014 – April 2015\t\nDescription: \nGogo llc  started as a simple sketch. Now, Gogo llc  deliver reliable connectivity and entertainment to thousands of aircraft worldwide, enhancing the experience for both passengers and crew.\nResponsibilities:\t\nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nParticipated in system implementation, including maintenance, user allocation, approval, design, coding, error removal, logic optimization, systems re-evaluation and documentation.\nWorked simultaneously in both production and development teams. \nDesigned and developed dynamic web pages using JSP, HTML/HTML5, CSS3, JavaScript, JQuery, and Angular-JS for single page applications. \nExperienced in developing functionalities like navigation bars, dropdown lists, custom filters and state parameters using AngularJS. \nDeveloped new business rules and enhanced the existing ones to meet client specifications using JBoss FUSE drools.\nResearch and Develop on jBPM independently. \n Automate the existing manual process in and as a jBPM workflow. \nExperience with Test Driven Development and Dockers and Node.js.\nUnit testing with JavaScript and node.js. Used Angular-JS Http to read data from web servers and process JSON data to render in the UI. \nProvided customized jBPM solutions as per client requirement. \nDefined a message store architecture necessary to support drools rule engine input processing, scalability and recovery. \nWrote various types of Business rules in the. drl and .ece using Drools rule engine for business decision-making. \nProvided guidance on jBPM to several teams. \nDeveloped internal coding using J2EE technologies based on the MVC Architecture.\nImplemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth.\nDeveloped Business objects using POJOs and data access layer using Hibernate framework\nAchieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes.\nImplemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements \nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP, EhCache Framework and Spring Annotations. \nExperience programming in the JBOSS Fuse Enterprise SOA environment including JBOSS Fuse Workflow and Drools Business Rules engine \nUsed Hibernate Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts.\nUsed Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available.\nRemoved all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot.\nUsed Spring Boot which is radically faster in building cloud Micro Services.\nUsed AWS deployment services to quickly set up a dynamic website and configured virtual servers using AWS EC2 and responsible for maintaining and expanding our AWS infrastructure using AWS EC2/EBS.\nUsed AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document. Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS.\nCreated new tables, Stored Procedures, functions, views, indexes and constraints, triggers and required SQL tuning to reduce the response time in the application\nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality\nUsed Maven building tool for creating EAR file to be deployed in application servers. It is also used for dependency management of code in application.\nUsed NoSQL DB like MongoDB for the proof of concept.\nUsed Mongo DB as data storage and utilized aspects like replica sets, sharding and clever document design to make service extensible scale and feature wise.\nOptimized the full text search function by connecting to Mongo DB.\nDeveloped Unit /Integration test cases using Junit tool.\nUsed JIRA tool for tracking stories progress and follow Agile methodology.\nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation.\nDeployed Websphere Adapters inbound and outbound integrated ECM systems and Rule Engine to BPM\nDeployed Applications on Oracle Websphere Server.\nInvolving in Building the modules in Unix environment with ant script. \nInvolved in Maintenance and Enhancements for the project.\nEnvironment: \nJDK 1.7 and 8 , HTML5, CSS3, JQuery, Ajax, Angular-JS, Bootstrap, JSON, J2EE, Spring MVC, Micro Services, AWS, Spring Security, Spring Boot, Spring JDBC, Spring ORM, JSP, Hibernate, Restful, Stored Procedures, Websphere, RAD, Unix, log4j, , BPM, Agile/Scrum Methodology, Maven, JIRA, TDD, Mongo DB, Jenkins, GIT, JUnit, Eclipse, SVN.\t\nClient: Wireless Facilities Inc, CA\nRole: Sr. Java/J2EE Developer\nDuration: September  2013 - march 2014\t\nResponsibilities: \nInvolved in various phases of Software Development Life Cycle (SDLC).\nUsed Rational Rose for the Use Case Diagrams, Object Diagrams, Class Diagrams and Sequence Diagrams to represent the detailed design phase.\nFront-end is designed by using HTML5, CSS3, JSP, Servlets, JSTL, Ajax, DOJO and Angular JS.\nInvolved in developing the CSS sheets for the UI Components.\nPersistence layer was implemented using Hibernate Framework and JPA.\nDeveloped various EJB components to fulfill the business functionality.\nDeveloped Session Beans to process requests from the user and used entity beans to retrieve and update customer information.\nUsed cloud platform AWS-SNS to deliver push messages to applications.\nCreated, Listed, Deleted and Purged queues on cloud platform AWS-SQS.\nUsed message queuing service provided by cloud platform AWS-SQS.\nBeans are used as persistence layer and are used to interact with the Oracle database.\nInvolved in writing Thread Safe blocks for multithread access to make valid transactions.\nUsed Apache Axis for consuming SOAP Web Services with CXF web services using JAX-WS.\nWorked on developing Restful web services using Spring Boot. \nMonitored the error logs using Log4J and fixing the problems.\nWrote UNIX Shell Scripts.\nUsed AJAX to get the dynamic behavior of the screens.\nUsed XML with SAX parser to transfer data between applications.\nWritten the Rest Services to get the data from Oracle database.\nDeveloped and deployed applications on cloud platform.\nImplemented Test Driven (TDD) Design to build testable and maintainable application. \nUsed Java/J2EE Design patterns like Business Delegate, Session Facade, Data Transfer Object (DTO) and Service Locator in the project extensively which facilitates clean distribution of roles and responsibilities across various layers of processing.\nWrote PL/SQL stored procedures, Prepared statement and used API.\nUsed Maven dependencies during implementing CXF web services.\nWrote scripts to create tables, views, indexes and synonyms required meeting developer needs. \nUsed Hibernate Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts.\nPerformed CRUD operations with data in Oracle database.\nUsed Jenkins with maven for Build and Deployment. \nUsed Sonar for maintaining the code quality and JUnit code coverage. \nCreated Unit, Acceptance and Integration Test Documents and Code Review Documents.\nUsed WebSphere Application Server deploying various components of application.\nEnvironment:\nEJB, Hibernate, J2EE, Java, XML, Servlets, JSP, UML, JMS, Cloud platform, JSTL, HTML5, CSS3, JavaScript, Angular JS, AWS, Oracle, Jenkins, Ext JS, Maven, SOAP,CXF Web Services, UNIX, Ajax, CVS, Oracle, WebSphere Application Server.\nClient: Capital South Bank, FL\nRole: Sr. Java/J2EE Developer\nDuration: january 2011 - August 2013\nResponsibilities: \nInvolved in SDLC Requirements gathering, Analysis, Design, Development and Testing of application using Agile Model\nInvolved in the development of presentation layer and GUI responsive development using JSP, HTML5, CSS/CSS3,Bootstrap& used Client Side validations were done using Angular-JS, XSLT and JQuery (Masking), and Google graphs XMLDOM.\nWrote WebServices using SOAP for sending and getting data from the external interface.\nUsed the Tiles Framework and Tag Libraries in the presentation layer to simplify the complexities of the application.\nUsed Spring Inversion of Control, to make application easy to test and integrate\nUsed Auto wired Pojo.\nFunctionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle database as the backend. \nWeb application development for backend system using Angular-JS with cutting edge HTML5 and CSS3 techniques\nUtilized  Spring annotations and XML configuration for Dependency Injection\nImplemented web services for communicating by using SOAP.\nProvided connections using Spring JDBC to the database and developed SQL queries to manipulate the data.\nUsed Spring DAO concept in order to interact with database (DB2) using jdbc template.\nWorked on Web Services Testing tools like SoapUI and Parasoft.\nUsed Rational Clear Case for version control. \nDeployed Applications on Apache Tomcat Server.\nUsed CodePro Analytics to make sure all the code maintain standards.\nUsed Maven script for building and deploying the application.\nInvolved in bug fixes, enhancements and code refactoring.\nEnvironment:\nJ2EE 1.5, JSP , angular js, Spring 2.5, XML, web Services, SOA, SOAP-UI, WSDL 1.1, SAX, JavaScript, Rational Clear case, Apache Tomcat Server, HTML,CSS,XSTL,DB2, Oracle11g/10g,  Log4J 1.2, JUnit ,Maven\nClient:  CH Excellency pvt .ltd, \nRole: Java/J2EE developer\nDuration: November 2009 – September 2010\t\nResponsibilities:\nDeveloped screens with JSP, AJAX and JavaScript, CSS, HTML.\nUtilized various JQUERY plug-ins to build Rich Internet Application (RIA) to make it look more intuitive.\nUsed JSF framework in developing user interfaces using JSF UI Components, Validation, Events and Listeners.\nDesigned the application using Agile Methodology.\nDetermined & developed the Web Services.\nInvolved in Creation of WSDL and schemas.\nMade proficient use of WSDL files. Used SOAPUI for testing the web services.\nImplemented SOA based web services, designed and built SOAP web service interface, implemented using SOAP & Apache Axis.\nInvolved in Implementation of Spring IOC container.\nExtensively used DAO design pattern, including mapping DAO objects, configuration file and classes to interact with the Sybase database.\nUsed Core Java concepts such as multi-threading, collections, garbage collection and other JEE technologies during development phase and used different design patterns.\nWrote EJB Stateless session to communicate with Controller and Service layer i.e. make the EJBcalls from Backing Beans.\nImplemented Spring JDBC template, Spring Exception Strategy and AOP. \nSet up Web Sphere Application server and used Ant tool to build the application and deploy the application in Web Sphere Application server.\nUsed UNIX Shell Scripting to update the databases and Start up the application server.\nSetting of DB2 build settings in RAD application development server.\nUsed Apache JMeter for load testing.\nMaintained code source control using SVN\nImplemented JUnit for testing.\nEnvironment:\nJava 1.5, Core Java, Spring, EJB,WSDL, XSD, JSP, AJAX, JavaScript, JFace, CSS, HTML, Web Services, Web App, SOAP, WebSphere Server, DB2 database Server, XML, JUnit, Sybase, Apache JMeter, Rational Unified Process (RUP), SVN\nClient:  , \nRole: Java/J2EE developer\nDuration: August 2008 – October 2009.\t\t\t\t                                                                         \nResponsibilities:\nDeveloped programs for accessing the database using JDBC thin driver to execute queries, Prepared statements, Stored Procedures and to manipulate the data in the database\nInvolved in resolving the Design issues and other project related problems\nDesign patterns of Delegates, Data Transfer Objects and Data Access Objects.\nDeveloped the credit check module using Servlets and JSP.\nInvolved in injecting dependencies into code using spring core module.\nCSS is used to style Web pages with user friendly guidelines.\nDeployed web components, presentation components and business components in Web Logic Application Server. \nPerformed client side validations using JavaScript.\nExtensively worked on Java server side programming using Servlets, and JSP.\nInvolved in peer code reviews and performed integration testing of the modules.\nCreated and maintained mapping files, persisting classes and transaction control in JDBC to access the database.\nDeveloped DAO objects and implemented data access layer using JPA-Hibernate to perform CRUD operations.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nImplemented servlets to handle HTTP requests for on-line requests, credit card payments, registration and bug tracking.\nExtensively worked with XML schema (XSD), XSL/XSLT, and XML to navigate in XML documents, and SAX to process and parse xml files.\nDeveloped Message Driven Beans for asynchronous processing of alerts.\nDeveloped web services SOAP, WSDL and web services clients using JAXB and XML, implemented SOAP architecture.\nEnvironment:Java 1.6,JUNIT, DB2, Rational Rose, CVS, UNIX, Struts 1.0, JSP, JDBC, EJB 2.0, ANT, XML, IBM Web Sphere, Servlets, Struts, JavaScript, JAX-WS (SOAP) web services, SAX.",
  "cleaned_text": "SUMMARY Full Stack Developer with years of experience in Software Analysis, Design, Development, Implementation and Testing of Object Oriented Applications and Web based Enterprise Applications using JAVA J EE technologies. Experience in Waterfall, Agile scrum methodologies where there is a daily SCRUM meetings to understand the status and resolve any issues and in making web pages cross browser compatible and server scripting languages. Proficient in UI design, developed Front End using HTML, CSS, JavaScript, JQuery, Ajax, Angular JS, Bootstrap like Node JS and Backbone JS. Expertise in DOM manipulation using JavaScript and Angular JS. Experience in Core Java concepts such as OOP Concepts, Collections Framework, Exception Handling, I O System, Multi-Threading, JDBC. Worked with Web Sphere Application Server, Oracle Web Logic application server, JBoss Fuse and Apache Tomcat Application Server. Highly experience with Java IDEs like Eclipse, STS, RAD, IntelliJ, NetBeans. Design and Develop reference implementation on jBPM for multiple teams. Check images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. Experience in developing with various open source frameworks such as Java Server Faces JSF , Spring Core, IOC, AOP, Batch, Security, Boot Framework, Struts Framework, Tiles Frameworks and ORM Tools like Hibernate and IBatis. Expertise in implementing various J EE design patterns like Singleton, Session Facade, Data Access Objects DAO , Factory, Data Transfer Object DTO and Business. Developed app monitoring framework using Drools Kafka Experience in working with XML technologies like XML, XSL, XSD, DTD, XSLT and parsing XML with SAX & DOM parsers. Designed, developed, tested, integrated, and deployed large numbers of complex rules in rule flows, Drools Fusion and Drools CEP. Designing and implementing BPM services for various domains within using tools like Apache camel Expertise in developing web services using SOAP, WSDL, RESTful, JAX-WS, JAX-RS, JAX-RPC. Worked on translation of diameter protocol for Reinvent client. Manually translated the source code of RF Server module from C, C to Java. Manually converted source code in C for Client Profile Server to C so that it can be converted to Java using the C to Java Translation Tool . Strong skills in RDBMS implementation and development using Oracle, IBM DB Database Servers and hands on experience with SQL, PL SQL. Hands on work experience on various Enterprise Integration frameworks like Apache Camel Good understanding on NoSQL databases like Mongo DB. Experience with MOCKITO, JUnit, Log j in developing test cases and determining application functionality. Subversion SVN, CVS, GIT, RTC and Visual Source Safe as versioning software tools. Hands on experience in building tools like ANT, Maven, Gradle. Involved in issue tracking and agile project management using JIRA. Experience in developing applications on Windows, UNIX and Linux platforms. Having Experience on UNIX commands and Deployment of Applications in Server. Domain knowledge and business expertise in Banking, finance, Insurance, Healthcare. EDUCATION BACHELOR OF TECHNOLOGY COMPUTER SCIENECE from VBCE PROFESSIONAL PORTFOLIO Client Volkswagen Group of America, Auburn-hills, Michigan. Role Full Stack Java Developer Duration May till date Project TDI Court Settlement, CCCA Customer Care Capacity Assistance The purpose of this project is to provide a Customer web based application which will simplify case communication with customer care team and customers, provide online process status, automate email communications throughout process, and enable customers to upload required documents. Back Office BO There are processes that allow back office agents to search for a case and perform a few of the functions to keep the case moving forward, to help the consumer move back in the process if they need to change some information, or to complete the process entirely on behalf of the consumer. Responsibilities Developing UI using Vaadin frame work and constructing the brand-new CSS style sheets and other UI based components. Actively involved in mock screens development and project start-up phase. Efficiently managed the tasks and working and delivering features in a fast-paced scrum environment. Experience working in Agile development following SCRUM process, Sprint and daily stand-up meetings. Involved in developing the UI, layout and front-end programming for web application that matches requirements of the client. Prepared Technical Design documents with UML diagrams using Microsoft Visio. Involved in building a single page and cross browser compatible web application using Angular-JS Angular routing . Configured Jenkins jobs, Install Plugins for generating artifacts. Used WebSphere Application Server deploying various components of application. Functionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle database as the backend. Worked with advanced MVC framework such as Spring-IOC, AOP, MVC and Batch which is used for implementing backend functionality. Designed and developed business components using Spring Boot Participated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many requests Support & Enhancement to the existing implementation of correspondence components which are developed using EJBs, JPA and Web Services JMS Technologies. Used Hibernate, object relational-mapping ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema. Used Microservice architecture with Spring Boot based service through REST. Used Java Message Service JMS for reliable and asynchronous exchange of important information for status report. Working within SOA based enterprise framework to build web services for Middle Tier processing. Developed SOAP based web services using WSDL, SOAP, JAX-WS and AXIS. Produced as well as consumed RESTful web services using Jersey API s. Followed Java & J EE design patterns and the coding guidelines to design and develop the application. Fixed defects identified during QA, UAT and Production. Done with Web logic application server set up & deployed the application on it. Worked with SVN which is used as a version control tool in the project. Experience with Unit testing using JUnit and Mockito. Environment Java , J EE, Restful Web Services, Vaadin . , JavaScript, Spring Framework, Hibernate, JPA, MySQL, Maven, WebLogic c, Junit, Oracle, CVS . , Git, Angular JS. Client Synovus bank, New york. Role Full Stack Java Developer Duration June April Description Synovus Bank is one of the growing commercial banking organization providing banking, brokerage, insurance for personal financial, small business and corporate banking services. Easy online Access was an implementation of online account management system that provides secure online access to customer accounts and keeps track of daily account activity like withdrawals, payments, and trades. The application also provides customers with online account transfers. Transaction details are first sent to these systems for authorization to communicate with the back end systems. Thus, security of transactions is ensured. Responsibilities Involved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. Involved in Daily Scrum Agile meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. Involved in the front end using HTML, JavaScript, JQuery, AJAX and Servlets, JSP, Struts , JSTL. Used Marionette framework to simplify the construction of large scale JavaScript applications. Worked with cross-browser issues related to the front end that is created using JavaScript, CSS, HTML, Angular-JS and Node-JS. Designed and created Angular JS factories to make RESTful API calls by using http and resource to get the JSON contract. Experience using two-way data-binding, directives, controllers, filters, ui-routers and creating custom directives in Angular JS. Involved in the development of presentation layer and GUI responsive development using JSP, HTML , CSS CSS ,Bootstrap& used Client Side validations were done using Node-JS, XSLT and JQuery Masking , and Google graphs XMLDOM. Implemented Restful Web services to retrieve data from client side and made REST API calls from Node JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. Specified, prototyped, developed and tested an object-oriented, multiplatform Java framework containing support to data structures, common algorithms sockets, threading. Implemented MVC architecture using Struts , JSP, Spring, and Hibernate and used Spring Framework to initialize managed beans and services. Apache Camel is used to route the incoming message to the valid service queue Knowledge of using Apache Camel through Fuse Mediation Router Used Angular, Bootstrap for rich user interface and faster performance and Angular UI Router for routing pages. Involved in development of Agent Verification System using Spring MVC framework. Used Java collection API extensively such as Lists, Sets and Maps. Development SOAP and RESTFulWeb services using Apache Axis , Weblogic, Web Service Tools, Session beans as web services, Spring MVC and Jersey. Designing and implementing BPM services for various domains within using tools like Apache camel Used Spring Security for Authentication and Authorization of the application. Worked with DROOLS engine for spring integration and validate business rule before executing in runtime. Check images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. Provided public IP to external clients to connect them to JBoss Fuse. Developed app monitoring framework using Drools. writing packages procedures for Java JBOSS Fuse facing applications High level of competency in JBoss Fuse messaging Architecture Implemented client-server business applications using Micro services. Created data model and generated Hibernate mappings and domain objects using Hibernate tools. Interfaced with the NoSQL MongoDB back-end database by integrating Spring with Hibernate. Extensively used hibernate named queries, criteria queries, HibernateQuery Language HQL and Optimistic Locking and Caching to process the data from the database. Implemented quartz jobs for running the batch jobs based on the cron triggers configured in the spring files. Developed Unit Integration test cases using Junit tool. Used Gradle tools for building and deploying the Web applications. Used JIRA tool for tracking stories progress and follow Agile methodology. Used logging techniques provided by Log j tool for efficient logging and debugging. Developed the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control SVN . Involved in Maintenance and Enhancements for the project. Configured Jenkins jobs, Install Plugins for generating artifacts. Software configuration management Automate CI&CD pipe by using Jenkins Deployed in JBOSS Fuse. Involving in Building the modules in Linux environment with ant script. Environment JDK . and , HTML, CSS, JavaScript, JQuery, Ajax, Angular-JS, Agile, Hibernate, Spring, Spring Security, Spring Boot, Micro services, Servlets, JSP, Struts , Junit, SOAP, RestFul, WSDL, XML, JBOSS Fuse, BPM,JSON, SoapUI, JAX-WS, Log j, PL SQL, web services, Linux, Jenkins, MongoDB, Eclipse, Gradle, Junit, JIRA, SVN, Agile. Client Gogo LLC, Chicago Role Sr. Java J EE Developer Duration May April Description Gogo llc started as a simple sketch. Now, Gogo llc deliver reliable connectivity and entertainment to thousands of aircraft worldwide, enhancing the experience for both passengers and crew. Responsibilities Involved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. Involved in Daily Scrum Agile meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. Participated in system implementation, including maintenance, user allocation, approval, design, coding, error removal, logic optimization, systems re-evaluation and documentation. Worked simultaneously in both production and development teams. Designed and developed dynamic web pages using JSP, HTML HTML , CSS , JavaScript, JQuery, and Angular-JS for single page applications. Experienced in developing functionalities like navigation bars, dropdown lists, custom filters and state parameters using AngularJS. Developed new business rules and enhanced the existing ones to meet client specifications using JBoss FUSE drools. Research and Develop on jBPM independently. Automate the existing manual process in and as a jBPM workflow. Experience with Test Driven Development and Dockers and Node.js. Unit testing with JavaScript and node.js. Used Angular-JS Http to read data from web servers and process JSON data to render in the UI. Provided customized jBPM solutions as per client requirement. Defined a message store architecture necessary to support drools rule engine input processing, scalability and recovery. Wrote various types of Business rules in the. drl and .ece using Drools rule engine for business decision-making. Provided guidance on jBPM to several teams. Developed internal coding using J EE technologies based on the MVC Architecture. Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes. Implemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements Designed and developed business components using Spring Boot, Spring Dependency Injection Core , Spring AOP, EhCache Framework and Spring Annotations. Experience programming in the JBOSS Fuse Enterprise SOA environment including JBOSS Fuse Workflow and Drools Business Rules engine Used Hibernate Transaction Management, Spring Hibernate Batch Transactions and Hibernate cache concepts. Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot. Used Spring Boot which is radically faster in building cloud Micro Services. Used AWS deployment services to quickly set up a dynamic website and configured virtual servers using AWS EC and responsible for maintaining and expanding our AWS infrastructure using AWS EC EBS. Used AWS S to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document. Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS. Created new tables, Stored Procedures, functions, views, indexes and constraints, triggers and required SQL tuning to reduce the response time in the application Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality Used Maven building tool for creating EAR file to be deployed in application servers. It is also used for dependency management of code in application. Used NoSQL DB like MongoDB for the proof of concept. Used Mongo DB as data storage and utilized aspects like replica sets, sharding and clever document design to make service extensible scale and feature wise. Optimized the full text search function by connecting to Mongo DB. Developed Unit Integration test cases using Junit tool. Used JIRA tool for tracking stories progress and follow Agile methodology. Developed the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation. Deployed Websphere Adapters inbound and outbound integrated ECM systems and Rule Engine to BPM Deployed Applications on Oracle Websphere Server. Involving in Building the modules in Unix environment with ant script. Involved in Maintenance and Enhancements for the project. Environment JDK . and , HTML , CSS , JQuery, Ajax, Angular-JS, Bootstrap, JSON, J EE, Spring MVC, Micro Services, AWS, Spring Security, Spring Boot, Spring JDBC, Spring ORM, JSP, Hibernate, Restful, Stored Procedures, Websphere, RAD, Unix, log j, , BPM, Agile Scrum Methodology, Maven, JIRA, TDD, Mongo DB, Jenkins, GIT, JUnit, Eclipse, SVN. Client Wireless Facilities Inc, CA Role Sr. Java J EE Developer Duration September - march Responsibilities Involved in various phases of Software Development Life Cycle SDLC . Used Rational Rose for the Use Case Diagrams, Object Diagrams, Class Diagrams and Sequence Diagrams to represent the detailed design phase. Front-end is designed by using HTML , CSS , JSP, Servlets, JSTL, Ajax, DOJO and Angular JS. Involved in developing the CSS sheets for the UI Components. Persistence layer was implemented using Hibernate Framework and JPA. Developed various EJB components to fulfill the business functionality. Developed Session Beans to process requests from the user and used entity beans to retrieve and update customer information. Used cloud platform AWS-SNS to deliver push messages to applications. Created, Listed, Deleted and Purged queues on cloud platform AWS-SQS. Used message queuing service provided by cloud platform AWS-SQS. Beans are used as persistence layer and are used to interact with the Oracle database. Involved in writing Thread Safe blocks for multithread access to make valid transactions. Used Apache Axis for consuming SOAP Web Services with CXF web services using JAX-WS. Worked on developing Restful web services using Spring Boot. Monitored the error logs using Log J and fixing the problems. Wrote UNIX Shell Scripts. Used AJAX to get the dynamic behavior of the screens. Used XML with SAX parser to transfer data between applications. Written the Rest Services to get the data from Oracle database. Developed and deployed applications on cloud platform. Implemented Test Driven TDD Design to build testable and maintainable application. Used Java J EE Design patterns like Business Delegate, Session Facade, Data Transfer Object DTO and Service Locator in the project extensively which facilitates clean distribution of roles and responsibilities across various layers of processing. Wrote PL SQL stored procedures, Prepared statement and used API. Used Maven dependencies during implementing CXF web services. Wrote scripts to create tables, views, indexes and synonyms required meeting developer needs. Used Hibernate Transaction Management, Spring Hibernate Batch Transactions and Hibernate cache concepts. Performed CRUD operations with data in Oracle database. Used Jenkins with maven for Build and Deployment. Used Sonar for maintaining the code quality and JUnit code coverage. Created Unit, Acceptance and Integration Test Documents and Code Review Documents. Used WebSphere Application Server deploying various components of application. Environment EJB, Hibernate, J EE, Java, XML, Servlets, JSP, UML, JMS, Cloud platform, JSTL, HTML , CSS , JavaScript, Angular JS, AWS, Oracle, Jenkins, Ext JS, Maven, SOAP,CXF Web Services, UNIX, Ajax, CVS, Oracle, WebSphere Application Server. Client Capital South Bank, FL Role Sr. Java J EE Developer Duration january - August Responsibilities Involved in SDLC Requirements gathering, Analysis, Design, Development and Testing of application using Agile Model Involved in the development of presentation layer and GUI responsive development using JSP, HTML , CSS CSS ,Bootstrap& used Client Side validations were done using Angular-JS, XSLT and JQuery Masking , and Google graphs XMLDOM. Wrote WebServices using SOAP for sending and getting data from the external interface. Used the Tiles Framework and Tag Libraries in the presentation layer to simplify the complexities of the application. Used Spring Inversion of Control, to make application easy to test and integrate Used Auto wired Pojo. Functionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle database as the backend. Web application development for backend system using Angular-JS with cutting edge HTML and CSS techniques Utilized Spring annotations and XML configuration for Dependency Injection Implemented web services for communicating by using SOAP. Provided connections using Spring JDBC to the database and developed SQL queries to manipulate the data. Used Spring DAO concept in order to interact with database DB using jdbc template. Worked on Web Services Testing tools like SoapUI and Parasoft. Used Rational Clear Case for version control. Deployed Applications on Apache Tomcat Server. Used CodePro Analytics to make sure all the code maintain standards. Used Maven script for building and deploying the application. Involved in bug fixes, enhancements and code refactoring. Environment J EE . , JSP , angular js, Spring . , XML, web Services, SOA, SOAP-UI, WSDL . , SAX, JavaScript, Rational Clear case, Apache Tomcat Server, HTML,CSS,XSTL,DB , Oracle g g, Log J . , JUnit ,Maven Client CH Excellency pvt .ltd, Role Java J EE developer Duration November September Responsibilities Developed screens with JSP, AJAX and JavaScript, CSS, HTML. Utilized various JQUERY plug-ins to build Rich Internet Application RIA to make it look more intuitive. Used JSF framework in developing user interfaces using JSF UI Components, Validation, Events and Listeners. Designed the application using Agile Methodology. Determined & developed the Web Services. Involved in Creation of WSDL and schemas. Made proficient use of WSDL files. Used SOAPUI for testing the web services. Implemented SOA based web services, designed and built SOAP web service interface, implemented using SOAP & Apache Axis. Involved in Implementation of Spring IOC container. Extensively used DAO design pattern, including mapping DAO objects, configuration file and classes to interact with the Sybase database. Used Core Java concepts such as multi-threading, collections, garbage collection and other JEE technologies during development phase and used different design patterns. Wrote EJB Stateless session to communicate with Controller and Service layer i.e. make the EJBcalls from Backing Beans. Implemented Spring JDBC template, Spring Exception Strategy and AOP. Set up Web Sphere Application server and used Ant tool to build the application and deploy the application in Web Sphere Application server. Used UNIX Shell Scripting to update the databases and Start up the application server. Setting of DB build settings in RAD application development server. Used Apache JMeter for load testing. Maintained code source control using SVN Implemented JUnit for testing. Environment Java . , Core Java, Spring, EJB,WSDL, XSD, JSP, AJAX, JavaScript, JFace, CSS, HTML, Web Services, Web App, SOAP, WebSphere Server, DB database Server, XML, JUnit, Sybase, Apache JMeter, Rational Unified Process RUP , SVN Client , Role Java J EE developer Duration August October . Responsibilities Developed programs for accessing the database using JDBC thin driver to execute queries, Prepared statements, Stored Procedures and to manipulate the data in the database Involved in resolving the Design issues and other project related problems Design patterns of Delegates, Data Transfer Objects and Data Access Objects. Developed the credit check module using Servlets and JSP. Involved in injecting dependencies into code using spring core module. CSS is used to style Web pages with user friendly guidelines. Deployed web components, presentation components and business components in Web Logic Application Server. Performed client side validations using JavaScript. Extensively worked on Java server side programming using Servlets, and JSP. Involved in peer code reviews and performed integration testing of the modules. Created and maintained mapping files, persisting classes and transaction control in JDBC to access the database. Developed DAO objects and implemented data access layer using JPA-Hibernate to perform CRUD operations. Developed session EJB and message driven bean MDB to process JMS XML messages. Implemented servlets to handle HTTP requests for on-line requests, credit card payments, registration and bug tracking. Extensively worked with XML schema XSD , XSL XSLT, and XML to navigate in XML documents, and SAX to process and parse xml files. Developed Message Driven Beans for asynchronous processing of alerts. Developed web services SOAP, WSDL and web services clients using JAXB and XML, implemented SOAP architecture. Environment Java . ,JUNIT, DB , Rational Rose, CVS, UNIX, Struts . , JSP, JDBC, EJB . , ANT, XML, IBM Web Sphere, Servlets, Struts, JavaScript, JAX-WS SOAP web services, SAX.",
  "preprocessed_text": "summary full stack developer year experience software analysis design development implementation testing object oriented application web based enterprise application using java ee technology experience waterfall agile scrum methodology daily scrum meeting understand status resolve issue making web page cross browser compatible server scripting language proficient ui design developed front end using html cs javascript jquery ajax angular j bootstrap like node j backbone j expertise dom manipulation using javascript angular j experience core java concept oop concept collection framework exception handling system multi-threading jdbc worked web sphere application server oracle web logic application server jboss fuse apache tomcat application server highly experience java ides like eclipse sts rad intellij netbeans design develop reference implementation jbpm multiple team check image forwarded appropriate channel partner based rule set using drool rule engine experience developing various open source framework java server face jsf spring core ioc aop batch security boot framework strut framework tile framework orm tool like hibernate ibatis expertise implementing various ee design pattern like singleton session facade data access object dao factory data transfer object dto business developed app monitoring framework using drool kafka experience working xml technology like xml xsl xsd dtd xslt parsing xml sax dom parser designed developed tested integrated deployed large number complex rule rule flow drool fusion drool cep designing implementing bpm service various domain within using tool like apache camel expertise developing web service using soap wsdl restful jax-ws jax-rs jax-rpc worked translation diameter protocol reinvent client manually translated source code rf server module java manually converted source code client profile server converted java using java translation tool strong skill rdbms implementation development using oracle ibm db database server hand experience sql pl sql hand work experience various enterprise integration framework like apache camel good understanding nosql database like mongo db experience mockito junit log developing test case determining application functionality subversion svn cv git rtc visual source safe versioning software tool hand experience building tool like ant maven gradle involved issue tracking agile project management using jira experience developing application window unix linux platform experience unix command deployment application server domain knowledge business expertise banking finance insurance healthcare education bachelor technology computer scienece vbce professional portfolio client volkswagen group america auburn-hills michigan role full stack java developer duration may till project tdi court settlement ccca customer care capacity assistance purpose project provide customer web based application simplify case communication customer care team customer provide online process status automate communication throughout process enable customer upload required document back office bo process allow back office agent search case perform function keep case moving forward help consumer move back process need change information complete process entirely behalf consumer responsibility developing ui using vaadin frame work constructing brand-new cs style sheet ui based component actively involved mock screen development project start-up phase efficiently managed task working delivering feature fast-paced scrum environment experience working agile development following scrum process sprint daily stand-up meeting involved developing ui layout front-end programming web application match requirement client prepared technical design document uml diagram using microsoft visio involved building single cross browser compatible web application using angular-js angular routing configured jenkins job install plugins generating artifact used websphere application server deploying various component application functionality include writing code html cs javascript jquery ajax json angular-js bootstrap oracle database backend worked advanced mvc framework spring-ioc aop mvc batch used implementing backend functionality designed developed business component using spring boot participated coding spring aop component logging exception handling transactional model handle many request support enhancement existing implementation correspondence component developed using ejbs jpa web service jms technology used hibernate object relational-mapping orm solution technique mapping data representation mvc model oracle relational data model sql-based schema used microservice architecture spring boot based service rest used java message service jms reliable asynchronous exchange important information status report working within soa based enterprise framework build web service middle tier processing developed soap based web service using wsdl soap jax-ws axis produced well consumed restful web service using jersey api s. followed java ee design pattern coding guideline design develop application fixed defect identified qa uat production done web logic application server set deployed application worked svn used version control tool project experience unit testing using junit mockito environment java ee restful web service vaadin javascript spring framework hibernate jpa mysql maven weblogic junit oracle cv git angular j client synovus bank new york role full stack java developer duration june april description synovus bank one growing commercial banking organization providing banking brokerage insurance personal financial small business corporate banking service easy online access implementation online account management system provides secure online access customer account keep track daily account activity like withdrawal payment trade application also provides customer online account transfer transaction detail first sent system authorization communicate back end system thus security transaction ensured responsibility involved complete sdlc including design system architecture development system use case based functional requirement involved daily scrum agile meeting sprint planning estimation task user story participated retrospective presenting demo end sprint involved front end using html javascript jquery ajax servlets jsp strut jstl used marionette framework simplify construction large scale javascript application worked cross-browser issue related front end created using javascript cs html angular-js node-js designed created angular j factory make restful api call using resource get json contract experience using two-way data-binding directive controller filter ui-routers creating custom directive angular j involved development presentation layer gui responsive development using jsp html cs cs bootstrap used client side validation done using node-js xslt jquery masking google graph xmldom implemented restful web service retrieve data client side made rest api call node j parsed data project client handled security authorization using spring security oauth specified prototyped developed tested object-oriented multiplatform java framework containing support data structure common algorithm socket threading implemented mvc architecture using strut jsp spring hibernate used spring framework initialize managed bean service apache camel used route incoming message valid service queue knowledge using apache camel fuse mediation router used angular bootstrap rich user interface faster performance angular ui router routing page involved development agent verification system using spring mvc framework used java collection api extensively list set map development soap restfulweb service using apache axis weblogic web service tool session bean web service spring mvc jersey designing implementing bpm service various domain within using tool like apache camel used spring security authentication authorization application worked drool engine spring integration validate business rule executing runtime check image forwarded appropriate channel partner based rule set using drool rule engine provided public ip external client connect jboss fuse developed app monitoring framework using drool writing package procedure java jboss fuse facing application high level competency jboss fuse messaging architecture implemented client-server business application using micro service created data model generated hibernate mapping domain object using hibernate tool interfaced nosql mongodb back-end database integrating spring hibernate extensively used hibernate named query criterion query hibernatequery language hql optimistic locking caching process data database implemented quartz job running batch job based cron trigger configured spring file developed unit integration test case using junit tool used gradle tool building deploying web application used jira tool tracking story progress follow agile methodology used logging technique provided log tool efficient logging debugging developed application using eclipse ide used feature editing debugging compiling formatting build automation version control svn involved maintenance enhancement project configured jenkins job install plugins generating artifact software configuration management automate ci cd pipe using jenkins deployed jboss fuse involving building module linux environment ant script environment jdk html cs javascript jquery ajax angular-js agile hibernate spring spring security spring boot micro service servlets jsp strut junit soap restful wsdl xml jboss fuse bpm json soapui jax-ws log pl sql web service linux jenkins mongodb eclipse gradle junit jira svn agile client gogo llc chicago role sr. java ee developer duration may april description gogo llc started simple sketch gogo llc deliver reliable connectivity entertainment thousand aircraft worldwide enhancing experience passenger crew responsibility involved complete sdlc including design system architecture development system use case based functional requirement involved daily scrum agile meeting sprint planning estimation task user story participated retrospective presenting demo end sprint participated system implementation including maintenance user allocation approval design coding error removal logic optimization system re-evaluation documentation worked simultaneously production development team designed developed dynamic web page using jsp html html cs javascript jquery angular-js single application experienced developing functionality like navigation bar dropdown list custom filter state parameter using angularjs developed new business rule enhanced existing one meet client specification using jboss fuse drool research develop jbpm independently automate existing manual process jbpm workflow experience test driven development docker node.js unit testing javascript node.js used angular-js read data web server process json data render ui provided customized jbpm solution per client requirement defined message store architecture necessary support drool rule engine input processing scalability recovery wrote various type business rule drl .ece using drool rule engine business decision-making provided guidance jbpm several team developed internal coding using ee technology based mvc architecture implemented restful web service retrieve data client side made rest api call angular j parsed data project client handled security authorization using spring security oauth developed business object using pojos data access layer using hibernate framework achieved dependency injection creating spring service spring controller daos wire object business class implemented dao pattern fetch data database using hibernate carry various database operation avoid redundant database access statement designed developed business component using spring boot spring dependency injection core spring aop ehcache framework spring annotation experience programming jboss fuse enterprise soa environment including jboss fuse workflow drool business rule engine used hibernate transaction management spring hibernate batch transaction hibernate cache concept used spring data framework use feature spring jdbc spring orm class like jdbc template hibernate template perform database operation connecting data source removed xml based configuration required build mvc application maintained class using spring boot used spring boot radically faster building cloud micro service used aws deployment service quickly set dynamic website configured virtual server using aws ec responsible maintaining expanding aws infrastructure using aws ec eb used aws store data retrieve stored quickly used elastic search searching document used aws sn send message multiple user delivered algorithmic way using aws sqs created new table stored procedure function view index constraint trigger required sql tuning reduce response time application focused test driven development thereby creating detailed junit test every single piece functionality actually writing functionality used maven building tool creating ear file deployed application server also used dependency management code application used nosql db like mongodb proof concept used mongo db data storage utilized aspect like replica set sharding clever document design make service extensible scale feature wise optimized full text search function connecting mongo db developed unit integration test case using junit tool used jira tool tracking story progress follow agile methodology developed application using eclipse ide used feature editing debugging compiling formatting build automation deployed websphere adapter inbound outbound integrated ecm system rule engine bpm deployed application oracle websphere server involving building module unix environment ant script involved maintenance enhancement project environment jdk html cs jquery ajax angular-js bootstrap json ee spring mvc micro service aws spring security spring boot spring jdbc spring orm jsp hibernate restful stored procedure websphere rad unix log bpm agile scrum methodology maven jira tdd mongo db jenkins git junit eclipse svn client wireless facility inc ca role sr. java ee developer duration september march responsibility involved various phase software development life cycle sdlc used rational rose use case diagram object diagram class diagram sequence diagram represent detailed design phase front-end designed using html cs jsp servlets jstl ajax dojo angular j involved developing cs sheet ui component persistence layer implemented using hibernate framework jpa developed various ejb component fulfill business functionality developed session bean process request user used entity bean retrieve update customer information used cloud platform aws-sns deliver push message application created listed deleted purged queue cloud platform aws-sqs used message queuing service provided cloud platform aws-sqs bean used persistence layer used interact oracle database involved writing thread safe block multithread access make valid transaction used apache axis consuming soap web service cxf web service using jax-ws worked developing restful web service using spring boot monitored error log using log fixing problem wrote unix shell script used ajax get dynamic behavior screen used xml sax parser transfer data application written rest service get data oracle database developed deployed application cloud platform implemented test driven tdd design build testable maintainable application used java ee design pattern like business delegate session facade data transfer object dto service locator project extensively facilitates clean distribution role responsibility across various layer processing wrote pl sql stored procedure prepared statement used api used maven dependency implementing cxf web service wrote script create table view index synonym required meeting developer need used hibernate transaction management spring hibernate batch transaction hibernate cache concept performed crud operation data oracle database used jenkins maven build deployment used sonar maintaining code quality junit code coverage created unit acceptance integration test document code review document used websphere application server deploying various component application environment ejb hibernate ee java xml servlets jsp uml jms cloud platform jstl html cs javascript angular j aws oracle jenkins ext j maven soap cxf web service unix ajax cv oracle websphere application server client capital south bank fl role sr. java ee developer duration january august responsibility involved sdlc requirement gathering analysis design development testing application using agile model involved development presentation layer gui responsive development using jsp html cs cs bootstrap used client side validation done using angular-js xslt jquery masking google graph xmldom wrote webservices using soap sending getting data external interface used tile framework tag library presentation layer simplify complexity application used spring inversion control make application easy test integrate used auto wired pojo functionality include writing code html cs javascript jquery ajax json angular-js bootstrap oracle database backend web application development backend system using angular-js cutting edge html cs technique utilized spring annotation xml configuration dependency injection implemented web service communicating using soap provided connection using spring jdbc database developed sql query manipulate data used spring dao concept order interact database db using jdbc template worked web service testing tool like soapui parasoft used rational clear case version control deployed application apache tomcat server used codepro analytics make sure code maintain standard used maven script building deploying application involved bug fix enhancement code refactoring environment ee jsp angular j spring xml web service soa soap-ui wsdl sax javascript rational clear case apache tomcat server html cs xstl db oracle log junit maven client ch excellency pvt .ltd role java ee developer duration november september responsibility developed screen jsp ajax javascript cs html utilized various jquery plug-in build rich internet application ria make look intuitive used jsf framework developing user interface using jsf ui component validation event listener designed application using agile methodology determined developed web service involved creation wsdl schema made proficient use wsdl file used soapui testing web service implemented soa based web service designed built soap web service interface implemented using soap apache axis involved implementation spring ioc container extensively used dao design pattern including mapping dao object configuration file class interact sybase database used core java concept multi-threading collection garbage collection jee technology development phase used different design pattern wrote ejb stateless session communicate controller service layer i.e make ejbcalls backing bean implemented spring jdbc template spring exception strategy aop set web sphere application server used ant tool build application deploy application web sphere application server used unix shell scripting update database start application server setting db build setting rad application development server used apache jmeter load testing maintained code source control using svn implemented junit testing environment java core java spring ejb wsdl xsd jsp ajax javascript jface cs html web service web app soap websphere server db database server xml junit sybase apache jmeter rational unified process rup svn client role java ee developer duration august october responsibility developed program accessing database using jdbc thin driver execute query prepared statement stored procedure manipulate data database involved resolving design issue project related problem design pattern delegate data transfer object data access object developed credit check module using servlets jsp involved injecting dependency code using spring core module cs used style web page user friendly guideline deployed web component presentation component business component web logic application server performed client side validation using javascript extensively worked java server side programming using servlets jsp involved peer code review performed integration testing module created maintained mapping file persisting class transaction control jdbc access database developed dao object implemented data access layer using jpa-hibernate perform crud operation developed session ejb message driven bean mdb process jms xml message implemented servlets handle request on-line request credit card payment registration bug tracking extensively worked xml schema xsd xsl xslt xml navigate xml document sax process parse xml file developed message driven bean asynchronous processing alert developed web service soap wsdl web service client using jaxb xml implemented soap architecture environment java junit db rational rose cv unix strut jsp jdbc ejb ant xml ibm web sphere servlets strut javascript jax-ws soap web service sax",
  "statistics": {
    "word_count": 4374,
    "unique_word_count": 1153,
    "avg_word_length": 4.983310470964792,
    "stopword_count": 847
  },
  "metadata": {
    "filename": "Candidate124.docx",
    "file_size": 53182,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:02.405120",
    "input_filename": "Candidate124.json"
  }
}