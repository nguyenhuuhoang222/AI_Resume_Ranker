{
  "id": "Candidate133 EDA",
  "raw_text": "Candidate133\nCell :  510-556-3630\nProfessional Summary:\n10 years of total IT experience in all phases of Software Development Life Cycle including Analysis, Design, Implementation, integration, Testing, and Maintenance.\n8 years of experience in developing web, enterprise and SOA applications using Core Java, OOAD, Multi-Threading, JavaBeans, JSP, Servlets, JNDI, JDBC, Hibernate, JPA, Spring, WebServices(SOAP, Restful and Micro-Service), XSD, XML, XSLT, JSON, JAX-B, Apache Commons, EJB, JMS, MQ-Series, HTML, Ajax, Oracle and Linux/UNIX.\n2 years of experience in Big Data and Cloud based technologies like HDFS, SPARK, Kafka, Flume, Sqoop and AWS.\nExtensive experience on developing web applications using Spring Boot, Spring Core, Spring MVC, Spring ORM, Spring JPA,Spring Rest and Spring Cloud(PCF).\nExpertise in implementing persistence layer using JPA and Hibernate.\nExpertise working with SOAP, Rest and Microservices using CXF, Jersey and CloudFoundary.\nImplemented Microservices using Spring Core, Spring Boot, Spring Data, Spring Rest and Spring Cloud(PCF).\nExperience in Collections, Multi threading, Concurrency and memory management. \nExtensive experience in working with servers like WebLogic, WebSphere, JBOSS and Tomcat.\nExpertise in using XML Parsers SAX and DOM.\nGood experience in data structures and algorithms.\nGood experience in Junit and Mockito.\nImplemented  AWS(EC2, RDS, SNS, SQS, S3) to move customer care application in to Cloud environment.\nGood Experience in using Maven and ANT for building projects and Log4j for logging and debugging purposes.\nEffectiveness in coordinating with business team to fix defects and resolve issues.\nExperience in writing SQL queries, Stored Procedures for accessing and managing databases such as Oracle, DB2, MySQL.\nExperience with Tools: RAD, Eclipse, My Eclipse, Jenkins, Ant, Maven, Mercurial, Sonar, GIT, SVN, CVS, Perforce, Toad, SQLDeveloper, Code-Collaborator, SOAP-UI, RestClient-UI and Postman(chrome).\nExperience in Agile and waterfall modals.\nPracticing Agile  development frameworks Jira, Rally, VersionOne and standards, Test Driven Design & Development.\nPossess excellent communication, interpersonal, analytical and problem solving skills.\nTechnical Skills:\nJ2EE Technologies\t            : JDBC, JavaBeans, JSP, Servlets, EJB, JNDI, JMS. \nLanguages\t\t            : JAVA, Groovy, Python.\nWeb Technologies \t            : HTML, DHTML, JavaScript, JSON, AJAX.\nXML Technologies\t            : XML, DTD, XSLT, XSD, Xpath, JAXB SAX, DOM.\nDatabases\t\t            : Oracle 10g, 9i, MySQL, DB2 and Cassandra.\nOperating Systems\t            : UNIX, Linux, Windows 98/2000/NT/XP.\nApplication Servers\t     \t: WebSphere, Weblogic and JBoss.\nMiddleware\t\t     \t: Apache CAMEL, Oracle ESB, JMS and MQ-Series.\nIDE’s\t\t\t     \t: Eclipse, RAD and JDeveloper, TOAD, SQL Developer.\nFrameworks\t\t     \t: Apache CAMEL, Spring and Hadoop/ Big Data.\nORM Technologies \t     \t: Hibernate and JPA.\nWebservice Specifications\t: JAX-WS , JAX-RS and AXWAY APIGateway.\nUI Technologies\t        \t: JSP, JavaScript, JQuery, AJAX, CSS and HTML.\nVersion Control \t       \t: GIT, SVN, CVS and Perforce\nCloud Technologies \t\t: Cloud Foundry and AWS.                                                 \nTools\t                                \t: Ready API, Version One, JIRA, Parasoft, \n                                                  RestClient-UI and Postman(Chrome) and SOAP UI.\n Platform\t: 41st parameter(device  identification) and\n                                                  Fircosoft(to filter transactions and customers).\nEducation:                               Master of Computer Applications(MCA) \nProfessional Experience:\nVerizon, TX.\nDec’16 – Tilldate.\nRole : Java Developer.\nDescription :  Verizon DVS Migration(CPF, Reconciliation, Cassandra Loader) consist of 800+ APIs currently running on the IBM Main Frame system. Intented of this program is to rewrite all the API in Java 1.8, Cassandra 3.0. Currently Verizon pays IBM based on the no., of MIPS the API gets max in the day. Re-write API in Java with will reduce the cost spent for the IBM and the API scalability will be greatly increased with Cassandra. \nResponsibility: \nImplemented Microservice’s(Read API’s, Write API’s) using cloudfoundary.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nCreated shell scripts on Linux for enabling seed data loading into Cassandra tables.\nCreated application for data modelling to allow various DB2 to Cassandra table migration use cases.   \nEnabled code generation DDL files, Control Files, Spark Configuration files, Spring Boot Artifacts.\nDeveloped spark scripts by using Scala shell as per requirements. \nWorked with spark core, Spark Streaming and spark SQL modules of Spark \nDeveloped multiple POCs using Spark and deployed on the Yarn cluster, compared the performance of Spark, with Hive and SQL/Teradata. \nDeveloped Kafka producer and consumers, Cassandra clients and Spark along with components on HDFS, Hive. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated CPFTestSuite Automation tool for measuring CPF functionality, essential for detecting any configuration issues in preload tables.\nCreated ReconLogAnalyzer tool that will perform log analysis for missing and mismatch log statements and produce the output in an excel file.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated Jenkins builds for few custom applications.\nImplemented Test cases using Junit and Tested web services with REST Client.\nProactively monitor database systems ensuring availability and performance.\nEnvironment: Java/J2EE, Spring Core, Spring Boot, Spring JPA, Spring Rest, Spring Security, Spring Cloud, JPA, Microservices(PCF), Spark, HDFS(Hadoop), Kafka, Jenkins, AWS, GIT, Maven, MQ-Series, Mainframe, RAD, Junit  DB2, Cassandra and Oracle.\nGoogle Inc, Mountain View.\nMarch’16 – Dec’16.\nRole : Java Developer.\nDescription: Cyber-insurance is a predictive risk analytics tool implemented to analyse businesses and individual users Internet-based risks(Security Breach, Data Breach, Malware, Phishing, Spam, hacking and cloud service down) including the company’s industry, geography, scale, services and security posture.\nResponsibility: \nInvolved in the requirement gathering, design and development of Catastrophe modeling.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring JPA  Spring Rest and Spring Cloud.  \nImplemented cost calculator engines for AAL(Average Annual Loss), SD(Standard Deviation) and CV(Coefficient of Variation).\nUsed Spring Rest to implement controller layer.\nUsed JPA to implement Service and Repository layers.\nImplemented Micro-service’s using Pivotal Cloud Foundry(Spring Cloud).  \nUsed Groovy script for test automation. \nUsed Swagger to Document API’s. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala. \nDeveloped the code for Importing and exporting data into HDFS and Hive using Sqoop. \nResponsible for writing Hive Queries for analyzing data in Hive warehouse using HQL. \nWrote complex Hive queries and UDFs in Java and Python \nInvolved in defining job flows using Oozie for scheduling jobs to manage apache Hadoop jobs by directed.\nDeveloping Hive User Defined Functions in java, compiling them into jars and adding them to the HDFS and executing them with Hive Queries.\nDesigned and deployed isolated Search DCs for Datastax Solr Clusters. \nDeveloped Solr indexes and queries to span over multiple DCs. \nInvolved in writing API Testing,Junit testing, enhancements, bug fixing.\nEnvironment: Core Java(java 8), J2EE, JPA, Spring Core,Spring MVC, Spring JPA, Spring Rest, Spring Security, Spring Cloud, HDFS, HIVE, SPARK, Apache SOLR, Kafka, Zookeeper, XML, Groovy, JSON, JavaScript, AngularJS, Swagger, Jenkins,  Junit, Tomcat, Postman(Chrome), Git, MYSQL and UNIX/Linux.\nWells Fargo,  San Leandro, CA.                                                          \nMay’15  – March’2016.\nRole: Java Developer.\nDescription:  New Device Fingerprinting is one of the core application in Gen 3 FP&A (Fraud Prevention & Authentication ) for building a more intelligent and efficient fraud mitigation, authentication and alerting strategies  for online  and cross channel authentication use cases.\nResponsibility: \nInvolved in the requirement gathering and architecture design and development of New Device Fingerprint project.\nReengineering existing platform to a Microservices based architecture.\nReengineered platform to support 100% virtualization.\ninvolved in  development using 41st Parameter, Core Java - J2ee, Multi-threading, Groovy,  Spring, Hibernate, Apache CAMEL, Web services(SOAP and Rest), Maven, Oracle and Weblogic.\ninstalled an updated version of 41st Parameter (external vendor) code to do Device fingerprinting.\nImplemented different features related to Device fingerprinting in  AuthC Service .\nUsed Apache Camel for creating routes using Web service.\nUsed spring boot to bootstrap the basic configuration of the project. \nDeveloped Data access layer using ORM framework hibernate for mapping database scheme to Object model.\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring MVC, Spring DAO and Spring JMS. \nUsed Ready API Tool to Implement functional and integation tests.\nPerformed Unit testing using JUNIT and Mockito.\nUsed Splunk tool in order to analyze the logs in the applications.\nExtensively used Groovy for functional tests.\nUsed Cassandra CQL with Java API's to retrieve data from Cassandra tables.\nInvolved in writing different DDL and DML scripts for functional tests.\nManaged code for different releases by branching and merging using SVN.\nUsed CI tools like Jenkins.\nUsed JIRA as a change request , defect tracking and project status tracking system in the project.\nEnvironment: 41st Parameter, Core Java, Groovy, J2EE, Hibernate, Spring,Spring Boot, EJB, Apache CAMEL, WebServices(SOAP, Restful and Amazon), XML, JSON,  Ready API, Log4j, Weblogic, ActiveMQ, SQL Developer,MQ-Series, Jenkins, Splunk, Junit, Mockito, Docker, Oracle DB, Cassandra, Putty and UNIX/Linux.\nBank of America, Agoura Hills,CA.                                                                         \nMar 14  – Apr 15 .\nRole: Java Developer.\nDescription:  This project will be used by the RMD Department of BOFA. RMD will issue loans to the borrowers based on collateral Status before issuing the loan RMD checks that whether that collateral is insured or not and collateral’s Social Security Number through third party agencies and finally RMD checks whether borrowers is paying tax properly for that collateral or not with the help of third party agency.\nResponsibility: \nUsed Agile methodology for design and development of project.\nImplemented User Interface using JSP, HTML, CSS, Ajax, JavaScript and AngularJS.\nImplemented Tax  and  Loan ID modules using Spring Framework.\nImplemented Persistence layer using Hibernate JPA.\nCreated and maintained the configuration of the Spring Application Framework (IOC) and implemented business logic using EJB.\nImplemented SOAP Services(JAX-WS) to interact with external systems like Fidelity.\nConverted  Business to customer services into Restful Services.\nHave good experience on continuous integration tool Jenkins.\nImplemented some fuzzy logic’s using Hadoop MapReduce Programming.\nImplemented  AWS Redshift (a petabyte-scale data warehouse service in the cloud).\nConverted EJB MDB’s in to Spring MDP’s using Spring JMS Module and moved into Amazon cloud(AWS).\nHandled all the service nodes and components on Amazon cloud, including handling Amazon service outages.\nImplemented NO-SQL DB(Cassandra) to store poisoned messages.\nCQL is used to query Cassandra data from dev center.\nPerformed importing data from various sources to the Cassandra cluster using Java/Python APIs or Sqoop. \nResponsible for bug fixes and documentation.\nUsed Linux OS for Development and Production Environment.\nAbility to learn and adapt quickly to the emerging new technologies.\nEnvironment: Core Java, J2EE, JSP, Servlets, Hadoop/Big Data, Splunk Spring Core, Spring MVC, Spring Data, Hibernate-JPA, EJB, WebServices(SOAP, Restful and Amazon WebService), Kafka, Apache CAMEL, AngularJS, Ajax, XML,  JavaScript, JSON, CSS, HTML, Log4j, SONOR,Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Jenkins, Sqoop, Cassandra DB, MySQL and Oracle DB.\nBank of America, Jersey City, NJ.                   \t   \t\t                                 \nMay’13 – March’14.\nTitle:  Enterprise Transaction Scanning in AML (Anti Money Laundering).\nRole:  Java Developer.\nDescription: Anti Money Laundering(AML) is the policy in Bank of America where Bank of America does not want to be  used  in the  process to conceal the true source of funds that were originally derived from criminal activity or in the process of funding criminal activity, including terrorism.\nAML Policy Statement is intended to guard against Bank of America’s unintentional involvement in criminal activity, and to reinforce Bank of America’s policy of cooperation with law enforcement and regulatory agencies.\nUnder the Project AML, Bank of America will,\nTake reasonable steps to determine the true identity of all customers and beneficial ownership of Bank of America products and services .\nReport all identified instances of suspicious activity to the extent that it can do so under all applicable foreign and domestic laws .\nAvoid providing support or assistance to customers seeking to deceive law enforcement agencies through the provision of false, altered, incomplete or missing information or by informing customers that their activities are, may be, or have been investigated or reported as suspicious.\nAML uses the tool called Fircosoft for scanning the Enterprise transactions and report the suspicious activities through the system called ‘ETS (Enterprise Transaction Scanning)’. ETS will scan all the wired transactions against the watch list (central repository of suspicious individuals, countries and cities) stored in ETS database. \nResponsibilites:\nInteraction with Business users on daily basis for gathering the Requirements.\nInvolving in the preparing low level design.\nInvolved in the development of Report Generation module. Which includes volume statistics report, Sanctions Monitoring Metrics report, TPS report.\nImplemented Spring MVC, dependency Injection (DI) features along with Hibernate \nImplemented  Online List Management (OLM)  and  FMM module  using Spring and Hibernate.\nCreated Configuration files for the application using Spring framework.\nImplemented a RESTful interface for the search and Address services\nImplemented SOAP Services(JAX-WS) to interact with external systems.\nWrote various SQL, PL/SQL queries and stored procedures for data retrieval.\nPerformed Unit testing using JUNIT and Mockito.\nUsed Linux OS for Development and Production Environment, Wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs.\nEnvironment: Core Java, multithreading, Fircosoft, J2EE, JSP, Servlets, Spring Core, Spring MVC, Spring ORM, Spring Batch, Hibernate, JPA, WebServices(SOAP and Restful), AnjularJS, Ajax, XML,  JavaScript, JSON, CSS , HTML, SVN, Jenkins, Log4j, Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Mockito, Cassandra, Junit, Mockito and Oracle DB.\nFidelity Investments, Atlanta, GA.      \t\t                              \nFeb’12 – April’13.\nTitle: TradeClearing System.\nRole: Java Developer\nTradeClear had following functionalities:\nCentralized clearing: Listed Derivatives are traded on numerous exchanges and booked into a large number of front office booking systems within the firm. TradeClear consolidates information flow from substantially all relevant booking systems and most major clearing houses where Client has membership rights. \nReal-time Processing: Listed derivative transactions must be balanced and cleared on the same day they are traded. This gives a little as 90 minutes to identify mismatches in bookings and correctly clear the day’s business. \nResponsibility:\nResponsible for gathering business requirements, review the requirements and converting them to detailed design documents and clarification documents.\nDeveloped UI and backend applications using Struts, Spring, Hibernate, Java, EJB 3.0, JSP, HTML, DHTML, JavaScript and AJAX.\nImplemented JSP, Struts Tag Libraries, Java Script and CSS for developing User for creating/generating Hibernate classes and configuration XML’s and to also manage CRUD operations (insert, update, and delete).\nImplemented a RESTful interface for the Front-end response.\nUsed Web Services to get price from external Business Entities.\nDeveloped reusable services using BPEL to transfer data between heterogeneous systems\nUsing different Adapters.\nImplemented messaging using TIBCO EMS.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite .\nImplemented security for BPEL services using OWSM. \nResponsible for integration of different modules. \nCreated JUnit test cases, and Development of JUnit classes.\nConfigured log4j to enable/disable logging in application.\nInvolved in Code Reviews of other modules, documents, test cases.\nWrote UNIX Shell scripts and used UNIX environment to deploy the application.\nResponsible in coordination with offshore team, attending daily and weekly scrum meetings to update the work status, issues clarifications etc.\nEnvironment: Core Java,J2EE, JDeveloper, Spring, Hibernate, SOA 10g(BPEL), Weblogic Server, Webservices(SOAP and Restful), JMS, PL/SQL, Sql Developer, XML HTML, JavaScript, SVN, Maven, Log4j, JUnit, Sybase , JBoss, Oracle, DB2, SAP, Mainframe(COBOL), MQ-Series,MySQL, Windows XP, RAD and Unix. \nPrudential,   Newark, NJ.      \t          \t           \t                                 \nMay’10 – Dec’11\nRole: Java Developer.    \nProject: 4Front is an application provides a single point of access for teleconsultants for legacy \nsystems (E.g.: CAPSIL, SALAS, OPAL and OB).  It allows users in Customer Services and other areas of the business to Verify the identification of a caller, Maintain a history of a caller’s contact, Make with enquiries, Perform alterations to a customer’s policy, Investigate the New Business, Review the Direct Debit instructions, Produce outputs (fax, letter, etc.), Provide valuations, Pass the call to another 4Front user and Automate the call hand-off.\n\nResponsibility:      \nDay to day support activities. \nMeeting the Client SLA on the production tickets.\nDesign and development of new change requests using  Java, struts, JSP and EJB.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite.\nResponsible for all the SDLC phases of a change request including testing and live support.\nEnvironment: Core Java , J2ee, Oracle Fusion(BPEL), JSP, Eclipse, Servlet, XML, Struts, Tiles, AJAX, EJB, JUnit, JBoss, websphere Application Server , Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MQ-Series, Mainframe(COBOL), RAD and  DB2. \nHilmar Cheese\t\t                                                     \nSep’ 08 – Feb’ 2010\nTitle:  Custom Business Application.\nRole: Java Developer.\nDescription: This project has been designed and developed to process online order request. This project consist of different module such as online User Registration, Update User Information, Submit order online, payment, process order and delivery of order.\nResponsibility:\nInvolved in gathering requirements, Analysis, Design, Development and testing of the entire Application.\nInvolved in all phases of SDLC (Software Development Life Cycle).\nCreated UML diagrams like class diagrams and activity diagrams using the Rational Rose.\nParticipated in the design and development of application using JSP, HTML, CSS and JavaScript.\nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking.\nDesigned and Developed the presentation layer using AJAX for RUI(Rich User Interface).\nJSON is used in conjunction with JavaScript for making HTTP requests.\nJQuery is used for validation.\nDeveloped the presentation tier of the application using Struts framework and MVC design pattern.\nConfigured the Hibernate ORM framework as persistence layer for the backend by using hibernate.confg.xml \nDesigned and developed DAO’s for accessing the POJO’s and updating the DB tables using the POJO’s, Java Collections, and Synchronization etc.\nUsed Hibernate object relation mappings (ORM) for the database operations on MySQL.\nDeveloped and modified the stored procedures, the DAO (Data Access Objects) and VO (value Object) classes for separating the Data Access logic and business logic.\nExtensively participated in application integration. Spring is used to integrate Struts and Hibernate. Implemented interceptors for Spring and Hibernate.\nTransactions were implemented using declarative transactions in Spring with transaction managers capable of supporting Hibernate.\nConfiguration issues in the various frameworks used were identified and resolved to extract an acceptable level of performance in terms of efficiency, response and robustness.\nConsumed Web Services as a gateway for the payment through the third-party.\nDeveloped Web Services using SOA, SOAP, WSDL, UDDI and JAX-WS,JAX-RPC programming models.\nUsed Ant as build tool for building and deploying it into Weblogic Server. Ant scripts are used for automating build process.\nDeveloped and execute unit tests and test suites for product components using JUnit Testing Used.\nEnvironment: Core Java, J2EE1.6.x, JDK, JSP, Struts 2.x, Tiles, JMS, Spring 3.x, Hibernate 3.0, MySQL, Eclipse, WebSphere Application Server, JBOSS, JSON, AJAX, JQuery, Web Services(SOAP,WSDL),Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MySQL and DB2.\nR-Systems International Ltd\t\t    \t                       \nOct’07 - July’08\nTitle: RMS (Repayment Management System).\nRole: Software Programmer.\nDescription: RMS is Repayment Management System. Case appears in RMS only after the final disbursement of loan amount. In case of partial disbursement; only after the last disbursement the case will appear in RMS. RMS deals with how does the customer repays the Loan i.e. through his salary deduction or online transfer from checking a/c, etc.\nResponsibility: \nInvolved in Development of RMS Enhancements like RMS Transaction, RMS Monthly History, Scheme Change maker/checker, Customer service query, Non Provisioning Assets screens like specific provision manual marking, writeoff manual marking, sale of asset, property value updating, collateral value updating and ground rent prospect entry.\nDeveloped sub-modules of non provisioning Assets like sale of asset, writeoff manual marking and ground rent prospect entry.\nInvolved in requirements planning, analysis and design discussions with the technical team.\nDocumentation & review of requirements with design team.\nInvolved in preparing program specifications and testing scripts and updating the same.\nDeveloped stored procedures, Functions, views and also wrote PL/SQL scripts.\nUsed JSF layout for view of MVC.\nResponsible in troubleshooting application and understanding the same.\nUsed web services to fetch data synchronously from the other interfaces\nIntegrated Spring DAO for data access using with Hibernate.\nCoordinated with team in troubleshooting and fixing production application issues.\nInvolved in setting up processes, procedures, knowledge transfer to offshore teams.\nEnvironment: Core Java, J2EE, XSL, XML, JSP, Struts, Tiles, Spring 2.x, Hibernate, JavaScript, HTML, CSS, Oracle, Websphere Application Server, DB2, Web Services (WSDL, SOAP), SQL/PL SQL and windows. ",
  "cleaned_text": "Candidate Cell Professional Summary years of total IT experience in all phases of Software Development Life Cycle including Analysis, Design, Implementation, integration, Testing, and Maintenance. years of experience in developing web, enterprise and SOA applications using Core Java, OOAD, Multi-Threading, JavaBeans, JSP, Servlets, JNDI, JDBC, Hibernate, JPA, Spring, WebServices SOAP, Restful and Micro-Service , XSD, XML, XSLT, JSON, JAX-B, Apache Commons, EJB, JMS, MQ-Series, HTML, Ajax, Oracle and Linux UNIX. years of experience in Big Data and Cloud based technologies like HDFS, SPARK, Kafka, Flume, Sqoop and AWS. Extensive experience on developing web applications using Spring Boot, Spring Core, Spring MVC, Spring ORM, Spring JPA,Spring Rest and Spring Cloud PCF . Expertise in implementing persistence layer using JPA and Hibernate. Expertise working with SOAP, Rest and Microservices using CXF, Jersey and CloudFoundary. Implemented Microservices using Spring Core, Spring Boot, Spring Data, Spring Rest and Spring Cloud PCF . Experience in Collections, Multi threading, Concurrency and memory management. Extensive experience in working with servers like WebLogic, WebSphere, JBOSS and Tomcat. Expertise in using XML Parsers SAX and DOM. Good experience in data structures and algorithms. Good experience in Junit and Mockito. Implemented AWS EC , RDS, SNS, SQS, S to move customer care application in to Cloud environment. Good Experience in using Maven and ANT for building projects and Log j for logging and debugging purposes. Effectiveness in coordinating with business team to fix defects and resolve issues. Experience in writing SQL queries, Stored Procedures for accessing and managing databases such as Oracle, DB , MySQL. Experience with Tools RAD, Eclipse, My Eclipse, Jenkins, Ant, Maven, Mercurial, Sonar, GIT, SVN, CVS, Perforce, Toad, SQLDeveloper, Code-Collaborator, SOAP-UI, RestClient-UI and Postman chrome . Experience in Agile and waterfall modals. Practicing Agile development frameworks Jira, Rally, VersionOne and standards, Test Driven Design & Development. Possess excellent communication, interpersonal, analytical and problem solving skills. Technical Skills J EE Technologies JDBC, JavaBeans, JSP, Servlets, EJB, JNDI, JMS. Languages JAVA, Groovy, Python. Web Technologies HTML, DHTML, JavaScript, JSON, AJAX. XML Technologies XML, DTD, XSLT, XSD, Xpath, JAXB SAX, DOM. Databases Oracle g, i, MySQL, DB and Cassandra. Operating Systems UNIX, Linux, Windows NT XP. Application Servers WebSphere, Weblogic and JBoss. Middleware Apache CAMEL, Oracle ESB, JMS and MQ-Series. IDEs Eclipse, RAD and JDeveloper, TOAD, SQL Developer. Frameworks Apache CAMEL, Spring and Hadoop Big Data. ORM Technologies Hibernate and JPA. Webservice Specifications JAX-WS , JAX-RS and AXWAY APIGateway. UI Technologies JSP, JavaScript, JQuery, AJAX, CSS and HTML. Version Control GIT, SVN, CVS and Perforce Cloud Technologies Cloud Foundry and AWS. Tools Ready API, Version One, JIRA, Parasoft, RestClient-UI and Postman Chrome and SOAP UI. Platform st parameter device identification and Fircosoft to filter transactions and customers . Education Master of Computer Applications MCA Professional Experience Verizon, TX. Dec Tilldate. Role Java Developer. Description Verizon DVS Migration CPF, Reconciliation, Cassandra Loader consist of APIs currently running on the IBM Main Frame system. Intented of this program is to rewrite all the API in Java . , Cassandra . . Currently Verizon pays IBM based on the no., of MIPS the API gets max in the day. Re-write API in Java with will reduce the cost spent for the IBM and the API scalability will be greatly increased with Cassandra. Responsibility Implemented Microservices Read APIs, Write APIs using cloudfoundary. Used Netflix OSS stack to provide infrastructure for micro-services config server, eureka server, zuul proxy, ribbon and hystrix . Created shell scripts on Linux for enabling seed data loading into Cassandra tables. Created application for data modelling to allow various DB to Cassandra table migration use cases. Enabled code generation DDL files, Control Files, Spark Configuration files, Spring Boot Artifacts. Developed spark scripts by using Scala shell as per requirements. Worked with spark core, Spark Streaming and spark SQL modules of Spark Developed multiple POCs using Spark and deployed on the Yarn cluster, compared the performance of Spark, with Hive and SQL Teradata. Developed Kafka producer and consumers, Cassandra clients and Spark along with components on HDFS, Hive. Involved in converting Hive SQL queries into Spark transformations using Spark RDDs, Python and Scala. Created application to create control files for performing seed data migration from DB to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited. Created CPFTestSuite Automation tool for measuring CPF functionality, essential for detecting any configuration issues in preload tables. Created ReconLogAnalyzer tool that will perform log analysis for missing and mismatch log statements and produce the output in an excel file. Created application to create control files for performing seed data migration from DB to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited. Created Jenkins builds for few custom applications. Implemented Test cases using Junit and Tested web services with REST Client. Proactively monitor database systems ensuring availability and performance. Environment Java J EE, Spring Core, Spring Boot, Spring JPA, Spring Rest, Spring Security, Spring Cloud, JPA, Microservices PCF , Spark, HDFS Hadoop , Kafka, Jenkins, AWS, GIT, Maven, MQ-Series, Mainframe, RAD, Junit DB , Cassandra and Oracle. Google Inc, Mountain View. March Dec . Role Java Developer. Description Cyber-insurance is a predictive risk analytics tool implemented to analyse businesses and individual users Internet-based risks Security Breach, Data Breach, Malware, Phishing, Spam, hacking and cloud service down including the companys industry, geography, scale, services and security posture. Responsibility Involved in the requirement gathering, design and development of Catastrophe modeling. Used Netflix OSS stack to provide infrastructure for micro-services config server, eureka server, zuul proxy, ribbon and hystrix . Extensively used different Spring modules like Spring Boot, Spring Core, Spring JPA Spring Rest and Spring Cloud. Implemented cost calculator engines for AAL Average Annual Loss , SD Standard Deviation and CV Coefficient of Variation . Used Spring Rest to implement controller layer. Used JPA to implement Service and Repository layers. Implemented Micro-services using Pivotal Cloud Foundry Spring Cloud . Used Groovy script for test automation. Used Swagger to Document APIs. Involved in converting Hive SQL queries into Spark transformations using Spark RDDs, Python and Scala. Developed the code for Importing and exporting data into HDFS and Hive using Sqoop. Responsible for writing Hive Queries for analyzing data in Hive warehouse using HQL. Wrote complex Hive queries and UDFs in Java and Python Involved in defining job flows using Oozie for scheduling jobs to manage apache Hadoop jobs by directed. Developing Hive User Defined Functions in java, compiling them into jars and adding them to the HDFS and executing them with Hive Queries. Designed and deployed isolated Search DCs for Datastax Solr Clusters. Developed Solr indexes and queries to span over multiple DCs. Involved in writing API Testing,Junit testing, enhancements, bug fixing. Environment Core Java java , J EE, JPA, Spring Core,Spring MVC, Spring JPA, Spring Rest, Spring Security, Spring Cloud, HDFS, HIVE, SPARK, Apache SOLR, Kafka, Zookeeper, XML, Groovy, JSON, JavaScript, AngularJS, Swagger, Jenkins, Junit, Tomcat, Postman Chrome , Git, MYSQL and UNIX Linux. Wells Fargo, San Leandro, CA. May March . Role Java Developer. Description New Device Fingerprinting is one of the core application in Gen FP&A Fraud Prevention & Authentication for building a more intelligent and efficient fraud mitigation, authentication and alerting strategies for online and cross channel authentication use cases. Responsibility Involved in the requirement gathering and architecture design and development of New Device Fingerprint project. Reengineering existing platform to a Microservices based architecture. Reengineered platform to support virtualization. involved in development using st Parameter, Core Java - J ee, Multi-threading, Groovy, Spring, Hibernate, Apache CAMEL, Web services SOAP and Rest , Maven, Oracle and Weblogic. installed an updated version of st Parameter external vendor code to do Device fingerprinting. Implemented different features related to Device fingerprinting in AuthC Service . Used Apache Camel for creating routes using Web service. Used spring boot to bootstrap the basic configuration of the project. Developed Data access layer using ORM framework hibernate for mapping database scheme to Object model. Extensively used different Spring modules like Spring Boot, Spring Core, Spring MVC, Spring DAO and Spring JMS. Used Ready API Tool to Implement functional and integation tests. Performed Unit testing using JUNIT and Mockito. Used Splunk tool in order to analyze the logs in the applications. Extensively used Groovy for functional tests. Used Cassandra CQL with Java API s to retrieve data from Cassandra tables. Involved in writing different DDL and DML scripts for functional tests. Managed code for different releases by branching and merging using SVN. Used CI tools like Jenkins. Used JIRA as a change request , defect tracking and project status tracking system in the project. Environment st Parameter, Core Java, Groovy, J EE, Hibernate, Spring,Spring Boot, EJB, Apache CAMEL, WebServices SOAP, Restful and Amazon , XML, JSON, Ready API, Log j, Weblogic, ActiveMQ, SQL Developer,MQ-Series, Jenkins, Splunk, Junit, Mockito, Docker, Oracle DB, Cassandra, Putty and UNIX Linux. Bank of America, Agoura Hills,CA. Mar Apr . Role Java Developer. Description This project will be used by the RMD Department of BOFA. RMD will issue loans to the borrowers based on collateral Status before issuing the loan RMD checks that whether that collateral is insured or not and collaterals Social Security Number through third party agencies and finally RMD checks whether borrowers is paying tax properly for that collateral or not with the help of third party agency. Responsibility Used Agile methodology for design and development of project. Implemented User Interface using JSP, HTML, CSS, Ajax, JavaScript and AngularJS. Implemented Tax and Loan ID modules using Spring Framework. Implemented Persistence layer using Hibernate JPA. Created and maintained the configuration of the Spring Application Framework IOC and implemented business logic using EJB. Implemented SOAP Services JAX-WS to interact with external systems like Fidelity. Converted Business to customer services into Restful Services. Have good experience on continuous integration tool Jenkins. Implemented some fuzzy logics using Hadoop MapReduce Programming. Implemented AWS Redshift a petabyte-scale data warehouse service in the cloud . Converted EJB MDBs in to Spring MDPs using Spring JMS Module and moved into Amazon cloud AWS . Handled all the service nodes and components on Amazon cloud, including handling Amazon service outages. Implemented NO-SQL DB Cassandra to store poisoned messages. CQL is used to query Cassandra data from dev center. Performed importing data from various sources to the Cassandra cluster using Java Python APIs or Sqoop. Responsible for bug fixes and documentation. Used Linux OS for Development and Production Environment. Ability to learn and adapt quickly to the emerging new technologies. Environment Core Java, J EE, JSP, Servlets, Hadoop Big Data, Splunk Spring Core, Spring MVC, Spring Data, Hibernate-JPA, EJB, WebServices SOAP, Restful and Amazon WebService , Kafka, Apache CAMEL, AngularJS, Ajax, XML, JavaScript, JSON, CSS, HTML, Log j, SONOR,Weblogic, Putty, UNIX Linux, SQL, SQL Developer, Jenkins, Sqoop, Cassandra DB, MySQL and Oracle DB. Bank of America, Jersey City, NJ. May March . Title Enterprise Transaction Scanning in AML Anti Money Laundering . Role Java Developer. Description Anti Money Laundering AML is the policy in Bank of America where Bank of America does not want to be used in the process to conceal the true source of funds that were originally derived from criminal activity or in the process of funding criminal activity, including terrorism. AML Policy Statement is intended to guard against Bank of Americas unintentional involvement in criminal activity, and to reinforce Bank of Americas policy of cooperation with law enforcement and regulatory agencies. Under the Project AML, Bank of America will, Take reasonable steps to determine the true identity of all customers and beneficial ownership of Bank of America products and services . Report all identified instances of suspicious activity to the extent that it can do so under all applicable foreign and domestic laws . Avoid providing support or assistance to customers seeking to deceive law enforcement agencies through the provision of false, altered, incomplete or missing information or by informing customers that their activities are, may be, or have been investigated or reported as suspicious. AML uses the tool called Fircosoft for scanning the Enterprise transactions and report the suspicious activities through the system called ETS Enterprise Transaction Scanning . ETS will scan all the wired transactions against the watch list central repository of suspicious individuals, countries and cities stored in ETS database. Responsibilites Interaction with Business users on daily basis for gathering the Requirements. Involving in the preparing low level design. Involved in the development of Report Generation module. Which includes volume statistics report, Sanctions Monitoring Metrics report, TPS report. Implemented Spring MVC, dependency Injection DI features along with Hibernate Implemented Online List Management OLM and FMM module using Spring and Hibernate. Created Configuration files for the application using Spring framework. Implemented a RESTful interface for the search and Address services Implemented SOAP Services JAX-WS to interact with external systems. Wrote various SQL, PL SQL queries and stored procedures for data retrieval. Performed Unit testing using JUNIT and Mockito. Used Linux OS for Development and Production Environment, Wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs. Environment Core Java, multithreading, Fircosoft, J EE, JSP, Servlets, Spring Core, Spring MVC, Spring ORM, Spring Batch, Hibernate, JPA, WebServices SOAP and Restful , AnjularJS, Ajax, XML, JavaScript, JSON, CSS , HTML, SVN, Jenkins, Log j, Weblogic, Putty, UNIX Linux, SQL, SQL Developer, Mockito, Cassandra, Junit, Mockito and Oracle DB. Fidelity Investments, Atlanta, GA. Feb April . Title TradeClearing System. Role Java Developer TradeClear had following functionalities Centralized clearing Listed Derivatives are traded on numerous exchanges and booked into a large number of front office booking systems within the firm. TradeClear consolidates information flow from substantially all relevant booking systems and most major clearing houses where Client has membership rights. Real-time Processing Listed derivative transactions must be balanced and cleared on the same day they are traded. This gives a little as minutes to identify mismatches in bookings and correctly clear the days business. Responsibility Responsible for gathering business requirements, review the requirements and converting them to detailed design documents and clarification documents. Developed UI and backend applications using Struts, Spring, Hibernate, Java, EJB . , JSP, HTML, DHTML, JavaScript and AJAX. Implemented JSP, Struts Tag Libraries, Java Script and CSS for developing User for creating generating Hibernate classes and configuration XMLs and to also manage CRUD operations insert, update, and delete . Implemented a RESTful interface for the Front-end response. Used Web Services to get price from external Business Entities. Developed reusable services using BPEL to transfer data between heterogeneous systems Using different Adapters. Implemented messaging using TIBCO EMS. Implemented integration between the BPEL worklist and Oracle eBusiness Suite . Implemented security for BPEL services using OWSM. Responsible for integration of different modules. Created JUnit test cases, and Development of JUnit classes. Configured log j to enable disable logging in application. Involved in Code Reviews of other modules, documents, test cases. Wrote UNIX Shell scripts and used UNIX environment to deploy the application. Responsible in coordination with offshore team, attending daily and weekly scrum meetings to update the work status, issues clarifications etc. Environment Core Java,J EE, JDeveloper, Spring, Hibernate, SOA g BPEL , Weblogic Server, Webservices SOAP and Restful , JMS, PL SQL, Sql Developer, XML HTML, JavaScript, SVN, Maven, Log j, JUnit, Sybase , JBoss, Oracle, DB , SAP, Mainframe COBOL , MQ-Series,MySQL, Windows XP, RAD and Unix. Prudential, Newark, NJ. May Dec Role Java Developer. Project Front is an application provides a single point of access for teleconsultants for legacy systems E.g. CAPSIL, SALAS, OPAL and OB . It allows users in Customer Services and other areas of the business to Verify the identification of a caller, Maintain a history of a callers contact, Make with enquiries, Perform alterations to a customers policy, Investigate the New Business, Review the Direct Debit instructions, Produce outputs fax, letter, etc. , Provide valuations, Pass the call to another Front user and Automate the call hand-off. Responsibility Day to day support activities. Meeting the Client SLA on the production tickets. Design and development of new change requests using Java, struts, JSP and EJB. Implemented integration between the BPEL worklist and Oracle eBusiness Suite. Responsible for all the SDLC phases of a change request including testing and live support. Environment Core Java , J ee, Oracle Fusion BPEL , JSP, Eclipse, Servlet, XML, Struts, Tiles, AJAX, EJB, JUnit, JBoss, websphere Application Server , Ant, JavaScript, CSS, Log J, Junit,HTML, PL SQL, CVS, MQ-Series, Mainframe COBOL , RAD and DB . Hilmar Cheese Sep Feb Title Custom Business Application. Role Java Developer. Description This project has been designed and developed to process online order request. This project consist of different module such as online User Registration, Update User Information, Submit order online, payment, process order and delivery of order. Responsibility Involved in gathering requirements, Analysis, Design, Development and testing of the entire Application. Involved in all phases of SDLC Software Development Life Cycle . Created UML diagrams like class diagrams and activity diagrams using the Rational Rose. Participated in the design and development of application using JSP, HTML, CSS and JavaScript. Used Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking. Designed and Developed the presentation layer using AJAX for RUI Rich User Interface . JSON is used in conjunction with JavaScript for making HTTP requests. JQuery is used for validation. Developed the presentation tier of the application using Struts framework and MVC design pattern. Configured the Hibernate ORM framework as persistence layer for the backend by using hibernate.confg.xml Designed and developed DAOs for accessing the POJOs and updating the DB tables using the POJOs, Java Collections, and Synchronization etc. Used Hibernate object relation mappings ORM for the database operations on MySQL. Developed and modified the stored procedures, the DAO Data Access Objects and VO value Object classes for separating the Data Access logic and business logic. Extensively participated in application integration. Spring is used to integrate Struts and Hibernate. Implemented interceptors for Spring and Hibernate. Transactions were implemented using declarative transactions in Spring with transaction managers capable of supporting Hibernate. Configuration issues in the various frameworks used were identified and resolved to extract an acceptable level of performance in terms of efficiency, response and robustness. Consumed Web Services as a gateway for the payment through the third-party. Developed Web Services using SOA, SOAP, WSDL, UDDI and JAX-WS,JAX-RPC programming models. Used Ant as build tool for building and deploying it into Weblogic Server. Ant scripts are used for automating build process. Developed and execute unit tests and test suites for product components using JUnit Testing Used. Environment Core Java, J EE . .x, JDK, JSP, Struts .x, Tiles, JMS, Spring .x, Hibernate . , MySQL, Eclipse, WebSphere Application Server, JBOSS, JSON, AJAX, JQuery, Web Services SOAP,WSDL ,Ant, JavaScript, CSS, Log J, Junit,HTML, PL SQL, CVS, MySQL and DB . R-Systems International Ltd Oct - July Title RMS Repayment Management System . Role Software Programmer. Description RMS is Repayment Management System. Case appears in RMS only after the final disbursement of loan amount. In case of partial disbursement only after the last disbursement the case will appear in RMS. RMS deals with how does the customer repays the Loan i.e. through his salary deduction or online transfer from checking a c, etc. Responsibility Involved in Development of RMS Enhancements like RMS Transaction, RMS Monthly History, Scheme Change maker checker, Customer service query, Non Provisioning Assets screens like specific provision manual marking, writeoff manual marking, sale of asset, property value updating, collateral value updating and ground rent prospect entry. Developed sub-modules of non provisioning Assets like sale of asset, writeoff manual marking and ground rent prospect entry. Involved in requirements planning, analysis and design discussions with the technical team. Documentation & review of requirements with design team. Involved in preparing program specifications and testing scripts and updating the same. Developed stored procedures, Functions, views and also wrote PL SQL scripts. Used JSF layout for view of MVC. Responsible in troubleshooting application and understanding the same. Used web services to fetch data synchronously from the other interfaces Integrated Spring DAO for data access using with Hibernate. Coordinated with team in troubleshooting and fixing production application issues. Involved in setting up processes, procedures, knowledge transfer to offshore teams. Environment Core Java, J EE, XSL, XML, JSP, Struts, Tiles, Spring .x, Hibernate, JavaScript, HTML, CSS, Oracle, Websphere Application Server, DB , Web Services WSDL, SOAP , SQL PL SQL and windows.",
  "preprocessed_text": "candidate cell professional summary year total experience phase software development life cycle including analysis design implementation integration testing maintenance year experience developing web enterprise soa application using core java ooad multi-threading javabeans jsp servlets jndi jdbc hibernate jpa spring webservices soap restful micro-service xsd xml xslt json jax-b apache common ejb jms mq-series html ajax oracle linux unix year experience big data cloud based technology like hdfs spark kafka flume sqoop aws extensive experience developing web application using spring boot spring core spring mvc spring orm spring jpa spring rest spring cloud pcf expertise implementing persistence layer using jpa hibernate expertise working soap rest microservices using cxf jersey cloudfoundary implemented microservices using spring core spring boot spring data spring rest spring cloud pcf experience collection multi threading concurrency memory management extensive experience working server like weblogic websphere jboss tomcat expertise using xml parser sax dom good experience data structure algorithm good experience junit mockito implemented aws ec rds sn sqs move customer care application cloud environment good experience using maven ant building project log logging debugging purpose effectiveness coordinating business team fix defect resolve issue experience writing sql query stored procedure accessing managing database oracle db mysql experience tool rad eclipse eclipse jenkins ant maven mercurial sonar git svn cv perforce toad sqldeveloper code-collaborator soap-ui restclient-ui postman chrome experience agile waterfall modal practicing agile development framework jira rally versionone standard test driven design development possess excellent communication interpersonal analytical problem solving skill technical skill ee technology jdbc javabeans jsp servlets ejb jndi jms language java groovy python web technology html dhtml javascript json ajax xml technology xml dtd xslt xsd xpath jaxb sax dom database oracle mysql db cassandra operating system unix linux window nt xp application server websphere weblogic jboss middleware apache camel oracle esb jms mq-series ides eclipse rad jdeveloper toad sql developer framework apache camel spring hadoop big data orm technology hibernate jpa webservice specification jax-ws jax-rs axway apigateway ui technology jsp javascript jquery ajax cs html version control git svn cv perforce cloud technology cloud foundry aws tool ready api version one jira parasoft restclient-ui postman chrome soap ui platform st parameter device identification fircosoft filter transaction customer education master computer application mca professional experience verizon tx dec tilldate role java developer description verizon dvs migration cpf reconciliation cassandra loader consist apis currently running ibm main frame system intented program rewrite api java cassandra currently verizon pay ibm based no. mips api get max day re-write api java reduce cost spent ibm api scalability greatly increased cassandra responsibility implemented microservices read apis write apis using cloudfoundary used netflix os stack provide infrastructure micro-services config server eureka server zuul proxy ribbon hystrix created shell script linux enabling seed data loading cassandra table created application data modelling allow various db cassandra table migration use case enabled code generation ddl file control file spark configuration file spring boot artifact developed spark script using scala shell per requirement worked spark core spark streaming spark sql module spark developed multiple pocs using spark deployed yarn cluster compared performance spark hive sql teradata developed kafka producer consumer cassandra client spark along component hdfs hive involved converting hive sql query spark transformation using spark rdds python scala created application create control file performing seed data migration db cassandra called init load data file created mainframe system various format data file fixed width delimited created cpftestsuite automation tool measuring cpf functionality essential detecting configuration issue preload table created reconloganalyzer tool perform log analysis missing mismatch log statement produce output excel file created application create control file performing seed data migration db cassandra called init load data file created mainframe system various format data file fixed width delimited created jenkins build custom application implemented test case using junit tested web service rest client proactively monitor database system ensuring availability performance environment java ee spring core spring boot spring jpa spring rest spring security spring cloud jpa microservices pcf spark hdfs hadoop kafka jenkins aws git maven mq-series mainframe rad junit db cassandra oracle google inc mountain view march dec role java developer description cyber-insurance predictive risk analytics tool implemented analyse business individual user internet-based risk security breach data breach malware phishing spam hacking cloud service including company industry geography scale service security posture responsibility involved requirement gathering design development catastrophe modeling used netflix os stack provide infrastructure micro-services config server eureka server zuul proxy ribbon hystrix extensively used different spring module like spring boot spring core spring jpa spring rest spring cloud implemented cost calculator engine aal average annual loss sd standard deviation coefficient variation used spring rest implement controller layer used jpa implement service repository layer implemented micro-services using pivotal cloud foundry spring cloud used groovy script test automation used swagger document apis involved converting hive sql query spark transformation using spark rdds python scala developed code importing exporting data hdfs hive using sqoop responsible writing hive query analyzing data hive warehouse using hql wrote complex hive query udfs java python involved defining job flow using oozie scheduling job manage apache hadoop job directed developing hive user defined function java compiling jar adding hdfs executing hive query designed deployed isolated search dc datastax solr cluster developed solr index query span multiple dc involved writing api testing junit testing enhancement bug fixing environment core java java ee jpa spring core spring mvc spring jpa spring rest spring security spring cloud hdfs hive spark apache solr kafka zookeeper xml groovy json javascript angularjs swagger jenkins junit tomcat postman chrome git mysql unix linux well fargo san leandro ca may march role java developer description new device fingerprinting one core application gen fp fraud prevention authentication building intelligent efficient fraud mitigation authentication alerting strategy online cross channel authentication use case responsibility involved requirement gathering architecture design development new device fingerprint project reengineering existing platform microservices based architecture reengineered platform support virtualization involved development using st parameter core java ee multi-threading groovy spring hibernate apache camel web service soap rest maven oracle weblogic installed updated version st parameter external vendor code device fingerprinting implemented different feature related device fingerprinting authc service used apache camel creating route using web service used spring boot bootstrap basic configuration project developed data access layer using orm framework hibernate mapping database scheme object model extensively used different spring module like spring boot spring core spring mvc spring dao spring jms used ready api tool implement functional integation test performed unit testing using junit mockito used splunk tool order analyze log application extensively used groovy functional test used cassandra cql java api retrieve data cassandra table involved writing different ddl dml script functional test managed code different release branching merging using svn used ci tool like jenkins used jira change defect tracking project status tracking system project environment st parameter core java groovy ee hibernate spring spring boot ejb apache camel webservices soap restful amazon xml json ready api log weblogic activemq sql developer mq-series jenkins splunk junit mockito docker oracle db cassandra putty unix linux bank america agoura hill ca mar apr role java developer description project used rmd department bofa rmd issue loan borrower based collateral status issuing loan rmd check whether collateral insured collateral social security number third party agency finally rmd check whether borrower paying tax properly collateral help third party agency responsibility used agile methodology design development project implemented user interface using jsp html cs ajax javascript angularjs implemented tax loan id module using spring framework implemented persistence layer using hibernate jpa created maintained configuration spring application framework ioc implemented business logic using ejb implemented soap service jax-ws interact external system like fidelity converted business customer service restful service good experience continuous integration tool jenkins implemented fuzzy logic using hadoop mapreduce programming implemented aws redshift petabyte-scale data warehouse service cloud converted ejb mdbs spring mdps using spring jms module moved amazon cloud aws handled service node component amazon cloud including handling amazon service outage implemented no-sql db cassandra store poisoned message cql used query cassandra data dev center performed importing data various source cassandra cluster using java python apis sqoop responsible bug fix documentation used linux o development production environment ability learn adapt quickly emerging new technology environment core java ee jsp servlets hadoop big data splunk spring core spring mvc spring data hibernate-jpa ejb webservices soap restful amazon webservice kafka apache camel angularjs ajax xml javascript json cs html log sonor weblogic putty unix linux sql sql developer jenkins sqoop cassandra db mysql oracle db bank america jersey city nj may march title enterprise transaction scanning aml anti money laundering role java developer description anti money laundering aml policy bank america bank america want used process conceal true source fund originally derived criminal activity process funding criminal activity including terrorism aml policy statement intended guard bank america unintentional involvement criminal activity reinforce bank america policy cooperation law enforcement regulatory agency project aml bank america take reasonable step determine true identity customer beneficial ownership bank america product service report identified instance suspicious activity extent applicable foreign domestic law avoid providing support assistance customer seeking deceive law enforcement agency provision false altered incomplete missing information informing customer activity may investigated reported suspicious aml us tool called fircosoft scanning enterprise transaction report suspicious activity system called ets enterprise transaction scanning ets scan wired transaction watch list central repository suspicious individual country city stored ets database responsibilites interaction business user daily basis gathering requirement involving preparing low level design involved development report generation module includes volume statistic report sanction monitoring metric report tps report implemented spring mvc dependency injection di feature along hibernate implemented online list management olm fmm module using spring hibernate created configuration file application using spring framework implemented restful interface search service implemented soap service jax-ws interact external system wrote various sql pl sql query stored procedure data retrieval performed unit testing using junit mockito used linux o development production environment wrote unix shell script used unix environment deploy ear read log environment core java multithreading fircosoft ee jsp servlets spring core spring mvc spring orm spring batch hibernate jpa webservices soap restful anjularjs ajax xml javascript json cs html svn jenkins log weblogic putty unix linux sql sql developer mockito cassandra junit mockito oracle db fidelity investment atlanta ga. feb april title tradeclearing system role java developer tradeclear following functionality centralized clearing listed derivative traded numerous exchange booked large number front office booking system within firm tradeclear consolidates information flow substantially relevant booking system major clearing house client membership right real-time processing listed derivative transaction must balanced cleared day traded give little minute identify mismatch booking correctly clear day business responsibility responsible gathering business requirement review requirement converting detailed design document clarification document developed ui backend application using strut spring hibernate java ejb jsp html dhtml javascript ajax implemented jsp strut tag library java script cs developing user creating generating hibernate class configuration xmls also manage crud operation insert update delete implemented restful interface front-end response used web service get price external business entity developed reusable service using bpel transfer data heterogeneous system using different adapter implemented messaging using tibco em implemented integration bpel worklist oracle ebusiness suite implemented security bpel service using owsm responsible integration different module created junit test case development junit class configured log enable disable logging application involved code review module document test case wrote unix shell script used unix environment deploy application responsible coordination offshore team attending daily weekly scrum meeting update work status issue clarification etc environment core java ee jdeveloper spring hibernate soa bpel weblogic server webservices soap restful jms pl sql sql developer xml html javascript svn maven log junit sybase jboss oracle db sap mainframe cobol mq-series mysql window xp rad unix prudential newark nj may dec role java developer project front application provides single point access teleconsultants legacy system e.g capsil salas opal ob allows user customer service area business verify identification caller maintain history caller contact make enquiry perform alteration customer policy investigate new business review direct debit instruction produce output fax letter etc provide valuation pas call another front user automate call hand-off responsibility day day support activity meeting client sla production ticket design development new change request using java strut jsp ejb implemented integration bpel worklist oracle ebusiness suite responsible sdlc phase change including testing live support environment core java ee oracle fusion bpel jsp eclipse servlet xml strut tile ajax ejb junit jboss websphere application server ant javascript cs log junit html pl sql cv mq-series mainframe cobol rad db hilmar cheese sep feb title custom business application role java developer description project designed developed process online order project consist different module online user registration update user information submit order online payment process order delivery order responsibility involved gathering requirement analysis design development testing entire application involved phase sdlc software development life cycle created uml diagram like class diagram activity diagram using rational rose participated design development application using jsp html cs javascript used eclipse ide tool develop application jira bug issue tracking designed developed presentation layer using ajax rui rich user interface json used conjunction javascript making request jquery used validation developed presentation tier application using strut framework mvc design pattern configured hibernate orm framework persistence layer backend using hibernate.confg.xml designed developed daos accessing pojos updating db table using pojos java collection synchronization etc used hibernate object relation mapping orm database operation mysql developed modified stored procedure dao data access object vo value object class separating data access logic business logic extensively participated application integration spring used integrate strut hibernate implemented interceptor spring hibernate transaction implemented using declarative transaction spring transaction manager capable supporting hibernate configuration issue various framework used identified resolved extract acceptable level performance term efficiency response robustness consumed web service gateway payment third-party developed web service using soa soap wsdl uddi jax-ws jax-rpc programming model used ant build tool building deploying weblogic server ant script used automating build process developed execute unit test test suite product component using junit testing used environment core java ee .x jdk jsp strut .x tile jms spring .x hibernate mysql eclipse websphere application server jboss json ajax jquery web service soap wsdl ant javascript cs log junit html pl sql cv mysql db r-systems international ltd oct july title rms repayment management system role software programmer description rms repayment management system case appears rms final disbursement loan amount case partial disbursement last disbursement case appear rms rms deal customer repays loan i.e salary deduction online transfer checking etc responsibility involved development rms enhancement like rms transaction rms monthly history scheme change maker checker customer service query non provisioning asset screen like specific provision manual marking writeoff manual marking sale asset property value updating collateral value updating ground rent prospect entry developed sub-modules non provisioning asset like sale asset writeoff manual marking ground rent prospect entry involved requirement planning analysis design discussion technical team documentation review requirement design team involved preparing program specification testing script updating developed stored procedure function view also wrote pl sql script used jsf layout view mvc responsible troubleshooting application understanding used web service fetch data synchronously interface integrated spring dao data access using hibernate coordinated team troubleshooting fixing production application issue involved setting process procedure knowledge transfer offshore team environment core java ee xsl xml jsp strut tile spring .x hibernate javascript html cs oracle websphere application server db web service wsdl soap sql pl sql window",
  "statistics": {
    "word_count": 4098,
    "unique_word_count": 1189,
    "avg_word_length": 4.823084431429966,
    "stopword_count": 781
  },
  "metadata": {
    "filename": "Candidate133 EDA.docx",
    "file_size": 60622,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:52.900089",
    "input_filename": "Candidate133 EDA.json"
  }
}