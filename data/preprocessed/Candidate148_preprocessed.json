{
  "id": "Candidate148",
  "raw_text": "Candidate148                                                                                                                                    Ph:  (515) 309-2734\nSr. UI/J2EE Full Stack Developer                                                                           Email:     \n8+ Years of experience in analysis, design, implementation and testing of Object Oriented Applications in Client/Server environments using Java/J2EE and UI technology stacks.\nExperience working with various methodologies based on Agile, Scrum, Waterfall Model, TDD, Iterations.\nProficiency working with frontend frameworks such as jQuery, AJAX, JavaScript, Node.js, ExpressJS, ReactJS, BackBoneJS, AngularJS, Angular2. Also used Grunt js, Gulp Server, Yeoman Generator for AngularJS.\nExpertise in design and development of various web and enterprise-level applications using Java/J2EE technologies.\nExperience in developing entire frontend and backend modules using Python on Django Web Framework on MySQL.\nExperience with Java EE design patterns such as MVC, Singleton, Session Facade, DAO, DTO.\nStrong experience in JSF, Struts and Spring Framework modules such as Spring MVC, IOC, AOP and Spring JDBC, Spring JTA, Spring IO, Spring Boot with Thymeleaf and Spring Security Framework for User Access Management.\nStrong understanding of Microservice patterns – Hystrix, Aggregator, Proxy chaining.\nDeveloped applications using latest technologies like EJB3.0, Spring Boot, Hibernate3.2/4.x, and REST based Web services (axis2.0, JAX WS 2.0), Rule Engines (Drools4.1, ILOG), XML API and tools.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database and using HQL, Named Queries, Transactions, Cache, Criteria, Projections.\nExperience in working with Service Oriented Architecture, that includes (UDDI) lookups & (WSDL) using SOAP.\nAnalyzed, developed and implemented various Design patterns (Session Façade, Value Object, DAO, DTO, Command, Singleton, Factory, Adapter, MVC, Service Locator etc.) using J2EE technologies.\nExperience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic and JBoss Servers.\nExperienced in writing complex SQL queries, procedures, Triggers and Stored Procedures in various databases such as Oracle, DB2 MySQL and Sybase. Also, extensively worked on NoSQL Databases like MongoDB and Cassandra. \nExperienced in integration, deployment and building using tools like ANT, Maven, Jenkins, Kubernetes & Docker.\nExperience in debugging and logging using the log framework - log4j and analysis and reporting with Splunk.\nExperience in JUnit frame work with Mockito and Power Mock, SpringJunitRunner.\nExperienced in development using IDE's such as Eclipse, Rational Application Developer (RAD), NetBeans, IntelliJ. \nProficient in using AWS. Extensive experience focusing on services like EC2, Elastic Beanstalk, Cloud Watch, Cloud Front, Cloud Formation, IAM, S3, RDS, ElastiCache, SNS, SQS, Dynamo DB, Lambda.\nGood Knowledge in Apache Active MQ Series with Apache Camel, JMS, Kafka messaging queues. \nExperience in using different version controlling/tracking systems Subversion, CVS, GIT, and Rational Clear Case.\n \tClient: Express Scripts, Franklin Lakes, New                                                                                              Dec 2016 – Till date\tRole: Sr. Java/J2EE Developer\nProject Description: \nThe project deals with the capability to refill prescriptions on-line check an order status, and research drug and health information and enables express to have multiple billers in place. Focuses especially on the cost effective and appropriate delivery of prescription medications to the market and assists its customers to moderate the cost and enhanced the quality of prescription drug benefits to the members nation-wide.\nResponsibilities:\nFollowed Agile (SCRUM) methodologies and developed Technical design documents. \nExtensively worked on modern MEAN Stack- MongoDB, Express.JS, AngularJS, and Node.JS.\nAdded dynamic functionality to the application by implementing jQuery, Node.js. Modularized front-end CSS and JavaScript code with SASS. Built a real-time mouse/click user analytics web service with Node.js \nDeveloped various screens for the front end using Angular2 and used various predefined components from NPM (Node Package Manager). Used Node Cron package to schedule periodically executable jobs.\nUsed various features in Angular2 like data binding, routing, custom filters, custom directives to meet various customized requirements. Used the http services in Angular2 to make REST API calls and exchange data in JSON.\nUsed Java version 8 Lambda expressions, Streams, Predicates, parallel operations etc. on collections.\nUsed Python scripts to update content in the database and manipulate files. Developed Python OO Design code for manufacturing quality, monitoring, logging, and debugging code optimization.\nWorked with Microservices related frameworks Spring Ribbon, Eureka for client-side load balancer and network discovery. Also, Integrated with Spring Cloud Netflix's components like Eureka (Service Discovery), Hystrix (Circuit Breaker), Ribbon (Client Side Load Balancing) and Zuul Proxy.\nSpring Boot Microservices were developed with microservice architecture using REST and Apache Kafka.\nCreated REST based web services by establishing links using HATEOAS from Spring based application.\nImplemented Hibernate Template to use of HQL, Named Parameters, Named Queries, validations & interfaces like Expression, Query & Criteria. Implemented Hibernate/JPA for data persistence.\nUsed ELK for reporting, monitoring logging, debugging and error tracing. Worked on purging logs on Elastic Search DB and Kibana UI. Also involved in trouble-shooting logs using Logstash and Kibana.\nProvided dev support for IBM’s API Connect and DataPower appliances in a multi-tiered environment.\nWorked on Rest Web services as well as Node Rest framework for backend services, used Mongo DB\n(NoSQL) for database services. Created/managed Mongo DB/NoSQL collections.\nResponsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring. Responsible for migrating existing modules in IBM MQ to Kafka.\nBuilt Docker Images and have run them on Docker container. Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS.\nUsed Maven to configure, build and deploy the Modules. Also, integrated these scripts with Jenkins.\nInvolved in evolution of test automation framework based on Selenium, TestNG and Cucumber.\nUsed Selenium WebDriver for automating functional testing & to identify various critical points applications.\nExecuted Selenium test scripts on different browsers and checked for compatibility.\nWorked on GIT as Version Control System to track various code conflicts of the project. \nEnvironment: Java 8.0, Spring 4, Hibernate 4.2, Spring batch/security/JTA/Boot, JPA, JavaScript, NodeJS, Angular2, HTML5, CSS, WAS 8.5, MicroServices, RAD 8.0, Oracle 11g, Maven, log4j, Junit, XML, Web Services, Kafka, Splunk, GIT.\n  Client: John Deere, Des Moines, IA             \t\t\t\t\t\t         Oct 2014 – Nov 2016\n  Role: Sr. Java/J2EE & Web Developer\n  Project Description:\n Deal manager is an interface for all the Agricultural products offers for its enterprise clients. This application is used to sell products and to keep every record of it, Deal Manager is responsible for establishing a platform for enrolment of clients, selling products, billing and supporting. It will also serve as a repository of previous sales, clients, products and requests.\n    Responsibilities: \nWorked on Agile Scrum methodology and involved in stand-up meetings to monitor the progress.\nDeveloped Web application using JavaScript, MVC and OOP client-side validation using JavaScript.\nUsed ReactJS to build the UI components, developed filters to display different dimension of data and font size modifiers. Integrated Redux data store allowing React components to have access to data Implemented the Model View Controller (MVC) framework and spring.\nDevelop various screens for the front end using React JS and used various predefined components from NPM (Node Package Manager) and React Redux library.\nResponsible for the technical direction and implementation of the Spring Batch framework according to   contemporary design with spring security. Implemented various features of spring framework such as   Dependency Injection, IOC Containers, and Spring integration with Hibernate.\nImplemented application architecture of the System based on Spring MVC and J2EE specifications.\nImplemented application security including User Management, LDAP authentication,  authorization.\nCreated request for Proposal microservice to provide RESTful API with Spring MVC. \nImplemented contemporary design based on Spring Batch system to process over heavy transactions.\nWorked on spring boot, Spring Restful template to develop Application level MicroServices.\nUsed Eclipse-Spring Tool Suite (STS) for Microservices with Spring Boot & deployed into AWS lambda.\nHibernate DAO classes were developed to retrieve & save data using Spring framework manager classes.\nDesigned, built and deployed a multitude application utilizing all the AWS stack (Including EC2, R53, S3, RDS, DynamoDB, SQS, IAM, CloudFormation and lambda functions) focusing on high-availability.\nManaging multiple AWS instances, assigning the security groups, Elastic Load Balancer and AMIs. \nDeveloped Applications using Rule Engines, Drools and ILOG to validate the business User Roles.\nImplemented service layer on the top of Cassandra using Core Java, Data Stax API and Restful API.\nDeveloped DAO layer using Cassandra and expertise in CQL (Cassandra Query Language), for retrieving the data present in Cassandra cluster by running queries in CQL.\nDeveloped internal Log Delivery System, utilizing various Apache products, Kafka, Storm, and Tomcat.\nWorked with Apache Tomcat 8 and NodeJs servers to deploy/configure Java API’s and frontend modules.\nUsed PL/SQL stored procedures for apps that needed to execute as part of a scheduling mechanisms.\nCreation of database objects like tables, stored procedures using Oracle tools like TOAD. Expertise in developing and enhancing Oracle forms and Oracle reports.\nApache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Micro-services.\nDeveloped CI/CD system with Jenkins on Kubernetes container environment utilizing Kubernetes.\nUsed Maven, Nexus and Jenkins to automate the build and deploy process. Tested Service and data access tier using JUnit. Used GIT as version management, JIRA for defect management system.\nEnvironment: Java 7.0, Spring 4, Hibernate 4.2, Spring batch/security/JTA/Boot, JPA, JavaScript, NodeJS, ReactJS, HTML5, CSS, Eclipse, Cassandra, Oracle 11g, SOAP, Maven, log4j, Junit, XML, ILog JRules 5.0, GIT.\nClient: Liberty Mutual Insurance, Warrenville, IL \t\t\t\t              \t    July 2013-    Sept 2014\n  Role: Sr. Java/J2EE & Web Developer\nProject Description: \nLiberty Mutual Insurance is an American diversified global insurer, and the second-largest property and casualty insurer in the United States. Ecommerce application provides services such as Auto Insurance and home insurance. The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies, payments and reports. The project includes integration with different third-party components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online.\nResponsibilities:  \nInvolved in full project management life cycle from development to integration, testing and release. \nDefined strategic initiatives on CI/CD model with Extreme programming (XP), and build automation, in an AGILE development environment to help, respond quickly to business needs and deliver Quality products.\nDeveloped Interactive web pages using AngularJS, HTML, CSS and JavaScript. Developed UI components using AngularJS features like dependency Injection, Models, data binding and controllers.\nImplemented AngularJS client-side form validation, format view results using various controls and filters.\nCreated multiple views using layout template and AngularJS ngRoute and developed test cases for AngularJS using Karma and Grunt.\nAll the functionality is implemented using Spring IO , Thymeleaf and Hibernate ORM.\nImplemented Java EE components using Spring MVC, Spring IOC, Spring transactions & Spring security modules. Developed strategy for integrating internal security model into new projects with Spring Security.\nImplemented the Microservices to base on RESTful API utilizing Spring Boot and Spring MVC by developing RESTFUL web services using Spring RESTFUL template.\nWorked with JAXB, SAXP and XML Schema for exporting data into XML format and importing data from XML format to DB and JAXB in the web service's request response data marshalling & unmarshalling.\nExtensively used Java server Faces (JSF) Navigation rules and JSF tags for enhanced user Interface. \nUsed log4j for logging errors in the application and used JUnit for unit testing of the application.\nInvolved in the development of project back-end layer using by most of core java features such as Interfaces and Exceptions. Used java Collections API extensively such as Lists, Sets and Maps. \nMultithreading was used to process data in chunks to improve performance. \nImplemented ExecutorService in the application, which can execute tasks in the background like a thread pool.\nIncreased database performance by utilizing MySQL config changes and multiple instances.\nMySQL processes and queries optimization. Exported & Imported database 10g objects from dev to production.\nInvolved in creating test cases using JUnit strictly following Test Driven Development(TDD) methodology. \nUsed JUnit, Mockito and Power Mocks framework for unit testing of application and implemented Test Driven Development (TDD) methodology.\nUsed Java Messaging Services (JMS) for reliable and asynchronous exchange of important payment status report information and other critical information. \nWorked on Selenium Data Driven framework and integrating it with Maven [Build Management Tool], TestNG [Unit Testing tool] and Jenkins [Continuous Integration Tool].\nImplemented Continuous Integration of automation framework using tools like Jenkins, Hudson.\nExtensive use of SVN for version controlling and source code management.\nEnvironment: Java 7.0, Spring 4, Hibernate 4.2, Spring batch, Spring quartz, Spring security, Spring JTA, Spring Boot, JPA, Java Scripts, AngularJS, HTML 4.0, CSS, JMS, JAXP (SAX & DOM), WebSphere Application Server 8.5, Eclipse, MySQL, SOAP, RUP, Maven, log4j, Junit, XML, Web Services, ILog JRules 5.0, Splunk, GIT.\nClient: Flagstar Bank, Troy, MI  \t\t\t\t\t                              \t              \t  Sept 2012 – June 2013\t\nRole: Sr. Java/J2EE Consultant \nProject Description: Participated in the development of a paperless web-based document tracking and management system for department specializing in home mortgage loans. Responsible for both front end and back end development. HTML5, JavaScript/jQuery, and Java Server Pages were used on the front end. Implemented backend rules and logic using Java/J2EE and Spring Tools. SCRUM (Agile Development) was the methodology used for the development of this product. Eclipse IDE was used for development.\nResponsibilities:  \nInvolved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project was developed using Agile based SCRUM Methodology. \nExtensively used Java Scripts to enforce client-side validations and used jQuery for Ajax processing. \nImplemented Struts Framework and Hibernate in the latest version of the Application. Involved in coding for the presentation layer using Struts and JavaScript. Implemented AJAX base applications using jQuery.\nUsed jQuery, JavaScript libraries for developing the JavaScript validations and widgets. \nUsed EJB Stateless/Stateful session beans to implement business logic, session handling, and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server. \nInvolved in development of various webservices using IBM Websphere to interact among Applications. \nWrote various select/update/insert SQL queries and stored procedures for Sql Server. \nInvolved in unit testing, troubleshooting and debugging. Modifying existing programs with enhancements. \nInvolved in fixing bugs the bugs or defects in the application. \nDeveloped Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB2. Developed the UNIX shell scripts to automate jobs.\nWorked on Linux environment for deploying the application, running scripts for jobs.\n  Environment: Jakarta Struts Framework 2.0, Core Java, Hibernate 3.0, EJB, Web Services, CSS, eclipse Helios, CVS, WebSphere Application Server 7.0, JUnit, UNIX, JavaScript, Servlets, JSP, JDBC, jQuery, DB2.\nClient: Best Buy, Richfield, MN \t    \t\t\t\t\t\t\t\tNov 2009 – Aug 2012\nRole: Java/J2EE Developer \nProject Description: \nExpress lane is an E-Commerce application designed for the agents that provides complete set of order services and information. Agents can perform sale of items, return of items, and price override of items, apply promotions of items, perform catalog item look up.\nResponsibilities: \nDesigned Use Case and Sequence Diagrams according to UML standard using Rational Rose. \nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the entire application using Struts Framework. Performed client-side validations using JavaScript and server-side validations using in built Struts Validation Framework. \nUsed different UI technologies JSP, HTML, CSS, JavaScript for developing the GUI of the application. \nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from DB. \nTransformed, Navigated and Formatted XML documents using XSL, XSLT. \nUsed JMS for asynchronous exchange of message by applications on different platforms. \nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. \nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. \nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL. \nWorked on Linux environment for jobs scheduling for inbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing. \n Environment: Struts 2.0 Hibernate 3.0, JSP, RAD, JMS, CVS, JavaScript, XSL, XSLT, Servlets 2.5, and Web Sphere Application Server6.1, Oracle 10g.\n  Client:  Barclays\t\t\t\t\t\t                            \t\tOct 2008 – Oct 2009                                   \n  Role: Java Programmer \n  Project Description:\n  This project involves developing a J2EE based framework to support dynamic report creation from various distributed databases. The framework supports dynamic PDF report generation using iText, an open source PDF generation library. The framework facilitates new report formats and databases by using xml configuration files. ​\n  Responsibilities: \nDeveloped presentation screens by using JSP, HTML and JavaScript. \nDeveloped Session beans for functionality as per the requirement. \nPrepared Unit test cases for existing functionality as per the requirement and execute the same. \nInvolved in the Integration testing support and involved in bug fixing. \nResponsible for writing detail design documents and class diagrams and sequence diagrams. \nUsed various Design patterns like MVC, DAO pattern, and singleton to achieve clean separation of layers. \nCreated Servlets which route submittals to appropriate Enterprise Java Bean (EJB) components and render retrieved information. Developed Session Beans to process requests from the Developed Custom tag libraries to separate presentation and processing logic. \nUsed Hibernate API to perform database operations\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs) \nInvolved in developing SQL queries, stored procedures, and functions. \nInvolved in tracking and resolving Production issues. \nUsed Lo4j debugging tool to monitor the Error Logs. \nEnvironment: Java, Servlets 2.5, JSP 2.1, spring, JDBC, JavaScript, HTML, Oracle, PL/SQL, SVN, Hibernate 3.0 and Weblogic 7.0.",
  "cleaned_text": "Candidate Ph Sr. UI J EE Full Stack Developer Email Years of experience in analysis, design, implementation and testing of Object Oriented Applications in Client Server environments using Java J EE and UI technology stacks. Experience working with various methodologies based on Agile, Scrum, Waterfall Model, TDD, Iterations. Proficiency working with frontend frameworks such as jQuery, AJAX, JavaScript, Node.js, ExpressJS, ReactJS, BackBoneJS, AngularJS, Angular . Also used Grunt js, Gulp Server, Yeoman Generator for AngularJS. Expertise in design and development of various web and enterprise-level applications using Java J EE technologies. Experience in developing entire frontend and backend modules using Python on Django Web Framework on MySQL. Experience with Java EE design patterns such as MVC, Singleton, Session Facade, DAO, DTO. Strong experience in JSF, Struts and Spring Framework modules such as Spring MVC, IOC, AOP and Spring JDBC, Spring JTA, Spring IO, Spring Boot with Thymeleaf and Spring Security Framework for User Access Management. Strong understanding of Microservice patterns Hystrix, Aggregator, Proxy chaining. Developed applications using latest technologies like EJB . , Spring Boot, Hibernate . .x, and REST based Web services axis . , JAX WS . , Rule Engines Drools . , ILOG , XML API and tools. Experienced in Middleware persistence framework like Hibernate JPA for mapping Java classes with database and using HQL, Named Queries, Transactions, Cache, Criteria, Projections. Experience in working with Service Oriented Architecture, that includes UDDI lookups & WSDL using SOAP. Analyzed, developed and implemented various Design patterns Session Facade, Value Object, DAO, DTO, Command, Singleton, Factory, Adapter, MVC, Service Locator etc. using J EE technologies. Experience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic and JBoss Servers. Experienced in writing complex SQL queries, procedures, Triggers and Stored Procedures in various databases such as Oracle, DB MySQL and Sybase. Also, extensively worked on NoSQL Databases like MongoDB and Cassandra. Experienced in integration, deployment and building using tools like ANT, Maven, Jenkins, Kubernetes & Docker. Experience in debugging and logging using the log framework - log j and analysis and reporting with Splunk. Experience in JUnit frame work with Mockito and Power Mock, SpringJunitRunner. Experienced in development using IDE s such as Eclipse, Rational Application Developer RAD , NetBeans, IntelliJ. Proficient in using AWS. Extensive experience focusing on services like EC , Elastic Beanstalk, Cloud Watch, Cloud Front, Cloud Formation, IAM, S , RDS, ElastiCache, SNS, SQS, Dynamo DB, Lambda. Good Knowledge in Apache Active MQ Series with Apache Camel, JMS, Kafka messaging queues. Experience in using different version controlling tracking systems Subversion, CVS, GIT, and Rational Clear Case. Client Express Scripts, Franklin Lakes, New Dec Till date Role Sr. Java J EE Developer Project Description The project deals with the capability to refill prescriptions on-line check an order status, and research drug and health information and enables express to have multiple billers in place. Focuses especially on the cost effective and appropriate delivery of prescription medications to the market and assists its customers to moderate the cost and enhanced the quality of prescription drug benefits to the members nation-wide. Responsibilities Followed Agile SCRUM methodologies and developed Technical design documents. Extensively worked on modern MEAN Stack- MongoDB, Express.JS, AngularJS, and Node.JS. Added dynamic functionality to the application by implementing jQuery, Node.js. Modularized front-end CSS and JavaScript code with SASS. Built a real-time mouse click user analytics web service with Node.js Developed various screens for the front end using Angular and used various predefined components from NPM Node Package Manager . Used Node Cron package to schedule periodically executable jobs. Used various features in Angular like data binding, routing, custom filters, custom directives to meet various customized requirements. Used the http services in Angular to make REST API calls and exchange data in JSON. Used Java version Lambda expressions, Streams, Predicates, parallel operations etc. on collections. Used Python scripts to update content in the database and manipulate files. Developed Python OO Design code for manufacturing quality, monitoring, logging, and debugging code optimization. Worked with Microservices related frameworks Spring Ribbon, Eureka for client-side load balancer and network discovery. Also, Integrated with Spring Cloud Netflix s components like Eureka Service Discovery , Hystrix Circuit Breaker , Ribbon Client Side Load Balancing and Zuul Proxy. Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka. Created REST based web services by establishing links using HATEOAS from Spring based application. Implemented Hibernate Template to use of HQL, Named Parameters, Named Queries, validations & interfaces like Expression, Query & Criteria. Implemented Hibernate JPA for data persistence. Used ELK for reporting, monitoring logging, debugging and error tracing. Worked on purging logs on Elastic Search DB and Kibana UI. Also involved in trouble-shooting logs using Logstash and Kibana. Provided dev support for IBMs API Connect and DataPower appliances in a multi-tiered environment. Worked on Rest Web services as well as Node Rest framework for backend services, used Mongo DB NoSQL for database services. Created managed Mongo DB NoSQL collections. Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring. Responsible for migrating existing modules in IBM MQ to Kafka. Built Docker Images and have run them on Docker container. Deployed Docker contained Spring boot micro services in to AWS EC container service using AWS admin console and used lambda to run applications in AWS. Used Maven to configure, build and deploy the Modules. Also, integrated these scripts with Jenkins. Involved in evolution of test automation framework based on Selenium, TestNG and Cucumber. Used Selenium WebDriver for automating functional testing & to identify various critical points applications. Executed Selenium test scripts on different browsers and checked for compatibility. Worked on GIT as Version Control System to track various code conflicts of the project. Environment Java . , Spring , Hibernate . , Spring batch security JTA Boot, JPA, JavaScript, NodeJS, Angular , HTML , CSS, WAS . , MicroServices, RAD . , Oracle g, Maven, log j, Junit, XML, Web Services, Kafka, Splunk, GIT. Client John Deere, Des Moines, IA Oct Nov Role Sr. Java J EE & Web Developer Project Description Deal manager is an interface for all the Agricultural products offers for its enterprise clients. This application is used to sell products and to keep every record of it, Deal Manager is responsible for establishing a platform for enrolment of clients, selling products, billing and supporting. It will also serve as a repository of previous sales, clients, products and requests. Responsibilities Worked on Agile Scrum methodology and involved in stand-up meetings to monitor the progress. Developed Web application using JavaScript, MVC and OOP client-side validation using JavaScript. Used ReactJS to build the UI components, developed filters to display different dimension of data and font size modifiers. Integrated Redux data store allowing React components to have access to data Implemented the Model View Controller MVC framework and spring. Develop various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and React Redux library. Responsible for the technical direction and implementation of the Spring Batch framework according to contemporary design with spring security. Implemented various features of spring framework such as Dependency Injection, IOC Containers, and Spring integration with Hibernate. Implemented application architecture of the System based on Spring MVC and J EE specifications. Implemented application security including User Management, LDAP authentication, authorization. Created request for Proposal microservice to provide RESTful API with Spring MVC. Implemented contemporary design based on Spring Batch system to process over heavy transactions. Worked on spring boot, Spring Restful template to develop Application level MicroServices. Used Eclipse-Spring Tool Suite STS for Microservices with Spring Boot & deployed into AWS lambda. Hibernate DAO classes were developed to retrieve & save data using Spring framework manager classes. Designed, built and deployed a multitude application utilizing all the AWS stack Including EC , R , S , RDS, DynamoDB, SQS, IAM, CloudFormation and lambda functions focusing on high-availability. Managing multiple AWS instances, assigning the security groups, Elastic Load Balancer and AMIs. Developed Applications using Rule Engines, Drools and ILOG to validate the business User Roles. Implemented service layer on the top of Cassandra using Core Java, Data Stax API and Restful API. Developed DAO layer using Cassandra and expertise in CQL Cassandra Query Language , for retrieving the data present in Cassandra cluster by running queries in CQL. Developed internal Log Delivery System, utilizing various Apache products, Kafka, Storm, and Tomcat. Worked with Apache Tomcat and NodeJs servers to deploy configure Java APIs and frontend modules. Used PL SQL stored procedures for apps that needed to execute as part of a scheduling mechanisms. Creation of database objects like tables, stored procedures using Oracle tools like TOAD. Expertise in developing and enhancing Oracle forms and Oracle reports. Apache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Micro-services. Developed CI CD system with Jenkins on Kubernetes container environment utilizing Kubernetes. Used Maven, Nexus and Jenkins to automate the build and deploy process. Tested Service and data access tier using JUnit. Used GIT as version management, JIRA for defect management system. Environment Java . , Spring , Hibernate . , Spring batch security JTA Boot, JPA, JavaScript, NodeJS, ReactJS, HTML , CSS, Eclipse, Cassandra, Oracle g, SOAP, Maven, log j, Junit, XML, ILog JRules . , GIT. Client Liberty Mutual Insurance, Warrenville, IL July - Sept Role Sr. Java J EE & Web Developer Project Description Liberty Mutual Insurance is an American diversified global insurer, and the second-largest property and casualty insurer in the United States. Ecommerce application provides services such as Auto Insurance and home insurance. The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies, payments and reports. The project includes integration with different third-party components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online. Responsibilities Involved in full project management life cycle from development to integration, testing and release. Defined strategic initiatives on CI CD model with Extreme programming XP , and build automation, in an AGILE development environment to help, respond quickly to business needs and deliver Quality products. Developed Interactive web pages using AngularJS, HTML, CSS and JavaScript. Developed UI components using AngularJS features like dependency Injection, Models, data binding and controllers. Implemented AngularJS client-side form validation, format view results using various controls and filters. Created multiple views using layout template and AngularJS ngRoute and developed test cases for AngularJS using Karma and Grunt. All the functionality is implemented using Spring IO , Thymeleaf and Hibernate ORM. Implemented Java EE components using Spring MVC, Spring IOC, Spring transactions & Spring security modules. Developed strategy for integrating internal security model into new projects with Spring Security. Implemented the Microservices to base on RESTful API utilizing Spring Boot and Spring MVC by developing RESTFUL web services using Spring RESTFUL template. Worked with JAXB, SAXP and XML Schema for exporting data into XML format and importing data from XML format to DB and JAXB in the web service s request response data marshalling & unmarshalling. Extensively used Java server Faces JSF Navigation rules and JSF tags for enhanced user Interface. Used log j for logging errors in the application and used JUnit for unit testing of the application. Involved in the development of project back-end layer using by most of core java features such as Interfaces and Exceptions. Used java Collections API extensively such as Lists, Sets and Maps. Multithreading was used to process data in chunks to improve performance. Implemented ExecutorService in the application, which can execute tasks in the background like a thread pool. Increased database performance by utilizing MySQL config changes and multiple instances. MySQL processes and queries optimization. Exported & Imported database g objects from dev to production. Involved in creating test cases using JUnit strictly following Test Driven Development TDD methodology. Used JUnit, Mockito and Power Mocks framework for unit testing of application and implemented Test Driven Development TDD methodology. Used Java Messaging Services JMS for reliable and asynchronous exchange of important payment status report information and other critical information. Worked on Selenium Data Driven framework and integrating it with Maven Build Management Tool , TestNG Unit Testing tool and Jenkins Continuous Integration Tool . Implemented Continuous Integration of automation framework using tools like Jenkins, Hudson. Extensive use of SVN for version controlling and source code management. Environment Java . , Spring , Hibernate . , Spring batch, Spring quartz, Spring security, Spring JTA, Spring Boot, JPA, Java Scripts, AngularJS, HTML . , CSS, JMS, JAXP SAX & DOM , WebSphere Application Server . , Eclipse, MySQL, SOAP, RUP, Maven, log j, Junit, XML, Web Services, ILog JRules . , Splunk, GIT. Client Flagstar Bank, Troy, MI Sept June Role Sr. Java J EE Consultant Project Description Participated in the development of a paperless web-based document tracking and management system for department specializing in home mortgage loans. Responsible for both front end and back end development. HTML , JavaScript jQuery, and Java Server Pages were used on the front end. Implemented backend rules and logic using Java J EE and Spring Tools. SCRUM Agile Development was the methodology used for the development of this product. Eclipse IDE was used for development. Responsibilities Involved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project was developed using Agile based SCRUM Methodology. Extensively used Java Scripts to enforce client-side validations and used jQuery for Ajax processing. Implemented Struts Framework and Hibernate in the latest version of the Application. Involved in coding for the presentation layer using Struts and JavaScript. Implemented AJAX base applications using jQuery. Used jQuery, JavaScript libraries for developing the JavaScript validations and widgets. Used EJB Stateless Stateful session beans to implement business logic, session handling, and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server. Involved in development of various webservices using IBM Websphere to interact among Applications. Wrote various select update insert SQL queries and stored procedures for Sql Server. Involved in unit testing, troubleshooting and debugging. Modifying existing programs with enhancements. Involved in fixing bugs the bugs or defects in the application. Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB . Developed the UNIX shell scripts to automate jobs. Worked on Linux environment for deploying the application, running scripts for jobs. Environment Jakarta Struts Framework . , Core Java, Hibernate . , EJB, Web Services, CSS, eclipse Helios, CVS, WebSphere Application Server . , JUnit, UNIX, JavaScript, Servlets, JSP, JDBC, jQuery, DB . Client Best Buy, Richfield, MN Nov Aug Role Java J EE Developer Project Description Express lane is an E-Commerce application designed for the agents that provides complete set of order services and information. Agents can perform sale of items, return of items, and price override of items, apply promotions of items, perform catalog item look up. Responsibilities Designed Use Case and Sequence Diagrams according to UML standard using Rational Rose. Implemented Model View Controller MVC- architecture and developed Form classes, Action Classes for the entire application using Struts Framework. Performed client-side validations using JavaScript and server-side validations using in built Struts Validation Framework. Used different UI technologies JSP, HTML, CSS, JavaScript for developing the GUI of the application. Implemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from DB. Transformed, Navigated and Formatted XML documents using XSL, XSLT. Used JMS for asynchronous exchange of message by applications on different platforms. Developed the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. Involved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. Involved in developing SQL queries, stored procedures, and functions. Creation of database objects like tables, views using oracle tools like Toad, and SQL plus. Involved in writing Stored Procedure in using PL SQL. Worked on Linux environment for jobs scheduling for inbound data on monthly basis. Used JUnit Testing Framework for performing Unit testing. Environment Struts . Hibernate . , JSP, RAD, JMS, CVS, JavaScript, XSL, XSLT, Servlets . , and Web Sphere Application Server . , Oracle g. Client Barclays Oct Oct Role Java Programmer Project Description This project involves developing a J EE based framework to support dynamic report creation from various distributed databases. The framework supports dynamic PDF report generation using iText, an open source PDF generation library. The framework facilitates new report formats and databases by using xml configuration files. Responsibilities Developed presentation screens by using JSP, HTML and JavaScript. Developed Session beans for functionality as per the requirement. Prepared Unit test cases for existing functionality as per the requirement and execute the same. Involved in the Integration testing support and involved in bug fixing. Responsible for writing detail design documents and class diagrams and sequence diagrams. Used various Design patterns like MVC, DAO pattern, and singleton to achieve clean separation of layers. Created Servlets which route submittals to appropriate Enterprise Java Bean EJB components and render retrieved information. Developed Session Beans to process requests from the Developed Custom tag libraries to separate presentation and processing logic. Used Hibernate API to perform database operations Worked on Hibernate persistence tier. This involves developing mapping files and Hibernate POJOs DAOs Involved in developing SQL queries, stored procedures, and functions. Involved in tracking and resolving Production issues. Used Lo j debugging tool to monitor the Error Logs. Environment Java, Servlets . , JSP . , spring, JDBC, JavaScript, HTML, Oracle, PL SQL, SVN, Hibernate . and Weblogic . .",
  "preprocessed_text": "candidate ph sr. ui ee full stack developer year experience analysis design implementation testing object oriented application client server environment using java ee ui technology stack experience working various methodology based agile scrum waterfall model tdd iteration proficiency working frontend framework jquery ajax javascript node.js expressjs reactjs backbonejs angularjs angular also used grunt j gulp server yeoman generator angularjs expertise design development various web enterprise-level application using java ee technology experience developing entire frontend backend module using python django web framework mysql experience java ee design pattern mvc singleton session facade dao dto strong experience jsf strut spring framework module spring mvc ioc aop spring jdbc spring jta spring io spring boot thymeleaf spring security framework user access management strong understanding microservice pattern hystrix aggregator proxy chaining developed application using latest technology like ejb spring boot hibernate .x rest based web service axis jax w rule engine drool ilog xml api tool experienced middleware persistence framework like hibernate jpa mapping java class database using hql named query transaction cache criterion projection experience working service oriented architecture includes uddi lookup wsdl using soap analyzed developed implemented various design pattern session facade value object dao dto command singleton factory adapter mvc service locator etc using ee technology experience configuring deploying application tomcat websphere weblogic jboss server experienced writing complex sql query procedure trigger stored procedure various database oracle db mysql sybase also extensively worked nosql database like mongodb cassandra experienced integration deployment building using tool like ant maven jenkins kubernetes docker experience debugging logging using log framework log analysis reporting splunk experience junit frame work mockito power mock springjunitrunner experienced development using ide eclipse rational application developer rad netbeans intellij proficient using aws extensive experience focusing service like ec elastic beanstalk cloud watch cloud front cloud formation iam rds elasticache sn sqs dynamo db lambda good knowledge apache active mq series apache camel jms kafka messaging queue experience using different version controlling tracking system subversion cv git rational clear case client express script franklin lake new dec till role sr. java ee developer project description project deal capability refill prescription on-line check order status research drug health information enables express multiple billers place focus especially cost effective appropriate delivery prescription medication market assist customer moderate cost enhanced quality prescription drug benefit member nation-wide responsibility followed agile scrum methodology developed technical design document extensively worked modern mean stack- mongodb express.js angularjs node.js added dynamic functionality application implementing jquery node.js modularized front-end cs javascript code sas built real-time mouse click user analytics web service node.js developed various screen front end using angular used various predefined component npm node package manager used node cron package schedule periodically executable job used various feature angular like data binding routing custom filter custom directive meet various customized requirement used service angular make rest api call exchange data json used java version lambda expression stream predicate parallel operation etc collection used python script update content database manipulate file developed python oo design code manufacturing quality monitoring logging debugging code optimization worked microservices related framework spring ribbon eureka client-side load balancer network discovery also integrated spring cloud netflix component like eureka service discovery hystrix circuit breaker ribbon client side load balancing zuul proxy spring boot microservices developed microservice architecture using rest apache kafka created rest based web service establishing link using hateoas spring based application implemented hibernate template use hql named parameter named query validation interface like expression query criterion implemented hibernate jpa data persistence used elk reporting monitoring logging debugging error tracing worked purging log elastic search db kibana ui also involved trouble-shooting log using logstash kibana provided dev support ibms api connect datapower appliance multi-tiered environment worked rest web service well node rest framework backend service used mongo db nosql database service created managed mongo db nosql collection responsible configuring kafka consumer producer metric visualize kafka system performance monitoring responsible migrating existing module ibm mq kafka built docker image run docker container deployed docker contained spring boot micro service aws ec container service using aws admin console used lambda run application aws used maven configure build deploy module also integrated script jenkins involved evolution test automation framework based selenium testng cucumber used selenium webdriver automating functional testing identify various critical point application executed selenium test script different browser checked compatibility worked git version control system track various code conflict project environment java spring hibernate spring batch security jta boot jpa javascript nodejs angular html cs microservices rad oracle maven log junit xml web service kafka splunk git client john deere de moines ia oct nov role sr. java ee web developer project description deal manager interface agricultural product offer enterprise client application used sell product keep every record deal manager responsible establishing platform enrolment client selling product billing supporting also serve repository previous sale client product request responsibility worked agile scrum methodology involved stand-up meeting monitor progress developed web application using javascript mvc oop client-side validation using javascript used reactjs build ui component developed filter display different dimension data font size modifier integrated redux data store allowing react component access data implemented model view controller mvc framework spring develop various screen front end using react j used various predefined component npm node package manager react redux library responsible technical direction implementation spring batch framework according contemporary design spring security implemented various feature spring framework dependency injection ioc container spring integration hibernate implemented application architecture system based spring mvc ee specification implemented application security including user management ldap authentication authorization created proposal microservice provide restful api spring mvc implemented contemporary design based spring batch system process heavy transaction worked spring boot spring restful template develop application level microservices used eclipse-spring tool suite sts microservices spring boot deployed aws lambda hibernate dao class developed retrieve save data using spring framework manager class designed built deployed multitude application utilizing aws stack including ec rds dynamodb sqs iam cloudformation lambda function focusing high-availability managing multiple aws instance assigning security group elastic load balancer amis developed application using rule engine drool ilog validate business user role implemented service layer top cassandra using core java data stax api restful api developed dao layer using cassandra expertise cql cassandra query language retrieving data present cassandra cluster running query cql developed internal log delivery system utilizing various apache product kafka storm tomcat worked apache tomcat nodejs server deploy configure java apis frontend module used pl sql stored procedure apps needed execute part scheduling mechanism creation database object like table stored procedure using oracle tool like toad expertise developing enhancing oracle form oracle report apache mesos kubernetes used best ecosystem deploy manage micro-services developed ci cd system jenkins kubernetes container environment utilizing kubernetes used maven nexus jenkins automate build deploy process tested service data access tier using junit used git version management jira defect management system environment java spring hibernate spring batch security jta boot jpa javascript nodejs reactjs html cs eclipse cassandra oracle soap maven log junit xml ilog jrules git client liberty mutual insurance warrenville il july sept role sr. java ee web developer project description liberty mutual insurance american diversified global insurer second-largest property casualty insurer united state ecommerce application provides service auto insurance home insurance application used accessibility appropriate agent centre application generating quote policy payment report project includes integration different third-party component like trans union insurance score mvr getting driver license detail app component print application form id card online responsibility involved full project management life cycle development integration testing release defined strategic initiative ci cd model extreme programming xp build automation agile development environment help respond quickly business need deliver quality product developed interactive web page using angularjs html cs javascript developed ui component using angularjs feature like dependency injection model data binding controller implemented angularjs client-side form validation format view result using various control filter created multiple view using layout template angularjs ngroute developed test case angularjs using karma grunt functionality implemented using spring io thymeleaf hibernate orm implemented java ee component using spring mvc spring ioc spring transaction spring security module developed strategy integrating internal security model new project spring security implemented microservices base restful api utilizing spring boot spring mvc developing restful web service using spring restful template worked jaxb saxp xml schema exporting data xml format importing data xml format db jaxb web service response data marshalling unmarshalling extensively used java server face jsf navigation rule jsf tag enhanced user interface used log logging error application used junit unit testing application involved development project back-end layer using core java feature interface exception used java collection api extensively list set map multithreading used process data chunk improve performance implemented executorservice application execute task background like thread pool increased database performance utilizing mysql config change multiple instance mysql process query optimization exported imported database object dev production involved creating test case using junit strictly following test driven development tdd methodology used junit mockito power mock framework unit testing application implemented test driven development tdd methodology used java messaging service jms reliable asynchronous exchange important payment status report information critical information worked selenium data driven framework integrating maven build management tool testng unit testing tool jenkins continuous integration tool implemented continuous integration automation framework using tool like jenkins hudson extensive use svn version controlling source code management environment java spring hibernate spring batch spring quartz spring security spring jta spring boot jpa java script angularjs html cs jms jaxp sax dom websphere application server eclipse mysql soap rup maven log junit xml web service ilog jrules splunk git client flagstar bank troy mi sept june role sr. java ee consultant project description participated development paperless web-based document tracking management system department specializing home mortgage loan responsible front end back end development html javascript jquery java server page used front end implemented backend rule logic using java ee spring tool scrum agile development methodology used development product eclipse ide used development responsibility involved various sdlc phase like requirement gathering design analysis code development project developed using agile based scrum methodology extensively used java script enforce client-side validation used jquery ajax processing implemented strut framework hibernate latest version application involved coding presentation layer using strut javascript implemented ajax base application using jquery used jquery javascript library developing javascript validation widget used ejb stateless stateful session bean implement business logic session handling transaction deployed enterprise java bean session entity websphere application server involved development various webservices using ibm websphere interact among application wrote various select update insert sql query stored procedure sql server involved unit testing troubleshooting debugging modifying existing program enhancement involved fixing bug bug defect application developed entity bean bean managed persistence entity bean used jdbc connect backend database db developed unix shell script automate job worked linux environment deploying application running script job environment jakarta strut framework core java hibernate ejb web service cs eclipse helios cv websphere application server junit unix javascript servlets jsp jdbc jquery db client best buy richfield mn nov aug role java ee developer project description express lane e-commerce application designed agent provides complete set order service information agent perform sale item return item price override item apply promotion item perform catalog item look responsibility designed use case sequence diagram according uml standard using rational rose implemented model view controller mvc- architecture developed form class action class entire application using strut framework performed client-side validation using javascript server-side validation using built strut validation framework used different ui technology jsp html cs javascript developing gui application implemented data persistence functionality application using hibernate persist java object relational database used hibernate annotation reduce time configuration level accessed annotated bean hibernate dao layer used hql statement procedure fetch data db transformed navigated formatted xml document using xsl xslt used jms asynchronous exchange message application different platform developed view component using jsp html strut logic tag strut tag library involved designing implementation session facade business delegate service locator pattern delegate appropriate resource involved developing sql query stored procedure function creation database object like table view using oracle tool like toad sql plus involved writing stored procedure using pl sql worked linux environment job scheduling inbound data monthly basis used junit testing framework performing unit testing environment strut hibernate jsp rad jms cv javascript xsl xslt servlets web sphere application server oracle g. client barclays oct oct role java programmer project description project involves developing ee based framework support dynamic report creation various distributed database framework support dynamic pdf report generation using itext open source pdf generation library framework facilitates new report format database using xml configuration file responsibility developed presentation screen using jsp html javascript developed session bean functionality per requirement prepared unit test case existing functionality per requirement execute involved integration testing support involved bug fixing responsible writing detail design document class diagram sequence diagram used various design pattern like mvc dao pattern singleton achieve clean separation layer created servlets route submittals appropriate enterprise java bean ejb component render retrieved information developed session bean process request developed custom tag library separate presentation processing logic used hibernate api perform database operation worked hibernate persistence tier involves developing mapping file hibernate pojos daos involved developing sql query stored procedure function involved tracking resolving production issue used lo debugging tool monitor error log environment java servlets jsp spring jdbc javascript html oracle pl sql svn hibernate weblogic",
  "statistics": {
    "word_count": 3407,
    "unique_word_count": 1011,
    "avg_word_length": 5.063398884649252,
    "stopword_count": 646
  },
  "metadata": {
    "filename": "Candidate148.docx",
    "file_size": 54327,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:00.053290",
    "input_filename": "Candidate148.json"
  }
}