{
  "id": "Candidate176",
  "raw_text": "Candidate 176\n267- 404 -1719\nSUMMARY\n8 years of IT experience in analysis, design, development, documentation, implementing and testing of web using Java and J2EE, Springs Framework, Struts Framework, Hibernate, Web Services (SOAP, Restful), JavaScript, HTML, CSS, AngularJS, AJAX and XML.\nSolid background in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, Java Beans, Executor Services, Thread pools.\nExperience in working with open source frameworks like Spring, Struts and ORM frameworks like Hibernate and Spring JPA.\nExtensive experience using JSF, Servlets, JSP, JDBC, JMS, JSTL and JNDI.\nSDLC: Software development experience in object oriented programming, design and development of Multi-Tier distributed, Enterprise applications.\nExperienced with hands on development in various Spring components like Spring MVC, AOP, Spring IOC, Spring JDBC, Spring JPA, Spring Securities and Spring Batch, Spring Boot, Spring Microservices, and swagger apis.\nExpertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD, and JDeveloper.\nExperience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers.\nExpert in frontend technologies such as HTML,HTML5, CSS, JavaScript, JQuery, Angular JS, AJAX, JSTL and JSON.\nExpertise in XML and related technologies like XSL, XSLT and parsers like JAXP (SAX, DOM) and JAXB.\nPossess work experience with middleware technologies like MQ-Series, Oracle Fusion (BPEL and OSB), Apache CAMEL.\nExperience in NodeJS, implementing NodeJS callbacks, NodeJS web server, NodeJS Restful apis.\nExperience in defining integration using Apache Camel routes and Message channels.\nExperience in defining CAMEL content based switches for flow deviation.\nProficient in OOAD Technologies developing Use Cases, Activity diagrams, Sequence Diagrams and Class diagrams using case tools like Microsoft Visio and Rational Rose.\nGood experience in working with Spring Boot, Spring Microservice,  discovery server like Netflix Eureka Server.\nExperience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries. Experience in writing SQL and PL/SQL programming.\nInvolved in building and deploying Apache ANT/ MAVEN scripts, debugging through logging frameworks like log4j, automated build tool with Jenkins.\nExpert in Various Agile methodologies like SCRUM, Test Driven Development, Incremental & Iteration methodology and Pair Programming as well as implementing Waterfall model. To track the progress of Agile process used JIRA.\nExperience in web services technologies like REST, SOAP, WSDL, JMS and Service Oriented Architecture (SOA).\nExperience in developing web application using test driven methodologies (TDD) and Junit as a testing framework..\nExperience in writing test cases using Mockito, PowerMock. Used MockMVC to write integration test cases.\nExperience in working with AWS (Amazon Web Services), EC2, RDS, Dynamo DB, S3, Cloud Formation Templates.\nExperience in dealing with CI/CD tools like Jenkins, Git Stash, Ansible, Chef, Dockers.\nExperienced in working with different operating systems Windows, UNIX, and LINUX.\nExpertise in various version control tools such as SVN, CVS, Git and Clear Case.\nExperienced in performance dealing and server scaling using tools like Wily Interscope, JProfiler, JMeter, VisualVM.\nTECHNICAL SKILLS\nEDUCATION\nBachelor of Technology in Computer Science.\nPROFESSIONAL EXPERIENCE\nWFS, FL\t\t\t \t    \t\t\t\t\t\t\t          Aug 2015 – Present\nSenior Java Fullstack Developer\nWorld Fuel Service is a leading global fuel logistics company, principally engaged in the marketing, sale and distribution of Aviation, Marine and Land fuel products and related services on a worldwide basis. Customers value its competitive fuel prices, trade credit availability, fuel price risk management, logistical support, fuel quality control and fuel management.\nResponsibilities:\nInvolved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications from Business Analyst.\nFollowed the Agile methodology to implement the application.\nDesigned and developed Application based on Spring framework using MVC design patterns.\nUsed Spring IOC, AOP, Spring Boot to implement middle tier.\nResponsible for writing/reviewing server side code using Spring JDBC and DAO module of spring for executing stored procedures and SQL queries.\nWorked with Core Java for business logic.\nInvolved in developing persistent layer using Hibernate framework and Spring JPA repositories.\nUsed Java Executor services to provide asynchronous implementation flow. Used Cached Thread pools to scale thread usage.\nDesigned integration of various modules using Apache CAMEL EIP (Enterprise integration pattern).\nCreated Content based switches and Message channels to provide routing and error handling in CAMEL.\nDeveloped single page applications, components using Angular JS (Angular modules, controllers, Route providers)\nPublished and consumed Web Services using REST and deployed it on WebSphere Application Server.\nImplemented microservices using Springboot, spring based microservices, and enabled discovery using Netflix eureka server\nUsed swagger to provide documents for REST apis\nUsed Jenkins, Git Stash, Ansible like CI/CD tools to make daily builds and deploys.\nUsed JSON for validation, documentation data required by a given application.\nUsed AWS Infrastructure and features of AWS like S3, EC2, RDS, ELB to host the portal.\nCreated Quality and Production instances using AWS Console and CLI tool of AWS. Used Putty and WinSCP to login.\nUsed Log4j to capture the log that includes runtime exceptions.\nCreated Web application using NodeJS, and Restful Services, and MongoDB.\nTested server side with Mocha for NodeJS.\nBuilt scripts using MAVEN that compiles the code, pre-compiles the JSP’s, built an EAR file and deployed the application on the WebSphere application server.\nUsed Git repository hosted on cloud platform.\nDeveloped the application using EclipseSTS.\nDeveloped JUnit test cases using Junit and Mockito for unit test of all developed modules.\nWrote SQL queries for Oracle Database. \nParticipated in and contributed to design reviews and code reviews.\nEnvironment: Java 1.7, J2EE, Servlet/filters, JSP, JSTL, Spring IOC, Spring AOP, Spring MVC, Springboot, Microservices, Spring REST, Spring Security, Hibernate 3.0, NodeJS, Ajax, HTML5, JQuery Angular JS, XSD, XML, Apache Camel, AWS, EC2, Elastic Load Balancing, S3, IBM WebSphere, WebSphere liberty, Tomcat, Netflix Eureka, IBM MQ, Eclipse STS, Oracle 11g, MAVEN, JUnit, Log4J, Jenkins, JProfiler, JMeter, Git, Ansible, Chef, JIRA, JUnit, Mockito, XML Spy, Fiddler.\nMedecision, Wayne, PA                 \t\t\t\t\t\t\t\t       Apr 2014 – Jul 2015\nSenior Java Developer\nMedecision is leader in Health Management, having server side web application for their different health care providers. Customer will choose different health care benefits out of the plan options available. The services will enable them to manage health insurance products, features, benefits and benefit values and attributes. Client interacts through web interface with web services written at back end to fetch data from database and select their plan benefits.\nResponsibilities:\nDeveloped the application using Agile Methodology.\nImplemented customized authentication in Spring Security to verify user-role and secure the user pages, such as login, admin/user operations, trading, portfolio etc.\nInvolved in developing the applications using Spring Framework for Dependency Injection.\nDeveloped back-end logic with Core Java using technologies including Collection Framework, Multi-Threading.\nDeveloped UI using HTML, CSS, JSP, JSON and JQuery to make Ajax calls.\nDeveloped single page applications, components using Angular JS directives.\nWrote backend scripts that performed maintenance tasks on the contract data using JDBC.\nUsed Spring IOC for dynamic bean injection.\nSpring AOP to modularize cross-cutting concerns in aspects.\nDeveloped Stored Procedures and Triggers on Oracle Database.\nConfigured Spring based Microservices and Springboot.\nImplemented and Consumed REST and SOAP Web Services.\nUsed Apache tomcat as a web server and WebLogic as an application server to deploy various components of application.\nDeveloping the application using Spring MVC Architecture with Hibernate as ORM framework.\nUsed Hibernate Cache for query to improve the application performance. \nImplemented search functionality, filtering, pagination using Hibernate Criteria Query interfaces.\nDeployed AJAX call for asynchronous data retrieval from back-end.\nUsed Maven to build and deploy the application in the server.\nUsed SVN software configuration management and version control.\nUsed Log4j for logging purposes.\nDeveloped test classes in JUnit for implementing unit testing.\nDesigned use cases, sequence and class diagrams, activities, states, objects and components. Used UML (MS Visio) for software design.\nEnvironment: Java 1.7, Java Swing, Servlets, JSP, JSTL, Spring 3.0, Spring ORM, Springboot, Microservices, REST/SOAP Web Services, Hibernate 3.0, Apache Tomcat Server, WebLogic, Eclipse, Log4J, Ajax, Oracle10g, PL/SQL, JQuery, AngularJS, NodeJS, JSON, SVN, XML, XSTL, XSD, SOAP, Amazon Web Services, Maven, Junit, PowerMock.\nFarmers Insurance, Sacramento, CA\t\t\t\t\t\t\t\t      Feb 2013 – Apr 2014\nJava/J2EE Developer\nMulticar Insurance is a web based project designed and developed for insurance agents. The agents will issue policy through this application for their customers.  Eligibility of the customers is decided based on the past records which are automatically populated by the program.  If the customer is an existing customer, then the existing rules apply.  If the customer is a new customer, then future business rules will apply.  Agents can check the status of their customers and their current policy rules. Once policy number is auto generated, then the policy details are issued to the customer.  \nResponsibilities:\nParticipated in requirement gathering and framework implementation sessions through Agile TDD methodology.\nDesigned and developed Application based on Spring framework using MVC.\nUI Layer implemented with Struts, Struts validation, JSF, JQuery, JavaScript, AJAX, CSS and HTML.\nExtensively used Core Java such as Exceptions and Collections.\nUsed AngularJS as the development framework to build a single-page application.\nAdded security features to the application using HTTPS and also password security features.\nCreated DAO classes for invoking stored procedures/queries to retrieve from Oracle database.\nUsed Maven framework to develop automated build scripts.\nEmployed Hibernate as a persistence mechanism to implement object relational mapping.\nUsed SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition.\nDeveloped PL/SQL scripts for data conversion.\nWorked on Eclipse for development and deployment of application in Web Logic Application Server.\nUsed Log4j for application logging and debugging.\nUsed Jira to access and track the bugs or defects.\nUsed GIT as source control tool.\nUsed JUnit to implement test cases to test modules.\nEnvironment: Java 1.5, Spring 3.0, JSF 2.0, JIRA, Log4j, AngularJS, XSD, Maven, Hibernate 3.0, Servlets, SOAP UI, SOAP Web service, Web Logic Application Server, Oracle 11g, PL/SQL, Rational Rose, Git, WSDL, JAXB, HTML, CSS, JUnit, JIRA\nJefferson Bank, San Antonio, TX\t\t\t \t\t\t\t\t       Oct 2011 – Jan 2013\nJava/J2EE Developer\nJefferson Bank provides funds or loans to people with small business requirements. Applicants get their loans sanctioned based on their credit history. The applicant information is maintained in a database along with the details of the loan for repayment. This data is filtered into different categories based on parameters like type of account, loan amount, due date. The filtered data is used for statistics for generating reports.\nResponsibilities:\nUsed Spring MVC framework to develop the application and its architecture.\nUsed spring dependency injection to inject all the required dependency in application.\nBeing in project I have developed screens, Controller classes, business services and DAO layer respective to the module assigned to me.\nDeveloped Graphical User Interfaces using HTML, CSS, bootstrap and JSP’s for user interaction.\nDeveloped webpages using UI frameworks bootstrap, Angular JS.\nCreated set of classes using DAO pattern to decouple the business logic and data.\nImplemented Hibernate in the data access object layer to access and update information in the Oracle Database.\nUsed various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs to implement various features and enhancements.\nWrote test cases in JUnit for unit testing of classes.\nInterfaced with the Oracle back-end database using Hibernate Framework and XML config files.\nCreated DHTML pages, used JavaScript for client-side validations and AJAX, AngularJS to create interactive front-end GUI.\nConsumed Web Services for transferring data between different applications.\nUsed Soap Web services to retrieve credit history of the applicants.\nInvolved in coding, maintaining, and administering Servlets and JSP components to be deployed on a WebLogic Application server and Apache Tomcat application server.\nWrote PL/SQL queries, stored procedures, and triggers to perform back-end database operations.\nBuilt scripts using Ant to build the J2EE application.\nUsed Eclipse IDE for developing code modules in the development environment.\nPerformed connectivity with Oracle database using JDBC.\nImplemented the logging mechanism using Log4j framework.\nUsed SVN version control to track and maintain the different version of the application.\nMentored few people in team and have reviewed design, code and test cases written by them.\nEnvironment: Java/J2EE 1.5, JSP, Servlets, Spring 2.0, Hibernate, WebLogic Application Server, XML Web service, Oracle 10g, HTML, DHTML, Bootstrap, XML, XSLT, Eclipse3.0, AJAX, JavaScript, Windows XP, JUnit3.8, Log4j, CSS, SVN.\nSynopsys\t\t\t\t\t\t\t\t\t       Feb 2010 – Aug 2011\nJava Developer\nThe objective of APM (Advanced Patient Management) is to develop a web based system to monitor the patient condition by the physician by using Latitude devices and to eliminate many office visits by a patient. In-home remote follow-up can increase patient satisfaction and improving physician workflow. The combination of device data with meaningful external sensors can provide an effective means to help manage patient health.\nResponsibilities:\nInvolved in the development of various front-end modules.\nWorked in deadline driven environment.\nDeveloping Java script modules for client side validations.\nDeveloped core Java backend tools.\nDeveloped custom tag libraries for formatting contents in JSPs.\nDeveloped and deployed EJBs on the server.\nInvolved in the production support for the application.\nDeveloped various server side components using various J2EE technologies.\nInvolved in the development of different user interface screens using JavaScript, CSS, and HTML.\nDeveloped presentation modules using Struts framework.\nDeveloped various controller components using Struts framework.\nExtensively used JDBC to access the database objects.\nExtensively involved in coding of various design patterns.\nEnvironment: Java 1.4, J2EE, Servlets, JSP, Struts, MVC, EJB, Java Beans, SQL, PL/SQL, Design Patterns, JDBC, JBOSS, Log4J, Apache ANT, JavaScript, CSS, HTML, XML, DB2, Stored Procedures, Windows.\nVerizon Software\t\t\t\t\t\t\t\t\t       July 2008 – Jan 2010\nJ2EE Developer\nOnline Banking System with Advanced Security is a web-based application that allows secure online banking transactions for \nClients banking operations. The application was developed over J2EE Platform with Oracle as the back end database. This Application helps customers to check account balance, transfer funds, view transaction history, view transaction status.\nResponsibilities:\nInvolved in analysis, design and development of application and developed specifications which include Use Cases, Class Diagrams, Sequence Diagrams and Activity Diagrams.\nDeveloped server side applications using Servlets, JSP, EJBs and JDBC.\nUsed JMS for communicating various clients and its components.\nUsed Web Services-WSDL and SOAP.\nDeployed applications on WebLogic Server.\nExtensively configured the build files to different Environments\nDeveloped Session Beans which encapsulates the workflow logic\nUsed Entity Beans to persist the data into database and also used Message Driven Beans MDB to notify the bean state.\nDeveloped EJB components for middle tier component implementation and business logic implementation.\nUsed Struts the MVC framework for building web applications.\nDeveloped web pages by using HTML, CSS, JavaScript.\nDeveloped PL/SQL database scripts and written Stored Procedures and Triggers.\nCreated User guide and application support document.\nUsed CVS for the concurrent development in the team and for code repository.\nInvolved in regression testing, evaluating the response times, and resolving the connection pooling issues.\nEnvironment: Struts 1.x, Unix Shell Scripting, Java 1.4, JDBC, Servlets, JSP, EJBs, Oracle 8i, WebLogic Server 10.3, MDB, HTML, Rational Rose, CVS, PL/SQL, WSDL, SOAP, Eclipse.",
  "cleaned_text": "Candidate - - SUMMARY years of IT experience in analysis, design, development, documentation, implementing and testing of web using Java and J EE, Springs Framework, Struts Framework, Hibernate, Web Services SOAP, Restful , JavaScript, HTML, CSS, AngularJS, AJAX and XML. Solid background in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, Java Beans, Executor Services, Thread pools. Experience in working with open source frameworks like Spring, Struts and ORM frameworks like Hibernate and Spring JPA. Extensive experience using JSF, Servlets, JSP, JDBC, JMS, JSTL and JNDI. SDLC Software development experience in object oriented programming, design and development of Multi-Tier distributed, Enterprise applications. Experienced with hands on development in various Spring components like Spring MVC, AOP, Spring IOC, Spring JDBC, Spring JPA, Spring Securities and Spring Batch, Spring Boot, Spring Microservices, and swagger apis. Expertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD, and JDeveloper. Experience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers. Expert in frontend technologies such as HTML,HTML , CSS, JavaScript, JQuery, Angular JS, AJAX, JSTL and JSON. Expertise in XML and related technologies like XSL, XSLT and parsers like JAXP SAX, DOM and JAXB. Possess work experience with middleware technologies like MQ-Series, Oracle Fusion BPEL and OSB , Apache CAMEL. Experience in NodeJS, implementing NodeJS callbacks, NodeJS web server, NodeJS Restful apis. Experience in defining integration using Apache Camel routes and Message channels. Experience in defining CAMEL content based switches for flow deviation. Proficient in OOAD Technologies developing Use Cases, Activity diagrams, Sequence Diagrams and Class diagrams using case tools like Microsoft Visio and Rational Rose. Good experience in working with Spring Boot, Spring Microservice, discovery server like Netflix Eureka Server. Experience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries. Experience in writing SQL and PL SQL programming. Involved in building and deploying Apache ANT MAVEN scripts, debugging through logging frameworks like log j, automated build tool with Jenkins. Expert in Various Agile methodologies like SCRUM, Test Driven Development, Incremental & Iteration methodology and Pair Programming as well as implementing Waterfall model. To track the progress of Agile process used JIRA. Experience in web services technologies like REST, SOAP, WSDL, JMS and Service Oriented Architecture SOA . Experience in developing web application using test driven methodologies TDD and Junit as a testing framework.. Experience in writing test cases using Mockito, PowerMock. Used MockMVC to write integration test cases. Experience in working with AWS Amazon Web Services , EC , RDS, Dynamo DB, S , Cloud Formation Templates. Experience in dealing with CI CD tools like Jenkins, Git Stash, Ansible, Chef, Dockers. Experienced in working with different operating systems Windows, UNIX, and LINUX. Expertise in various version control tools such as SVN, CVS, Git and Clear Case. Experienced in performance dealing and server scaling using tools like Wily Interscope, JProfiler, JMeter, VisualVM. TECHNICAL SKILLS EDUCATION Bachelor of Technology in Computer Science. PROFESSIONAL EXPERIENCE WFS, FL Aug Present Senior Java Fullstack Developer World Fuel Service is a leading global fuel logistics company, principally engaged in the marketing, sale and distribution of Aviation, Marine and Land fuel products and related services on a worldwide basis. Customers value its competitive fuel prices, trade credit availability, fuel price risk management, logistical support, fuel quality control and fuel management. Responsibilities Involved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications from Business Analyst. Followed the Agile methodology to implement the application. Designed and developed Application based on Spring framework using MVC design patterns. Used Spring IOC, AOP, Spring Boot to implement middle tier. Responsible for writing reviewing server side code using Spring JDBC and DAO module of spring for executing stored procedures and SQL queries. Worked with Core Java for business logic. Involved in developing persistent layer using Hibernate framework and Spring JPA repositories. Used Java Executor services to provide asynchronous implementation flow. Used Cached Thread pools to scale thread usage. Designed integration of various modules using Apache CAMEL EIP Enterprise integration pattern . Created Content based switches and Message channels to provide routing and error handling in CAMEL. Developed single page applications, components using Angular JS Angular modules, controllers, Route providers Published and consumed Web Services using REST and deployed it on WebSphere Application Server. Implemented microservices using Springboot, spring based microservices, and enabled discovery using Netflix eureka server Used swagger to provide documents for REST apis Used Jenkins, Git Stash, Ansible like CI CD tools to make daily builds and deploys. Used JSON for validation, documentation data required by a given application. Used AWS Infrastructure and features of AWS like S , EC , RDS, ELB to host the portal. Created Quality and Production instances using AWS Console and CLI tool of AWS. Used Putty and WinSCP to login. Used Log j to capture the log that includes runtime exceptions. Created Web application using NodeJS, and Restful Services, and MongoDB. Tested server side with Mocha for NodeJS. Built scripts using MAVEN that compiles the code, pre-compiles the JSPs, built an EAR file and deployed the application on the WebSphere application server. Used Git repository hosted on cloud platform. Developed the application using EclipseSTS. Developed JUnit test cases using Junit and Mockito for unit test of all developed modules. Wrote SQL queries for Oracle Database. Participated in and contributed to design reviews and code reviews. Environment Java . , J EE, Servlet filters, JSP, JSTL, Spring IOC, Spring AOP, Spring MVC, Springboot, Microservices, Spring REST, Spring Security, Hibernate . , NodeJS, Ajax, HTML , JQuery Angular JS, XSD, XML, Apache Camel, AWS, EC , Elastic Load Balancing, S , IBM WebSphere, WebSphere liberty, Tomcat, Netflix Eureka, IBM MQ, Eclipse STS, Oracle g, MAVEN, JUnit, Log J, Jenkins, JProfiler, JMeter, Git, Ansible, Chef, JIRA, JUnit, Mockito, XML Spy, Fiddler. Medecision, Wayne, PA Apr Jul Senior Java Developer Medecision is leader in Health Management, having server side web application for their different health care providers. Customer will choose different health care benefits out of the plan options available. The services will enable them to manage health insurance products, features, benefits and benefit values and attributes. Client interacts through web interface with web services written at back end to fetch data from database and select their plan benefits. Responsibilities Developed the application using Agile Methodology. Implemented customized authentication in Spring Security to verify user-role and secure the user pages, such as login, admin user operations, trading, portfolio etc. Involved in developing the applications using Spring Framework for Dependency Injection. Developed back-end logic with Core Java using technologies including Collection Framework, Multi-Threading. Developed UI using HTML, CSS, JSP, JSON and JQuery to make Ajax calls. Developed single page applications, components using Angular JS directives. Wrote backend scripts that performed maintenance tasks on the contract data using JDBC. Used Spring IOC for dynamic bean injection. Spring AOP to modularize cross-cutting concerns in aspects. Developed Stored Procedures and Triggers on Oracle Database. Configured Spring based Microservices and Springboot. Implemented and Consumed REST and SOAP Web Services. Used Apache tomcat as a web server and WebLogic as an application server to deploy various components of application. Developing the application using Spring MVC Architecture with Hibernate as ORM framework. Used Hibernate Cache for query to improve the application performance. Implemented search functionality, filtering, pagination using Hibernate Criteria Query interfaces. Deployed AJAX call for asynchronous data retrieval from back-end. Used Maven to build and deploy the application in the server. Used SVN software configuration management and version control. Used Log j for logging purposes. Developed test classes in JUnit for implementing unit testing. Designed use cases, sequence and class diagrams, activities, states, objects and components. Used UML MS Visio for software design. Environment Java . , Java Swing, Servlets, JSP, JSTL, Spring . , Spring ORM, Springboot, Microservices, REST SOAP Web Services, Hibernate . , Apache Tomcat Server, WebLogic, Eclipse, Log J, Ajax, Oracle g, PL SQL, JQuery, AngularJS, NodeJS, JSON, SVN, XML, XSTL, XSD, SOAP, Amazon Web Services, Maven, Junit, PowerMock. Farmers Insurance, Sacramento, CA Feb Apr Java J EE Developer Multicar Insurance is a web based project designed and developed for insurance agents. The agents will issue policy through this application for their customers. Eligibility of the customers is decided based on the past records which are automatically populated by the program. If the customer is an existing customer, then the existing rules apply. If the customer is a new customer, then future business rules will apply. Agents can check the status of their customers and their current policy rules. Once policy number is auto generated, then the policy details are issued to the customer. Responsibilities Participated in requirement gathering and framework implementation sessions through Agile TDD methodology. Designed and developed Application based on Spring framework using MVC. UI Layer implemented with Struts, Struts validation, JSF, JQuery, JavaScript, AJAX, CSS and HTML. Extensively used Core Java such as Exceptions and Collections. Used AngularJS as the development framework to build a single-page application. Added security features to the application using HTTPS and also password security features. Created DAO classes for invoking stored procedures queries to retrieve from Oracle database. Used Maven framework to develop automated build scripts. Employed Hibernate as a persistence mechanism to implement object relational mapping. Used SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition. Developed PL SQL scripts for data conversion. Worked on Eclipse for development and deployment of application in Web Logic Application Server. Used Log j for application logging and debugging. Used Jira to access and track the bugs or defects. Used GIT as source control tool. Used JUnit to implement test cases to test modules. Environment Java . , Spring . , JSF . , JIRA, Log j, AngularJS, XSD, Maven, Hibernate . , Servlets, SOAP UI, SOAP Web service, Web Logic Application Server, Oracle g, PL SQL, Rational Rose, Git, WSDL, JAXB, HTML, CSS, JUnit, JIRA Jefferson Bank, San Antonio, TX Oct Jan Java J EE Developer Jefferson Bank provides funds or loans to people with small business requirements. Applicants get their loans sanctioned based on their credit history. The applicant information is maintained in a database along with the details of the loan for repayment. This data is filtered into different categories based on parameters like type of account, loan amount, due date. The filtered data is used for statistics for generating reports. Responsibilities Used Spring MVC framework to develop the application and its architecture. Used spring dependency injection to inject all the required dependency in application. Being in project I have developed screens, Controller classes, business services and DAO layer respective to the module assigned to me. Developed Graphical User Interfaces using HTML, CSS, bootstrap and JSPs for user interaction. Developed webpages using UI frameworks bootstrap, Angular JS. Created set of classes using DAO pattern to decouple the business logic and data. Implemented Hibernate in the data access object layer to access and update information in the Oracle Database. Used various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs to implement various features and enhancements. Wrote test cases in JUnit for unit testing of classes. Interfaced with the Oracle back-end database using Hibernate Framework and XML config files. Created DHTML pages, used JavaScript for client-side validations and AJAX, AngularJS to create interactive front-end GUI. Consumed Web Services for transferring data between different applications. Used Soap Web services to retrieve credit history of the applicants. Involved in coding, maintaining, and administering Servlets and JSP components to be deployed on a WebLogic Application server and Apache Tomcat application server. Wrote PL SQL queries, stored procedures, and triggers to perform back-end database operations. Built scripts using Ant to build the J EE application. Used Eclipse IDE for developing code modules in the development environment. Performed connectivity with Oracle database using JDBC. Implemented the logging mechanism using Log j framework. Used SVN version control to track and maintain the different version of the application. Mentored few people in team and have reviewed design, code and test cases written by them. Environment Java J EE . , JSP, Servlets, Spring . , Hibernate, WebLogic Application Server, XML Web service, Oracle g, HTML, DHTML, Bootstrap, XML, XSLT, Eclipse . , AJAX, JavaScript, Windows XP, JUnit . , Log j, CSS, SVN. Synopsys Feb Aug Java Developer The objective of APM Advanced Patient Management is to develop a web based system to monitor the patient condition by the physician by using Latitude devices and to eliminate many office visits by a patient. In-home remote follow-up can increase patient satisfaction and improving physician workflow. The combination of device data with meaningful external sensors can provide an effective means to help manage patient health. Responsibilities Involved in the development of various front-end modules. Worked in deadline driven environment. Developing Java script modules for client side validations. Developed core Java backend tools. Developed custom tag libraries for formatting contents in JSPs. Developed and deployed EJBs on the server. Involved in the production support for the application. Developed various server side components using various J EE technologies. Involved in the development of different user interface screens using JavaScript, CSS, and HTML. Developed presentation modules using Struts framework. Developed various controller components using Struts framework. Extensively used JDBC to access the database objects. Extensively involved in coding of various design patterns. Environment Java . , J EE, Servlets, JSP, Struts, MVC, EJB, Java Beans, SQL, PL SQL, Design Patterns, JDBC, JBOSS, Log J, Apache ANT, JavaScript, CSS, HTML, XML, DB , Stored Procedures, Windows. Verizon Software July Jan J EE Developer Online Banking System with Advanced Security is a web-based application that allows secure online banking transactions for Clients banking operations. The application was developed over J EE Platform with Oracle as the back end database. This Application helps customers to check account balance, transfer funds, view transaction history, view transaction status. Responsibilities Involved in analysis, design and development of application and developed specifications which include Use Cases, Class Diagrams, Sequence Diagrams and Activity Diagrams. Developed server side applications using Servlets, JSP, EJBs and JDBC. Used JMS for communicating various clients and its components. Used Web Services-WSDL and SOAP. Deployed applications on WebLogic Server. Extensively configured the build files to different Environments Developed Session Beans which encapsulates the workflow logic Used Entity Beans to persist the data into database and also used Message Driven Beans MDB to notify the bean state. Developed EJB components for middle tier component implementation and business logic implementation. Used Struts the MVC framework for building web applications. Developed web pages by using HTML, CSS, JavaScript. Developed PL SQL database scripts and written Stored Procedures and Triggers. Created User guide and application support document. Used CVS for the concurrent development in the team and for code repository. Involved in regression testing, evaluating the response times, and resolving the connection pooling issues. Environment Struts .x, Unix Shell Scripting, Java . , JDBC, Servlets, JSP, EJBs, Oracle i, WebLogic Server . , MDB, HTML, Rational Rose, CVS, PL SQL, WSDL, SOAP, Eclipse.",
  "preprocessed_text": "candidate summary year experience analysis design development documentation implementing testing web using java ee spring framework strut framework hibernate web service soap restful javascript html cs angularjs ajax xml solid background core java concept like exception handling multi-threading synchronization serialization io collection framework java bean executor service thread pool experience working open source framework like spring strut orm framework like hibernate spring jpa extensive experience using jsf servlets jsp jdbc jms jstl jndi sdlc software development experience object oriented programming design development multi-tier distributed enterprise application experienced hand development various spring component like spring mvc aop spring ioc spring jdbc spring jpa spring security spring batch spring boot spring microservices swagger apis expertise ides software development like netbeans eclipse eclipse sts rad jdeveloper experience working various application server like ibm web sphere web logic jboss apache tomcat server expert frontend technology html html cs javascript jquery angular j ajax jstl json expertise xml related technology like xsl xslt parser like jaxp sax dom jaxb possess work experience middleware technology like mq-series oracle fusion bpel osb apache camel experience nodejs implementing nodejs callback nodejs web server nodejs restful apis experience defining integration using apache camel route message channel experience defining camel content based switch flow deviation proficient ooad technology developing use case activity diagram sequence diagram class diagram using case tool like microsoft visio rational rose good experience working spring boot spring microservice discovery server like netflix eureka server experience database design creation management schema writing stored procedure function trigger ddl dml sql query experience writing sql pl sql programming involved building deploying apache ant maven script debugging logging framework like log automated build tool jenkins expert various agile methodology like scrum test driven development incremental iteration methodology pair programming well implementing waterfall model track progress agile process used jira experience web service technology like rest soap wsdl jms service oriented architecture soa experience developing web application using test driven methodology tdd junit testing framework .. experience writing test case using mockito powermock used mockmvc write integration test case experience working aws amazon web service ec rds dynamo db cloud formation template experience dealing ci cd tool like jenkins git stash ansible chef docker experienced working different operating system window unix linux expertise various version control tool svn cv git clear case experienced performance dealing server scaling using tool like wily interscope jprofiler jmeter visualvm technical skill education bachelor technology computer science professional experience wfs fl aug present senior java fullstack developer world fuel service leading global fuel logistics company principally engaged marketing sale distribution aviation marine land fuel product related service worldwide basis customer value competitive fuel price trade credit availability fuel price risk management logistical support fuel quality control fuel management responsibility involved phase sdlc including requirement collection design analysis customer specification business analyst followed agile methodology implement application designed developed application based spring framework using mvc design pattern used spring ioc aop spring boot implement middle tier responsible writing reviewing server side code using spring jdbc dao module spring executing stored procedure sql query worked core java business logic involved developing persistent layer using hibernate framework spring jpa repository used java executor service provide asynchronous implementation flow used cached thread pool scale thread usage designed integration various module using apache camel eip enterprise integration pattern created content based switch message channel provide routing error handling camel developed single application component using angular j angular module controller route provider published consumed web service using rest deployed websphere application server implemented microservices using springboot spring based microservices enabled discovery using netflix eureka server used swagger provide document rest apis used jenkins git stash ansible like ci cd tool make daily build deploys used json validation documentation data required given application used aws infrastructure feature aws like ec rds elb host portal created quality production instance using aws console cli tool aws used putty winscp login used log capture log includes runtime exception created web application using nodejs restful service mongodb tested server side mocha nodejs built script using maven compiles code pre-compiles jsps built ear file deployed application websphere application server used git repository hosted cloud platform developed application using eclipsests developed junit test case using junit mockito unit test developed module wrote sql query oracle database participated contributed design review code review environment java ee servlet filter jsp jstl spring ioc spring aop spring mvc springboot microservices spring rest spring security hibernate nodejs ajax html jquery angular j xsd xml apache camel aws ec elastic load balancing ibm websphere websphere liberty tomcat netflix eureka ibm mq eclipse sts oracle maven junit log jenkins jprofiler jmeter git ansible chef jira junit mockito xml spy fiddler medecision wayne pa apr jul senior java developer medecision leader health management server side web application different health care provider customer choose different health care benefit plan option service enable manage health insurance product feature benefit benefit value attribute client interacts web interface web service written back end fetch data database select plan benefit responsibility developed application using agile methodology implemented customized authentication spring security verify user-role secure user page login admin user operation trading portfolio etc involved developing application using spring framework dependency injection developed back-end logic core java using technology including collection framework multi-threading developed ui using html cs jsp json jquery make ajax call developed single application component using angular j directive wrote backend script performed maintenance task contract data using jdbc used spring ioc dynamic bean injection spring aop modularize cross-cutting concern aspect developed stored procedure trigger oracle database configured spring based microservices springboot implemented consumed rest soap web service used apache tomcat web server weblogic application server deploy various component application developing application using spring mvc architecture hibernate orm framework used hibernate cache query improve application performance implemented search functionality filtering pagination using hibernate criterion query interface deployed ajax call asynchronous data retrieval back-end used maven build deploy application server used svn software configuration management version control used log logging purpose developed test class junit implementing unit testing designed use case sequence class diagram activity state object component used uml m visio software design environment java java swing servlets jsp jstl spring spring orm springboot microservices rest soap web service hibernate apache tomcat server weblogic eclipse log ajax oracle pl sql jquery angularjs nodejs json svn xml xstl xsd soap amazon web service maven junit powermock farmer insurance sacramento ca feb apr java ee developer multicar insurance web based project designed developed insurance agent agent issue policy application customer eligibility customer decided based past record automatically populated program customer existing customer existing rule apply customer new customer future business rule apply agent check status customer current policy rule policy number auto generated policy detail issued customer responsibility participated requirement gathering framework implementation session agile tdd methodology designed developed application based spring framework using mvc ui layer implemented strut strut validation jsf jquery javascript ajax cs html extensively used core java exception collection used angularjs development framework build single-page application added security feature application using also password security feature created dao class invoking stored procedure query retrieve oracle database used maven framework develop automated build script employed hibernate persistence mechanism implement object relational mapping used soap based messaging format transfer request response validated response xml schema definition developed pl sql script data conversion worked eclipse development deployment application web logic application server used log application logging debugging used jira access track bug defect used git source control tool used junit implement test case test module environment java spring jsf jira log angularjs xsd maven hibernate servlets soap ui soap web service web logic application server oracle pl sql rational rose git wsdl jaxb html cs junit jira jefferson bank san antonio tx oct jan java ee developer jefferson bank provides fund loan people small business requirement applicant get loan sanctioned based credit history applicant information maintained database along detail loan repayment data filtered different category based parameter like type account loan amount due filtered data used statistic generating report responsibility used spring mvc framework develop application architecture used spring dependency injection inject required dependency application project developed screen controller class business service dao layer respective module assigned developed graphical user interface using html cs bootstrap jsps user interaction developed webpage using ui framework bootstrap angular j created set class using dao pattern decouple business logic data implemented hibernate data access object layer access update information oracle database used various core java concept multi-threading exception handling collection apis implement various feature enhancement wrote test case junit unit testing class interfaced oracle back-end database using hibernate framework xml config file created dhtml page used javascript client-side validation ajax angularjs create interactive front-end gui consumed web service transferring data different application used soap web service retrieve credit history applicant involved coding maintaining administering servlets jsp component deployed weblogic application server apache tomcat application server wrote pl sql query stored procedure trigger perform back-end database operation built script using ant build ee application used eclipse ide developing code module development environment performed connectivity oracle database using jdbc implemented logging mechanism using log framework used svn version control track maintain different version application mentored people team reviewed design code test case written environment java ee jsp servlets spring hibernate weblogic application server xml web service oracle html dhtml bootstrap xml xslt eclipse ajax javascript window xp junit log cs svn synopsys feb aug java developer objective apm advanced patient management develop web based system monitor patient condition physician using latitude device eliminate many office visit patient in-home remote follow-up increase patient satisfaction improving physician workflow combination device data meaningful external sensor provide effective mean help manage patient health responsibility involved development various front-end module worked deadline driven environment developing java script module client side validation developed core java backend tool developed custom tag library formatting content jsps developed deployed ejbs server involved production support application developed various server side component using various ee technology involved development different user interface screen using javascript cs html developed presentation module using strut framework developed various controller component using strut framework extensively used jdbc access database object extensively involved coding various design pattern environment java ee servlets jsp strut mvc ejb java bean sql pl sql design pattern jdbc jboss log apache ant javascript cs html xml db stored procedure window verizon software july jan ee developer online banking system advanced security web-based application allows secure online banking transaction client banking operation application developed ee platform oracle back end database application help customer check account balance transfer fund view transaction history view transaction status responsibility involved analysis design development application developed specification include use case class diagram sequence diagram activity diagram developed server side application using servlets jsp ejbs jdbc used jms communicating various client component used web services-wsdl soap deployed application weblogic server extensively configured build file different environment developed session bean encapsulates workflow logic used entity bean persist data database also used message driven bean mdb notify bean state developed ejb component middle tier component implementation business logic implementation used strut mvc framework building web application developed web page using html cs javascript developed pl sql database script written stored procedure trigger created user guide application support document used cv concurrent development team code repository involved regression testing evaluating response time resolving connection pooling issue environment strut .x unix shell scripting java jdbc servlets jsp ejbs oracle weblogic server mdb html rational rose cv pl sql wsdl soap eclipse",
  "statistics": {
    "word_count": 2993,
    "unique_word_count": 833,
    "avg_word_length": 4.914132976946208,
    "stopword_count": 543
  },
  "metadata": {
    "filename": "Candidate176.docx",
    "file_size": 45995,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:55.593435",
    "input_filename": "Candidate176.json"
  }
}