{
  "id": "Candidate49",
  "raw_text": "Name: Candidate49                                                                                                                       Email:Candidate49@gmail.com\nRole: Full Stack Java Developer                                                                                                Phone: 650-517-6475\nPROFESSIONAL SUMMARY\nOver 8 years of experience in Software Development Lifecycle (SDLC) core areas such as Analysis, Design, Implementation, Testing and Deployment of Object Oriented, Client-Server, Web-Based, Distributed and Enterprise Applications with Java/J2EE technologies.\nStrong experience in Software Development Methodology such as Agile (Scrum) Methodology, Iterative and Waterfall.\nExperience with both Core and Advanced Java concepts which include Java, Servlets, JSP, Java Script, JDBC, JSF, XML, EJB, Struts, Spring MVC, Ajax, jQuery, Hibernate, JDBC, and REST & SOAP Web Services.\nExperience in designing professional UI web applications using front-end technologies like HTML/HTML5,  CSS/CSS3, JavaScript, XML, DHTML, XHTML, JQuery, AJAX, JSON, Angular JS, Angular 2, Backbone JS, React JS and Bootstrap.\nDesigned and developed the monitoring system used for AWS Elastic Environments, including monitoring individual instance health, overall environment health, and managing individual component failure cases e.g. missing ELB, misconfigured Auto Scaling Group, misconfigured EC2 Security Group, etc.\nExperience in using and implementing various design patterns such as Singleton,MVC, Bridge, Abstract Factory, Decorator, DATA Access Object, Data Transfer Object and Iterator etc. \nExperience in building web applications using SPRING framework features like MVC (Model View Controller), AOP (Aspect Oriented Programming), DAO (Data Access Object), Spring Boot, Spring Security, Spring Batch.\nProficient with software build process and writing Maven and ANT Build Scripts for automated build and deployment process.\nExperience with Build tools like, ANT, MAVEN, GRADLE.\nExtensive experience of working with RDBMS like Oracle 11g/12 c, MySQL, SQL Server, Mongo DB and developing Stored Procedures, Triggers, Views, Functions and SQL Queries.\nStrong experience with Mongoose, used to access MongoDB on the server.\nExperience of working with RAD, WSAD 5.0, Spring Tool Suite, JDeveloper, Eclipse, NetBeans.\nExperience in designing UML diagrams using Rational Rose and Microsoft Visio.\nExperience in the use of Defect Tracking & Version Management Tools such as SVN, CVS, GIT.\nExperience with unit testing the applications using Junit and JMeter.\nWorked on continuous integration and continuous deployment using Jenkins/Hudson.\nExperience in Spring Security Framework for User access Management and involved LDAP configuration for authentication,authorization.\nExperienced in Distributed Transaction Management system with Spring JTA Based on Atomikos.\nExperience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic and JBoss Servers.\nResponsible for Offshore & technical support and maintenance of its daily batch jobs, implemented spring batch for 1milliontransaction.\nA resourceful team player with good inter-personal skills, effective problem - solving and decision-making skills, looking for a satisfying career in a fair working environment with opportunities for growth.\nTECHNICAL SKILLS \nPROFESSIONAL EXPERIENCE \nClient: Wells Fargo, Charlotte, NC \nRole: Java Full stack Developer\nDuration: Aug’16–till  Date\nResponsibilities:\nInvolved in analysis, design, and developing middleware using Servlets, Java Beans, Hibernate, springs and doin enhancements and issues resolutions. \nExtensive uses of Angular JS directives to get JSON data using AJAX from RESTful API and modify DOM.\nDesigned the presentation layer GUI using JavaScript, JSP, HTML, CSS, Angular.JS, Customs tags and developed Client-Side validations.\nDeveloped Single page application and structured the JavaScript code using AngularJS.\nDesigned UI pages using JSP, HTML, Angular JS, Node JS, Java Script, CSS, AJAX, JQUERY, JSP, JSON and Tag libraries.\nFollowed Single Page Application (SPA) Pattern and used AngularJS MVC to build a cross-browser complaint application.\nDeveloped the DAO layer for the application using spring, Hibernate and developed various logics and reports using HQL and Hibernate criteria.\nUsed Hibernate as ORM to map Java classes to data base tables.\nImplemented Spring MVC architecture and increased modularity by allowing the separation of crosscutting concerns using Spring Boot.\nLeveraged AWS cloud services such as EC2; auto-scaling; and VPC (Virtual Private Cloud) to build secure,highly scalable and flexible systems.\nAWS is used to coordinate and manage the delivery of messages to the subscribers. Client side validations andserver side validations are done according to the business needs.\nInvolved with Spring IOC concepts to integrate Hibernate DAO.\nInvolved in writing Spring Configuration XML, file that contains declarations and business classes are wired-up to the frontend managed beans using Spring IOC pattern.\nDeveloped Web Services for data transfer using Restful WebServices.\nExtensively used Core Spring Framework for Dependency Injections of components and Spring JDBC for managing all the database communication and exception handling.\nInvolved in developing and exposing web services and also consumption of Web Services like Restful Web services.\nDeveloped the REST based Micro services using spring data and spring boot with JPA. Refactored Micro service to make it RESTful, thread safe and more configurable. \nInvolved in performing Unit and Integration testing (JUnit). Strictly followed Test Driven Development (TDD). Approach environment using agile methodologies.\nCreating and Exposing RESTful Web Services using RAD editor and used Maven build for the deployment.\nDeveloped REST services to talk with adapter classes and exposed them to the angular JS front-end.\nWorked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology.\nDeveloped data objects to communicate with databases using JPA, Hibernate and JDBC frameworks.\nMiddleware Services Layer is implemented using EJB (Enterprise Java Beans-stateless).\nWrote Java Scripts validations to validate the fields of the Registration Screen and login screen.\nUsed JIRA for bug tracking, issue tracking and project management.\nInvolved in writing the batch jobs, UNIX scripts to load/manipulate the data.\nCreated SQL queries, NO/SQL, Stored Procedures, Functions for database layer by studying the required business objects and validating them with Stored Procedures using PostgreSQL. Also used JPA with hibernate provider.\nUsed GIT to implement version control.\nUsed log4j for tracking errors and debugging the code.\nEnvironment: Java 1.8, Java Scripts, HTML, STRUTS, JUNIT, Servlets, JDBC, JQUERY, JSON, AJAX, DOM, Jenkins, HQL, Spring Boot,JIRA, Hibernate, DB2, JPA, Eclipse, EJB, JMS, Knockout.js, log4j, NO/SQL Micro services.\nClient: Randmcnally, chicago,IL\nRole: Full Stack Java Developer\nDuration: Jan’15 to July ‘16\n. \nResponsibilities: \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. \nDesigned the complete website using HTML5, CSS3, jQuery, AJAX, JSON, Bootstrap, JavaScript. \nDeveloped single page applications (SPAs) using Angular JS to improve page performance. Used Angular JS to create reusable components like custom directives, filters for data manipulations and to display data in company standard format in UI. Experience in writing swagger documentation for Node JS services. \nUsed Angular JS to create reusable components like custom directives, filters for data manipulations and to display data in company standard format in UI. \nAdded dynamic functionality to the application by implementing Node JS. \nWrote internal and external API services using Node JS modules. \nDeveloped internal coding using J2EE technologies based on the MVC Architecture. \nImplemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. \nDeveloped Business objects using POJOs and data access layer using Hibernate framework \nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP Spring Annotations. \nUsed Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. \nBatch processing and partitioning using Spring-Batch. \nDeveloped REST architecture based web services to facilitate communication between client- server. \nInvolved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database, published the REST services. parsed the data to project to client and handled the security and Authorization using Spring Security. Spring security OAuth, can be used for authentication and authorization purposes in application. \nImplemented RESTful and SOAP based web administrations utilizing for JAX-RS and JAX-WS individually. \nStrategic and practical implementation of cloud-specific AWS technologies including Elastic Compute Cloud(EC2), Simple Storage Services (S3), Cloud Formation, Elastic Beanstalk, Virtual Private Cloud(VPC), RDS and Cloud Watch. \nHands-on experience in developing AWS cloud formation templates and setting up Auto scaling for EC2 instances and involved in the automated provisioning of AWS cloud environment using Jenkins. \nAware of troubleshooting issues on AWS and other developer IDE and Cloud environments. \nDesign, develop, test of SOA services using SOA/RESTful Web Service. Involved in the deployment of REST based Web-Service End-Points. \nConfigured and build Asynchronous communication with JMS services with MQ services.\nUsed Maven building tool for creating EAR file to be deployed in application servers. \nUsed JIRA ticketing system to keep track of issues and tasks on individuals. \nVersion controls like GIT Used for source code version controlling.\nWorked on No SQL databases like Cassandra.\nUsed Cassandra as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise. \n\nEnvironment: Java 1.6/1.7, HTML5, CSS3, jQuery, Ajax, Angular JS, Bootstrap, JSON, J2EE, Spring MVC, Spring Security, Spring Boot, Spring Data, Spring Batch, JSP, Hibernate, Web services, RESTful, Stored Procedures, RAD, WebLogic, Agile/Scrum Methodology, AWS, Maven, Pivotal Cloud, Git, Thyme leaf, DynamoDB, Life ray, JIRA, Junit, Linux, Log4J, TDD, Cassandra, Groovy, Node JS, Oracle, Splunk, My SQL.\nClient:\tUSAA- San Antonio, TX\t\nRole: Java/J2EE Developer\t\nDuration:May’13-Dec’14\nResponsibilities:\nInvolved in the loan details Presentation module. \nInvolved in designing of the BOA Loan Assist entry framework using J2EE guidelines and different J2EE design patterns with JSP, Controller Servlets and EJB in picture. \nInvolved in the implementation of the Service Locator, Business Delegate and the Session Façade design pattern for the enterprises level functionality. \nUsed JavaScript, for the client end data validations.\nInvolved in JUnit testing and used JProbe to quickly pinpoint and repair the root cause of application code performance and stability problems that obstruct component and integration integrity.\nDeveloped the Stateless Session bean for processing the business logic. \nDeveloped numerous Transfer objects using the DTO design pattern for inter-tier communication. \nImplemented Struts framework (Action and Controller classes) for dispatching request to appropriate class. \nUsed Struts Validation framework for validation of user input as per the business logic and initial data loading. \nUsed JSF for automatic synchronize UI components.\nLogging, Exception handling and validations to IOMS and IOMS Payoff application using AOP module of Spring.\nUsed JSF for navigation handling and duplicate button press problem.\nWritten SQL, PL/SQL queries. And used DB2 stored procedure, functions, triggers, cursors, objects, sequences etc.\nUsed Crystal Report tools to generate data sources. \nApplication development using N-tiered client/server development. \nImplemented Rational Unified Process (RUP) for software development process \nDevelop Message Driven Beans (MDB) & involved in building and accessing a web Services using SOAP over JMS. \nDeveloping a mechanism for sending and receiving SOAP messages over JMS by MQ Series Engine \nDeveloped Web Services using Apache AXIS2 tool Framework. \nGenerated WSDL files using AXIS2 tool. \nImplemented Web Services using SOAP protocol, UDDI, WSDL and Service oriented Architecture (SOA) Concept.\nWritten JUnit test cases for Business Objects, and prepared code documentation for future reference and upgrades. \nWritten build xml file for ANT scripting. \nUsed IBM Rational Clear Case(software configuration management (SCM)) for version control, workspace management, parallel development support and build auditing to improve productivity \nDeployed applications using Web Logic Application Server \nImplemented open source log4j logging framework in whole application. \nUsed CVS as a version controlling tool for managing the module developments.\nEnvironment: JAVA 1.6, J2EE, Servlets 2.4, EJB 2.0, JDBC 2.0, JAXB, Struts 2.0, JSF components, DAO, HTML, Java Script, XML, CSS, Ajax, Web Sphere Application server, LDAP, Oracle 10g, Log4J, Eclipse 3.1, CVS, DOJO, Ant 1.5, SOA, SOAP, DB2, PL/SQL, SQL, Web Services-WSDL, SOAP, UDDI, SOAP UI, JAX_RS, JERSEY, Windows XP.\nClient: Symphony Teleca, \nRole: Java Developer\nDuration: March’11-April’13\nResponsibilities:\nParticipated in system design, planning, estimation and implementation.\nInvolved in developing Use case diagrams, Class diagrams, Sequence diagrams and process flow diagrams forthe modules using UML and Rational Rose.\nDeveloped the presentation layer using JSP, AJAX, HTML, XHTML, CSS and client validations using JavaScript.\nDeveloped and implemented the MVC Architectural Pattern using Spring Framework.\nEffective usage of J2EE Design Patterns namely Session Facade, Factory Method, Command and Singleton to\ndevelop various base framework components in the application.\nModified Account View functionality to enable display of blocked accounts details that have tags. This\ninvolved modifying beans, JSP changes and middle tier enhancements.\nDeveloped various EJBs (session and entity beans) for handling business logic.\nCode implementation using java &amp; groovy, re-factoring &amp; peer review\nDeveloped Session Beans and DAO classes for Accounts and other Modules.\nExtensively used Spring JDBC in data access layer to access and update information in the database.\nWorked on generating the web services classes by using WSDL, UDDI and SOAP.\nConsumed Web Services using WSDL, SOAP and UDDI from third party for authorizing payments to/from\ncustomers.\nUsed JAXB API to bind XML Schema to java classes.\nInvolved in Units integration using JUnit, bug fixing, and User acceptance testing with test cases.\nUsed CVS for version control and Maven as a build tool.\nUsed Log4j for logging errors, messages and performance logs.\nUsed JBoss Application Server to deploy application.\nEnvironment: Java 1.4, JSP, Servlets, Struts frame work, Tag libraries, Java Script, CSS, AJAX, JDBC, JNDI, Oracle 8i, Java\nbeans, Struts Validation framework, Windows/UNIX, Ant, JUNIT, SVN, QC, Edit Plus, Web Logic application server, SQL\nClient: Dream Soft IT Solutions \nRole: Software Developer\nDuration: Jan’10-Feb’11\nResponsibilities:\nDesigned and implemented Java Classes, Interfaces, Model design, and interface layer design with other team members.\nDeveloped JSP’s and Servlets to dynamically generate HTML and display the data to the client side. Extensively used JSP tag libraries.\nInvolved in writing services to write core logic for business processes. \nInvolved in writing database queries, stored procedures, functions etc. \nUsed Java J2EE design patterns. Involved in client server side validations. \nInvolved in writing JDBC code to get data base connectivity. \nImplemented server side validations and developed model classes. \nInvolved in the Database structuring and Tables creation needed for the project. \nInstrumental in tuning the framework to meet the performance standards.\nDesigned and developed web-based software using STRUTS MVC Framework.\nUsed AJAX and Java Script to handle asynchronous requests, and CSS was used to keep uniformly in look of the application.\nEJBs in the application and developed Session beans for the business logic at the middle tier level.\nCreated Test plan documents and testing using Junit Framework.\nUsed JAXB parser for parsing valid .xml files as defined by XSD.\nCreated and modified Stored Procedures, Functions and Triggers Complex SQL Commands for the application using PL/SQL.\nMonitored the error logs using Log4j and fixed the problems.\nDesigned JDBC Connection for data retrieval and updating purpose, also developed connection pool to avoid waiting time for database connection.\nUsed Tomcat server for application development with Eclipse.\nEnvironment: Core Java, JDBC, JAXB, WSDL, Rest, JSP, Servlet, HTML, JavaScript, CSS, Apache Tomcats, MySQL, STRUTS, Log4j, XSD. \nEDUCATION\nBachelor’s in Electronics and Communication Engineering ",
  "cleaned_text": "Name Candidate Role Full Stack Java Developer Phone PROFESSIONAL SUMMARY Over years of experience in Software Development Lifecycle SDLC core areas such as Analysis, Design, Implementation, Testing and Deployment of Object Oriented, Client-Server, Web-Based, Distributed and Enterprise Applications with Java J EE technologies. Strong experience in Software Development Methodology such as Agile Scrum Methodology, Iterative and Waterfall. Experience with both Core and Advanced Java concepts which include Java, Servlets, JSP, Java Script, JDBC, JSF, XML, EJB, Struts, Spring MVC, Ajax, jQuery, Hibernate, JDBC, and REST & SOAP Web Services. Experience in designing professional UI web applications using front-end technologies like HTML HTML , CSS CSS , JavaScript, XML, DHTML, XHTML, JQuery, AJAX, JSON, Angular JS, Angular , Backbone JS, React JS and Bootstrap. Designed and developed the monitoring system used for AWS Elastic Environments, including monitoring individual instance health, overall environment health, and managing individual component failure cases e.g. missing ELB, misconfigured Auto Scaling Group, misconfigured EC Security Group, etc. Experience in using and implementing various design patterns such as Singleton,MVC, Bridge, Abstract Factory, Decorator, DATA Access Object, Data Transfer Object and Iterator etc. Experience in building web applications using SPRING framework features like MVC Model View Controller , AOP Aspect Oriented Programming , DAO Data Access Object , Spring Boot, Spring Security, Spring Batch. Proficient with software build process and writing Maven and ANT Build Scripts for automated build and deployment process. Experience with Build tools like, ANT, MAVEN, GRADLE. Extensive experience of working with RDBMS like Oracle g c, MySQL, SQL Server, Mongo DB and developing Stored Procedures, Triggers, Views, Functions and SQL Queries. Strong experience with Mongoose, used to access MongoDB on the server. Experience of working with RAD, WSAD . , Spring Tool Suite, JDeveloper, Eclipse, NetBeans. Experience in designing UML diagrams using Rational Rose and Microsoft Visio. Experience in the use of Defect Tracking & Version Management Tools such as SVN, CVS, GIT. Experience with unit testing the applications using Junit and JMeter. Worked on continuous integration and continuous deployment using Jenkins Hudson. Experience in Spring Security Framework for User access Management and involved LDAP configuration for authentication,authorization. Experienced in Distributed Transaction Management system with Spring JTA Based on Atomikos. Experience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic and JBoss Servers. Responsible for Offshore & technical support and maintenance of its daily batch jobs, implemented spring batch for milliontransaction. A resourceful team player with good inter-personal skills, effective problem - solving and decision-making skills, looking for a satisfying career in a fair working environment with opportunities for growth. TECHNICAL SKILLS PROFESSIONAL EXPERIENCE Client Wells Fargo, Charlotte, NC Role Java Full stack Developer Duration Aug till Date Responsibilities Involved in analysis, design, and developing middleware using Servlets, Java Beans, Hibernate, springs and doin enhancements and issues resolutions. Extensive uses of Angular JS directives to get JSON data using AJAX from RESTful API and modify DOM. Designed the presentation layer GUI using JavaScript, JSP, HTML, CSS, Angular.JS, Customs tags and developed Client-Side validations. Developed Single page application and structured the JavaScript code using AngularJS. Designed UI pages using JSP, HTML, Angular JS, Node JS, Java Script, CSS, AJAX, JQUERY, JSP, JSON and Tag libraries. Followed Single Page Application SPA Pattern and used AngularJS MVC to build a cross-browser complaint application. Developed the DAO layer for the application using spring, Hibernate and developed various logics and reports using HQL and Hibernate criteria. Used Hibernate as ORM to map Java classes to data base tables. Implemented Spring MVC architecture and increased modularity by allowing the separation of crosscutting concerns using Spring Boot. Leveraged AWS cloud services such as EC auto-scaling and VPC Virtual Private Cloud to build secure,highly scalable and flexible systems. AWS is used to coordinate and manage the delivery of messages to the subscribers. Client side validations andserver side validations are done according to the business needs. Involved with Spring IOC concepts to integrate Hibernate DAO. Involved in writing Spring Configuration XML, file that contains declarations and business classes are wired-up to the frontend managed beans using Spring IOC pattern. Developed Web Services for data transfer using Restful WebServices. Extensively used Core Spring Framework for Dependency Injections of components and Spring JDBC for managing all the database communication and exception handling. Involved in developing and exposing web services and also consumption of Web Services like Restful Web services. Developed the REST based Micro services using spring data and spring boot with JPA. Refactored Micro service to make it RESTful, thread safe and more configurable. Involved in performing Unit and Integration testing JUnit . Strictly followed Test Driven Development TDD . Approach environment using agile methodologies. Creating and Exposing RESTful Web Services using RAD editor and used Maven build for the deployment. Developed REST services to talk with adapter classes and exposed them to the angular JS front-end. Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology. Developed data objects to communicate with databases using JPA, Hibernate and JDBC frameworks. Middleware Services Layer is implemented using EJB Enterprise Java Beans-stateless . Wrote Java Scripts validations to validate the fields of the Registration Screen and login screen. Used JIRA for bug tracking, issue tracking and project management. Involved in writing the batch jobs, UNIX scripts to load manipulate the data. Created SQL queries, NO SQL, Stored Procedures, Functions for database layer by studying the required business objects and validating them with Stored Procedures using PostgreSQL. Also used JPA with hibernate provider. Used GIT to implement version control. Used log j for tracking errors and debugging the code. Environment Java . , Java Scripts, HTML, STRUTS, JUNIT, Servlets, JDBC, JQUERY, JSON, AJAX, DOM, Jenkins, HQL, Spring Boot,JIRA, Hibernate, DB , JPA, Eclipse, EJB, JMS, Knockout.js, log j, NO SQL Micro services. Client Randmcnally, chicago,IL Role Full Stack Java Developer Duration Jan to July . Responsibilities Involved in Daily Scrum Agile meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. Designed the complete website using HTML , CSS , jQuery, AJAX, JSON, Bootstrap, JavaScript. Developed single page applications SPAs using Angular JS to improve page performance. Used Angular JS to create reusable components like custom directives, filters for data manipulations and to display data in company standard format in UI. Experience in writing swagger documentation for Node JS services. Used Angular JS to create reusable components like custom directives, filters for data manipulations and to display data in company standard format in UI. Added dynamic functionality to the application by implementing Node JS. Wrote internal and external API services using Node JS modules. Developed internal coding using J EE technologies based on the MVC Architecture. Implemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. Developed Business objects using POJOs and data access layer using Hibernate framework Designed and developed business components using Spring Boot, Spring Dependency Injection Core , Spring AOP Spring Annotations. Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. Batch processing and partitioning using Spring-Batch. Developed REST architecture based web services to facilitate communication between client- server. Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database, published the REST services. parsed the data to project to client and handled the security and Authorization using Spring Security. Spring security OAuth, can be used for authentication and authorization purposes in application. Implemented RESTful and SOAP based web administrations utilizing for JAX-RS and JAX-WS individually. Strategic and practical implementation of cloud-specific AWS technologies including Elastic Compute Cloud EC , Simple Storage Services S , Cloud Formation, Elastic Beanstalk, Virtual Private Cloud VPC , RDS and Cloud Watch. Hands-on experience in developing AWS cloud formation templates and setting up Auto scaling for EC instances and involved in the automated provisioning of AWS cloud environment using Jenkins. Aware of troubleshooting issues on AWS and other developer IDE and Cloud environments. Design, develop, test of SOA services using SOA RESTful Web Service. Involved in the deployment of REST based Web-Service End-Points. Configured and build Asynchronous communication with JMS services with MQ services. Used Maven building tool for creating EAR file to be deployed in application servers. Used JIRA ticketing system to keep track of issues and tasks on individuals. Version controls like GIT Used for source code version controlling. Worked on No SQL databases like Cassandra. Used Cassandra as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise. Environment Java . . , HTML , CSS , jQuery, Ajax, Angular JS, Bootstrap, JSON, J EE, Spring MVC, Spring Security, Spring Boot, Spring Data, Spring Batch, JSP, Hibernate, Web services, RESTful, Stored Procedures, RAD, WebLogic, Agile Scrum Methodology, AWS, Maven, Pivotal Cloud, Git, Thyme leaf, DynamoDB, Life ray, JIRA, Junit, Linux, Log J, TDD, Cassandra, Groovy, Node JS, Oracle, Splunk, My SQL. Client USAA- San Antonio, TX Role Java J EE Developer Duration May -Dec Responsibilities Involved in the loan details Presentation module. Involved in designing of the BOA Loan Assist entry framework using J EE guidelines and different J EE design patterns with JSP, Controller Servlets and EJB in picture. Involved in the implementation of the Service Locator, Business Delegate and the Session Facade design pattern for the enterprises level functionality. Used JavaScript, for the client end data validations. Involved in JUnit testing and used JProbe to quickly pinpoint and repair the root cause of application code performance and stability problems that obstruct component and integration integrity. Developed the Stateless Session bean for processing the business logic. Developed numerous Transfer objects using the DTO design pattern for inter-tier communication. Implemented Struts framework Action and Controller classes for dispatching request to appropriate class. Used Struts Validation framework for validation of user input as per the business logic and initial data loading. Used JSF for automatic synchronize UI components. Logging, Exception handling and validations to IOMS and IOMS Payoff application using AOP module of Spring. Used JSF for navigation handling and duplicate button press problem. Written SQL, PL SQL queries. And used DB stored procedure, functions, triggers, cursors, objects, sequences etc. Used Crystal Report tools to generate data sources. Application development using N-tiered client server development. Implemented Rational Unified Process RUP for software development process Develop Message Driven Beans MDB & involved in building and accessing a web Services using SOAP over JMS. Developing a mechanism for sending and receiving SOAP messages over JMS by MQ Series Engine Developed Web Services using Apache AXIS tool Framework. Generated WSDL files using AXIS tool. Implemented Web Services using SOAP protocol, UDDI, WSDL and Service oriented Architecture SOA Concept. Written JUnit test cases for Business Objects, and prepared code documentation for future reference and upgrades. Written build xml file for ANT scripting. Used IBM Rational Clear Case software configuration management SCM for version control, workspace management, parallel development support and build auditing to improve productivity Deployed applications using Web Logic Application Server Implemented open source log j logging framework in whole application. Used CVS as a version controlling tool for managing the module developments. Environment JAVA . , J EE, Servlets . , EJB . , JDBC . , JAXB, Struts . , JSF components, DAO, HTML, Java Script, XML, CSS, Ajax, Web Sphere Application server, LDAP, Oracle g, Log J, Eclipse . , CVS, DOJO, Ant . , SOA, SOAP, DB , PL SQL, SQL, Web Services-WSDL, SOAP, UDDI, SOAP UI, JAX RS, JERSEY, Windows XP. Client Symphony Teleca, Role Java Developer Duration March -April Responsibilities Participated in system design, planning, estimation and implementation. Involved in developing Use case diagrams, Class diagrams, Sequence diagrams and process flow diagrams forthe modules using UML and Rational Rose. Developed the presentation layer using JSP, AJAX, HTML, XHTML, CSS and client validations using JavaScript. Developed and implemented the MVC Architectural Pattern using Spring Framework. Effective usage of J EE Design Patterns namely Session Facade, Factory Method, Command and Singleton to develop various base framework components in the application. Modified Account View functionality to enable display of blocked accounts details that have tags. This involved modifying beans, JSP changes and middle tier enhancements. Developed various EJBs session and entity beans for handling business logic. Code implementation using java &amp groovy, re-factoring &amp peer review Developed Session Beans and DAO classes for Accounts and other Modules. Extensively used Spring JDBC in data access layer to access and update information in the database. Worked on generating the web services classes by using WSDL, UDDI and SOAP. Consumed Web Services using WSDL, SOAP and UDDI from third party for authorizing payments to from customers. Used JAXB API to bind XML Schema to java classes. Involved in Units integration using JUnit, bug fixing, and User acceptance testing with test cases. Used CVS for version control and Maven as a build tool. Used Log j for logging errors, messages and performance logs. Used JBoss Application Server to deploy application. Environment Java . , JSP, Servlets, Struts frame work, Tag libraries, Java Script, CSS, AJAX, JDBC, JNDI, Oracle i, Java beans, Struts Validation framework, Windows UNIX, Ant, JUNIT, SVN, QC, Edit Plus, Web Logic application server, SQL Client Dream Soft IT Solutions Role Software Developer Duration Jan -Feb Responsibilities Designed and implemented Java Classes, Interfaces, Model design, and interface layer design with other team members. Developed JSPs and Servlets to dynamically generate HTML and display the data to the client side. Extensively used JSP tag libraries. Involved in writing services to write core logic for business processes. Involved in writing database queries, stored procedures, functions etc. Used Java J EE design patterns. Involved in client server side validations. Involved in writing JDBC code to get data base connectivity. Implemented server side validations and developed model classes. Involved in the Database structuring and Tables creation needed for the project. Instrumental in tuning the framework to meet the performance standards. Designed and developed web-based software using STRUTS MVC Framework. Used AJAX and Java Script to handle asynchronous requests, and CSS was used to keep uniformly in look of the application. EJBs in the application and developed Session beans for the business logic at the middle tier level. Created Test plan documents and testing using Junit Framework. Used JAXB parser for parsing valid .xml files as defined by XSD. Created and modified Stored Procedures, Functions and Triggers Complex SQL Commands for the application using PL SQL. Monitored the error logs using Log j and fixed the problems. Designed JDBC Connection for data retrieval and updating purpose, also developed connection pool to avoid waiting time for database connection. Used Tomcat server for application development with Eclipse. Environment Core Java, JDBC, JAXB, WSDL, Rest, JSP, Servlet, HTML, JavaScript, CSS, Apache Tomcats, MySQL, STRUTS, Log j, XSD. EDUCATION Bachelors in Electronics and Communication Engineering",
  "preprocessed_text": "candidate role full stack java developer professional summary year experience software development lifecycle sdlc core area analysis design implementation testing deployment object oriented client-server web-based distributed enterprise application java ee technology strong experience software development methodology agile scrum methodology iterative waterfall experience core advanced java concept include java servlets jsp java script jdbc jsf xml ejb strut spring mvc ajax jquery hibernate jdbc rest soap web service experience designing professional ui web application using front-end technology like html html cs cs javascript xml dhtml xhtml jquery ajax json angular j angular backbone j react j bootstrap designed developed monitoring system used aws elastic environment including monitoring individual instance health overall environment health managing individual component failure case e.g missing elb misconfigured auto scaling group misconfigured ec security group etc experience using implementing various design pattern singleton mvc bridge abstract factory decorator data access object data transfer object iterator etc experience building web application using spring framework feature like mvc model view controller aop aspect oriented programming dao data access object spring boot spring security spring batch proficient software build process writing maven ant build script automated build deployment process experience build tool like ant maven gradle extensive experience working rdbms like oracle mysql sql server mongo db developing stored procedure trigger view function sql query strong experience mongoose used access mongodb server experience working rad wsad spring tool suite jdeveloper eclipse netbeans experience designing uml diagram using rational rose microsoft visio experience use defect tracking version management tool svn cv git experience unit testing application using junit jmeter worked continuous integration continuous deployment using jenkins hudson experience spring security framework user access management involved ldap configuration authentication authorization experienced distributed transaction management system spring jta based atomikos experience configuring deploying application tomcat websphere weblogic jboss server responsible offshore technical support maintenance daily batch job implemented spring batch milliontransaction resourceful team player good inter-personal skill effective problem solving decision-making skill looking satisfying career fair working environment opportunity growth technical skill professional experience client well fargo charlotte nc role java full stack developer duration aug till responsibility involved analysis design developing middleware using servlets java bean hibernate spring doin enhancement issue resolution extensive us angular j directive get json data using ajax restful api modify dom designed presentation layer gui using javascript jsp html cs angular.js custom tag developed client-side validation developed single application structured javascript code using angularjs designed ui page using jsp html angular j node j java script cs ajax jquery jsp json tag library followed single application spa pattern used angularjs mvc build cross-browser complaint application developed dao layer application using spring hibernate developed various logic report using hql hibernate criterion used hibernate orm map java class data base table implemented spring mvc architecture increased modularity allowing separation crosscutting concern using spring boot leveraged aws cloud service ec auto-scaling vpc virtual private cloud build secure highly scalable flexible system aws used coordinate manage delivery message subscriber client side validation andserver side validation done according business need involved spring ioc concept integrate hibernate dao involved writing spring configuration xml file contains declaration business class wired-up frontend managed bean using spring ioc pattern developed web service data transfer using restful webservices extensively used core spring framework dependency injection component spring jdbc managing database communication exception handling involved developing exposing web service also consumption web service like restful web service developed rest based micro service using spring data spring boot jpa refactored micro service make restful thread safe configurable involved performing unit integration testing junit strictly followed test driven development tdd approach environment using agile methodology creating exposing restful web service using rad editor used maven build deployment developed rest service talk adapter class exposed angular j front-end worked restful web service enforced stateless client server support json change soap restful technology developed data object communicate database using jpa hibernate jdbc framework middleware service layer implemented using ejb enterprise java beans-stateless wrote java script validation validate field registration screen login screen used jira bug tracking issue tracking project management involved writing batch job unix script load manipulate data created sql query sql stored procedure function database layer studying required business object validating stored procedure using postgresql also used jpa hibernate provider used git implement version control used log tracking error debugging code environment java java script html strut junit servlets jdbc jquery json ajax dom jenkins hql spring boot jira hibernate db jpa eclipse ejb jms knockout.js log sql micro service client randmcnally chicago il role full stack java developer duration jan july responsibility involved daily scrum agile meeting sprint planning estimation task user story participated retrospective presenting demo end sprint designed complete website using html cs jquery ajax json bootstrap javascript developed single application spa using angular j improve performance used angular j create reusable component like custom directive filter data manipulation display data company standard format ui experience writing swagger documentation node j service used angular j create reusable component like custom directive filter data manipulation display data company standard format ui added dynamic functionality application implementing node j wrote internal external api service using node j module developed internal coding using ee technology based mvc architecture implemented restful web service retrieve data client side made rest api call angular j parsed data project client handled security authorization using spring security oauth developed business object using pojos data access layer using hibernate framework designed developed business component using spring boot spring dependency injection core spring aop spring annotation used spring data framework use feature spring jdbc spring orm class like jdbc template hibernate template perform database operation connecting data source batch processing partitioning using spring-batch developed rest architecture based web service facilitate communication client- server involved implementation restful web service using spring boot perform crud operation database published rest service parsed data project client handled security authorization using spring security spring security oauth used authentication authorization purpose application implemented restful soap based web administration utilizing jax-rs jax-ws individually strategic practical implementation cloud-specific aws technology including elastic compute cloud ec simple storage service cloud formation elastic beanstalk virtual private cloud vpc rds cloud watch hands-on experience developing aws cloud formation template setting auto scaling ec instance involved automated provisioning aws cloud environment using jenkins aware troubleshooting issue aws developer ide cloud environment design develop test soa service using soa restful web service involved deployment rest based web-service end-points configured build asynchronous communication jms service mq service used maven building tool creating ear file deployed application server used jira ticketing system keep track issue task individual version control like git used source code version controlling worked sql database like cassandra used cassandra data storage utilized aspect like replica set clever document design make service extensible scale feature wise environment java html cs jquery ajax angular j bootstrap json ee spring mvc spring security spring boot spring data spring batch jsp hibernate web service restful stored procedure rad weblogic agile scrum methodology aws maven pivotal cloud git thyme leaf dynamodb life ray jira junit linux log tdd cassandra groovy node j oracle splunk sql client usaa- san antonio tx role java ee developer duration may -dec responsibility involved loan detail presentation module involved designing boa loan assist entry framework using ee guideline different ee design pattern jsp controller servlets ejb picture involved implementation service locator business delegate session facade design pattern enterprise level functionality used javascript client end data validation involved junit testing used jprobe quickly pinpoint repair root cause application code performance stability problem obstruct component integration integrity developed stateless session bean processing business logic developed numerous transfer object using dto design pattern inter-tier communication implemented strut framework action controller class dispatching appropriate class used strut validation framework validation user input per business logic initial data loading used jsf automatic synchronize ui component logging exception handling validation ioms ioms payoff application using aop module spring used jsf navigation handling duplicate button press problem written sql pl sql query used db stored procedure function trigger cursor object sequence etc used crystal report tool generate data source application development using n-tiered client server development implemented rational unified process rup software development process develop message driven bean mdb involved building accessing web service using soap jms developing mechanism sending receiving soap message jms mq series engine developed web service using apache axis tool framework generated wsdl file using axis tool implemented web service using soap protocol uddi wsdl service oriented architecture soa concept written junit test case business object prepared code documentation future reference upgrade written build xml file ant scripting used ibm rational clear case software configuration management scm version control workspace management parallel development support build auditing improve productivity deployed application using web logic application server implemented open source log logging framework whole application used cv version controlling tool managing module development environment java ee servlets ejb jdbc jaxb strut jsf component dao html java script xml cs ajax web sphere application server ldap oracle log eclipse cv dojo ant soa soap db pl sql sql web services-wsdl soap uddi soap ui jax r jersey window xp client symphony teleca role java developer duration march -april responsibility participated system design planning estimation implementation involved developing use case diagram class diagram sequence diagram process flow diagram forthe module using uml rational rose developed presentation layer using jsp ajax html xhtml cs client validation using javascript developed implemented mvc architectural pattern using spring framework effective usage ee design pattern namely session facade factory method command singleton develop various base framework component application modified account view functionality enable display blocked account detail tag involved modifying bean jsp change middle tier enhancement developed various ejbs session entity bean handling business logic code implementation using java amp groovy re-factoring amp peer review developed session bean dao class account module extensively used spring jdbc data access layer access update information database worked generating web service class using wsdl uddi soap consumed web service using wsdl soap uddi third party authorizing payment customer used jaxb api bind xml schema java class involved unit integration using junit bug fixing user acceptance testing test case used cv version control maven build tool used log logging error message performance log used jboss application server deploy application environment java jsp servlets strut frame work tag library java script cs ajax jdbc jndi oracle java bean strut validation framework window unix ant junit svn qc edit plus web logic application server sql client dream soft solution role software developer duration jan -feb responsibility designed implemented java class interface model design interface layer design team member developed jsps servlets dynamically generate html display data client side extensively used jsp tag library involved writing service write core logic business process involved writing database query stored procedure function etc used java ee design pattern involved client server side validation involved writing jdbc code get data base connectivity implemented server side validation developed model class involved database structuring table creation needed project instrumental tuning framework meet performance standard designed developed web-based software using strut mvc framework used ajax java script handle asynchronous request cs used keep uniformly look application ejbs application developed session bean business logic middle tier level created test plan document testing using junit framework used jaxb parser parsing valid .xml file defined xsd created modified stored procedure function trigger complex sql command application using pl sql monitored error log using log fixed problem designed jdbc connection data retrieval updating purpose also developed connection pool avoid waiting time database connection used tomcat server application development eclipse environment core java jdbc jaxb wsdl rest jsp servlet html javascript cs apache tomcat mysql strut log xsd education bachelor electronics communication engineering",
  "statistics": {
    "word_count": 2947,
    "unique_word_count": 894,
    "avg_word_length": 4.973871733966746,
    "stopword_count": 526
  },
  "metadata": {
    "filename": "Candidate49.docx",
    "file_size": 35111,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:55.975532",
    "input_filename": "Candidate49.json"
  }
}