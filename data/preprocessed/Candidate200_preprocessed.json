{
  "id": "Candidate200",
  "raw_text": "Professional Summary\n8+ years of IT experience in Software Development Life Cycle (SDLC), Web Application Design, Development, Programming, Testing, Support Maintenance and End-User support.\nHands on exposure to different SDLC models like Waterfall, Agile and undergone the training in software Development Processes like SDLC, Test Driven Development (TDD) and Iterative Methodologies.\nWorked extensively on Spring MVC, Hibernate, Web Services, XML, MQ series, JMS and Message Driven Beans.\nExtensive work experience in Object Oriented Analysis and Design, Java/J2EE technologies including Servlets, JSP, JSON, JSF, JDBC, JPA, JSTL, HTML, HTML, HTML5, JavaScript, CSS, CSS3, Twitter Bootstrap, XML, JSON, XSL/XSLT, Angular JS, Node JS, React JS, Ext JS, AJAX, JQuery for developing server side applications and user interfaces in Windows and Unix Environments.\nExpertise in building web enterprise applications using Servlets/JSP’s, Struts 2.x, Hibernate, JSF and Spring Framework features like Spring IOC, Spring MVC, Spring AOP, Spring DAO, Spring JDBC, Spring ORM, Spring Boot, Spring Batch, Spring Cloud, Spring Integrations and Spring Security.\nExperience with Service Oriented Architecture (SOA), development and deployment of Web Services using SOAP, WSDL and Restful Web services, Spring-RS.\nExperience in using DOM4J, JAXB, JAXP parsing and XML Bean to process, validate, parse and extract data from XML files.\nFamiliar in working with application servers and web servers like Web Sphere, Web Logic, Jboss and Apache Tomcat.\nWorked with different IDE’s like Eclipse, Net Beans, JDeveloper, Data studio, Spring Tool Suite, IntelliJ and RAD.\nExtensive experience in working with different databases of RDBMS such as Oracle 9i/10g/11g, IBM DB2, SQL Server, MySQL, PL/SQL and NoSQL such as Cassandra, MongoDB. Writing Stored Procedures, Functions and Triggers for different Data Models.\nExperience with Core Java fundamentals such as Multithreading, Collections, Generics and Annotations.\nExtensive in-depth knowledge in OOAD concepts of Use Cases, Activity Diagrams, Sequence Diagrams and Class Diagrams using UML.\nExpertise in working with Windows, LINUX and UNIX, Shell Scripting and version control tools like CVS, SVN, GitHub.\nGood Experience in developing test cases with Junit, Groovy, Mockito and logging with Log4j. Used JIRA for bug tracking and issue tracking.\nHighly motivated team player with strong communication, analytical, documentation and organizational skills.\nMajor strengths are familiarity with multiple software systems, ability to learn quickly new technologies, adapt to new environments.\nTECHNICAL SKILLS\nEDUCATIONAL DETAILS:\nBachelor of Technology in Computer Science and Engineering\nPROFESSIONAL EXPERIENCE:\nClient: Anixter Inc, Glenview, IL\t\t\t\t\t\t     Jan 2017 – Present\nRole: Sr. Java/UI Developer\nDescription: My role in Information Services (IS Dept) is to analyze & resolve requirements for Order Entry (OE), Order Management (OM) and Store Front System. OE, OM & Store Front application is to help & guide sales team to serve Anixter clients for cable parts & shipping. The application in production since August 2017, and is being implemented in phases to sales locations across United States and Canada. \nResponsibilities: \nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and followed Agile methodology (SCRUM) with daily standup meetings to keep track of project status and used JIRA/Confluence to communicate status and estimates.  \nDesigned dynamic and multi-browser compatible pages using HTML5, JavaScript, Angular 2, and responsive interfaces using Bootstrap, styling using CSS 3 for better user interface experience.\nUsed JSF for bean management in OE application and Icefaces framework extensively for implementing rich interfaces.\nImplemented data grid/tables using Angular 2, jQuery and Used for front end form validation. Bootstrap for front-end client facing single page applications(SPA).\nUsed Spring Framework (MVC, IOC, AOP) to manage project classes. Modified Spring config.xml for bean dependency injection & auto wiring.\nImplemented various Spring beans & Impl classes to meet business requirements. Implemented validation using JSR 303 specifications.\nUsed Spring Boot for building Microservices and developed Spring based application radically faster with very less configuration.\nUsed Spring WS to implement RESTful web services.\nSecured REST API’s by implementing Oauth 2.0 token based authentication/authorization scheme using Spring security.\nUsed JAX-WS to develop Soap web services.\nDeveloped Application to asses JSON and XML from RESTful web service from consumer side using JavaScript, AJAX, Angular 2 and tested different front-end forms using them.\nCreated Spring Batches for running batch jobs and documented the use of Spring Batch.\nIntegrated RabbitMQ and Spring JMS API to send and receive messages from RESTful APIs.\nDeveloped RESTful web services using JAX-RS and Jersey as the implementation for fetching the data from Database.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nUtilized Hibernate reverse engineering to create an automated process that generated hundreds of Java POJO entities from database.\nExtensively used Hibernate mapping, HQL, EH Cache, Query, Criteria, Transactions and Locking. \nWorked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc.\nWritten and executed several stored procedures, triggers, packages, views and functions using DB2 Data Studio.\nPerformed Unit Testing using Junit, Mockito frameworks for all the migrated modules to ensure complete code coverage and perform Smoke test after each build.\nPreviously used Tortoise SVN and migrated to GitHub for source code maintenance. \nUsing Maven build tool to build and deploy the application.\nWorked on Swagger API and auto-generated documentation for all REST calls. \nUsed HP ALM for application lifecycle management & requirements and shifted to JIRA.\nENVIRONMENT:  Java, Eclipse 4.x, HTML5, CSS3, Bootstrap, JSF 2.x, Icefaces 3.x, JavaScript, Angular JS, jQuery, Ajax, JSON, XML, JAXB, IBM WAS 8.5.5, Soap, RESTful Web Services, JDBC, JSP, JMS, Jersey, Spring Boot(Microservices), Spring (MVC, AOP, Security), OAuth 2.0, DB2 Data Studio, MongoDB, Hibernate, Log4J, JUnit, Swagger,  Mockito, Maven 3.x, VMWare, HP Application Life cycle (QC), Tortoise SVN, JIRA, GIT and JBoss.\nClient: Johnson Controls, Milwaukee, WI\t\t\t\t              Aug 2015 – Dec 2016\nRole: Sr. Java/UI Developer\nDescription: Johnson Controls is a global technology and industrial leader serving customers in more than 150 countries and specialize in the following areas: Building efficiency, Batteries and energy storage. Supplier Invoice Router (SIR) is a custom application build to route Supplier Invoices to different JCI ERP System. The SIR Service component reads Invoices from Message Queue (MQ), applies routing rules and routes Invoices to the appropriate ERP System. The SIR UI component is a web based form which is used by the users to correct Invoices that are in exception state in the system. \nResponsibilities:\nDeveloped and Implemented Web Services and used Spring Framework. \nDatabase design and implementation of backend logic in DAO classes & iBatis SQL mapping. \nExtensive experience using framework APIs like Struts, Spring, iBatis and Hibernate. \nConfigured Struts, Hibernate framework with Spring MVC. \nDeveloped user interfaces using JSP, JSF frame work with AJAX, Java Script, HTML, DHTML, CSS, Bootstrap and java scripts frame work like Angular JS, Node JS, Backbone JS, Ext JS and JQuery. \nInvolved in creation of web services, WSDL and web methods with Annotation in hibernate, Used the spring container for data source and to load the Hibernate specific classes. \nInvolved in developing the UI panels using JSF, XHTML, CSS, JSON, DOJO and JQuery. \nCreated applications, connection pools, deployment of JSPs, Servlets and EJBs in WebSphere. \nDeveloped the Presentation and Controller layers using JSP, HTML, Java Script, Business layer using Spring (MVC, IOC, AOP, Batch), DTO and Persistent layer DAO, Hibernate for all modules. \nSingle sign-on (SSO) and multi-factor authentication with this property a user  with a single ID and password to gain access to a connected system or systems without using different usernames or passwords, or in some configurations seamlessly sign on at each system.\nIntegrated Spring Security, SAML 2.0 and OAuth for single sign on for a different audience. \nDesigned and developed Microservices business components using Spring Boot.  Consumed REST based Microservices with Rest template based on RESTful APIs. \nWritten and executed stored-procedures DB2.  \nAutomate test cases using the built in framework in Selenium Web Driver using Netbeans RCP IDE. \nInvolved in creating unit testing of various layers using JUnit and created automated test scripts for integration testing using selenium. \nUsage of version control repository SVN, JIRA/ Quality Center for ticketing and Jenkins for nightly build.\nDesigned the front end using Java Applets and Swing, as well as JSP. \nDeveloped the different components of application such as JSPs, Servlets.\nCreated SQL queries, PL/SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using SQL Server.\nWritten and executed stored-procedures on SQL SERVER back-end through JDBC API.\nUsed TOAD for database query testing, in the process of optimizing the queries. \nUsed Visual Source Safe (VSS) for source code maintenance. \nExpertise in employing Water Fall Model and best practices for software development. \nAuto-Generation of client side code using APACHE AXIS2 with JAXB-RI binding.\nUsed Ant for developing build scripts and deploying the application onto WebLogic. \nDeployed and tested the application on Weblogic7.0 in windows and Unix environment. \nENVIRONMENT:  Java (JDK 1.7), Spring, iBatis, Struts, Hibernate, JSF, EJB, APACHE AXIS2, WSDL, JQuery, JSP, SERVLET, Microservices, MYSQL, Toad, SQL Server, SSO, SAML, OAuth, UML, Netbeans, Selenium, ANT, Xml, JIRA, SWING, SVN, VSS, Jenkins, Weblogic, Water fall model.\nClient: ADP, Phoenix, AZ\t\t\t\t                            \t    Sep 2014 – Jul 2015\nRole: Sr. Java Developer\nDescription: This project is about user to approve or reject his own message. Users can assign tasks to other groups or other person based upon his authorization to particular resource. The system allows user to create events in their calendar. Users get their messages from integrated apps and will be visible to them. They can take action to their message. \nResponsibilities:\nDesigned and coded application components in an Agile environment utilizing a test driven development and SDET approach and pair-programming. \nDeveloped the application using Spring framework (MVC, IOC, AOP, Batch), DTO that leverages model view layer architecture, also configured Dependency Injection. \nUsed SOAP based web services from scratch to develop interfaces to integrate between front end systems and back end systems. \nDesigned and developed the XSD for WSDL. \nUsed Spring Security to provide authentication, authorization, and access-control features for this application. \nDeveloped user interface using JSP, JSP Tag libraries JSTL, HTML5, CSS3, JavaScript, Angular JS, Node JS, JSON to simplify the complexities of the application \nUsed Spring MVC framework for developing web application \nUsed OAuth for service layer security.\nUsed SAML to implement authentication and authorization scenarios.\nImplemented the debugging functionality in an application by using Apache LOG4J framework. \nUsed JMS for the asynchronous exchange of critical business data and events among J2EE components and legacy system. \nDesigned and developed the application using Java Server Faces (JSF) framework. \nDeveloped User Interface in JSP, JavaScript and HTML with Backbone JS Framework. \nDesigned and developed RESTful style Web Service layer using Spring boot, and WSDL. \nRefactored Microservice to make it RESTful, thread-safe, and more configurable. \nImplemented a generic interface to Hibernate criteria API for UI search functionality. \nDeveloped SQL, PL/SQL, stored procedures along with database application scripts. \nDeployment of web, enterprise java components, messaging components and multi-threading. \nWorked on automating data loading, extraction, reports generation using UNIX Shell scripting.\nDeveloped XML Schemas - XSD, DTD for the validation of XML documents, also used Subversion. \nXML (SAX and DOM API, JDOM), XSLT was used for informative view. \nUsed XML web services using SOAP to transfer the amount to transfer application. \nUsed SWING for GUI based coding.\nWritten unit test cases using JUnit and Groovy framework. \nEnvironment: Java (JDK 1.7), J2EE, JSP, PL/SQL, Spring, EJB, MAVEN, JMS, JNDI, Oracle, XML, DOM, SOAP, Spring Framework security using LDAP, JUnit, Mockito, OAuth, SAML, Apache Camel, JSF, Angular JS, JSON WebSphere, Hibernate, Microservices, JDBC, Shell scripting, RESTful APIs, WebLogic, Jboss, SOA, Tomcat.\nClient: T-Mobile, Bothell, WA\t\t\t\t\t\t Dec 2012 – Aug 2014    \nRole: Sr. Java Developer\nDescription: Voice Online Manager Application (VOM) is a product designed to allow the customers to easily monitor their entire telephone account through a single point of online access. Customers will be able to access their home telephone call logs, manage telephone settings, manage voicemail settings and check new voice messages from one source. \n\nResponsibilities: \nActively participated in all phases of SDLC, Requirements gathering, design & Analysis, development, testing, deployment and bug fixing of an application.\nImplemented the frontend and developed UI screens using Spring MVC framework, Hibernate ORM Module, TDD, Spring Core Module, XML, JSP and XSLT. \nWorked on the Spring framework like Spring IOC and Spring DAO. \nImplemented Spring MVC, dependency Injection (DI) and aspect oriented programming (AOP) features along with Hibernate. \nUsed Core Spring framework for dependency injection and Spring Context to add support for message sources and i18n internationalization. \nUsed ORM to integrate with the Hibernate and used the hibernate template to implement the business logic. \nCreated Database Tables, Sequences and wrote hibernate mapping files and POJO class. \nUsed Hibernate tools to interact with the database. \nImplement the presentation layer (GUI), based on open source framework, using Angular JS, HTML, HTML 5, JSP, JSTL, CSS, CSS 3, HTML, JavaScript and Beans. \nJQuery library, Backbone JS and Angular JS has been used for creation of powerful dynamic Web Pages and web applications by using its advanced and cross browser functionality. \nDeveloped flow using AJAX partial page refresh, validation and dynamic drop down list. \nReviewed the XML logical data model and developed XML schema (XSD) to validate the model and used Jax-B for Xml-Java Mapping and Xml-Xslt conversion. \nDeveloped client side code to consume Web Service provided by third party vendors to receive employee information using Axis, XML, WSDL, SOAP. \nSingle Sign-Off and multi-factor authentication is used whereby a single action of signing out terminates access to multiple software systems.\nWorked on SOAP and JAX-RS for Restful Web Services. \nImplemented UNIX shell script for document storage validation & deletion. \nUsed best practices and design patterns Singleton, Template, Strategy, etc. \nImplemented Java Message Services (JMS) using JMS API. \nImplemented Maven build tools to build jar and war files and deployed war files to target servers. \nDeveloped AJAX functionalities using frameworks like JSON, DOJO and JQuery. \nUsed Tortoise SVN for version control and Eclipse RCP for application development. \nUsed log4j to audit, assign, track, and report the issues in the application. \nDeployed the application on Web Sphere Application Server. \nDeveloped JUnit test cases using Mockito.\nInvolved in functional testing and integration testing. \nScrum methodology is used in developing the product. Attended regular scrum meetings for feedbacks and design changes. \nEnvironment: Java (JDK 1.6), J2EE, Eclipse RCP, Spring, Hibernate, SSO, Web Services (REST APIs & SOAP), WebSphere, Tortoise SVN, Maven, HTML, CSS3, Servlets, Angular JS, Backbone JS, AJAX, JQuery, Java Script, JMS, Shell script, Oracle 10g, Agile, Bootstrap and Windows 7.\nClient: Silicon SA Insurance\t\t\t                            Oct 2011 – Nov 2012                  \nJava Developer\nDescription: Silicon SA Insurance is one of the largest mutual life insurance companies. Silicon SA sells a variety of products including Personal insurance, Family insurance, House insurance and Motor insurance. The project involves developing online management tool in order to get 24/7 access to their policies, to check the status of it, reviewing and updating the information and also to find the most up-to-date information available from the database.\nResponsibilities:\nImplemented front end (UI) of the application using HTML5, CSS, Angular JS and Node Js.\nDesigned and developed very complex and large web pages using AngularJS library with AJAX and JSON. \nDesigned JSP pages for Initial applications, Submissions and Maintenance Involved in implementing Message Driven Beans using for JMS systems.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nJSPs, Servlets, XML descriptors, using WebSphere Application Server.\nStreamlined the time bound nightly batches for concurrent processing on various nodes within a cluster using Spring Batch.\nUsed struts validation framework to perform Server side validations.\nUsed SAML to implement authentication and authorization scenarios.\nDeveloped Spring service classes for Initial applications and Maintenance module to implement business logic requirements.\nExternal customer portal is developed in annotation based Spring MVC and Hibernate.\nDesigned and Developed End to End customer self service module using annotation based Spring MVC, Hibernate, JSP and JQuery.\nInvolved in integrating applications with other application using IBM WebSphere.\nInvolved in generating Hibernate Configurations files, Hibernate mapping files and Hibernate data Objects to communicate data in persistence layer.\nWorked on Database Stored Procedures and Functions, views and Synonyms.\nImplemented Java & J2EE design patterns.\nResponsible to prepare Unit test scripts using JUnit.\nEnvironment: Java 1.6, JSP, Spring4.x, Spring MVC, Spring Batch, Hibernate, IBM WebSphere, WebLogic application server8.1, JMS, MySQL, SAML, Eclipse RCP, CVS, Angular JS, Node JS, HTML, CSS, JSON, JUnit, AJAX, Maven.\nClient: Barclays Bank\t\t\t      \t                             Jun 2009 – Sep 2011                  \nJava Developer\nDescription: Barclays Bank provides banking services. It provides Business services like checking accounts, saving accounts and loan services to the clients. The Mortgage calculator provides accurate monthly mortgage payment estimations instantly after users provide basic information like loan amount, down payment, interest rate, loan term, start and end date and property tax rate. Users can also set duration of the fixed interest rate and extra payment to be added each month to get a more flexible payment plan. Graphics including Tables and charts are provided by the project to help clients better understand the payment plan.\nResponsibilities: \nUsed Test-Driven Development with SCRUM Agile methodology and involved in all the business meetings and status update meetings as a part of SCRUM.\nInvolved in the full software development life cycle of the project from analysis and design to testing and deployment. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality, such as portfolio summary and user information. \nPainted UML including Use case diagram, Class diagram, Sequence diagram and Data flow diagram. \nDesign E-R graphs and relationship among different database tables, Created tables with low coupling. \nWritten Form beans for the UI form validation and Action classes for the application flow.\nInvolved in writing the code for server side validations using Struts Validator Framework.\nImplemented asynchronous calls from UI using AJAX.\nWrote PL/SQL Queries, stored procedures, triggers and prepared statements. \nImplemented Spring Security to provide authentication, authorization, and access-control for this application. \nConfigured Spring Cache to cache the results of methods that were frequently called by users or systems. \nDeveloped graphical user interface by using JSP, JSON, HTML5, CSS3, JavaScript/jQuery, and AJAX calls. \nImplemented user input validations using JavaScript and jQuery. \nUsing Angular.js to implement data binding, Module loading. \nImplemented web page responsive design using Bootstrap. \nInspected and debugged front-end code with FireBug.\nAble to create complex JIRA workflows including project workflows, screen schemes, permission scheme and notification schemes in JIRA.\nUsed JIRA and Log4J for project management, tracking and monitoring errors. \nDeveloped test cases and performed unit test using JUnit Framework. \nUsed GitHub for code repository and version control and worked with Stash. \nBuild code using Eclipse and deploy it using JBoss fuse.\nUsing MySQL to develop database.\nEnvironment: Spring, Hibernate, JavaScript, CSS/CSS3, AJAX, HTML/HTML5, JSON, PL/SQL, JDBC, Web Services, Eclipse, Struts, JUnit, iBatis, Scrum, JSP, IBM Websphere, MySQL, Jira, JBoss, Stash, GitHub.",
  "cleaned_text": "Professional Summary years of IT experience in Software Development Life Cycle SDLC , Web Application Design, Development, Programming, Testing, Support Maintenance and End-User support. Hands on exposure to different SDLC models like Waterfall, Agile and undergone the training in software Development Processes like SDLC, Test Driven Development TDD and Iterative Methodologies. Worked extensively on Spring MVC, Hibernate, Web Services, XML, MQ series, JMS and Message Driven Beans. Extensive work experience in Object Oriented Analysis and Design, Java J EE technologies including Servlets, JSP, JSON, JSF, JDBC, JPA, JSTL, HTML, HTML, HTML , JavaScript, CSS, CSS , Twitter Bootstrap, XML, JSON, XSL XSLT, Angular JS, Node JS, React JS, Ext JS, AJAX, JQuery for developing server side applications and user interfaces in Windows and Unix Environments. Expertise in building web enterprise applications using Servlets JSPs, Struts .x, Hibernate, JSF and Spring Framework features like Spring IOC, Spring MVC, Spring AOP, Spring DAO, Spring JDBC, Spring ORM, Spring Boot, Spring Batch, Spring Cloud, Spring Integrations and Spring Security. Experience with Service Oriented Architecture SOA , development and deployment of Web Services using SOAP, WSDL and Restful Web services, Spring-RS. Experience in using DOM J, JAXB, JAXP parsing and XML Bean to process, validate, parse and extract data from XML files. Familiar in working with application servers and web servers like Web Sphere, Web Logic, Jboss and Apache Tomcat. Worked with different IDEs like Eclipse, Net Beans, JDeveloper, Data studio, Spring Tool Suite, IntelliJ and RAD. Extensive experience in working with different databases of RDBMS such as Oracle i g g, IBM DB , SQL Server, MySQL, PL SQL and NoSQL such as Cassandra, MongoDB. Writing Stored Procedures, Functions and Triggers for different Data Models. Experience with Core Java fundamentals such as Multithreading, Collections, Generics and Annotations. Extensive in-depth knowledge in OOAD concepts of Use Cases, Activity Diagrams, Sequence Diagrams and Class Diagrams using UML. Expertise in working with Windows, LINUX and UNIX, Shell Scripting and version control tools like CVS, SVN, GitHub. Good Experience in developing test cases with Junit, Groovy, Mockito and logging with Log j. Used JIRA for bug tracking and issue tracking. Highly motivated team player with strong communication, analytical, documentation and organizational skills. Major strengths are familiarity with multiple software systems, ability to learn quickly new technologies, adapt to new environments. TECHNICAL SKILLS EDUCATIONAL DETAILS Bachelor of Technology in Computer Science and Engineering PROFESSIONAL EXPERIENCE Client Anixter Inc, Glenview, IL Jan Present Role Sr. Java UI Developer Description My role in Information Services IS Dept is to analyze & resolve requirements for Order Entry OE , Order Management OM and Store Front System. OE, OM & Store Front application is to help & guide sales team to serve Anixter clients for cable parts & shipping. The application in production since August , and is being implemented in phases to sales locations across United States and Canada. Responsibilities Involved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle SDLC and followed Agile methodology SCRUM with daily standup meetings to keep track of project status and used JIRA Confluence to communicate status and estimates. Designed dynamic and multi-browser compatible pages using HTML , JavaScript, Angular , and responsive interfaces using Bootstrap, styling using CSS for better user interface experience. Used JSF for bean management in OE application and Icefaces framework extensively for implementing rich interfaces. Implemented data grid tables using Angular , jQuery and Used for front end form validation. Bootstrap for front-end client facing single page applications SPA . Used Spring Framework MVC, IOC, AOP to manage project classes. Modified Spring config.xml for bean dependency injection & auto wiring. Implemented various Spring beans & Impl classes to meet business requirements. Implemented validation using JSR specifications. Used Spring Boot for building Microservices and developed Spring based application radically faster with very less configuration. Used Spring WS to implement RESTful web services. Secured REST APIs by implementing Oauth . token based authentication authorization scheme using Spring security. Used JAX-WS to develop Soap web services. Developed Application to asses JSON and XML from RESTful web service from consumer side using JavaScript, AJAX, Angular and tested different front-end forms using them. Created Spring Batches for running batch jobs and documented the use of Spring Batch. Integrated RabbitMQ and Spring JMS API to send and receive messages from RESTful APIs. Developed RESTful web services using JAX-RS and Jersey as the implementation for fetching the data from Database. Developed session EJB and message driven bean MDB to process JMS XML messages. Utilized Hibernate reverse engineering to create an automated process that generated hundreds of Java POJO entities from database. Extensively used Hibernate mapping, HQL, EH Cache, Query, Criteria, Transactions and Locking. Worked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc. Written and executed several stored procedures, triggers, packages, views and functions using DB Data Studio. Performed Unit Testing using Junit, Mockito frameworks for all the migrated modules to ensure complete code coverage and perform Smoke test after each build. Previously used Tortoise SVN and migrated to GitHub for source code maintenance. Using Maven build tool to build and deploy the application. Worked on Swagger API and auto-generated documentation for all REST calls. Used HP ALM for application lifecycle management & requirements and shifted to JIRA. ENVIRONMENT Java, Eclipse .x, HTML , CSS , Bootstrap, JSF .x, Icefaces .x, JavaScript, Angular JS, jQuery, Ajax, JSON, XML, JAXB, IBM WAS . . , Soap, RESTful Web Services, JDBC, JSP, JMS, Jersey, Spring Boot Microservices , Spring MVC, AOP, Security , OAuth . , DB Data Studio, MongoDB, Hibernate, Log J, JUnit, Swagger, Mockito, Maven .x, VMWare, HP Application Life cycle QC , Tortoise SVN, JIRA, GIT and JBoss. Client Johnson Controls, Milwaukee, WI Aug Dec Role Sr. Java UI Developer Description Johnson Controls is a global technology and industrial leader serving customers in more than countries and specialize in the following areas Building efficiency, Batteries and energy storage. Supplier Invoice Router SIR is a custom application build to route Supplier Invoices to different JCI ERP System. The SIR Service component reads Invoices from Message Queue MQ , applies routing rules and routes Invoices to the appropriate ERP System. The SIR UI component is a web based form which is used by the users to correct Invoices that are in exception state in the system. Responsibilities Developed and Implemented Web Services and used Spring Framework. Database design and implementation of backend logic in DAO classes & iBatis SQL mapping. Extensive experience using framework APIs like Struts, Spring, iBatis and Hibernate. Configured Struts, Hibernate framework with Spring MVC. Developed user interfaces using JSP, JSF frame work with AJAX, Java Script, HTML, DHTML, CSS, Bootstrap and java scripts frame work like Angular JS, Node JS, Backbone JS, Ext JS and JQuery. Involved in creation of web services, WSDL and web methods with Annotation in hibernate, Used the spring container for data source and to load the Hibernate specific classes. Involved in developing the UI panels using JSF, XHTML, CSS, JSON, DOJO and JQuery. Created applications, connection pools, deployment of JSPs, Servlets and EJBs in WebSphere. Developed the Presentation and Controller layers using JSP, HTML, Java Script, Business layer using Spring MVC, IOC, AOP, Batch , DTO and Persistent layer DAO, Hibernate for all modules. Single sign-on SSO and multi-factor authentication with this property a user with a single ID and password to gain access to a connected system or systems without using different usernames or passwords, or in some configurations seamlessly sign on at each system. Integrated Spring Security, SAML . and OAuth for single sign on for a different audience. Designed and developed Microservices business components using Spring Boot. Consumed REST based Microservices with Rest template based on RESTful APIs. Written and executed stored-procedures DB . Automate test cases using the built in framework in Selenium Web Driver using Netbeans RCP IDE. Involved in creating unit testing of various layers using JUnit and created automated test scripts for integration testing using selenium. Usage of version control repository SVN, JIRA Quality Center for ticketing and Jenkins for nightly build. Designed the front end using Java Applets and Swing, as well as JSP. Developed the different components of application such as JSPs, Servlets. Created SQL queries, PL SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using SQL Server. Written and executed stored-procedures on SQL SERVER back-end through JDBC API. Used TOAD for database query testing, in the process of optimizing the queries. Used Visual Source Safe VSS for source code maintenance. Expertise in employing Water Fall Model and best practices for software development. Auto-Generation of client side code using APACHE AXIS with JAXB-RI binding. Used Ant for developing build scripts and deploying the application onto WebLogic. Deployed and tested the application on Weblogic . in windows and Unix environment. ENVIRONMENT Java JDK . , Spring, iBatis, Struts, Hibernate, JSF, EJB, APACHE AXIS , WSDL, JQuery, JSP, SERVLET, Microservices, MYSQL, Toad, SQL Server, SSO, SAML, OAuth, UML, Netbeans, Selenium, ANT, Xml, JIRA, SWING, SVN, VSS, Jenkins, Weblogic, Water fall model. Client ADP, Phoenix, AZ Sep Jul Role Sr. Java Developer Description This project is about user to approve or reject his own message. Users can assign tasks to other groups or other person based upon his authorization to particular resource. The system allows user to create events in their calendar. Users get their messages from integrated apps and will be visible to them. They can take action to their message. Responsibilities Designed and coded application components in an Agile environment utilizing a test driven development and SDET approach and pair-programming. Developed the application using Spring framework MVC, IOC, AOP, Batch , DTO that leverages model view layer architecture, also configured Dependency Injection. Used SOAP based web services from scratch to develop interfaces to integrate between front end systems and back end systems. Designed and developed the XSD for WSDL. Used Spring Security to provide authentication, authorization, and access-control features for this application. Developed user interface using JSP, JSP Tag libraries JSTL, HTML , CSS , JavaScript, Angular JS, Node JS, JSON to simplify the complexities of the application Used Spring MVC framework for developing web application Used OAuth for service layer security. Used SAML to implement authentication and authorization scenarios. Implemented the debugging functionality in an application by using Apache LOG J framework. Used JMS for the asynchronous exchange of critical business data and events among J EE components and legacy system. Designed and developed the application using Java Server Faces JSF framework. Developed User Interface in JSP, JavaScript and HTML with Backbone JS Framework. Designed and developed RESTful style Web Service layer using Spring boot, and WSDL. Refactored Microservice to make it RESTful, thread-safe, and more configurable. Implemented a generic interface to Hibernate criteria API for UI search functionality. Developed SQL, PL SQL, stored procedures along with database application scripts. Deployment of web, enterprise java components, messaging components and multi-threading. Worked on automating data loading, extraction, reports generation using UNIX Shell scripting. Developed XML Schemas - XSD, DTD for the validation of XML documents, also used Subversion. XML SAX and DOM API, JDOM , XSLT was used for informative view. Used XML web services using SOAP to transfer the amount to transfer application. Used SWING for GUI based coding. Written unit test cases using JUnit and Groovy framework. Environment Java JDK . , J EE, JSP, PL SQL, Spring, EJB, MAVEN, JMS, JNDI, Oracle, XML, DOM, SOAP, Spring Framework security using LDAP, JUnit, Mockito, OAuth, SAML, Apache Camel, JSF, Angular JS, JSON WebSphere, Hibernate, Microservices, JDBC, Shell scripting, RESTful APIs, WebLogic, Jboss, SOA, Tomcat. Client T-Mobile, Bothell, WA Dec Aug Role Sr. Java Developer Description Voice Online Manager Application VOM is a product designed to allow the customers to easily monitor their entire telephone account through a single point of online access. Customers will be able to access their home telephone call logs, manage telephone settings, manage voicemail settings and check new voice messages from one source. Responsibilities Actively participated in all phases of SDLC, Requirements gathering, design & Analysis, development, testing, deployment and bug fixing of an application. Implemented the frontend and developed UI screens using Spring MVC framework, Hibernate ORM Module, TDD, Spring Core Module, XML, JSP and XSLT. Worked on the Spring framework like Spring IOC and Spring DAO. Implemented Spring MVC, dependency Injection DI and aspect oriented programming AOP features along with Hibernate. Used Core Spring framework for dependency injection and Spring Context to add support for message sources and i n internationalization. Used ORM to integrate with the Hibernate and used the hibernate template to implement the business logic. Created Database Tables, Sequences and wrote hibernate mapping files and POJO class. Used Hibernate tools to interact with the database. Implement the presentation layer GUI , based on open source framework, using Angular JS, HTML, HTML , JSP, JSTL, CSS, CSS , HTML, JavaScript and Beans. JQuery library, Backbone JS and Angular JS has been used for creation of powerful dynamic Web Pages and web applications by using its advanced and cross browser functionality. Developed flow using AJAX partial page refresh, validation and dynamic drop down list. Reviewed the XML logical data model and developed XML schema XSD to validate the model and used Jax-B for Xml-Java Mapping and Xml-Xslt conversion. Developed client side code to consume Web Service provided by third party vendors to receive employee information using Axis, XML, WSDL, SOAP. Single Sign-Off and multi-factor authentication is used whereby a single action of signing out terminates access to multiple software systems. Worked on SOAP and JAX-RS for Restful Web Services. Implemented UNIX shell script for document storage validation & deletion. Used best practices and design patterns Singleton, Template, Strategy, etc. Implemented Java Message Services JMS using JMS API. Implemented Maven build tools to build jar and war files and deployed war files to target servers. Developed AJAX functionalities using frameworks like JSON, DOJO and JQuery. Used Tortoise SVN for version control and Eclipse RCP for application development. Used log j to audit, assign, track, and report the issues in the application. Deployed the application on Web Sphere Application Server. Developed JUnit test cases using Mockito. Involved in functional testing and integration testing. Scrum methodology is used in developing the product. Attended regular scrum meetings for feedbacks and design changes. Environment Java JDK . , J EE, Eclipse RCP, Spring, Hibernate, SSO, Web Services REST APIs & SOAP , WebSphere, Tortoise SVN, Maven, HTML, CSS , Servlets, Angular JS, Backbone JS, AJAX, JQuery, Java Script, JMS, Shell script, Oracle g, Agile, Bootstrap and Windows . Client Silicon SA Insurance Oct Nov Java Developer Description Silicon SA Insurance is one of the largest mutual life insurance companies. Silicon SA sells a variety of products including Personal insurance, Family insurance, House insurance and Motor insurance. The project involves developing online management tool in order to get access to their policies, to check the status of it, reviewing and updating the information and also to find the most up-to-date information available from the database. Responsibilities Implemented front end UI of the application using HTML , CSS, Angular JS and Node Js. Designed and developed very complex and large web pages using AngularJS library with AJAX and JSON. Designed JSP pages for Initial applications, Submissions and Maintenance Involved in implementing Message Driven Beans using for JMS systems. Developed session EJB and message driven bean MDB to process JMS XML messages. JSPs, Servlets, XML descriptors, using WebSphere Application Server. Streamlined the time bound nightly batches for concurrent processing on various nodes within a cluster using Spring Batch. Used struts validation framework to perform Server side validations. Used SAML to implement authentication and authorization scenarios. Developed Spring service classes for Initial applications and Maintenance module to implement business logic requirements. External customer portal is developed in annotation based Spring MVC and Hibernate. Designed and Developed End to End customer self service module using annotation based Spring MVC, Hibernate, JSP and JQuery. Involved in integrating applications with other application using IBM WebSphere. Involved in generating Hibernate Configurations files, Hibernate mapping files and Hibernate data Objects to communicate data in persistence layer. Worked on Database Stored Procedures and Functions, views and Synonyms. Implemented Java & J EE design patterns. Responsible to prepare Unit test scripts using JUnit. Environment Java . , JSP, Spring .x, Spring MVC, Spring Batch, Hibernate, IBM WebSphere, WebLogic application server . , JMS, MySQL, SAML, Eclipse RCP, CVS, Angular JS, Node JS, HTML, CSS, JSON, JUnit, AJAX, Maven. Client Barclays Bank Jun Sep Java Developer Description Barclays Bank provides banking services. It provides Business services like checking accounts, saving accounts and loan services to the clients. The Mortgage calculator provides accurate monthly mortgage payment estimations instantly after users provide basic information like loan amount, down payment, interest rate, loan term, start and end date and property tax rate. Users can also set duration of the fixed interest rate and extra payment to be added each month to get a more flexible payment plan. Graphics including Tables and charts are provided by the project to help clients better understand the payment plan. Responsibilities Used Test-Driven Development with SCRUM Agile methodology and involved in all the business meetings and status update meetings as a part of SCRUM. Involved in the full software development life cycle of the project from analysis and design to testing and deployment. Extensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality, such as portfolio summary and user information. Painted UML including Use case diagram, Class diagram, Sequence diagram and Data flow diagram. Design E-R graphs and relationship among different database tables, Created tables with low coupling. Written Form beans for the UI form validation and Action classes for the application flow. Involved in writing the code for server side validations using Struts Validator Framework. Implemented asynchronous calls from UI using AJAX. Wrote PL SQL Queries, stored procedures, triggers and prepared statements. Implemented Spring Security to provide authentication, authorization, and access-control for this application. Configured Spring Cache to cache the results of methods that were frequently called by users or systems. Developed graphical user interface by using JSP, JSON, HTML , CSS , JavaScript jQuery, and AJAX calls. Implemented user input validations using JavaScript and jQuery. Using Angular.js to implement data binding, Module loading. Implemented web page responsive design using Bootstrap. Inspected and debugged front-end code with FireBug. Able to create complex JIRA workflows including project workflows, screen schemes, permission scheme and notification schemes in JIRA. Used JIRA and Log J for project management, tracking and monitoring errors. Developed test cases and performed unit test using JUnit Framework. Used GitHub for code repository and version control and worked with Stash. Build code using Eclipse and deploy it using JBoss fuse. Using MySQL to develop database. Environment Spring, Hibernate, JavaScript, CSS CSS , AJAX, HTML HTML , JSON, PL SQL, JDBC, Web Services, Eclipse, Struts, JUnit, iBatis, Scrum, JSP, IBM Websphere, MySQL, Jira, JBoss, Stash, GitHub.",
  "preprocessed_text": "professional summary year experience software development life cycle sdlc web application design development programming testing support maintenance end-user support hand exposure different sdlc model like waterfall agile undergone training software development process like sdlc test driven development tdd iterative methodology worked extensively spring mvc hibernate web service xml mq series jms message driven bean extensive work experience object oriented analysis design java ee technology including servlets jsp json jsf jdbc jpa jstl html html html javascript cs cs twitter bootstrap xml json xsl xslt angular j node j react j ext j ajax jquery developing server side application user interface window unix environment expertise building web enterprise application using servlets jsps strut .x hibernate jsf spring framework feature like spring ioc spring mvc spring aop spring dao spring jdbc spring orm spring boot spring batch spring cloud spring integration spring security experience service oriented architecture soa development deployment web service using soap wsdl restful web service spring-rs experience using dom jaxb jaxp parsing xml bean process validate parse extract data xml file familiar working application server web server like web sphere web logic jboss apache tomcat worked different ides like eclipse bean jdeveloper data studio spring tool suite intellij rad extensive experience working different database rdbms oracle ibm db sql server mysql pl sql nosql cassandra mongodb writing stored procedure function trigger different data model experience core java fundamental multithreading collection generic annotation extensive in-depth knowledge ooad concept use case activity diagram sequence diagram class diagram using uml expertise working window linux unix shell scripting version control tool like cv svn good experience developing test case junit groovy mockito logging log j. used jira bug tracking issue tracking highly motivated team player strong communication analytical documentation organizational skill major strength familiarity multiple software system ability learn quickly new technology adapt new environment technical skill educational detail bachelor technology computer science engineering professional experience client anixter inc glenview il jan present role sr. java ui developer description role information service dept analyze resolve requirement order entry oe order management om store front system oe om store front application help guide sale team serve anixter client cable part shipping application production since august implemented phase sale location across united state canada responsibility involved analysis specification design implementation testing phase software development life cycle sdlc followed agile methodology scrum daily standup meeting keep track project status used jira confluence communicate status estimate designed dynamic multi-browser compatible page using html javascript angular responsive interface using bootstrap styling using cs better user interface experience used jsf bean management oe application icefaces framework extensively implementing rich interface implemented data grid table using angular jquery used front end form validation bootstrap front-end client facing single application spa used spring framework mvc ioc aop manage project class modified spring config.xml bean dependency injection auto wiring implemented various spring bean impl class meet business requirement implemented validation using jsr specification used spring boot building microservices developed spring based application radically faster less configuration used spring w implement restful web service secured rest apis implementing oauth token based authentication authorization scheme using spring security used jax-ws develop soap web service developed application ass json xml restful web service consumer side using javascript ajax angular tested different front-end form using created spring batch running batch job documented use spring batch integrated rabbitmq spring jms api send receive message restful apis developed restful web service using jax-rs jersey implementation fetching data database developed session ejb message driven bean mdb process jms xml message utilized hibernate reverse engineering create automated process generated hundred java pojo entity database extensively used hibernate mapping hql eh cache query criterion transaction locking worked mongodb database concept locking transaction index sharding replication schema design etc written executed several stored procedure trigger package view function using db data studio performed unit testing using junit mockito framework migrated module ensure complete code coverage perform smoke test build previously used tortoise svn migrated source code maintenance using maven build tool build deploy application worked swagger api auto-generated documentation rest call used hp alm application lifecycle management requirement shifted jira environment java eclipse .x html cs bootstrap jsf .x icefaces .x javascript angular j jquery ajax json xml jaxb ibm soap restful web service jdbc jsp jms jersey spring boot microservices spring mvc aop security oauth db data studio mongodb hibernate log junit swagger mockito maven .x vmware hp application life cycle qc tortoise svn jira git jboss client johnson control milwaukee wi aug dec role sr. java ui developer description johnson control global technology industrial leader serving customer country specialize following area building efficiency battery energy storage supplier invoice router sir custom application build route supplier invoice different jci erp system sir service component read invoice message queue mq applies routing rule route invoice appropriate erp system sir ui component web based form used user correct invoice exception state system responsibility developed implemented web service used spring framework database design implementation backend logic dao class ibatis sql mapping extensive experience using framework apis like strut spring ibatis hibernate configured strut hibernate framework spring mvc developed user interface using jsp jsf frame work ajax java script html dhtml cs bootstrap java script frame work like angular j node j backbone j ext j jquery involved creation web service wsdl web method annotation hibernate used spring container data source load hibernate specific class involved developing ui panel using jsf xhtml cs json dojo jquery created application connection pool deployment jsps servlets ejbs websphere developed presentation controller layer using jsp html java script business layer using spring mvc ioc aop batch dto persistent layer dao hibernate module single sign-on sso multi-factor authentication property user single id password gain access connected system system without using different usernames password configuration seamlessly sign system integrated spring security saml oauth single sign different audience designed developed microservices business component using spring boot consumed rest based microservices rest template based restful apis written executed stored-procedures db automate test case using built framework selenium web driver using netbeans rcp ide involved creating unit testing various layer using junit created automated test script integration testing using selenium usage version control repository svn jira quality center ticketing jenkins nightly build designed front end using java applet swing well jsp developed different component application jsps servlets created sql query pl sql stored procedure function database layer studying required business object validating stored procedure using sql server written executed stored-procedures sql server back-end jdbc api used toad database query testing process optimizing query used visual source safe vss source code maintenance expertise employing water fall model best practice software development auto-generation client side code using apache axis jaxb-ri binding used ant developing build script deploying application onto weblogic deployed tested application weblogic window unix environment environment java jdk spring ibatis strut hibernate jsf ejb apache axis wsdl jquery jsp servlet microservices mysql toad sql server sso saml oauth uml netbeans selenium ant xml jira swing svn vss jenkins weblogic water fall model client adp phoenix az sep jul role sr. java developer description project user approve reject message user assign task group person based authorization particular resource system allows user create event calendar user get message integrated apps visible take action message responsibility designed coded application component agile environment utilizing test driven development sdet approach pair-programming developed application using spring framework mvc ioc aop batch dto leverage model view layer architecture also configured dependency injection used soap based web service scratch develop interface integrate front end system back end system designed developed xsd wsdl used spring security provide authentication authorization access-control feature application developed user interface using jsp jsp tag library jstl html cs javascript angular j node j json simplify complexity application used spring mvc framework developing web application used oauth service layer security used saml implement authentication authorization scenario implemented debugging functionality application using apache log framework used jms asynchronous exchange critical business data event among ee component legacy system designed developed application using java server face jsf framework developed user interface jsp javascript html backbone j framework designed developed restful style web service layer using spring boot wsdl refactored microservice make restful thread-safe configurable implemented generic interface hibernate criterion api ui search functionality developed sql pl sql stored procedure along database application script deployment web enterprise java component messaging component multi-threading worked automating data loading extraction report generation using unix shell scripting developed xml schema xsd dtd validation xml document also used subversion xml sax dom api jdom xslt used informative view used xml web service using soap transfer amount transfer application used swing gui based coding written unit test case using junit groovy framework environment java jdk ee jsp pl sql spring ejb maven jms jndi oracle xml dom soap spring framework security using ldap junit mockito oauth saml apache camel jsf angular j json websphere hibernate microservices jdbc shell scripting restful apis weblogic jboss soa tomcat client t-mobile bothell wa dec aug role sr. java developer description voice online manager application vom product designed allow customer easily monitor entire telephone account single point online access customer able access home telephone call log manage telephone setting manage voicemail setting check new voice message one source responsibility actively participated phase sdlc requirement gathering design analysis development testing deployment bug fixing application implemented frontend developed ui screen using spring mvc framework hibernate orm module tdd spring core module xml jsp xslt worked spring framework like spring ioc spring dao implemented spring mvc dependency injection di aspect oriented programming aop feature along hibernate used core spring framework dependency injection spring context add support message source internationalization used orm integrate hibernate used hibernate template implement business logic created database table sequence wrote hibernate mapping file pojo class used hibernate tool interact database implement presentation layer gui based open source framework using angular j html html jsp jstl cs cs html javascript bean jquery library backbone j angular j used creation powerful dynamic web page web application using advanced cross browser functionality developed flow using ajax partial refresh validation dynamic drop list reviewed xml logical data model developed xml schema xsd validate model used jax-b xml-java mapping xml-xslt conversion developed client side code consume web service provided third party vendor receive employee information using axis xml wsdl soap single sign-off multi-factor authentication used whereby single action signing terminates access multiple software system worked soap jax-rs restful web service implemented unix shell script document storage validation deletion used best practice design pattern singleton template strategy etc implemented java message service jms using jms api implemented maven build tool build jar war file deployed war file target server developed ajax functionality using framework like json dojo jquery used tortoise svn version control eclipse rcp application development used log audit assign track report issue application deployed application web sphere application server developed junit test case using mockito involved functional testing integration testing scrum methodology used developing product attended regular scrum meeting feedback design change environment java jdk ee eclipse rcp spring hibernate sso web service rest apis soap websphere tortoise svn maven html cs servlets angular j backbone j ajax jquery java script jms shell script oracle agile bootstrap window client silicon sa insurance oct nov java developer description silicon sa insurance one largest mutual life insurance company silicon sa sell variety product including personal insurance family insurance house insurance motor insurance project involves developing online management tool order get access policy check status reviewing updating information also find up-to-date information database responsibility implemented front end ui application using html cs angular j node j designed developed complex large web page using angularjs library ajax json designed jsp page initial application submission maintenance involved implementing message driven bean using jms system developed session ejb message driven bean mdb process jms xml message jsps servlets xml descriptor using websphere application server streamlined time bound nightly batch concurrent processing various node within cluster using spring batch used strut validation framework perform server side validation used saml implement authentication authorization scenario developed spring service class initial application maintenance module implement business logic requirement external customer portal developed annotation based spring mvc hibernate designed developed end end customer self service module using annotation based spring mvc hibernate jsp jquery involved integrating application application using ibm websphere involved generating hibernate configuration file hibernate mapping file hibernate data object communicate data persistence layer worked database stored procedure function view synonym implemented java ee design pattern responsible prepare unit test script using junit environment java jsp spring .x spring mvc spring batch hibernate ibm websphere weblogic application server jms mysql saml eclipse rcp cv angular j node j html cs json junit ajax maven client barclays bank jun sep java developer description barclays bank provides banking service provides business service like checking account saving account loan service client mortgage calculator provides accurate monthly mortgage payment estimation instantly user provide basic information like loan amount payment interest rate loan term start end property tax rate user also set duration fixed interest rate extra payment added get flexible payment plan graphic including table chart provided project help client better understand payment plan responsibility used test-driven development scrum agile methodology involved business meeting status update meeting part scrum involved full software development life cycle project analysis design testing deployment extensive use core java collection generic exception handling design pattern functionality portfolio summary user information painted uml including use case diagram class diagram sequence diagram data flow diagram design e-r graph relationship among different database table created table low coupling written form bean ui form validation action class application flow involved writing code server side validation using strut validator framework implemented asynchronous call ui using ajax wrote pl sql query stored procedure trigger prepared statement implemented spring security provide authentication authorization access-control application configured spring cache cache result method frequently called user system developed graphical user interface using jsp json html cs javascript jquery ajax call implemented user input validation using javascript jquery using angular.js implement data binding module loading implemented web responsive design using bootstrap inspected debugged front-end code firebug able create complex jira workflow including project workflow screen scheme permission scheme notification scheme jira used jira log project management tracking monitoring error developed test case performed unit test using junit framework used code repository version control worked stash build code using eclipse deploy using jboss fuse using mysql develop database environment spring hibernate javascript cs cs ajax html html json pl sql jdbc web service eclipse strut junit ibatis scrum jsp ibm websphere mysql jira jboss stash",
  "statistics": {
    "word_count": 3741,
    "unique_word_count": 1038,
    "avg_word_length": 4.8401496925955625,
    "stopword_count": 684
  },
  "metadata": {
    "filename": "Candidate200.docx",
    "file_size": 46484,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:00.431885",
    "input_filename": "Candidate200.json"
  }
}