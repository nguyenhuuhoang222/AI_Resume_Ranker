{
  "id": "Candidate144",
  "raw_text": "Candidate 144\nJava/J2ee Developer - American Software Resources\nNaperville IL\npsrleo81@gmail.com              \t\t\t\t\t Mobile: 201-535-3300\nHaving 9+ years of extensive experience in developing web and Client-Server applications using Java/J2EE technologies. \nStrong in Object Oriented Analysis, design (OOAD) programming (OOPs) core design patterns, J2ee design patterns, SOLID principles, UML Diagrams and best practices. \nGood working experience Spring Boot and Spring Microservices.\nExpertise in JSP, Servlets, spring 4.0 (Boot, Core, Security, AOP, ORM, Transaction Management).\nExpertise in using JPA, Hibernate and Spring data (MySQL)\nSolid experience in 12 Factor Application principles and Netflix OSS (Eureka, Zuul, Feign, Ribbon)\nGood working experience with Apache Storm, Kafka, and Zookeeper.\nGood working experience Writing Unit Test cases to test REST endpoints. \nExperienced in planning and executing all phases of software life cycle development using waterfall and RUP project life cycle methodologies. In addition, training communication and co-ordination with end users in the software process have been the strong area. \nExpertise in developing the multi-tier web applications in both Spring MVC and Struts MVC that ensures clear separation of layers and rapid application development\nGood working experience In-Memory cache frameworks (Hazelcast distributed cache, Redis).\nProficiency in core java concepts like Threads, Exception handling, Generics, Strings etc. \nWorking experience in Webservice (SOAP) and Restful webservice. \nExtensive Working experience with repositories like GIT, VSS, Perforce, Harvest & SVN. Experience in build tool like Maven, Ant.\nExpertise in developing in Spring Security, Spring Batch and Spring Integration.\nHaving the working experience in UML design using Rational Software Architect 7.0 and Rational Rose 7.0. \nStrong Experience of working with RAD, WASD5.0, Spring Tool Suite, JDeveloper, Eclipse, Net Beans.\nStrong working experience in java testing frameworks such as JUnit and Cucumber\nExperience working on UNIX platform and aware of Unix commands. \nGood working experience with code quality management tools like sonarQube, Jacoco.\nExcellent working knowledge of writing XML documents and parsing them using SAX parsers.\nHaving experience to the frameworks like Bootstrap, AngularJS, jQuery, ExtJS and NodeJS.\nPossess application Server experience with Web logic, IBM Web Sphere Application Server., JBoss and Tomcat.\nStrong in analytical and problem solving abilities. Good in Data Structures and Algorithms.\nStrong expertise with Agile, Scrum and TDD methodology \nExperienced in Relational databases such as Oracle versions from 7.x to 10g, DB2-UDB, SQL Server 2000, MySQL, Postgres, MongoDB and LDAP. \nRevelation to the domains such as Health Care, Education, Exports Sales and Content Management. Worked with reputed clients like Medco, Stanford, Deloitte and Open Text Corporation.\nWorking knowledge of continuous integration and continuous deploy mechanism and technologies like Jenkins, Maven etc. \nHaving some exposure with Hybris e-commerce framework, CMS Frameworks like Liferay and Magnolia.\nInvolved in designing MongoDB multi-sharded cluster and monitoring with MMS.\nGood understanding & expertise in web technologies like HTML, DHTML, Java script, AJAX. \nDesign highly available, cost effective and fault tolerant systems using multiple EC2 instances, Auto Scaling, Elastic Load Balance and AMIs.\nUsed middleware tools like JMS MDB's, MULE, TIBCO and configured Connection Factories and Topics/Queues.\nHaving experience in creating Docker images using maven Docker plugin  \nHaving some exposure with Lucene, Apache SOLR search engine\nPossess good experience with Java build tools such as Ant, Maven and Gradle.\nHaving the knowledge in the PEGA tool and finished certified the training in PRPC 6.1.\nGood experience in enabling REST endpoints Security Using OAuth2 in the Mule REST console.\nHaving working knowledge Migrating complex, multi-tier applications on AWS\nHaving the working experience in the Middleware tool Websphere Message Broking and Java Web DynPro. \nQuick learner and excellent team player, ability to meet tight deadlines and work under pressure. Good organizational skills, troubleshooting skills, and personal skills.  \nEducation:\nBachelor of Technologies (Electrical & Electronics Engineering) May 2003.\nCertification:\nSun Certified Java Programmer with aggregate of 72%(SCJP java version 1.5)\nSoftware Skills:\nOperating System               \t    :  Windows XP/NT/98, Unix, Solaris.\nLanguages                              \t    : Java, J2EE, PEGA, JAVA WebDynPro.\nWeb Languages                  \t    :  Servlets, JSP, JavaScript, HTML.\nRDBMS                               \t    :  SQL Server, ORACLE, DB2\nApp/Web Servers               \t    :  Tomcat 5.0, BEA Web Logic, IBM Web Sphere, JBoss\nFramework                  \t:  Spring, Spring Boot, Spring Microservices, Spring Data Spring AOP, Spring Security and OAuth, JSF, STRUTS,  Hibernate, Spring, EJB, Web services , Spring Boot,   Spring Micro services, Hadoop & SPRING MVC.\nWeb Services\t: JAX-RS (Jersey, Spring REST), SOAP JAX-WS Web Services\nVersion controller         \t:     Microsoft Visual Source Safe 6.0, SVN, Perforce,    Harvest, GIT\nDesign tools\t: Rational rose, AQT, Rational Software Architect\nMiddleware tools\t: WebSphere Message Broking.\nOther Technologies\t: Mule ESB, Jenkins, Bamboo, Apache Storm, Zookeeper, Kafka\nUnit Testing\t: JUNIT & Mockito\nTools\t: Putty, SOAP UI, Post Man, RAC, MoboXtream, Connect, MDHT, IntelliJ Idea, File Zilla, DB Visualizer, swagger, , Sonar Lint, Jenkins, DB Visualizer, SourceTree, GitBash, Ubuntu, JIRA, Websphere message broker.\nWork Experiance:                                                                                         \nTech Lead Java / J2EE Developer\tAugust-2016 to present\nAzuba - Napersoft -Naperville, IL\nProject Description:\t\nAzuba is an independent cloud based health information platform that enables consumers to automate the secure management of their health information at no cost to the consumer. Azuba enables consumers and caregivers with mobile access to the consumer’s health and medical records across healthcare providers (physicians, hospitals, pharmacies, labs, dentists, urgent care, etc.), payers (insurance companies) and Health Information Exchanges (HIEs) while securely sharing that information with other providers, caregivers and family.\nResponsibilities:\nInvolved in gathering and analyzing the requirements, designing, developing, and testing. \nMavenizing the applications using Spring Boot framework and integrated with code quality tool sonarqube. \nInvolved in two micro services (Patients, Users) development using Netflix OSS and spring boot\nDesign and implemented the backend layer using Hibernate and Spring data. \nImplemented logging using log4j and Spring AOP.\nInvolved in the UML Design, applied OOAD and SOLID Design Principles. \nApplied GOF design pattern on creational design pattern like Singleton, Factory and Abstract Factory, Structural design pattern like Adapter, Decorator, Façade patterns and Behavioural such as Strategy, Command, and Template Patterns respectively. \nImplemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. \nInvolved in the identification of the Restful API services for the given user stories\nInvolved in the Project Setup process of routing and filtering requests to a micro service application using the Netflix Zuul edge service library.\nDeveloped Zuul API gateway for Authentication using Redis Cache.\nWorked on Java Multithreading, Collections & Coherence Framework.\nInvolved in the integration of the third party Connect Open source and its configuration\nDeveloped Web services to allow communication between applications through SOAP JAX-WS as well as Restful JAX-RS webservices\nMajor contribution to Building Swagger Specifications (API Documentation) for Restful Web Services.\nConfigured and implemented the MDHT code integrated with the application and transforming the CCDA document to the java source code.\nExplored the CONNECT 4.5 open source tool as integration feasibility study to Azuba tools.\nImplemented junit tests and mandated 90% min. code coverage. \nInvolved in implementing the web services and testing with soapUI.\nInvestigate, debug and fixed potential bugs or defects in the implemented code. \nDrove performance-tuning efforts for the systems engineering team.e.g. Performance. \nWorked on migrating complex, multi-tier applications on AWS\nExtensive experience in designing MongoDB multi-sharded cluster and monitoring with MMS.\nDesign highly available, cost effective and fault tolerant systems using multiple EC2 instances, Auto Scaling, Elastic Load Balance and AMIs.\nConfigured a virtual host for Development and Test environments.\nInvolved in the integration of the third party Direct Connect for secured mail transmit\nReview the code and assign the rework to the team with optimized solution. And also create and assign defect to the team.\nInvolved in coordinating with the team members in application development activities.\nUnit Testing, Test plan creation. Defect analysis and fixing. \nEnvironment:\nJava,  Spring Boot, Spring Microservices, Spring Data, Spring AOP, Hibernate, JPA, Restful Webservice, SOAP Webservice, Zuul, Eureka, Redis, Hazelcast,  MDHT, Connect Open Source, Direct Mail, Soapui, Angular JS, MongoDB, Swagger, Telosys, Junit, MySQL, Maven, Glassfish server, JBoss, Apache Kafka, Elastic Search, ESB Mule, Mule, SOAP UI, Eclipse, SVN, IceScrum.\nTech Lead  Java / J2EE Developer\t\t\t\tOctober-2015 to August-2016\nChild Support - Deloitte - Pennsylvania Avenue NW , Washington, DC\nProject Description:\nProvides caseworkers with a prioritized list of cases and a concise and fast way to find information about a case. Supervisor are able to better understand their teams and caseworkers performance, while Local Office Directors Four D Directors can find out their States and local Offices relative performance and how it compares with their peers and set goals to improve.\nResponsibilities:\nGetting the Requirement from the client and Writing SRS/CRS document.\nUsed Spring BOOT to create spring applications. \nImplemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. \nDesign and implemented the backend layer using Hibernate and Spring data. \nInvolved in the UML Design, applied OOAD and SOLID Design Principles. \nImplemented the modules  spring 4.0 (Boot, Core, Security, AOP, ORM, Transaction Management)\nImplemented the caching mechanism in Hibernate to load data from database.\nMavenizing the applications using spring boot framework and integrated with code quality tool sonarqube. \nImplemented the GOF design pattern on creational design pattern like Singleton, Factory and Abstract Factory, Structural design pattern like Adapter, Decorator, Façade patterns and Behavioural such as Strategy, Command, and Observer Patterns respectively. \nDesign and Development of the Object Oriented applications using OOA and OOD techniques using Rational Rose. \nInvolved in the implementation with Apache Storm, Kafka, and Zookeeper.\nApplied 12 Factor Application principles and Netflix OSS (Eureka, Zuul, Feign, Ribbon)\nDeveloped PL/SQL queries. Actively worked on stored procedures.\nDesigned Use Case Diagrams, Class Diagrams and Sequence Diagrams and Object Diagrams to model the detail design of the application using UML.\nInvolved in designed microservices using Netflix OSS, and ELK Stack.\nSecuring REST endpoints with JWT tokens\nCreating Docker images using maven Docker plugin\nImplemented Java Multithreading to refresh the cache at a given set of time interval.\nExtensive experience in designing MongoDB multi-sharded cluster and monitoring with MMS.\nInvolved in coordinating with the team member from onshore and offshore in application development activities.\nUsed hazelcast cache module to store rest tokens to with time to leave interval to clear the session.\nWorked in implementing on RESTful and SOAP based web services.\nInvolved in the code reviews to verify the coding standards and Java documentation by using customized eclipse plugins like checkStyle and PMD.\nReview the code and assign the rework to the team with optimized solution. And also create and assign defect to the team. \nInvolved in implementing the web services and testing with soapUI.\nDesigning and deploying enterprise-wide scalable operations on AWS\nDeveloped SOAP based web services to provide services for front-end web.\nUI Development using HTML5, CSS3, Bootstrap, JavaScript and jQuery\nProvide the status to the onshore team and of the offshore team on a daily basis.\nMigrating complex, multi-tier applications on AWS\nGenerated WSDL file using Apache CXF and extensively used Soap UI for services testing.\nEffectively handling change requests by proposing and supporting the design, development and testing.\nResponsible for the source code maintenance using version control using SVN system. \nUnit Testing, Test plan creation. Defect analysis and fixing.\nEnvironment:\nJava,  Spring MVC, Hibernate, JPA, Restful Webservice, SOAP Webservice, Swagger, Telosys,  MySQL, Maven, Glassfish server, JBoss, ESB Mule, SOAP UI, PMD, CheckStyle, Docker, Eureka, Zuul, Feign, Ribbon , Hazelcast, Redis, ELK Stack, JWT Tokens, Eclipse Juno,MongoDB, SVN, IceScrum.\nSr. Java / J2EE Developer\t\tNovember-2013 to September-2015  \nGlobal Contract Management System - IBM - Madison Avenue, New York\nProject Description:\nGlobal Contract Management System is a web application that creates and manages contract documents such as Offer Letters and Certification of Acceptance and follows a work flow for creating and handling customer leasing contracts.\nResponsibilities:\nGetting the Requirement from the client and Writing SRS/CRS document.\nDeveloped application Spring BOOT and Spring Microservices.\nImplemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. \nCreated WSDL & Generated data objects using WSDL, Java, Spring, JAX-WS, Axis, apache CXF and developed mapping code for several Web Services interfaces for various profile management endpoints. Design and implemented the backend layer using Hibernate and Spring data. \nInvolved in the UML Design, applied OOAD and SOLID Design Principles. \nImplemented the modules  spring 4.0 (Boot, Core, Security, AOP, ORM, Transaction Management)\nImplemented the caching mechanism in Hibernate to load data from database.\nGood experience in enabling REST endpoints Security Using OAuth2 in the Mule REST console.\nMavenizing the applications using spring boot framework and integrated with code quality tool sonarqube\nDeveloped SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow. \nDesign and implementation client pages. \nStrong working experience in java testing frameworks such as JUnit and Cucumber\nInvolved in coordinating with the team members in application development activities.\nInvolved in preparing the prototype for the complete application.\nDeveloped database scripts and procedures using PL/SQL.\nReview the code and assign the rework to the team with optimized solution. And also create and assign defect to the team.\nInvolved and have working experience with Apache Storm, Kafka, and Zookeeper.\nJ2EE to communicate legacy COBOL based mainframe implementations.\nInvolved in debugging the product using Eclipse and JIRA Bug Tracking\nDesigned Use Case Diagrams, Class Diagrams and Sequence Diagrams and Object Diagrams to model the detail design of the application using UML.\nProvide the status to the onshore team on a daily basis.\nUsed Maven script for building and deploying the application.\nInvolved in the code reviews to verify the coding standards and Java documentation by using customized eclipse plugins like checkStyle and PMD.\nSystem Integration testing at application developer level.\nExchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format.\nDeveloped Java multi-threaded batch offline bulk upload tool, web applications using Spring, Servlets and UI layer using JSPs, JavaScript, HTML, CSS, Angular JS.\t\nWorked on Rest based Web services for MULE ESB flows. \nCreation of the Queues in the WMB (WebSphere Message Broking tool) and creation of work flows with esql files and deploying in the form of BAR broker archive file. This involves in the creation of message flow by accepting the data format provided and validated accordingly and sent back to the Queue. There are different nodes i.e. out, catch & fault.\nInvolved in development of Unit test cases and testing the application using \nJUnit.\nEnvironment:\nJava, Spring, Hibernate, JSF, Restful Webservice, DB2, Websphere 7.0, Restful webservice, SOAP Webservice, Websphere message Broking tool, Rational Software Architect,  Rational Rose, RTC, AQT, DB2.\nSr. Java / J2EE Developer\t\t\t\tJuly-2012 to October-2013\nClient Benefit Administrator -Medco - Franklin Lakes, NJ \nProject Description:\nClient Benefit Administrator is the application which allows to create the plan Instances using the available plans in CBM application.CBA uses the entities available in the CBM and creates the an instance plan as expected by different clients.CBA has client hierarchy as Client, activity, Business Modules and Instance, it has data hierarchy as client, carrier, contract, group.\nResponsibilities:\nDeveloped SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow.\nUnderstanding the requirements from the client.\nInvolved in technical design and development.\nDeveloped business modules with JSP, Servlet, Struts framework, Java, XML/XSL and EJB technologies.\nDesign and Developed using WebService using Apache Axis on JBOSS.\nDeveloped SOAP based web services to provide services for front-end web.\nCreated WSDL & Generated data objects using WSDL, Java, Spring, JAX-WS, Axis, apache CXF and developed mapping code for several Web Services interfaces for various profile management endpoints.\nInvolved in the UML Design and OOAD design patterns.\nEnabling REST endpoints Security Using OAuth2 in the Mule REST console.\nImplemented Java Multithreading to refresh the cache at a given set of time interval.\nDeveloped SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow.\nExperience working on UNIX platform and aware of Unix commands.\nExchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format.\nUsed middleware tools like JMS MDB's, MULE, TIBCO and configured Connection Factories and Topics/Queues.\nHaving the knowledge in the PEGA tool and finished certified the training in PRPC 6.1.\nInvolved in coordinating with the team members in application development activities.\nPreparation of Functional Document, High Level designs Document, Test cases, Code review documents. \nDeveloped HQL queries for CRUD.\nUsed Maven script for building and deploying the application.\nStore persistent JMS messages or temporarily store messages sent using the store-and-forward feature.\nDesign and implementation client pages using Spring MVC \nDevelopment of Controller business logic, DAO classes implementation. \nAdministration of the application server and performance tuning the application.\nSystem Integration testing at application developer level.\nInvolved in debugging the product using Eclipse and JIRA Bug Tracking\nDocumenting all the deliverables according to standards.\nUnit Testing, Test plan creation. Defect analysis and fixing.\nEnvironment:\nJava, Spring, Spring MVC, Hibernate, PEGA, DB2, Websphere 6.0, Rational Application Development tool(RAD),Rational Software Architect, Restful Webservice, SOAP,  Rational Rose,Harvest Repository,  Wily server monitoring, Filezilla, Putty, Remedy ticket tool.\nJava / J2EE Developer\t\t\t\tAugust-2010 to June-2012\nWebViewer  - Open Text Corporation - 7th Avenue, New York\n Project Description:   \nWeb Viewer is an application for displaying, navigating, searching attributes, printing documents in Web-based scenarios and for appending comments to these documents. The documents are stored in Livelink ECM – Archive Server or any other supported repository.Business documents need to be captured, and they need to be readily accessible after they have been captured. Livelink ECM – Imaging accommodates both the need to scan documents and the need to view electronic documents. All companies have to cope with business-critical paper-centric processes, such as order management, accounts payable, and contract management. \nResponsibilities:\nInvolved in the UML Design creation of Class Diagrams and Sequence diagrams\nDesign and implementation client pages using JSF \nUsed Hibernate to persist and retrieve data from database. \nInvolved in preparing the prototype for the complete application.\nInvolved in coordinating with the team members in application development activities.\nDesign, develop, architect presentation, business, persistence and control layer components utilizing MVC architecture and using Struts, Spring and Hibernate frameworks. \nDeveloped SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow.\nDeveloped code for AOP (Aspect Oriented Programming) to put Logging with the help of Log4j, and also worked on implementing profiling aspect in to application to address issues like performance and tracing the application failure.\nWorked on GUI internationalization using JSP and Core Java\nWorked proficiently in core java concepts like Threads, Exception handling, Generics, Strings etc.\nPerformed Validations on UI data using JSF validators and JavaScript.\nUsed Maven script for building and deploying the application.\nExchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format.\nUsed HTML, CSS, JSP, JSTL to develop user interface.\nConfigured a virtual host for Development and Test environments.\nStore persistent JMS messages or temporarily store messages sent using the store-and-forward feature.\nDevelopment of Backing bean business logic. \nIdentify the bottlenecks in the code and work towards to fix the application performance issues.\nInvolved in code review to make sure that better coding standards are followed.\nUnit Testing, Test plan creation. Defect analysis and Bug fixing.\nEnvironment:\nJava, JSF, Hibernate, Spring, MSSql, Weblogic, Eclipse, Perforce, JConsole, Rational Rose.\nJava / J2EE Developer\t\t\t\t\tOctober-2008 to August-2010 \nFeedback - Stanford University - Serra Mall, Stanford, CA\nProject Description:  \nDevelop a Web-based database application for authors to create and manage feedback surveys, for students to submit and view evaluation data, and for administrator to manage the process. Provide role-based access to input, search and view data via the Web.  Create downloadable reports and allow ad-hoc reporting based on defined access levels. \nResponsibilities:\nDesign and implementation client pages using JSF \nContributed for application design and along with the day to day development activity I have also managed the Database as a database administrator.\nDevelopment of Backing bean business logic. \nDeveloped business modules with JSP, Servlet, Struts framework, Java, XML/XSL and EJB technologies.\nPerformed Validations on UI data using JSF validators and JavaScript.\nInvolved in debugging the product using Eclipse and JIRA Bug Tracking\nWorked on GUI internationalization using JSP and Core Java\nDeveloped HQL queries for CRUD.\nInvolved in preparing the prototype for the complete application.\nDevelopment of Backing bean business logic. \nExtensively used EJB and various J2EE (JSP/EJB/JMS) component for the implementation of the modules.\nIdentify the bottlenecks in the code and work towards to fix the application performance issues.\nUnit Testing, Test plan creation. Defect analysis and Bug fixing.\nEnvironment:\nHibernate, Spring, JSF, EJB Tomcat Server, SQL Server,\n MyEclipse4.0, SVN. ",
  "cleaned_text": "Candidate Java J ee Developer - American Software Resources Naperville IL Mobile Having years of extensive experience in developing web and Client-Server applications using Java J EE technologies. Strong in Object Oriented Analysis, design OOAD programming OOPs core design patterns, J ee design patterns, SOLID principles, UML Diagrams and best practices. Good working experience Spring Boot and Spring Microservices. Expertise in JSP, Servlets, spring . Boot, Core, Security, AOP, ORM, Transaction Management . Expertise in using JPA, Hibernate and Spring data MySQL Solid experience in Factor Application principles and Netflix OSS Eureka, Zuul, Feign, Ribbon Good working experience with Apache Storm, Kafka, and Zookeeper. Good working experience Writing Unit Test cases to test REST endpoints. Experienced in planning and executing all phases of software life cycle development using waterfall and RUP project life cycle methodologies. In addition, training communication and co-ordination with end users in the software process have been the strong area. Expertise in developing the multi-tier web applications in both Spring MVC and Struts MVC that ensures clear separation of layers and rapid application development Good working experience In-Memory cache frameworks Hazelcast distributed cache, Redis . Proficiency in core java concepts like Threads, Exception handling, Generics, Strings etc. Working experience in Webservice SOAP and Restful webservice. Extensive Working experience with repositories like GIT, VSS, Perforce, Harvest & SVN. Experience in build tool like Maven, Ant. Expertise in developing in Spring Security, Spring Batch and Spring Integration. Having the working experience in UML design using Rational Software Architect . and Rational Rose . . Strong Experience of working with RAD, WASD . , Spring Tool Suite, JDeveloper, Eclipse, Net Beans. Strong working experience in java testing frameworks such as JUnit and Cucumber Experience working on UNIX platform and aware of Unix commands. Good working experience with code quality management tools like sonarQube, Jacoco. Excellent working knowledge of writing XML documents and parsing them using SAX parsers. Having experience to the frameworks like Bootstrap, AngularJS, jQuery, ExtJS and NodeJS. Possess application Server experience with Web logic, IBM Web Sphere Application Server., JBoss and Tomcat. Strong in analytical and problem solving abilities. Good in Data Structures and Algorithms. Strong expertise with Agile, Scrum and TDD methodology Experienced in Relational databases such as Oracle versions from .x to g, DB -UDB, SQL Server , MySQL, Postgres, MongoDB and LDAP. Revelation to the domains such as Health Care, Education, Exports Sales and Content Management. Worked with reputed clients like Medco, Stanford, Deloitte and Open Text Corporation. Working knowledge of continuous integration and continuous deploy mechanism and technologies like Jenkins, Maven etc. Having some exposure with Hybris e-commerce framework, CMS Frameworks like Liferay and Magnolia. Involved in designing MongoDB multi-sharded cluster and monitoring with MMS. Good understanding & expertise in web technologies like HTML, DHTML, Java script, AJAX. Design highly available, cost effective and fault tolerant systems using multiple EC instances, Auto Scaling, Elastic Load Balance and AMIs. Used middleware tools like JMS MDB s, MULE, TIBCO and configured Connection Factories and Topics Queues. Having experience in creating Docker images using maven Docker plugin Having some exposure with Lucene, Apache SOLR search engine Possess good experience with Java build tools such as Ant, Maven and Gradle. Having the knowledge in the PEGA tool and finished certified the training in PRPC . . Good experience in enabling REST endpoints Security Using OAuth in the Mule REST console. Having working knowledge Migrating complex, multi-tier applications on AWS Having the working experience in the Middleware tool Websphere Message Broking and Java Web DynPro. Quick learner and excellent team player, ability to meet tight deadlines and work under pressure. Good organizational skills, troubleshooting skills, and personal skills. Education Bachelor of Technologies Electrical & Electronics Engineering May . Certification Sun Certified Java Programmer with aggregate of SCJP java version . Software Skills Operating System Windows XP NT , Unix, Solaris. Languages Java, J EE, PEGA, JAVA WebDynPro. Web Languages Servlets, JSP, JavaScript, HTML. RDBMS SQL Server, ORACLE, DB App Web Servers Tomcat . , BEA Web Logic, IBM Web Sphere, JBoss Framework Spring, Spring Boot, Spring Microservices, Spring Data Spring AOP, Spring Security and OAuth, JSF, STRUTS, Hibernate, Spring, EJB, Web services , Spring Boot, Spring Micro services, Hadoop & SPRING MVC. Web Services JAX-RS Jersey, Spring REST , SOAP JAX-WS Web Services Version controller Microsoft Visual Source Safe . , SVN, Perforce, Harvest, GIT Design tools Rational rose, AQT, Rational Software Architect Middleware tools WebSphere Message Broking. Other Technologies Mule ESB, Jenkins, Bamboo, Apache Storm, Zookeeper, Kafka Unit Testing JUNIT & Mockito Tools Putty, SOAP UI, Post Man, RAC, MoboXtream, Connect, MDHT, IntelliJ Idea, File Zilla, DB Visualizer, swagger, , Sonar Lint, Jenkins, DB Visualizer, SourceTree, GitBash, Ubuntu, JIRA, Websphere message broker. Work Experiance Tech Lead Java J EE Developer August- to present Azuba - Napersoft -Naperville, IL Project Description Azuba is an independent cloud based health information platform that enables consumers to automate the secure management of their health information at no cost to the consumer. Azuba enables consumers and caregivers with mobile access to the consumers health and medical records across healthcare providers physicians, hospitals, pharmacies, labs, dentists, urgent care, etc. , payers insurance companies and Health Information Exchanges HIEs while securely sharing that information with other providers, caregivers and family. Responsibilities Involved in gathering and analyzing the requirements, designing, developing, and testing. Mavenizing the applications using Spring Boot framework and integrated with code quality tool sonarqube. Involved in two micro services Patients, Users development using Netflix OSS and spring boot Design and implemented the backend layer using Hibernate and Spring data. Implemented logging using log j and Spring AOP. Involved in the UML Design, applied OOAD and SOLID Design Principles. Applied GOF design pattern on creational design pattern like Singleton, Factory and Abstract Factory, Structural design pattern like Adapter, Decorator, Facade patterns and Behavioural such as Strategy, Command, and Template Patterns respectively. Implemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. Involved in the identification of the Restful API services for the given user stories Involved in the Project Setup process of routing and filtering requests to a micro service application using the Netflix Zuul edge service library. Developed Zuul API gateway for Authentication using Redis Cache. Worked on Java Multithreading, Collections & Coherence Framework. Involved in the integration of the third party Connect Open source and its configuration Developed Web services to allow communication between applications through SOAP JAX-WS as well as Restful JAX-RS webservices Major contribution to Building Swagger Specifications API Documentation for Restful Web Services. Configured and implemented the MDHT code integrated with the application and transforming the CCDA document to the java source code. Explored the CONNECT . open source tool as integration feasibility study to Azuba tools. Implemented junit tests and mandated min. code coverage. Involved in implementing the web services and testing with soapUI. Investigate, debug and fixed potential bugs or defects in the implemented code. Drove performance-tuning efforts for the systems engineering team.e.g. Performance. Worked on migrating complex, multi-tier applications on AWS Extensive experience in designing MongoDB multi-sharded cluster and monitoring with MMS. Design highly available, cost effective and fault tolerant systems using multiple EC instances, Auto Scaling, Elastic Load Balance and AMIs. Configured a virtual host for Development and Test environments. Involved in the integration of the third party Direct Connect for secured mail transmit Review the code and assign the rework to the team with optimized solution. And also create and assign defect to the team. Involved in coordinating with the team members in application development activities. Unit Testing, Test plan creation. Defect analysis and fixing. Environment Java, Spring Boot, Spring Microservices, Spring Data, Spring AOP, Hibernate, JPA, Restful Webservice, SOAP Webservice, Zuul, Eureka, Redis, Hazelcast, MDHT, Connect Open Source, Direct Mail, Soapui, Angular JS, MongoDB, Swagger, Telosys, Junit, MySQL, Maven, Glassfish server, JBoss, Apache Kafka, Elastic Search, ESB Mule, Mule, SOAP UI, Eclipse, SVN, IceScrum. Tech Lead Java J EE Developer October- to August- Child Support - Deloitte - Pennsylvania Avenue NW , Washington, DC Project Description Provides caseworkers with a prioritized list of cases and a concise and fast way to find information about a case. Supervisor are able to better understand their teams and caseworkers performance, while Local Office Directors Four D Directors can find out their States and local Offices relative performance and how it compares with their peers and set goals to improve. Responsibilities Getting the Requirement from the client and Writing SRS CRS document. Used Spring BOOT to create spring applications. Implemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. Design and implemented the backend layer using Hibernate and Spring data. Involved in the UML Design, applied OOAD and SOLID Design Principles. Implemented the modules spring . Boot, Core, Security, AOP, ORM, Transaction Management Implemented the caching mechanism in Hibernate to load data from database. Mavenizing the applications using spring boot framework and integrated with code quality tool sonarqube. Implemented the GOF design pattern on creational design pattern like Singleton, Factory and Abstract Factory, Structural design pattern like Adapter, Decorator, Facade patterns and Behavioural such as Strategy, Command, and Observer Patterns respectively. Design and Development of the Object Oriented applications using OOA and OOD techniques using Rational Rose. Involved in the implementation with Apache Storm, Kafka, and Zookeeper. Applied Factor Application principles and Netflix OSS Eureka, Zuul, Feign, Ribbon Developed PL SQL queries. Actively worked on stored procedures. Designed Use Case Diagrams, Class Diagrams and Sequence Diagrams and Object Diagrams to model the detail design of the application using UML. Involved in designed microservices using Netflix OSS, and ELK Stack. Securing REST endpoints with JWT tokens Creating Docker images using maven Docker plugin Implemented Java Multithreading to refresh the cache at a given set of time interval. Extensive experience in designing MongoDB multi-sharded cluster and monitoring with MMS. Involved in coordinating with the team member from onshore and offshore in application development activities. Used hazelcast cache module to store rest tokens to with time to leave interval to clear the session. Worked in implementing on RESTful and SOAP based web services. Involved in the code reviews to verify the coding standards and Java documentation by using customized eclipse plugins like checkStyle and PMD. Review the code and assign the rework to the team with optimized solution. And also create and assign defect to the team. Involved in implementing the web services and testing with soapUI. Designing and deploying enterprise-wide scalable operations on AWS Developed SOAP based web services to provide services for front-end web. UI Development using HTML , CSS , Bootstrap, JavaScript and jQuery Provide the status to the onshore team and of the offshore team on a daily basis. Migrating complex, multi-tier applications on AWS Generated WSDL file using Apache CXF and extensively used Soap UI for services testing. Effectively handling change requests by proposing and supporting the design, development and testing. Responsible for the source code maintenance using version control using SVN system. Unit Testing, Test plan creation. Defect analysis and fixing. Environment Java, Spring MVC, Hibernate, JPA, Restful Webservice, SOAP Webservice, Swagger, Telosys, MySQL, Maven, Glassfish server, JBoss, ESB Mule, SOAP UI, PMD, CheckStyle, Docker, Eureka, Zuul, Feign, Ribbon , Hazelcast, Redis, ELK Stack, JWT Tokens, Eclipse Juno,MongoDB, SVN, IceScrum. Sr. Java J EE Developer November- to September- Global Contract Management System - IBM - Madison Avenue, New York Project Description Global Contract Management System is a web application that creates and manages contract documents such as Offer Letters and Certification of Acceptance and follows a work flow for creating and handling customer leasing contracts. Responsibilities Getting the Requirement from the client and Writing SRS CRS document. Developed application Spring BOOT and Spring Microservices. Implemented the Restful webservice for various microservices and coding different layers like Business, DAO and Model Layers. Created WSDL & Generated data objects using WSDL, Java, Spring, JAX-WS, Axis, apache CXF and developed mapping code for several Web Services interfaces for various profile management endpoints. Design and implemented the backend layer using Hibernate and Spring data. Involved in the UML Design, applied OOAD and SOLID Design Principles. Implemented the modules spring . Boot, Core, Security, AOP, ORM, Transaction Management Implemented the caching mechanism in Hibernate to load data from database. Good experience in enabling REST endpoints Security Using OAuth in the Mule REST console. Mavenizing the applications using spring boot framework and integrated with code quality tool sonarqube Developed SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow. Design and implementation client pages. Strong working experience in java testing frameworks such as JUnit and Cucumber Involved in coordinating with the team members in application development activities. Involved in preparing the prototype for the complete application. Developed database scripts and procedures using PL SQL. Review the code and assign the rework to the team with optimized solution. And also create and assign defect to the team. Involved and have working experience with Apache Storm, Kafka, and Zookeeper. J EE to communicate legacy COBOL based mainframe implementations. Involved in debugging the product using Eclipse and JIRA Bug Tracking Designed Use Case Diagrams, Class Diagrams and Sequence Diagrams and Object Diagrams to model the detail design of the application using UML. Provide the status to the onshore team on a daily basis. Used Maven script for building and deploying the application. Involved in the code reviews to verify the coding standards and Java documentation by using customized eclipse plugins like checkStyle and PMD. System Integration testing at application developer level. Exchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format. Developed Java multi-threaded batch offline bulk upload tool, web applications using Spring, Servlets and UI layer using JSPs, JavaScript, HTML, CSS, Angular JS. Worked on Rest based Web services for MULE ESB flows. Creation of the Queues in the WMB WebSphere Message Broking tool and creation of work flows with esql files and deploying in the form of BAR broker archive file. This involves in the creation of message flow by accepting the data format provided and validated accordingly and sent back to the Queue. There are different nodes i.e. out, catch & fault. Involved in development of Unit test cases and testing the application using JUnit. Environment Java, Spring, Hibernate, JSF, Restful Webservice, DB , Websphere . , Restful webservice, SOAP Webservice, Websphere message Broking tool, Rational Software Architect, Rational Rose, RTC, AQT, DB . Sr. Java J EE Developer July- to October- Client Benefit Administrator -Medco - Franklin Lakes, NJ Project Description Client Benefit Administrator is the application which allows to create the plan Instances using the available plans in CBM application.CBA uses the entities available in the CBM and creates the an instance plan as expected by different clients.CBA has client hierarchy as Client, activity, Business Modules and Instance, it has data hierarchy as client, carrier, contract, group. Responsibilities Developed SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow. Understanding the requirements from the client. Involved in technical design and development. Developed business modules with JSP, Servlet, Struts framework, Java, XML XSL and EJB technologies. Design and Developed using WebService using Apache Axis on JBOSS. Developed SOAP based web services to provide services for front-end web. Created WSDL & Generated data objects using WSDL, Java, Spring, JAX-WS, Axis, apache CXF and developed mapping code for several Web Services interfaces for various profile management endpoints. Involved in the UML Design and OOAD design patterns. Enabling REST endpoints Security Using OAuth in the Mule REST console. Implemented Java Multithreading to refresh the cache at a given set of time interval. Developed SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow. Experience working on UNIX platform and aware of Unix commands. Exchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format. Used middleware tools like JMS MDB s, MULE, TIBCO and configured Connection Factories and Topics Queues. Having the knowledge in the PEGA tool and finished certified the training in PRPC . . Involved in coordinating with the team members in application development activities. Preparation of Functional Document, High Level designs Document, Test cases, Code review documents. Developed HQL queries for CRUD. Used Maven script for building and deploying the application. Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature. Design and implementation client pages using Spring MVC Development of Controller business logic, DAO classes implementation. Administration of the application server and performance tuning the application. System Integration testing at application developer level. Involved in debugging the product using Eclipse and JIRA Bug Tracking Documenting all the deliverables according to standards. Unit Testing, Test plan creation. Defect analysis and fixing. Environment Java, Spring, Spring MVC, Hibernate, PEGA, DB , Websphere . , Rational Application Development tool RAD ,Rational Software Architect, Restful Webservice, SOAP, Rational Rose,Harvest Repository, Wily server monitoring, Filezilla, Putty, Remedy ticket tool. Java J EE Developer August- to June- WebViewer - Open Text Corporation - th Avenue, New York Project Description Web Viewer is an application for displaying, navigating, searching attributes, printing documents in Web-based scenarios and for appending comments to these documents. The documents are stored in Livelink ECM Archive Server or any other supported repository.Business documents need to be captured, and they need to be readily accessible after they have been captured. Livelink ECM Imaging accommodates both the need to scan documents and the need to view electronic documents. All companies have to cope with business-critical paper-centric processes, such as order management, accounts payable, and contract management. Responsibilities Involved in the UML Design creation of Class Diagrams and Sequence diagrams Design and implementation client pages using JSF Used Hibernate to persist and retrieve data from database. Involved in preparing the prototype for the complete application. Involved in coordinating with the team members in application development activities. Design, develop, architect presentation, business, persistence and control layer components utilizing MVC architecture and using Struts, Spring and Hibernate frameworks. Developed SPRING framework using IOC, Factory Pattern, JMS and applied Spring MVC and Spring WebFlow. Developed code for AOP Aspect Oriented Programming to put Logging with the help of Log j, and also worked on implementing profiling aspect in to application to address issues like performance and tracing the application failure. Worked on GUI internationalization using JSP and Core Java Worked proficiently in core java concepts like Threads, Exception handling, Generics, Strings etc. Performed Validations on UI data using JSF validators and JavaScript. Used Maven script for building and deploying the application. Exchanged data between front-end and back-end over HTTP Protocol using SOAP and WSDL, and XML data packets format. Used HTML, CSS, JSP, JSTL to develop user interface. Configured a virtual host for Development and Test environments. Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature. Development of Backing bean business logic. Identify the bottlenecks in the code and work towards to fix the application performance issues. Involved in code review to make sure that better coding standards are followed. Unit Testing, Test plan creation. Defect analysis and Bug fixing. Environment Java, JSF, Hibernate, Spring, MSSql, Weblogic, Eclipse, Perforce, JConsole, Rational Rose. Java J EE Developer October- to August- Feedback - Stanford University - Serra Mall, Stanford, CA Project Description Develop a Web-based database application for authors to create and manage feedback surveys, for students to submit and view evaluation data, and for administrator to manage the process. Provide role-based access to input, search and view data via the Web. Create downloadable reports and allow ad-hoc reporting based on defined access levels. Responsibilities Design and implementation client pages using JSF Contributed for application design and along with the day to day development activity I have also managed the Database as a database administrator. Development of Backing bean business logic. Developed business modules with JSP, Servlet, Struts framework, Java, XML XSL and EJB technologies. Performed Validations on UI data using JSF validators and JavaScript. Involved in debugging the product using Eclipse and JIRA Bug Tracking Worked on GUI internationalization using JSP and Core Java Developed HQL queries for CRUD. Involved in preparing the prototype for the complete application. Development of Backing bean business logic. Extensively used EJB and various J EE JSP EJB JMS component for the implementation of the modules. Identify the bottlenecks in the code and work towards to fix the application performance issues. Unit Testing, Test plan creation. Defect analysis and Bug fixing. Environment Hibernate, Spring, JSF, EJB Tomcat Server, SQL Server, MyEclipse . , SVN.",
  "preprocessed_text": "candidate java ee developer american software resource naperville il mobile year extensive experience developing web client-server application using java ee technology strong object oriented analysis design ooad programming oops core design pattern ee design pattern solid principle uml diagram best practice good working experience spring boot spring microservices expertise jsp servlets spring boot core security aop orm transaction management expertise using jpa hibernate spring data mysql solid experience factor application principle netflix os eureka zuul feign ribbon good working experience apache storm kafka zookeeper good working experience writing unit test case test rest endpoint experienced planning executing phase software life cycle development using waterfall rup project life cycle methodology addition training communication co-ordination end user software process strong area expertise developing multi-tier web application spring mvc strut mvc ensures clear separation layer rapid application development good working experience in-memory cache framework hazelcast distributed cache redis proficiency core java concept like thread exception handling generic string etc working experience webservice soap restful webservice extensive working experience repository like git vss perforce harvest svn experience build tool like maven ant expertise developing spring security spring batch spring integration working experience uml design using rational software architect rational rose strong experience working rad wasd spring tool suite jdeveloper eclipse bean strong working experience java testing framework junit cucumber experience working unix platform aware unix command good working experience code quality management tool like sonarqube jacoco excellent working knowledge writing xml document parsing using sax parser experience framework like bootstrap angularjs jquery extjs nodejs possess application server experience web logic ibm web sphere application server. jboss tomcat strong analytical problem solving ability good data structure algorithm strong expertise agile scrum tdd methodology experienced relational database oracle version .x db -udb sql server mysql postgres mongodb ldap revelation domain health care education export sale content management worked reputed client like medco stanford deloitte open text corporation working knowledge continuous integration continuous deploy mechanism technology like jenkins maven etc exposure hybris e-commerce framework cm framework like liferay magnolia involved designing mongodb multi-sharded cluster monitoring mm good understanding expertise web technology like html dhtml java script ajax design highly cost effective fault tolerant system using multiple ec instance auto scaling elastic load balance amis used middleware tool like jms mdb mule tibco configured connection factory topic queue experience creating docker image using maven docker plugin exposure lucene apache solr search engine possess good experience java build tool ant maven gradle knowledge pega tool finished certified training prpc good experience enabling rest endpoint security using oauth mule rest console working knowledge migrating complex multi-tier application aws working experience middleware tool websphere message broking java web dynpro quick learner excellent team player ability meet tight deadline work pressure good organizational skill troubleshooting skill personal skill education bachelor technology electrical electronics engineering may certification sun certified java programmer aggregate scjp java version software skill operating system window xp nt unix solaris language java ee pega java webdynpro web language servlets jsp javascript html rdbms sql server oracle db app web server tomcat bea web logic ibm web sphere jboss framework spring spring boot spring microservices spring data spring aop spring security oauth jsf strut hibernate spring ejb web service spring boot spring micro service hadoop spring mvc web service jax-rs jersey spring rest soap jax-ws web service version controller microsoft visual source safe svn perforce harvest git design tool rational rose aqt rational software architect middleware tool websphere message broking technology mule esb jenkins bamboo apache storm zookeeper kafka unit testing junit mockito tool putty soap ui post man rac moboxtream connect mdht intellij idea file zilla db visualizer swagger sonar lint jenkins db visualizer sourcetree gitbash ubuntu jira websphere message broker work experiance tech lead java ee developer august- present azuba napersoft -naperville il project description azuba independent cloud based health information platform enables consumer automate secure management health information cost consumer azuba enables consumer caregiver mobile access consumer health medical record across healthcare provider physician hospital pharmacy lab dentist urgent care etc payer insurance company health information exchange hies securely sharing information provider caregiver family responsibility involved gathering analyzing requirement designing developing testing mavenizing application using spring boot framework integrated code quality tool sonarqube involved two micro service patient user development using netflix os spring boot design implemented backend layer using hibernate spring data implemented logging using log spring aop involved uml design applied ooad solid design principle applied gof design pattern creational design pattern like singleton factory abstract factory structural design pattern like adapter decorator facade pattern behavioural strategy command template pattern respectively implemented restful webservice various microservices coding different layer like business dao model layer involved identification restful api service given user story involved project setup process routing filtering request micro service application using netflix zuul edge service library developed zuul api gateway authentication using redis cache worked java multithreading collection coherence framework involved integration third party connect open source configuration developed web service allow communication application soap jax-ws well restful jax-rs webservices major contribution building swagger specification api documentation restful web service configured implemented mdht code integrated application transforming ccda document java source code explored connect open source tool integration feasibility study azuba tool implemented junit test mandated min code coverage involved implementing web service testing soapui investigate debug fixed potential bug defect implemented code drove performance-tuning effort system engineering team.e.g performance worked migrating complex multi-tier application aws extensive experience designing mongodb multi-sharded cluster monitoring mm design highly cost effective fault tolerant system using multiple ec instance auto scaling elastic load balance amis configured virtual host development test environment involved integration third party direct connect secured mail transmit review code assign rework team optimized solution also create assign defect team involved coordinating team member application development activity unit testing test plan creation defect analysis fixing environment java spring boot spring microservices spring data spring aop hibernate jpa restful webservice soap webservice zuul eureka redis hazelcast mdht connect open source direct mail soapui angular j mongodb swagger telosys junit mysql maven glassfish server jboss apache kafka elastic search esb mule mule soap ui eclipse svn icescrum tech lead java ee developer october- august- child support deloitte pennsylvania avenue nw washington dc project description provides caseworker prioritized list case concise fast way find information case supervisor able better understand team caseworker performance local office director four director find state local office relative performance compare peer set goal improve responsibility getting requirement client writing sr cr document used spring boot create spring application implemented restful webservice various microservices coding different layer like business dao model layer design implemented backend layer using hibernate spring data involved uml design applied ooad solid design principle implemented module spring boot core security aop orm transaction management implemented caching mechanism hibernate load data database mavenizing application using spring boot framework integrated code quality tool sonarqube implemented gof design pattern creational design pattern like singleton factory abstract factory structural design pattern like adapter decorator facade pattern behavioural strategy command observer pattern respectively design development object oriented application using ooa ood technique using rational rose involved implementation apache storm kafka zookeeper applied factor application principle netflix os eureka zuul feign ribbon developed pl sql query actively worked stored procedure designed use case diagram class diagram sequence diagram object diagram model detail design application using uml involved designed microservices using netflix os elk stack securing rest endpoint jwt token creating docker image using maven docker plugin implemented java multithreading refresh cache given set time interval extensive experience designing mongodb multi-sharded cluster monitoring mm involved coordinating team member onshore offshore application development activity used hazelcast cache module store rest token time leave interval clear session worked implementing restful soap based web service involved code review verify coding standard java documentation using customized eclipse plugins like checkstyle pmd review code assign rework team optimized solution also create assign defect team involved implementing web service testing soapui designing deploying enterprise-wide scalable operation aws developed soap based web service provide service front-end web ui development using html cs bootstrap javascript jquery provide status onshore team offshore team daily basis migrating complex multi-tier application aws generated wsdl file using apache cxf extensively used soap ui service testing effectively handling change request proposing supporting design development testing responsible source code maintenance using version control using svn system unit testing test plan creation defect analysis fixing environment java spring mvc hibernate jpa restful webservice soap webservice swagger telosys mysql maven glassfish server jboss esb mule soap ui pmd checkstyle docker eureka zuul feign ribbon hazelcast redis elk stack jwt token eclipse juno mongodb svn icescrum sr. java ee developer november- september- global contract management system ibm madison avenue new york project description global contract management system web application creates manages contract document offer letter certification acceptance follows work flow creating handling customer leasing contract responsibility getting requirement client writing sr cr document developed application spring boot spring microservices implemented restful webservice various microservices coding different layer like business dao model layer created wsdl generated data object using wsdl java spring jax-ws axis apache cxf developed mapping code several web service interface various profile management endpoint design implemented backend layer using hibernate spring data involved uml design applied ooad solid design principle implemented module spring boot core security aop orm transaction management implemented caching mechanism hibernate load data database good experience enabling rest endpoint security using oauth mule rest console mavenizing application using spring boot framework integrated code quality tool sonarqube developed spring framework using ioc factory pattern jms applied spring mvc spring webflow design implementation client page strong working experience java testing framework junit cucumber involved coordinating team member application development activity involved preparing prototype complete application developed database script procedure using pl sql review code assign rework team optimized solution also create assign defect team involved working experience apache storm kafka zookeeper ee communicate legacy cobol based mainframe implementation involved debugging product using eclipse jira bug tracking designed use case diagram class diagram sequence diagram object diagram model detail design application using uml provide status onshore team daily basis used maven script building deploying application involved code review verify coding standard java documentation using customized eclipse plugins like checkstyle pmd system integration testing application developer level exchanged data front-end back-end protocol using soap wsdl xml data packet format developed java multi-threaded batch offline bulk upload tool web application using spring servlets ui layer using jsps javascript html cs angular j worked rest based web service mule esb flow creation queue wmb websphere message broking tool creation work flow esql file deploying form bar broker archive file involves creation message flow accepting data format provided validated accordingly sent back queue different node i.e catch fault involved development unit test case testing application using junit environment java spring hibernate jsf restful webservice db websphere restful webservice soap webservice websphere message broking tool rational software architect rational rose rtc aqt db sr. java ee developer july- october- client benefit administrator -medco franklin lake nj project description client benefit administrator application allows create plan instance using plan cbm application.cba us entity cbm creates instance plan expected different clients.cba client hierarchy client activity business module instance data hierarchy client carrier contract group responsibility developed spring framework using ioc factory pattern jms applied spring mvc spring webflow understanding requirement client involved technical design development developed business module jsp servlet strut framework java xml xsl ejb technology design developed using webservice using apache axis jboss developed soap based web service provide service front-end web created wsdl generated data object using wsdl java spring jax-ws axis apache cxf developed mapping code several web service interface various profile management endpoint involved uml design ooad design pattern enabling rest endpoint security using oauth mule rest console implemented java multithreading refresh cache given set time interval developed spring framework using ioc factory pattern jms applied spring mvc spring webflow experience working unix platform aware unix command exchanged data front-end back-end protocol using soap wsdl xml data packet format used middleware tool like jms mdb mule tibco configured connection factory topic queue knowledge pega tool finished certified training prpc involved coordinating team member application development activity preparation functional document high level design document test case code review document developed hql query crud used maven script building deploying application store persistent jms message temporarily store message sent using store-and-forward feature design implementation client page using spring mvc development controller business logic dao class implementation administration application server performance tuning application system integration testing application developer level involved debugging product using eclipse jira bug tracking documenting deliverable according standard unit testing test plan creation defect analysis fixing environment java spring spring mvc hibernate pega db websphere rational application development tool rad rational software architect restful webservice soap rational rose harvest repository wily server monitoring filezilla putty remedy ticket tool java ee developer august- june- webviewer open text corporation th avenue new york project description web viewer application displaying navigating searching attribute printing document web-based scenario appending comment document document stored livelink ecm archive server supported repository.business document need captured need readily accessible captured livelink ecm imaging accommodates need scan document need view electronic document company cope business-critical paper-centric process order management account payable contract management responsibility involved uml design creation class diagram sequence diagram design implementation client page using jsf used hibernate persist retrieve data database involved preparing prototype complete application involved coordinating team member application development activity design develop architect presentation business persistence control layer component utilizing mvc architecture using strut spring hibernate framework developed spring framework using ioc factory pattern jms applied spring mvc spring webflow developed code aop aspect oriented programming put logging help log also worked implementing profiling aspect application issue like performance tracing application failure worked gui internationalization using jsp core java worked proficiently core java concept like thread exception handling generic string etc performed validation ui data using jsf validators javascript used maven script building deploying application exchanged data front-end back-end protocol using soap wsdl xml data packet format used html cs jsp jstl develop user interface configured virtual host development test environment store persistent jms message temporarily store message sent using store-and-forward feature development backing bean business logic identify bottleneck code work towards fix application performance issue involved code review make sure better coding standard followed unit testing test plan creation defect analysis bug fixing environment java jsf hibernate spring mssql weblogic eclipse perforce jconsole rational rose java ee developer october- august- feedback stanford university serra mall stanford ca project description develop web-based database application author create manage feedback survey student submit view evaluation data administrator manage process provide role-based access input search view data via web create downloadable report allow ad-hoc reporting based defined access level responsibility design implementation client page using jsf contributed application design along day day development activity also managed database database administrator development backing bean business logic developed business module jsp servlet strut framework java xml xsl ejb technology performed validation ui data using jsf validators javascript involved debugging product using eclipse jira bug tracking worked gui internationalization using jsp core java developed hql query crud involved preparing prototype complete application development backing bean business logic extensively used ejb various ee jsp ejb jms component implementation module identify bottleneck code work towards fix application performance issue unit testing test plan creation defect analysis bug fixing environment hibernate spring jsf ejb tomcat server sql server myeclipse svn",
  "statistics": {
    "word_count": 3986,
    "unique_word_count": 1023,
    "avg_word_length": 5.057701956848971,
    "stopword_count": 804
  },
  "metadata": {
    "filename": "Candidate144.docx",
    "file_size": 40937,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:00.607142",
    "input_filename": "Candidate144.json"
  }
}