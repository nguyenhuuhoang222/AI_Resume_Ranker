{
  "id": "Candidate82",
  "raw_text": "                                                                 Candidate82                                   \n    Email: candidate82.java3@gmail.com                                                                     Phone: 513-601-8654\nFull stack developer with over 8 years of IT experience including user interaction, requirement analysis, design, development, testing, configuration, client interaction, and support.\n Professional Summary:\nSkilled in Object Oriented Analysis and Design (OOAD) and extensively worked with open source technologies – Struts, Spring, Hibernate frameworks, Log4j, Junit.\nProficiency in various components in Spring – IOC, AOP, JDBC, OXM, RestTemplate, MVC. \nGood experience in implementing the design patterns like Singleton, Session Facade, Business Delegate, Service Locator, Front Controller and Data Access Objects (DAO), etc.\nProficiency in various web based technologies like HTML, DHTML, ReactJS, JavaScript, Ajax, Tiles.\nExperience in adding dynamic functionality to web pages using JavaScript, jQuery, NodeJS and AngularJS.\nExcellent experience in software development life cycle (SDLC).\nExperience on installing the Mongo DB in Windows environment with adding arbiter to replica sets as well with development.\nHands on experience with Apache Infinispan cache.\nExperience with and solid understanding of Micro Services and implemented client-server business applications using Micro Services.\nWell versed working with Relational Data Base Management Systems as Oracle 9i/10g, MS SQL server, DB2, MySQL, Mongo DB, NoSQL Cassandra and developed SQL scripts and PL/SQL (queries, functions, procedures and triggers, profiles and users) on oracle database.\nWorked extensively on various flavors of UNIX operating system like Linux.\nExperience working with IBM MQ (Message queue) and JMS for asynchronous mode of communications.\nExperience working with multiple Servers – IBM Web Sphere, Oracle WebLogic, JBoss, Apache Tomcat.\nGood Experience in using test driven JS tools like Jasmine.\nExcellent experience in developing Web Services with Python programming language.\nSkilled at building applications based on SOA architecture in IBM Integration Designer.\nStrong exposure to Web 2.0 client technologies using JSP, JSTL, XHTML, DOM, CSS, JavaScript and Ajax.\nExperience in working with the Collections framework and Multi-threading. \nExperience in Manual and Automated testing using Selenium.\nHaving experience with Cloud Computing environment like Amazon Web Services(AWS).\nPerformed Requirement elicitation by gathering functional and non-functional requirement.\nStrong application development in WebSphere Portal, JSR 168 Specification integrated with Spring Portlet and Hibernate.\nExperience in implementing RESTful and SOAP based Web Services using Top down Approach and Bottom up Approach.\nHands on experience in building and deploying tools like ANT and MAVEN as well as version control using GIT, SVN/Subversion, Rational Clear Case, CVS and VSS.\nWorking knowledge of XML related technologies – XML, XSL, XSDs, DTD, JAXP (SAX, DOM), JAXB.\nExperience using JMS Integration Framework which reduces complexity of JMS API using Spring Integration with MQ.\nTechnical Skills:\nProfessional Experience:\nCenterPoint Energy, TX\t\t\t\t\t\t    \t\tJan 2016 - Present\nJAVA DEVELOPER\nProject Summary: The project focus on making it easier to collect energy consumption data from utility companies that is required to analyze energy usage and to deploy a new Market Transaction Management solution on top of Customer Care and Billing which maintains the request and response messages for, Enrollment requests and generating the Monthly and Historical Usages.\nResponsibilities:\nParticipated in and contributed to team demos, peer reviews, team retrospectives, and daily standups for the development of the application.\nCreated technical design documents using class and sequence diagrams for feature processing flows and data insertion.\nDesigned and developed new code for features based on Standard SF Design Patterns, SOC design principles, Single Responsibility and Reusability Principles.\nUsed Java Message Service (JMS) for asynchronous exchange of information between systems.\nInvolved in implementing JUnit Test Cases.\nUsed AJAX for implementing part of the functionality for Customer Registration, View Customer information modules. \nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS\nApplication deployment, Migrating data and application to AWS Platform.\nDesigned dynamic client-side JavaScript, codes to build web forms and simulate process for web application, page navigation and form validation.\nIntegrating Oracle CC&B with various business critical systems such as Financial Ledgers System. \nDeveloped UPK simulations for CC&B Overview and Navigation courses.\nDevised and established high level architecture for the release feature processing and data insertion into the calculation and workpaper tables. \nExperience in using distributed database NoSql Cassandra to manage large amounts of structured data. \nUsed React JS for templating for faster compilation and developing reusable components.\nBuilt RESTful Web services using MVC architecture style. \nAssigned Roles and Policies to Users, Security Groups by using Identity and Access Management(IAM) and implemented Multi Factor Authentication(MFA) to provide additional security to account and its resources.\nCreated JMS consumer to process RESTful over JMS messages.\nConfigured AWS S3 versioning and lifecycle policies to and backup service requests and archive files.\nConfigured Elastic Load Balancers (ELB) with AWS EC2 Autoscaling groups. \nCreated monitors, alarms and notifications for AWS EC2 hosts using Cloud Watch.\nUsed second level cache to enhance performance and proper memory management.\nUsed pureQuery interface to access relational databases using pureQuery Runtime and Java annotations and by using Merge(upsert) Statements and sequence objects.\nUsed a Micro Service architecture, interacting through a combination of REST and MQ and leveraging AWS to build, test and deploy Identity Micro Services.\n Used EC2 as virtual servers to host GIT, Jenkins and configuration management tool like Chef\nMultithreading was used to perform various tasks simultaneously like scraping the data and formatting the data at the same time as huge amount of data was processed at the same time it was getting scraped. \nTuned and recorded performance of NoSql Cassandra clusters by altering the JVM parameters. \nQueried and analyzed data from NoSql Cassandra for quick searching, sorting and grouping.\nDeveloped new and existing calculation setup, edit and review UI modules using JSP and JQuery for analysts to manage new and existing calculations.\nConfigured Spark streaming to receive real time data from the Kafka and store the stream data to NoSql Cassandra using Spark, Java and Scala \nImplemented AngularJS and Node JS with Spring MVC as model component.\nConducted tests for applications developed in Angular JS using Jasmine and Protractor. \nInvolved in BDD (Behavior Driven Development) using JBehave and Jasmine Framework.\nMonitored the performance of DAO calls and host components calls using Jamon and corrected performance when required for faster processing of usage records.\nImplementing Selenium testing platform and using test scripts with Eclipse IDE.\nWorked to increase the quality of the source code to meet the GFS standards using tools and Frameworks like Pitest for checking mutations, CheckStyle for coding standards EMMA for class line and branch coverage, CodePro for Static code analysis and CSSLint and JSLint for CSS and JavaScript code quality.\nUsed Maven for building the application and implemented with Scala.\nInvolved in monitoring of Sonar dashboard for code metrics for every sprint cycle; fixed code based on dashboard statistics. \nUsed Maven for building the application as an enterprise artifact, using Maven commands to verify test cases and coding standards for the application before deploying the code.\nEnvironment: Java 6, Spring 4, Spring JDBC, Websphere 8.5, IBM RSA, Jquery, Jasmine, JBehave, Jenkins, Jamon, Maven, Pitest, Junit, RESTful, JSON, EMMA, JMS, Multithreading , Scala, Angular JS, Java cache, Node JS, CodePro, NoSql Cassandra, React JS, GIT, Micro Services, Sonar, Spring Boot, Apigee, Selenium, AWS, Checkstyle, Splunk, EasyMock\nMorgan Stanley, NY\t                                                                                                                      Nov 2014 – Jan2016\t JAVA DEVELOPER\nProject Summary: Worked with Human Resource Information Technology group on Workday Project. The project mainly involves designing, developing, and maintaining the HR data from Workday and then building the enterprise data warehouse used by different groups. The Java Process involved extracting the data from workday in the form of xml files and then load it into our database. It also involves migration of data from a legacy internal HR application to Workday. The final data is reported to users through Business Objects reports and some outgoing feeds.\nResponsibilities:\nDesigned XSDs and implement services in Eclipse IDE and IBM Integration Designer (IBM ID) based on the XSDs.\nImplemented all the services based in Spring Architecture Spring Core, Spring MVC, Spring OXM API.\nDeveloped simple and secure integrations using Workday Enterprise Interface Builder (EIB).\nExtensively used Spring Rest Template to provide RESTful web services to call the underlying application, used Hibernate as an ORM tool.\nGood work experience on Mongo DB and MySQL, Creating SQL statements &Sub queries.\nWrote Python scripts to parse XML documents and load the data in database. \nDesigned business flow diagrams and processes, which included processes in Staffing, job benefits, compensation grades and packages.\nImplemented BackboneJS and ReactJS to create a dynamically changing website. \nUsed PL/SQL coding for Exception Handling and Duplicate Data maintaining.\nUpgrade underlying search engine to Elastic search 1.6 enhancing performance and insights.\nConfigured Spring ORM that provides simplified templates for accessing databases through ORM technologies, such as Hibernate in our case to access the database.\nCleansing data generated from weblogs with automated scripts in Python.\nImplemented client application specific code modules and used Ant Build Tool to build, compile,\n and create jar files of each client application.\nResponsible for constant upgrading of services as per release changes and unit testing by utilizing Junit 4 API, and used SOAP UI for testing in various environments and used JMockit to mock SEAS calls for testing.\nImplemented all the SEBS Services in IBM Integration Designer (IBM ID) by creating Mediation Flow Modules, Inbound Import and Outbound Export for all those services deployed in various environments, created toolkits for consumption by IBM Process Designer (IBM PD).  Implemented test cases for these operations in IBM ID.\nWorked with No SQL database to store JSON like dynamic connections data.\nCreated various Parser programs to extract data from Workday using Scala.\nUsed Apache Tiles Framework for User Interface look and feel.\nUsed SVN to check-in and check-out and co-ordinate among team members for Version Controlling.\nUsed Spring JMS template for the asynchronous exchange of critical business data and events among J2EE components and legacy system.\nWorked on version control tool GIT for branching, merging and reverting the code. \nUsed Clover to constantly check the effectiveness and coverage of the test cases.\nTested required operation of ID by creating human services to test from IBM Process Designer.\nResponsible for constantly revising and reviewing the code using Fish Eye-Crucible.\nResponsible for biweekly on call primary support and secondary support, coordinating and validating Change Requests and Work Requests. Created CR’s and WR’s on a regular basis for code deployment and code changes.\nEnvironment:  JDK 6, J2EE, Spring 3.1.2, Hibernate 3, Oracle WebLogic 10.3.6, Eclipse, Scala, XML, JSON, Log4j, JUnit, Anthill Pro, Ant, Jmockit, PL/SQL, GIT, Elastic search, Infinispan cache, Python, Oracle SQL Developer, Apache Tiles, Mongo DB, JMS, ReactJS, IBM Integration Designer, IBM Process Designer, SOAP UI, No SQL, Clover, Crucible\nAXA Equitable Life Insurance Company, NJ                                                                              Oct 2013 - Oct 2014\nJAVA DEVELOPER\nProject Summary: Employer Sponsored alerts \n Micro services designed to expose the data in Inforce alerts database and consume them from front end designed using Angular JS. Implementation of micro services using SpringBoot and eclipseLink data jpa (dynamic entity). \n\nResponsibilities\n        • Data analysis and breakdown the project into multiple micro services.         \n         • Designing dynamic entities and implementing service in spring boot.\n• Worked with Apache Wicket 1.6 for the presentation layer.\n• Performing analysis and developing POC on different ways to expose the micro services (Like     \n   Node JS Vs Spring Boot and Spring data JPA). \n•Writing SQL Statements to extract Data, to verify the output Data by using SQL Query analyzer.\n• Developed HTML5 Mobile application with HTML5, Java Script, JQuery, JSON and RESTful web service.\n• Worked on migrating the old java stack to Type safe stack using Scala for backend programming.\n         • Created various Parser programs to extract data from database using Scala. \n       • Mapped tables in database using Hibernate and Scala.\n• Used NodeJS as a lightweight webserver and to resolve javascript dependencies.\n• Involved in development of the User Interface presentation screens using HTML5, CSS3, Node JS.\n• Developing front end single page application using groovy JS.\nEnvironment: Spring Boot, Spring Data JPA, My SQL, HTML5, CSS3, Node JS, Scala 1.7, Spring Tool suite (STS 3.2), Hibernate, Apache Wicket 1.6, Angular 1.4, Oracle 10g\nThomson Reuters, MN\t\t\t\t\t                                             Aug 2012- Sep 2013\nJAVA DEVELOPER\nProject Summary: TRAMS (Thomson Reuters Application Management Suite) is a standardized suite of capabilities that manage TR’s application needs for deploying, logging, monitoring, and alerting on Java or Windows based applications and services. Worked on AutoScale cloud project which is a part of TRAMS to deploy, migrate, auto-provisioning and dynamic scaling of applications on TR’s private cloud by leveraging existing TRAMS infrastructure.\nResponsibilities:\nInvolved in Design and Development of AutoScale Project in TRAMS to deploy, migrate and managing cloud based applications.\nDeveloped the application on Spring Framework used Hibernate ORM to perform backend CMDB calls to retrieve and commit application specific configuration data required to deploy the application.\nExpose various Rest endpoints to be consumed as services to clients to directly autoscale the application, getting the status of the application and configure the application in conjunction with OpenStack API. \nIntegrated Splunk Rest API to query Splunk via Splunk jobs about call stack and other transaction information Developed custom parsers to parse splunk JSON output.\nDeveloped user interface using JSP, Angular, DOJO, and JQuery. Extensively used Angular directives, validations, Angular forms and Angular http service.\nWorked on application written in Groovy/Grails. Developed RESTful web service in groovy and services. \nWorked on TRAMS Deploy Engine (mona), Java and Windows Node Agent to develop new capabilities according to client requirements.\nDeveloped Test Suites for various Rest end points in JUnit4 Framework. Used SOAP UI for testing in various environments.\nParticipate in Iteration planning meeting biweekly and attended scrum meetings.\nEnvironment:  Java, Spring, Hibernate, Tomcat 7, XML, JSON, Log4j, JUnit, Angular, Groovy, Anthill Pro, Ant, Oracle SQL, REST, OpenStack API, Jackson, Splunk, JavaScript, Dojo Toolkit\nOptum Health, MN            \t\t\t                                                               Oct 2011 - Jun 2012\t\nJAVA DEVELOPER\nProject Summary:  OptumRx is a project in to manage customer prescription medications and other customer health products which manages customer’s order refills, tracking the order and displaying the status of the orders.\nResponsibilities:\nDeveloped and introduced new enhanced features in OptumRx customer portal in the customers’ medication cabinet section.\nIntegrated code with IBM Work Manger API to handle customer request and leveraged the framework to schedule background worker threads.\nEnhanced web-tier components using JSP, Spring, Apache Tiles 2.2, Tag Libraries and JavaScript.\nUsed Eclipse Rich Client Platform (RCP) for the development of the project.\nExtensively used Linux, Unix system administration tools to create servers and deploy and run applications in development stage.\nDeveloped Test Suites for various Rest end points in JUnit Framework, used EasyMock framework.\nEnvironment:  Java, Spring, Hibernate, WebSphere, Eclipse RCP, XML, JSON, Log4j, JQuery, Anthill Pro, Ant, Oracle SQL Developer, REST, JavaScript, JUnit, Unix, Linux, Apache Tiles 2.2, IBM RAD, Rally\nColruyt Group India, Hyderabad                                                                                              May 2009 - Sep 2011\nJAVA DEVELOPER\nProject Summary:\nThe project involves creation of a single, integrated system which executes the calculation of sales and compensation for both External and Internal producers and suppliers. \nResponsibilities: \nUsed Hibernate ORM mapping for Oracle database. \nFront-end is designed by using HTML, DHTML, JavaScript, CSS, JSP, JSF, JSTL and Struts. \nDeveloped various Spring MVC forms and performed both client side and server side validation\nWorked on Web services using SOAP and AXIS.\nUsed Hibernate as ORM tool for accessing database.\nUsed Rational Clear Case to access files and directories in the organization.\nIntegrated and configured Spring Framework and Hibernate environment.\nEnvironment: Java JDK 1.4, Eclipse 3.2, log4j, Ant, Solaris 10, Web Sphere Portal Server 6.1, RUP, Java 1.4, J2EE, JSP 1.2, Servlets 2.3, JSF 1.1, Prime Faces, Spring 1.2.6/2.0, Hibernate 2.0, Web Sphere 6.0, AXIS, Oracle 8i / 9g/10g, J Unit, XML, HTML, JQuery, Java Script, AJAX, CSS, Rational Clear Case",
  "cleaned_text": "Candidate Email Phone Full stack developer with over years of IT experience including user interaction, requirement analysis, design, development, testing, configuration, client interaction, and support. Professional Summary Skilled in Object Oriented Analysis and Design OOAD and extensively worked with open source technologies Struts, Spring, Hibernate frameworks, Log j, Junit. Proficiency in various components in Spring IOC, AOP, JDBC, OXM, RestTemplate, MVC. Good experience in implementing the design patterns like Singleton, Session Facade, Business Delegate, Service Locator, Front Controller and Data Access Objects DAO , etc. Proficiency in various web based technologies like HTML, DHTML, ReactJS, JavaScript, Ajax, Tiles. Experience in adding dynamic functionality to web pages using JavaScript, jQuery, NodeJS and AngularJS. Excellent experience in software development life cycle SDLC . Experience on installing the Mongo DB in Windows environment with adding arbiter to replica sets as well with development. Hands on experience with Apache Infinispan cache. Experience with and solid understanding of Micro Services and implemented client-server business applications using Micro Services. Well versed working with Relational Data Base Management Systems as Oracle i g, MS SQL server, DB , MySQL, Mongo DB, NoSQL Cassandra and developed SQL scripts and PL SQL queries, functions, procedures and triggers, profiles and users on oracle database. Worked extensively on various flavors of UNIX operating system like Linux. Experience working with IBM MQ Message queue and JMS for asynchronous mode of communications. Experience working with multiple Servers IBM Web Sphere, Oracle WebLogic, JBoss, Apache Tomcat. Good Experience in using test driven JS tools like Jasmine. Excellent experience in developing Web Services with Python programming language. Skilled at building applications based on SOA architecture in IBM Integration Designer. Strong exposure to Web . client technologies using JSP, JSTL, XHTML, DOM, CSS, JavaScript and Ajax. Experience in working with the Collections framework and Multi-threading. Experience in Manual and Automated testing using Selenium. Having experience with Cloud Computing environment like Amazon Web Services AWS . Performed Requirement elicitation by gathering functional and non-functional requirement. Strong application development in WebSphere Portal, JSR Specification integrated with Spring Portlet and Hibernate. Experience in implementing RESTful and SOAP based Web Services using Top down Approach and Bottom up Approach. Hands on experience in building and deploying tools like ANT and MAVEN as well as version control using GIT, SVN Subversion, Rational Clear Case, CVS and VSS. Working knowledge of XML related technologies XML, XSL, XSDs, DTD, JAXP SAX, DOM , JAXB. Experience using JMS Integration Framework which reduces complexity of JMS API using Spring Integration with MQ. Technical Skills Professional Experience CenterPoint Energy, TX Jan - Present JAVA DEVELOPER Project Summary The project focus on making it easier to collect energy consumption data from utility companies that is required to analyze energy usage and to deploy a new Market Transaction Management solution on top of Customer Care and Billing which maintains the request and response messages for, Enrollment requests and generating the Monthly and Historical Usages. Responsibilities Participated in and contributed to team demos, peer reviews, team retrospectives, and daily standups for the development of the application. Created technical design documents using class and sequence diagrams for feature processing flows and data insertion. Designed and developed new code for features based on Standard SF Design Patterns, SOC design principles, Single Responsibility and Reusability Principles. Used Java Message Service JMS for asynchronous exchange of information between systems. Involved in implementing JUnit Test Cases. Used AJAX for implementing part of the functionality for Customer Registration, View Customer information modules. Developed API for using AWS Lambda to manage the servers and run the code in the AWS Application deployment, Migrating data and application to AWS Platform. Designed dynamic client-side JavaScript, codes to build web forms and simulate process for web application, page navigation and form validation. Integrating Oracle CC&B with various business critical systems such as Financial Ledgers System. Developed UPK simulations for CC&B Overview and Navigation courses. Devised and established high level architecture for the release feature processing and data insertion into the calculation and workpaper tables. Experience in using distributed database NoSql Cassandra to manage large amounts of structured data. Used React JS for templating for faster compilation and developing reusable components. Built RESTful Web services using MVC architecture style. Assigned Roles and Policies to Users, Security Groups by using Identity and Access Management IAM and implemented Multi Factor Authentication MFA to provide additional security to account and its resources. Created JMS consumer to process RESTful over JMS messages. Configured AWS S versioning and lifecycle policies to and backup service requests and archive files. Configured Elastic Load Balancers ELB with AWS EC Autoscaling groups. Created monitors, alarms and notifications for AWS EC hosts using Cloud Watch. Used second level cache to enhance performance and proper memory management. Used pureQuery interface to access relational databases using pureQuery Runtime and Java annotations and by using Merge upsert Statements and sequence objects. Used a Micro Service architecture, interacting through a combination of REST and MQ and leveraging AWS to build, test and deploy Identity Micro Services. Used EC as virtual servers to host GIT, Jenkins and configuration management tool like Chef Multithreading was used to perform various tasks simultaneously like scraping the data and formatting the data at the same time as huge amount of data was processed at the same time it was getting scraped. Tuned and recorded performance of NoSql Cassandra clusters by altering the JVM parameters. Queried and analyzed data from NoSql Cassandra for quick searching, sorting and grouping. Developed new and existing calculation setup, edit and review UI modules using JSP and JQuery for analysts to manage new and existing calculations. Configured Spark streaming to receive real time data from the Kafka and store the stream data to NoSql Cassandra using Spark, Java and Scala Implemented AngularJS and Node JS with Spring MVC as model component. Conducted tests for applications developed in Angular JS using Jasmine and Protractor. Involved in BDD Behavior Driven Development using JBehave and Jasmine Framework. Monitored the performance of DAO calls and host components calls using Jamon and corrected performance when required for faster processing of usage records. Implementing Selenium testing platform and using test scripts with Eclipse IDE. Worked to increase the quality of the source code to meet the GFS standards using tools and Frameworks like Pitest for checking mutations, CheckStyle for coding standards EMMA for class line and branch coverage, CodePro for Static code analysis and CSSLint and JSLint for CSS and JavaScript code quality. Used Maven for building the application and implemented with Scala. Involved in monitoring of Sonar dashboard for code metrics for every sprint cycle fixed code based on dashboard statistics. Used Maven for building the application as an enterprise artifact, using Maven commands to verify test cases and coding standards for the application before deploying the code. Environment Java , Spring , Spring JDBC, Websphere . , IBM RSA, Jquery, Jasmine, JBehave, Jenkins, Jamon, Maven, Pitest, Junit, RESTful, JSON, EMMA, JMS, Multithreading , Scala, Angular JS, Java cache, Node JS, CodePro, NoSql Cassandra, React JS, GIT, Micro Services, Sonar, Spring Boot, Apigee, Selenium, AWS, Checkstyle, Splunk, EasyMock Morgan Stanley, NY Nov Jan JAVA DEVELOPER Project Summary Worked with Human Resource Information Technology group on Workday Project. The project mainly involves designing, developing, and maintaining the HR data from Workday and then building the enterprise data warehouse used by different groups. The Java Process involved extracting the data from workday in the form of xml files and then load it into our database. It also involves migration of data from a legacy internal HR application to Workday. The final data is reported to users through Business Objects reports and some outgoing feeds. Responsibilities Designed XSDs and implement services in Eclipse IDE and IBM Integration Designer IBM ID based on the XSDs. Implemented all the services based in Spring Architecture Spring Core, Spring MVC, Spring OXM API. Developed simple and secure integrations using Workday Enterprise Interface Builder EIB . Extensively used Spring Rest Template to provide RESTful web services to call the underlying application, used Hibernate as an ORM tool. Good work experience on Mongo DB and MySQL, Creating SQL statements &Sub queries. Wrote Python scripts to parse XML documents and load the data in database. Designed business flow diagrams and processes, which included processes in Staffing, job benefits, compensation grades and packages. Implemented BackboneJS and ReactJS to create a dynamically changing website. Used PL SQL coding for Exception Handling and Duplicate Data maintaining. Upgrade underlying search engine to Elastic search . enhancing performance and insights. Configured Spring ORM that provides simplified templates for accessing databases through ORM technologies, such as Hibernate in our case to access the database. Cleansing data generated from weblogs with automated scripts in Python. Implemented client application specific code modules and used Ant Build Tool to build, compile, and create jar files of each client application. Responsible for constant upgrading of services as per release changes and unit testing by utilizing Junit API, and used SOAP UI for testing in various environments and used JMockit to mock SEAS calls for testing. Implemented all the SEBS Services in IBM Integration Designer IBM ID by creating Mediation Flow Modules, Inbound Import and Outbound Export for all those services deployed in various environments, created toolkits for consumption by IBM Process Designer IBM PD . Implemented test cases for these operations in IBM ID. Worked with No SQL database to store JSON like dynamic connections data. Created various Parser programs to extract data from Workday using Scala. Used Apache Tiles Framework for User Interface look and feel. Used SVN to check-in and check-out and co-ordinate among team members for Version Controlling. Used Spring JMS template for the asynchronous exchange of critical business data and events among J EE components and legacy system. Worked on version control tool GIT for branching, merging and reverting the code. Used Clover to constantly check the effectiveness and coverage of the test cases. Tested required operation of ID by creating human services to test from IBM Process Designer. Responsible for constantly revising and reviewing the code using Fish Eye-Crucible. Responsible for biweekly on call primary support and secondary support, coordinating and validating Change Requests and Work Requests. Created CRs and WRs on a regular basis for code deployment and code changes. Environment JDK , J EE, Spring . . , Hibernate , Oracle WebLogic . . , Eclipse, Scala, XML, JSON, Log j, JUnit, Anthill Pro, Ant, Jmockit, PL SQL, GIT, Elastic search, Infinispan cache, Python, Oracle SQL Developer, Apache Tiles, Mongo DB, JMS, ReactJS, IBM Integration Designer, IBM Process Designer, SOAP UI, No SQL, Clover, Crucible AXA Equitable Life Insurance Company, NJ Oct - Oct JAVA DEVELOPER Project Summary Employer Sponsored alerts Micro services designed to expose the data in Inforce alerts database and consume them from front end designed using Angular JS. Implementation of micro services using SpringBoot and eclipseLink data jpa dynamic entity . Responsibilities Data analysis and breakdown the project into multiple micro services. Designing dynamic entities and implementing service in spring boot. Worked with Apache Wicket . for the presentation layer. Performing analysis and developing POC on different ways to expose the micro services Like Node JS Vs Spring Boot and Spring data JPA . Writing SQL Statements to extract Data, to verify the output Data by using SQL Query analyzer. Developed HTML Mobile application with HTML , Java Script, JQuery, JSON and RESTful web service. Worked on migrating the old java stack to Type safe stack using Scala for backend programming. Created various Parser programs to extract data from database using Scala. Mapped tables in database using Hibernate and Scala. Used NodeJS as a lightweight webserver and to resolve javascript dependencies. Involved in development of the User Interface presentation screens using HTML , CSS , Node JS. Developing front end single page application using groovy JS. Environment Spring Boot, Spring Data JPA, My SQL, HTML , CSS , Node JS, Scala . , Spring Tool suite STS . , Hibernate, Apache Wicket . , Angular . , Oracle g Thomson Reuters, MN Aug - Sep JAVA DEVELOPER Project Summary TRAMS Thomson Reuters Application Management Suite is a standardized suite of capabilities that manage TRs application needs for deploying, logging, monitoring, and alerting on Java or Windows based applications and services. Worked on AutoScale cloud project which is a part of TRAMS to deploy, migrate, auto-provisioning and dynamic scaling of applications on TRs private cloud by leveraging existing TRAMS infrastructure. Responsibilities Involved in Design and Development of AutoScale Project in TRAMS to deploy, migrate and managing cloud based applications. Developed the application on Spring Framework used Hibernate ORM to perform backend CMDB calls to retrieve and commit application specific configuration data required to deploy the application. Expose various Rest endpoints to be consumed as services to clients to directly autoscale the application, getting the status of the application and configure the application in conjunction with OpenStack API. Integrated Splunk Rest API to query Splunk via Splunk jobs about call stack and other transaction information Developed custom parsers to parse splunk JSON output. Developed user interface using JSP, Angular, DOJO, and JQuery. Extensively used Angular directives, validations, Angular forms and Angular http service. Worked on application written in Groovy Grails. Developed RESTful web service in groovy and services. Worked on TRAMS Deploy Engine mona , Java and Windows Node Agent to develop new capabilities according to client requirements. Developed Test Suites for various Rest end points in JUnit Framework. Used SOAP UI for testing in various environments. Participate in Iteration planning meeting biweekly and attended scrum meetings. Environment Java, Spring, Hibernate, Tomcat , XML, JSON, Log j, JUnit, Angular, Groovy, Anthill Pro, Ant, Oracle SQL, REST, OpenStack API, Jackson, Splunk, JavaScript, Dojo Toolkit Optum Health, MN Oct - Jun JAVA DEVELOPER Project Summary OptumRx is a project in to manage customer prescription medications and other customer health products which manages customers order refills, tracking the order and displaying the status of the orders. Responsibilities Developed and introduced new enhanced features in OptumRx customer portal in the customers medication cabinet section. Integrated code with IBM Work Manger API to handle customer request and leveraged the framework to schedule background worker threads. Enhanced web-tier components using JSP, Spring, Apache Tiles . , Tag Libraries and JavaScript. Used Eclipse Rich Client Platform RCP for the development of the project. Extensively used Linux, Unix system administration tools to create servers and deploy and run applications in development stage. Developed Test Suites for various Rest end points in JUnit Framework, used EasyMock framework. Environment Java, Spring, Hibernate, WebSphere, Eclipse RCP, XML, JSON, Log j, JQuery, Anthill Pro, Ant, Oracle SQL Developer, REST, JavaScript, JUnit, Unix, Linux, Apache Tiles . , IBM RAD, Rally Colruyt Group India, Hyderabad May - Sep JAVA DEVELOPER Project Summary The project involves creation of a single, integrated system which executes the calculation of sales and compensation for both External and Internal producers and suppliers. Responsibilities Used Hibernate ORM mapping for Oracle database. Front-end is designed by using HTML, DHTML, JavaScript, CSS, JSP, JSF, JSTL and Struts. Developed various Spring MVC forms and performed both client side and server side validation Worked on Web services using SOAP and AXIS. Used Hibernate as ORM tool for accessing database. Used Rational Clear Case to access files and directories in the organization. Integrated and configured Spring Framework and Hibernate environment. Environment Java JDK . , Eclipse . , log j, Ant, Solaris , Web Sphere Portal Server . , RUP, Java . , J EE, JSP . , Servlets . , JSF . , Prime Faces, Spring . . . , Hibernate . , Web Sphere . , AXIS, Oracle i g g, J Unit, XML, HTML, JQuery, Java Script, AJAX, CSS, Rational Clear Case",
  "preprocessed_text": "candidate full stack developer year experience including user interaction requirement analysis design development testing configuration client interaction support professional summary skilled object oriented analysis design ooad extensively worked open source technology strut spring hibernate framework log junit proficiency various component spring ioc aop jdbc oxm resttemplate mvc good experience implementing design pattern like singleton session facade business delegate service locator front controller data access object dao etc proficiency various web based technology like html dhtml reactjs javascript ajax tile experience adding dynamic functionality web page using javascript jquery nodejs angularjs excellent experience software development life cycle sdlc experience installing mongo db window environment adding arbiter replica set well development hand experience apache infinispan cache experience solid understanding micro service implemented client-server business application using micro service well versed working relational data base management system oracle m sql server db mysql mongo db nosql cassandra developed sql script pl sql query function procedure trigger profile user oracle database worked extensively various flavor unix operating system like linux experience working ibm mq message queue jms asynchronous mode communication experience working multiple server ibm web sphere oracle weblogic jboss apache tomcat good experience using test driven j tool like jasmine excellent experience developing web service python programming language skilled building application based soa architecture ibm integration designer strong exposure web client technology using jsp jstl xhtml dom cs javascript ajax experience working collection framework multi-threading experience manual automated testing using selenium experience cloud computing environment like amazon web service aws performed requirement elicitation gathering functional non-functional requirement strong application development websphere portal jsr specification integrated spring portlet hibernate experience implementing restful soap based web service using top approach bottom approach hand experience building deploying tool like ant maven well version control using git svn subversion rational clear case cv vss working knowledge xml related technology xml xsl xsds dtd jaxp sax dom jaxb experience using jms integration framework reduces complexity jms api using spring integration mq technical skill professional experience centerpoint energy tx jan present java developer project summary project focus making easier collect energy consumption data utility company required analyze energy usage deploy new market transaction management solution top customer care billing maintains response message enrollment request generating monthly historical usage responsibility participated contributed team demo peer review team retrospective daily standups development application created technical design document using class sequence diagram feature processing flow data insertion designed developed new code feature based standard sf design pattern soc design principle single responsibility reusability principle used java message service jms asynchronous exchange information system involved implementing junit test case used ajax implementing part functionality customer registration view customer information module developed api using aws lambda manage server run code aws application deployment migrating data application aws platform designed dynamic client-side javascript code build web form simulate process web application navigation form validation integrating oracle cc various business critical system financial ledger system developed upk simulation cc overview navigation course devised established high level architecture release feature processing data insertion calculation workpaper table experience using distributed database nosql cassandra manage large amount structured data used react j templating faster compilation developing reusable component built restful web service using mvc architecture style assigned role policy user security group using identity access management iam implemented multi factor authentication mfa provide additional security account resource created jms consumer process restful jms message configured aws versioning lifecycle policy backup service request archive file configured elastic load balancer elb aws ec autoscaling group created monitor alarm notification aws ec host using cloud watch used second level cache enhance performance proper memory management used purequery interface access relational database using purequery runtime java annotation using merge upsert statement sequence object used micro service architecture interacting combination rest mq leveraging aws build test deploy identity micro service used ec virtual server host git jenkins configuration management tool like chef multithreading used perform various task simultaneously like scraping data formatting data time huge amount data processed time getting scraped tuned recorded performance nosql cassandra cluster altering jvm parameter queried analyzed data nosql cassandra quick searching sorting grouping developed new existing calculation setup edit review ui module using jsp jquery analyst manage new existing calculation configured spark streaming receive real time data kafka store stream data nosql cassandra using spark java scala implemented angularjs node j spring mvc model component conducted test application developed angular j using jasmine protractor involved bdd behavior driven development using jbehave jasmine framework monitored performance dao call host component call using jamon corrected performance required faster processing usage record implementing selenium testing platform using test script eclipse ide worked increase quality source code meet gfs standard using tool framework like pitest checking mutation checkstyle coding standard emma class line branch coverage codepro static code analysis csslint jslint cs javascript code quality used maven building application implemented scala involved monitoring sonar dashboard code metric every sprint cycle fixed code based dashboard statistic used maven building application enterprise artifact using maven command verify test case coding standard application deploying code environment java spring spring jdbc websphere ibm rsa jquery jasmine jbehave jenkins jamon maven pitest junit restful json emma jms multithreading scala angular j java cache node j codepro nosql cassandra react j git micro service sonar spring boot apigee selenium aws checkstyle splunk easymock morgan stanley ny nov jan java developer project summary worked human resource information technology group workday project project mainly involves designing developing maintaining hr data workday building enterprise data warehouse used different group java process involved extracting data workday form xml file load database also involves migration data legacy internal hr application workday final data reported user business object report outgoing feed responsibility designed xsds implement service eclipse ide ibm integration designer ibm id based xsds implemented service based spring architecture spring core spring mvc spring oxm api developed simple secure integration using workday enterprise interface builder eib extensively used spring rest template provide restful web service call underlying application used hibernate orm tool good work experience mongo db mysql creating sql statement sub query wrote python script parse xml document load data database designed business flow diagram process included process staffing job benefit compensation grade package implemented backbonejs reactjs create dynamically changing website used pl sql coding exception handling duplicate data maintaining upgrade underlying search engine elastic search enhancing performance insight configured spring orm provides simplified template accessing database orm technology hibernate case access database cleansing data generated weblogs automated script python implemented client application specific code module used ant build tool build compile create jar file client application responsible constant upgrading service per release change unit testing utilizing junit api used soap ui testing various environment used jmockit mock sea call testing implemented seb service ibm integration designer ibm id creating mediation flow module inbound import outbound export service deployed various environment created toolkits consumption ibm process designer ibm pd implemented test case operation ibm id worked sql database store json like dynamic connection data created various parser program extract data workday using scala used apache tile framework user interface look feel used svn check-in check-out co-ordinate among team member version controlling used spring jms template asynchronous exchange critical business data event among ee component legacy system worked version control tool git branching merging reverting code used clover constantly check effectiveness coverage test case tested required operation id creating human service test ibm process designer responsible constantly revising reviewing code using fish eye-crucible responsible biweekly call primary support secondary support coordinating validating change request work request created cr wrs regular basis code deployment code change environment jdk ee spring hibernate oracle weblogic eclipse scala xml json log junit anthill pro ant jmockit pl sql git elastic search infinispan cache python oracle sql developer apache tile mongo db jms reactjs ibm integration designer ibm process designer soap ui sql clover crucible axa equitable life insurance company nj oct oct java developer project summary employer sponsored alert micro service designed expose data inforce alert database consume front end designed using angular j implementation micro service using springboot eclipselink data jpa dynamic entity responsibility data analysis breakdown project multiple micro service designing dynamic entity implementing service spring boot worked apache wicket presentation layer performing analysis developing poc different way expose micro service like node j v spring boot spring data jpa writing sql statement extract data verify output data using sql query analyzer developed html mobile application html java script jquery json restful web service worked migrating old java stack type safe stack using scala backend programming created various parser program extract data database using scala mapped table database using hibernate scala used nodejs lightweight webserver resolve javascript dependency involved development user interface presentation screen using html cs node j developing front end single application using groovy j environment spring boot spring data jpa sql html cs node j scala spring tool suite sts hibernate apache wicket angular oracle thomson reuters mn aug sep java developer project summary tram thomson reuters application management suite standardized suite capability manage trs application need deploying logging monitoring alerting java window based application service worked autoscale cloud project part tram deploy migrate auto-provisioning dynamic scaling application trs private cloud leveraging existing tram infrastructure responsibility involved design development autoscale project tram deploy migrate managing cloud based application developed application spring framework used hibernate orm perform backend cmdb call retrieve commit application specific configuration data required deploy application expose various rest endpoint consumed service client directly autoscale application getting status application configure application conjunction openstack api integrated splunk rest api query splunk via splunk job call stack transaction information developed custom parser parse splunk json output developed user interface using jsp angular dojo jquery extensively used angular directive validation angular form angular service worked application written groovy grail developed restful web service groovy service worked tram deploy engine mona java window node agent develop new capability according client requirement developed test suite various rest end point junit framework used soap ui testing various environment participate iteration planning meeting biweekly attended scrum meeting environment java spring hibernate tomcat xml json log junit angular groovy anthill pro ant oracle sql rest openstack api jackson splunk javascript dojo toolkit optum health mn oct jun java developer project summary optumrx project manage customer prescription medication customer health product manages customer order refill tracking order displaying status order responsibility developed introduced new enhanced feature optumrx customer portal customer medication cabinet integrated code ibm work manger api handle customer leveraged framework schedule background worker thread enhanced web-tier component using jsp spring apache tile tag library javascript used eclipse rich client platform rcp development project extensively used linux unix system administration tool create server deploy run application development stage developed test suite various rest end point junit framework used easymock framework environment java spring hibernate websphere eclipse rcp xml json log jquery anthill pro ant oracle sql developer rest javascript junit unix linux apache tile ibm rad rally colruyt group india hyderabad may sep java developer project summary project involves creation single integrated system executes calculation sale compensation external internal producer supplier responsibility used hibernate orm mapping oracle database front-end designed using html dhtml javascript cs jsp jsf jstl strut developed various spring mvc form performed client side server side validation worked web service using soap axis used hibernate orm tool accessing database used rational clear case access file directory organization integrated configured spring framework hibernate environment environment java jdk eclipse log ant solaris web sphere portal server rup java ee jsp servlets jsf prime face spring hibernate web sphere axis oracle unit xml html jquery java script ajax cs rational clear case",
  "statistics": {
    "word_count": 2987,
    "unique_word_count": 962,
    "avg_word_length": 4.98627385336458,
    "stopword_count": 611
  },
  "metadata": {
    "filename": "Candidate82.docx",
    "file_size": 57181,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:00.885374",
    "input_filename": "Candidate82.json"
  }
}