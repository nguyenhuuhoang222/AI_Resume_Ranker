{
  "id": "Candidate 92 Java Developer",
  "raw_text": "Candidate92\nCandidate92.java@gmail.com\n727-304-5761\n[Sr. JAVA FULL STACK DEVELOPER]\nCareer Objective: \t\n          Seeking a challenging position to utilize my skills and abilities in a challenging, dynamic and growing organization that provides ample opportunity where my professional skill and knowledge are enhanced, while being resourceful, innovative and flexible.\nProfessional Summary:\nAround 8+ years of experience in object-oriented programming, design, development, testing, implementation, and Enterprise applications using Java and J2EE technologies with Software Development Life Cycle (SDLC). \nExperience with Java8 streams, Lambda functions, Method references, Filters, Predicates, collections and other default methods.\nExtensive experience in developing applications using Java, Java Beans, JSP, JSF, Servlets, REST Web Services, Apache Struts framework, Spring MVC framework, EJB, JDBC, JNDI, Spring, Hibernate, JavaScript, Ajax, JUnit, Test Driven Development and Oracle. \nStrong experience in Spring Framework modules such as Spring MVC, IOC, AOP, JDBC, JTA, IO, ORM, Spring Dashboard, Spring Boot and Spring Data JPA, Spring cloud, Microservices, Spring REST, Spring Eureka, Spring Ribbon, Spring Netflix, Spring Zuul Proxy.\nExperienced in Service Oriented Architecture and Web Services using SOAP, REST.\nStrong understanding of Micro services patterns – Circuit Breaker/Hystrix, DDD, Aggregator, Proxy Chaining.\nDeveloped applications using latest technologies like EJB3.2, Spring 3.x/4.x, Hibernate3.2/4.x, REST based Web services (Axis2.0, JAX WS 2.0, JAX RS), Rule Engines (Drools4.1, ILOG), jBPM tools.\nDeployed the application to pivotal cloud foundry.\nExperience with Angular JS, JQuery, Karma, Jasmine, Ext JS, Grunt, JavaScript, VBScript, Perl, AJAX, Adobe Flex, ActionScript, JSON, HTML, DHTML, CSS, Tiles, Tag Libraries.\nExperience in developing applications using J2EE Design Patterns like creational, structural and behavioural design patterns.\nIn-depth knowledge of core java concepts such as OOPS, Collections, Threading, generics, Exception handling, Multi-Threading, Execution services, concurrent utilities, File IO, Garbage Collection and Serialization.\nExcellent in deploying the applications in AWS as EC2 instances and create snapshots of the data that have to be stored in AWS S3. Installed the application on AWS EC2 instances and also configured the storage on S3 buckets.\nExcellent working experience in web-based GUIs development using Servlets, JSP, JSF. \nProficient in SQL and wrote Stored Procedures, Triggers besides writing DDL, DML and transaction query with development tools like TOAD and Oracle SQL Developer.\nImplemented Security as a service using pivotal cloud foundry.\nKnowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Oracle SQL PL/SQL, SQL Server (MS SQL), DB2 and Oracle Performance Tuning.\nStrong experience with NoSQL concepts and developed various databases using NoSQL.\nStrong experience with MongoDB development (reports, schema design, map reduce functions) and migrations from SQL relational databases to NoSQL databases like MongoDB, Cassandra and CouchDB.\nExperienced in Middleware persistence frameworks like Hibernate/JPA Entities for mapping Java classes using Hibernate Query Language (HQL), HSQL Named Queries, Criteria, Projections.\nExtensively used Crucible, subversion, Git, Bamboo, Rally software, Maven, Jenkins & JIRA.\nExperience with Windows, UNIX Operating Systems.\nHaving knowledge and hands-on experience with Selenium, JUnit, Log4j testing tools.\nExcellent team player, dynamic, flexible with positive attitude and excellent learning skills.\nAble to work in both Java and Mainframes simultaneously.\nExperience in Deploying, Configuring and maintaining applications on Web Servers such as BEA WebLogic, IBM Web Sphere, and Apache Tomcat.\nGood knowledge in AWS (Amazon Web Services) and its features like EC2, S3, RDS, ELB, EBS, ESB, CloudFront, and VPC.\nSoftware Skills:\nProfessional Experience:\nClient: Change Health care, Nashville, TN\t\t\tDuration: Sep 2016 – Till date\nRole: Sr. Java/J2EE Full Stack Developer\nDescription: This is a web application based on J2EE architecture. It provides web-based access to inpatient and outpatient data from the Data Repository. Users can review as well as update or enter new data through data repository. Many clinicians use Data Repository daily for accessing patient data, which aids in making important clinical decisions. Data Repository is mainly composed of various modules running inside of the application. The project aims to provide the company with data to develop evidence-based health policy decisions as well. The client programs are used for issuing or retrieving data from the database depending on the query for finding health policy premium \nResponsibilities:\nInvolved in requirements gathering, system design, analysis, implementation and setting up the development environment.\nDeveloped multiple Angular 4.0 components which are compatible with latest versions of Type Script, angular CLI.\nInvolved in the development of the UI using HTML5, CSS3, Bootstrap, Ext JS and Angular JS.\nExtensively involved in coding with AngularJS to add functionalities and effects like Accordion, Infinite Scroll bar, Slider bar, Draggle/Droppable, Resizable, Progress bar. Customized Data Tables and High charts into Angular JS Directives.\nImplemented a responsive web design using Bootstrap. \nEspresso Framework which is used internally for developing the services with a quick and easy view of UI.\nExtensively used JAVA8 Streams, Lambda Functions, Predicates, Functional Interfaces, Method References, Filters, Collections and default methods.\nDeveloped MicroServices for different level of layers in flow of network.\nInvolved in implementing the Micro Services based on Restful API utilizing Spring Boot with Spring MVC\nImplemented the application using Spring IOC, Spring MVC Framework, Spring Batch and handled the security using Spring Security.\nImplemented Service Oriented Architecture (SOA) using JMS (MQ series) for sending and receiving messages while creating web services. \nExtensive use of Spring Data in design and development of user interfaces.\nInvolved in implementation of application using conventional design practices (Web-Service Oriented Architecture, MVC-Model View Controller).\nCreated and injected Spring services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nExtensively used the Spring framework implemented upon the MVC design pattern.\nDeveloped RESTful Web services for transmission of data in JSON format.\nUsed PL/SQL stored procedures for applications that needed to execute as part of a scheduling mechanisms. Heavily used joins stored procedures, views, Unions in Oracle data base to fetch the data.\nDeveloped Applications using Rule Engines-Jboss Drools 4.x, Work flows, Human tasks to implement Business rules validations and provided Drools Dashboard for Business users.\nExtensively used Hibernate Relational mappings (One-To-Many, Many-To-Many) in the secondary project.\nExtensively worked on Hibernate Cache, Query, Criteria and Transactions in secondary project.\nWorked on creation of custom Docker container images, tagging, pushing images, integration of Spring boot.\nUsed load balancing in pivotal cloud foundry services.\nTesting for Node JS is done using mocha and chai for spring boot used Mockito, Junit, JMeter, Mock MVC and achieved Test Driven Development.\nCreated the Docker containers and Docker consoles for managing the application life cycle.\nHands on experience with MongoDB Installation, Configuring, Monitoring and Designing Shared Environment.\nUsed Maven as build and dependency management tool for creating EAR, WAR and JAR file to be deployed in application servers and integrated with SVN, Jenkins, JMeter and Jenkins Jobs.\nEnvironment: Java 1.8, J2EE, Spring IOC, Spring MVC, Spring RESTful Web service, Spring Security, Hibernate 4.2, JMS, AngularJS 1.5, 4.0, Oracle 11g, CRUD, JIRA, CI, CD, Selenium, DAO, XML, MDB's, JMS, IBM WebSphere, DML, MVC, RESTful, Junit, JMeter, Log4J, SVN, EC2, S3, MicroServices, Bootstrap-3, JENKINS, IBM Rational Rose.\nClient: Wells Fargo, San Antonio, TX\t\t\t\tDuration: Sep 2015- Sep 2016\nRole: Sr. Java/J2EE Full Stack Developer\nDescription: An obsolete server outdates software needed standardization of processes. These circumstances have necessitated the need for upgrading the Xenos server under a new licensing agreement. For internal applications/customers the decision to move away from Xenos (D2E-vision) for document transformation, generation and other support functions. \nResponsibilities:\nDeveloped MicroServices using Spring Boot technology.\nExtensive use of Python on Regression Testing using PyDev and PyCharm.\nInvolved in implementation of application using conventional design practices with Java 8 edition (Web-Service Oriented Architecture, MVC-Model View Controller).\nGradle for building the applications. ELK stack for Logging.\nDeveloped UI with React JS and Implemented Node JS as a server-side proxy for an event-driven model.\nMigrated from Angular 1.0 to Angular 2.0, to take advantage of its features like Mobility Driven, Better performance, Revamped Dependency Injection and Strong & Flexible Routing.\nCreated Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources. Used AWS Lambda to run the code in the AWS.\nExperience in automating the infrastructure in AWS using web services. Used AWS, which included managing application in the cloud and creating instances.\nDesigned and Implemented the MongoDB schema.\nHoverfly for Mocking the JSON Responses for development Purposes.\nPing Federate Security client for authentication purposes.\nDeveloped the application using Spring framework to achieve Dependency Injection for loose coupling, modularity, easy unit testing.\nExtensively used Spring Tool Suite, Eclipse, GIT version tool system for developing Java based Applications.\nWorked on Initial Spring and Maven Configuration set for the Project Spring - Maven Framework.\nCreated Spring Boot applications testing suite using Spring Junit plugin and Mockito framework.\nInvolved in the development on Geo Location service using API calls.\nTo work on test and end-to-end environment servers, used LINUX commands to see the    application Logs.\nBuilding Jobs using JENKINS.\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework.\nExtensively used multithreading concepts.\nDeveloped Use Case Diagrams, Class Diagrams and Sequence Diagrams using Rational Rose Software.\nDeployed the projects (.war and. ear) in to production as primary On Call person from the Team.\nJUnits, Python Units for extensive functional and unit testing code.\nDeployed the applications on Pivotal Cloud Foundry.\nDevelop the micro-service in spring cloud framework to support Next generation cloud framework.\nDeveloped modules with JSP, Spring, EJB, XML and deployed them on JBoss Application Server.\nTested the Web services using SOAP UI and Mockito framework.\nDeveloped services that are reusable and interoperable, using SOAP Web services.\nGoCD Pipeline for running the applications developed by configuring it with GitHub, Which can check if the application is building or failing.\nFollowed Agile-Sprint methodology in delivering the work.\nEnvironment: JDK 1.6, Spring Framework, SOAP, Drools, Angular2.0, Spring WebLogic, JBOSS, GIT, JSP, EJB, HTML5, Java Script, React JS, Apache Maven, Apache Camel, MongoDB, SOAP UI, Putty.\nClient: AT&T, Dallas, TX\t\t\t\t\t\tDuration: Jan 2015- Aug 2015\nRole: Sr. Java Developer\nDescription: TORCH (Troubleshooting Operations: Resolution, Care, Help) is a web-based application used by AT&T Mobility personnel such as Customer Care, Retail, Business to Business (B2B), and Network Operations, to verify customer's cellular phone account features against network element profiles. It can be used to troubleshoot and resolve technical customer service issues, and out-of-synch conditions between billing and provisioned network elements. Depending on access level, users can view or edit certain profile fields, and gain access to functionality available from certain applications on cellular switches.\nResponsibilities:\nStruts framework for MVC design Pattern, Action class, Action Servlets, Form Bean.\nUsed Eclipse IDE for writing code and BEA WebLogic as application server.\nImplemented simulated top-down SOAP based Web Service to test the business logic for the rating calculation.\nUsed JDBC, MQ Series and Web Service, and Hibernate framework to access the data from back-end MS SQL database server.\nUsed Stored Procedures to crunch data and creating view for fetching data from multiple tables on MS SQL Server.\nUsed Java Persistence API (JPA) for managing relational data mapping.\nSpring framework to implement bean to declare a service and accessed those using Application context. \nJMS for sending and receiving Message through application server.\nInvolved in developing the applications using Spring Framework for Dependency Injection (Inversion of Control), Implemented the business logic using EJB(session and entity beans)\nUsed XML SAX to parse the simulated xml file which has simulated test data.\nUsed SVN for version control. \nUsed Log4J logging framework to write Log messages with various levels. \nDeveloped Automated Test Application which validates various XML document using Junit and XSLT.\nUsed JRockit JDK to develop and run the underwriting workbench application.\nUsed GWT and WAS migration\nFollowed Agile Methodology during the development process.\nWork with DNS to map the website to its ip address\nExtensively used GWT for developing Ajax applications.\nUsed Maven to validate, compile and deploy the files.\nEnvironment: JDK, Java/J2EE, EJB, JSF 1.0, Hibernate 3.0, Jakarta Struts 2.0, Spring 3.0, JSP, CSS, JSTL, JDBC, Servlets, XML, JRockit, JUnit, JavaScript, VSS,JMS, Agile Programming, Eclipse, GWT, MSSQL Server 2005, Ajax, AXIS, Web Services JAX-WS, BEA WebLogic Server 8.1, UML, Maven, UNIX, SVN.\nClient: State Farm Insurance, Bloomington, IL\t\t\tDuration: Oct 2013 – Dec 2014\nRole: Java/J2EE Developer (Mid-Level) \nDescription: The Auto Insurance Application allows customers to access their account online. This application provides employers to access customer information to process & authorize claims of the customers and generates free quotes for the customers depending on the type of insurance package they selected. It also facilitates customers to pay their monthly premiums.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) of the application like Requirement gathering, Design, Analysis and Code development.\nGenerated Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose.\nDeveloped the applications using Java, J2EE, Struts, and JDBC.\nImplemented automation using Selenium WebDriver, JAVA, Selenium Grid, Maven.\nWorked on various use cases in development using Struts and testing the functionalities. \nInvolved in preparing the High Level and Detail level design of the system using J2EE.\nCreated struts form beans, action classes, JSPs following Struts framework standards.\nImplemented the database connectivity using JDBC with Oracle 9i database as backend. \nInvolved in the development of model, library, struts and form classes (MVC).\nUsed display tag libraries for decoration and used display table for reports and grid designs. \nDesigned and developed file upload and file download features using jdbc with Oracle Blob.\nWorked on core java, using file operations to read system file (downloads) and to present on JSP. \nInvolved in the development of underwriting process, which involves communications without side systems using IBM MQ and JMS.\nUsed PL/SQL stored procedures for applications that needed to execute as part of a scheduling mechanisms.\nDesigned and developed Application based on Struts Framework using MVC design pattern. \nDeveloped Struts Action classes using Struts controller component.\nDeveloped SOAP based XML web services. \nApache Ant was used for the entire build process.\nUsed Rational Clear Case for version control and Junit, EasyMock for unit testing.\nUsed quartz scheduler to process or trigger the applications on a daily basis.\nConfigured WebSphere Application server and deployed the web components.\nProvided troubleshooting and error handling support in multiple projects.\nEnvironment: Flex, EJB, Struts, spring, JSP1.2, Servlets2.1, Jasper reports, JMS, IBM MQ, XML, SOAP, UDDI, WSDL, JDBC, JavaScript, XSLT, XML, UML, HTML, JNDI, Rational Rose 98, Oracle 9i, IBM Websphere 6.0, ClearCase, Log4J, ANT, JUnit, IBM RAD, and Apache Tomcat. \nClient: Virtusa                             \t\t Duration: Jul 2011-Sep 2013\nRole: Java Developer (Mid-Level)\nDescription: The System is a Customer Website Portal that will be utilized by existing customers to perform functions like Self Registration, Enter Meter Readings, Order Supplies, Create Service Requests and Account Management.\nResponsibilities:\nResponsible for creating efficient design and developing User Interaction screens using HTML, CSS, JavaScript, Angular, jQuery, AJAX and JSON.\nDeveloped dynamic e-mails using JavaScript, and hand coding of HTML5, XHTML, and CSS3.\nCreated Dashboards using Java and servlets along with HTML and JavaScript.\nDeveloped responsive and interactive pages using Angular 1.0 and Node.js frameworks.\nImplemented various Validation Controls for client-side validation and implemented custom validation controls with JQUERY and JavaScript.  \nCreated basic animation for jQuery and rich interface components such as tabs & accordion.\nUsed AJAX to make asynchronous calls to the server to fetch data and update the DOM.\nWorked closely with UX team to translate designs and wireframes to code.\nExperienced in DOM manipulation, Event Handling, Event Bubbling, and integration with RESTful services. Developed the middle tier using EJBs. \nDeveloped session, entity beans and message driven beans. Entity Beans used for accessing data from the SQL Server database. \njQuery opinionated about how a CRUD (Create, Read, Update, Delete) application should be built.\nDeployed the application on WebSphere application server in development and production environment. \nUndertook the Integration and testing of the various parts of the application.\nEnvironment: Java/J2EE, EJB, JMS, Servlets, JSP, JDBC, HTML, CSS, JavaScript, AngularJS, AJAX, JUnit, Websphere 7.0, Eclipse, ANT, SQL Server 2000, log4j, Subversion, Windows NT \nClient: Computer Management Systems Ltd,                               Duration: Aug 2009-Jul 2011\nRole: Java Developer    \nDescription: Computer Management systems Ltd. started as Computer Maintenance and Services Company. Today Computer Management systems Limited operates as an IT solutions & amp; services company and is involved in technology solutions consulting and services, business system integration and services for transport system, including road traffic signals automation and intelligent transport management.\nResponsibilities:\nResponsible for Functional Specification and System Design based on Business Requirement Document provided by business analyst.\nAnalyzed use cases, created interfaces and designed the core functionality from presentation layer to business logic layer using UML.\nReviewed system requirements and translated into design documents, established specific solutions, and lead the efforts including programming and testing that culminate in business acceptance of the results.\nDesigned and developed client side GUI using JSP, HTML and JavaScript.\nUsed java core concepts Collection Framework Interfaces like List, Set and Queue.\nUsed AJAX and JavaScript for validations and integrating business server side components on the client side with in the browser.\nUsed Servlet as an interface between frontend and backend to handle HTTP requests and to send response back to the front end.\nWorked on JDBC to connect to MySQL for implementing CRUD operations.\nResponsible for configuring Apache Tomcat Application Server to access the Database by setting up Data source and MySQL Pool.\nDeveloped the business objects using EJB for calling data access objects.\nUsed NetBeans IDE to develop the Application.\nUsed CVS for version control across common source code used by developers. Reviewing test cases and bug fixing.\nUsed Log4J to capture the log that includes runtime exceptions. Performed Unit Testing and Integration testing.\nStrong knowledge of Medicaid and Medicare Services, Health Assessment Systems, Compliance issues and Electronic Health Records/Electronic Medical Records.\nEnvironment: JDK, EJB, Servlets, JSP, JavaScript, CSS, HTML, XML, JDBC, NetBeans IDE, CVS, ANT, Apache Tomcat Application Server, UML, MySQL and Windows XP.\nCertification:\nMTA (Microsoft Technology Associate) certification, on the topic -“Database fundamentals”. ",
  "cleaned_text": "Candidate Sr. JAVA FULL STACK DEVELOPER Career Objective Seeking a challenging position to utilize my skills and abilities in a challenging, dynamic and growing organization that provides ample opportunity where my professional skill and knowledge are enhanced, while being resourceful, innovative and flexible. Professional Summary Around years of experience in object-oriented programming, design, development, testing, implementation, and Enterprise applications using Java and J EE technologies with Software Development Life Cycle SDLC . Experience with Java streams, Lambda functions, Method references, Filters, Predicates, collections and other default methods. Extensive experience in developing applications using Java, Java Beans, JSP, JSF, Servlets, REST Web Services, Apache Struts framework, Spring MVC framework, EJB, JDBC, JNDI, Spring, Hibernate, JavaScript, Ajax, JUnit, Test Driven Development and Oracle. Strong experience in Spring Framework modules such as Spring MVC, IOC, AOP, JDBC, JTA, IO, ORM, Spring Dashboard, Spring Boot and Spring Data JPA, Spring cloud, Microservices, Spring REST, Spring Eureka, Spring Ribbon, Spring Netflix, Spring Zuul Proxy. Experienced in Service Oriented Architecture and Web Services using SOAP, REST. Strong understanding of Micro services patterns Circuit Breaker Hystrix, DDD, Aggregator, Proxy Chaining. Developed applications using latest technologies like EJB . , Spring .x .x, Hibernate . .x, REST based Web services Axis . , JAX WS . , JAX RS , Rule Engines Drools . , ILOG , jBPM tools. Deployed the application to pivotal cloud foundry. Experience with Angular JS, JQuery, Karma, Jasmine, Ext JS, Grunt, JavaScript, VBScript, Perl, AJAX, Adobe Flex, ActionScript, JSON, HTML, DHTML, CSS, Tiles, Tag Libraries. Experience in developing applications using J EE Design Patterns like creational, structural and behavioural design patterns. In-depth knowledge of core java concepts such as OOPS, Collections, Threading, generics, Exception handling, Multi-Threading, Execution services, concurrent utilities, File IO, Garbage Collection and Serialization. Excellent in deploying the applications in AWS as EC instances and create snapshots of the data that have to be stored in AWS S . Installed the application on AWS EC instances and also configured the storage on S buckets. Excellent working experience in web-based GUIs development using Servlets, JSP, JSF. Proficient in SQL and wrote Stored Procedures, Triggers besides writing DDL, DML and transaction query with development tools like TOAD and Oracle SQL Developer. Implemented Security as a service using pivotal cloud foundry. Knowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Oracle SQL PL SQL, SQL Server MS SQL , DB and Oracle Performance Tuning. Strong experience with NoSQL concepts and developed various databases using NoSQL. Strong experience with MongoDB development reports, schema design, map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB, Cassandra and CouchDB. Experienced in Middleware persistence frameworks like Hibernate JPA Entities for mapping Java classes using Hibernate Query Language HQL , HSQL Named Queries, Criteria, Projections. Extensively used Crucible, subversion, Git, Bamboo, Rally software, Maven, Jenkins & JIRA. Experience with Windows, UNIX Operating Systems. Having knowledge and hands-on experience with Selenium, JUnit, Log j testing tools. Excellent team player, dynamic, flexible with positive attitude and excellent learning skills. Able to work in both Java and Mainframes simultaneously. Experience in Deploying, Configuring and maintaining applications on Web Servers such as BEA WebLogic, IBM Web Sphere, and Apache Tomcat. Good knowledge in AWS Amazon Web Services and its features like EC , S , RDS, ELB, EBS, ESB, CloudFront, and VPC. Software Skills Professional Experience Client Change Health care, Nashville, TN Duration Sep Till date Role Sr. Java J EE Full Stack Developer Description This is a web application based on J EE architecture. It provides web-based access to inpatient and outpatient data from the Data Repository. Users can review as well as update or enter new data through data repository. Many clinicians use Data Repository daily for accessing patient data, which aids in making important clinical decisions. Data Repository is mainly composed of various modules running inside of the application. The project aims to provide the company with data to develop evidence-based health policy decisions as well. The client programs are used for issuing or retrieving data from the database depending on the query for finding health policy premium Responsibilities Involved in requirements gathering, system design, analysis, implementation and setting up the development environment. Developed multiple Angular . components which are compatible with latest versions of Type Script, angular CLI. Involved in the development of the UI using HTML , CSS , Bootstrap, Ext JS and Angular JS. Extensively involved in coding with AngularJS to add functionalities and effects like Accordion, Infinite Scroll bar, Slider bar, Draggle Droppable, Resizable, Progress bar. Customized Data Tables and High charts into Angular JS Directives. Implemented a responsive web design using Bootstrap. Espresso Framework which is used internally for developing the services with a quick and easy view of UI. Extensively used JAVA Streams, Lambda Functions, Predicates, Functional Interfaces, Method References, Filters, Collections and default methods. Developed MicroServices for different level of layers in flow of network. Involved in implementing the Micro Services based on Restful API utilizing Spring Boot with Spring MVC Implemented the application using Spring IOC, Spring MVC Framework, Spring Batch and handled the security using Spring Security. Implemented Service Oriented Architecture SOA using JMS MQ series for sending and receiving messages while creating web services. Extensive use of Spring Data in design and development of user interfaces. Involved in implementation of application using conventional design practices Web-Service Oriented Architecture, MVC-Model View Controller . Created and injected Spring services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes. Extensively used the Spring framework implemented upon the MVC design pattern. Developed RESTful Web services for transmission of data in JSON format. Used PL SQL stored procedures for applications that needed to execute as part of a scheduling mechanisms. Heavily used joins stored procedures, views, Unions in Oracle data base to fetch the data. Developed Applications using Rule Engines-Jboss Drools .x, Work flows, Human tasks to implement Business rules validations and provided Drools Dashboard for Business users. Extensively used Hibernate Relational mappings One-To-Many, Many-To-Many in the secondary project. Extensively worked on Hibernate Cache, Query, Criteria and Transactions in secondary project. Worked on creation of custom Docker container images, tagging, pushing images, integration of Spring boot. Used load balancing in pivotal cloud foundry services. Testing for Node JS is done using mocha and chai for spring boot used Mockito, Junit, JMeter, Mock MVC and achieved Test Driven Development. Created the Docker containers and Docker consoles for managing the application life cycle. Hands on experience with MongoDB Installation, Configuring, Monitoring and Designing Shared Environment. Used Maven as build and dependency management tool for creating EAR, WAR and JAR file to be deployed in application servers and integrated with SVN, Jenkins, JMeter and Jenkins Jobs. Environment Java . , J EE, Spring IOC, Spring MVC, Spring RESTful Web service, Spring Security, Hibernate . , JMS, AngularJS . , . , Oracle g, CRUD, JIRA, CI, CD, Selenium, DAO, XML, MDB s, JMS, IBM WebSphere, DML, MVC, RESTful, Junit, JMeter, Log J, SVN, EC , S , MicroServices, Bootstrap- , JENKINS, IBM Rational Rose. Client Wells Fargo, San Antonio, TX Duration Sep - Sep Role Sr. Java J EE Full Stack Developer Description An obsolete server outdates software needed standardization of processes. These circumstances have necessitated the need for upgrading the Xenos server under a new licensing agreement. For internal applications customers the decision to move away from Xenos D E-vision for document transformation, generation and other support functions. Responsibilities Developed MicroServices using Spring Boot technology. Extensive use of Python on Regression Testing using PyDev and PyCharm. Involved in implementation of application using conventional design practices with Java edition Web-Service Oriented Architecture, MVC-Model View Controller . Gradle for building the applications. ELK stack for Logging. Developed UI with React JS and Implemented Node JS as a server-side proxy for an event-driven model. Migrated from Angular . to Angular . , to take advantage of its features like Mobility Driven, Better performance, Revamped Dependency Injection and Strong & Flexible Routing. Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources. Used AWS Lambda to run the code in the AWS. Experience in automating the infrastructure in AWS using web services. Used AWS, which included managing application in the cloud and creating instances. Designed and Implemented the MongoDB schema. Hoverfly for Mocking the JSON Responses for development Purposes. Ping Federate Security client for authentication purposes. Developed the application using Spring framework to achieve Dependency Injection for loose coupling, modularity, easy unit testing. Extensively used Spring Tool Suite, Eclipse, GIT version tool system for developing Java based Applications. Worked on Initial Spring and Maven Configuration set for the Project Spring - Maven Framework. Created Spring Boot applications testing suite using Spring Junit plugin and Mockito framework. Involved in the development on Geo Location service using API calls. To work on test and end-to-end environment servers, used LINUX commands to see the application Logs. Building Jobs using JENKINS. Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework. Extensively used multithreading concepts. Developed Use Case Diagrams, Class Diagrams and Sequence Diagrams using Rational Rose Software. Deployed the projects .war and. ear in to production as primary On Call person from the Team. JUnits, Python Units for extensive functional and unit testing code. Deployed the applications on Pivotal Cloud Foundry. Develop the micro-service in spring cloud framework to support Next generation cloud framework. Developed modules with JSP, Spring, EJB, XML and deployed them on JBoss Application Server. Tested the Web services using SOAP UI and Mockito framework. Developed services that are reusable and interoperable, using SOAP Web services. GoCD Pipeline for running the applications developed by configuring it with GitHub, Which can check if the application is building or failing. Followed Agile-Sprint methodology in delivering the work. Environment JDK . , Spring Framework, SOAP, Drools, Angular . , Spring WebLogic, JBOSS, GIT, JSP, EJB, HTML , Java Script, React JS, Apache Maven, Apache Camel, MongoDB, SOAP UI, Putty. Client AT&T, Dallas, TX Duration Jan - Aug Role Sr. Java Developer Description TORCH Troubleshooting Operations Resolution, Care, Help is a web-based application used by AT&T Mobility personnel such as Customer Care, Retail, Business to Business B B , and Network Operations, to verify customer s cellular phone account features against network element profiles. It can be used to troubleshoot and resolve technical customer service issues, and out-of-synch conditions between billing and provisioned network elements. Depending on access level, users can view or edit certain profile fields, and gain access to functionality available from certain applications on cellular switches. Responsibilities Struts framework for MVC design Pattern, Action class, Action Servlets, Form Bean. Used Eclipse IDE for writing code and BEA WebLogic as application server. Implemented simulated top-down SOAP based Web Service to test the business logic for the rating calculation. Used JDBC, MQ Series and Web Service, and Hibernate framework to access the data from back-end MS SQL database server. Used Stored Procedures to crunch data and creating view for fetching data from multiple tables on MS SQL Server. Used Java Persistence API JPA for managing relational data mapping. Spring framework to implement bean to declare a service and accessed those using Application context. JMS for sending and receiving Message through application server. Involved in developing the applications using Spring Framework for Dependency Injection Inversion of Control , Implemented the business logic using EJB session and entity beans Used XML SAX to parse the simulated xml file which has simulated test data. Used SVN for version control. Used Log J logging framework to write Log messages with various levels. Developed Automated Test Application which validates various XML document using Junit and XSLT. Used JRockit JDK to develop and run the underwriting workbench application. Used GWT and WAS migration Followed Agile Methodology during the development process. Work with DNS to map the website to its ip address Extensively used GWT for developing Ajax applications. Used Maven to validate, compile and deploy the files. Environment JDK, Java J EE, EJB, JSF . , Hibernate . , Jakarta Struts . , Spring . , JSP, CSS, JSTL, JDBC, Servlets, XML, JRockit, JUnit, JavaScript, VSS,JMS, Agile Programming, Eclipse, GWT, MSSQL Server , Ajax, AXIS, Web Services JAX-WS, BEA WebLogic Server . , UML, Maven, UNIX, SVN. Client State Farm Insurance, Bloomington, IL Duration Oct Dec Role Java J EE Developer Mid-Level Description The Auto Insurance Application allows customers to access their account online. This application provides employers to access customer information to process & authorize claims of the customers and generates free quotes for the customers depending on the type of insurance package they selected. It also facilitates customers to pay their monthly premiums. Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering, Design, Analysis and Code development. Generated Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose. Developed the applications using Java, J EE, Struts, and JDBC. Implemented automation using Selenium WebDriver, JAVA, Selenium Grid, Maven. Worked on various use cases in development using Struts and testing the functionalities. Involved in preparing the High Level and Detail level design of the system using J EE. Created struts form beans, action classes, JSPs following Struts framework standards. Implemented the database connectivity using JDBC with Oracle i database as backend. Involved in the development of model, library, struts and form classes MVC . Used display tag libraries for decoration and used display table for reports and grid designs. Designed and developed file upload and file download features using jdbc with Oracle Blob. Worked on core java, using file operations to read system file downloads and to present on JSP. Involved in the development of underwriting process, which involves communications without side systems using IBM MQ and JMS. Used PL SQL stored procedures for applications that needed to execute as part of a scheduling mechanisms. Designed and developed Application based on Struts Framework using MVC design pattern. Developed Struts Action classes using Struts controller component. Developed SOAP based XML web services. Apache Ant was used for the entire build process. Used Rational Clear Case for version control and Junit, EasyMock for unit testing. Used quartz scheduler to process or trigger the applications on a daily basis. Configured WebSphere Application server and deployed the web components. Provided troubleshooting and error handling support in multiple projects. Environment Flex, EJB, Struts, spring, JSP . , Servlets . , Jasper reports, JMS, IBM MQ, XML, SOAP, UDDI, WSDL, JDBC, JavaScript, XSLT, XML, UML, HTML, JNDI, Rational Rose , Oracle i, IBM Websphere . , ClearCase, Log J, ANT, JUnit, IBM RAD, and Apache Tomcat. Client Virtusa Duration Jul -Sep Role Java Developer Mid-Level Description The System is a Customer Website Portal that will be utilized by existing customers to perform functions like Self Registration, Enter Meter Readings, Order Supplies, Create Service Requests and Account Management. Responsibilities Responsible for creating efficient design and developing User Interaction screens using HTML, CSS, JavaScript, Angular, jQuery, AJAX and JSON. Developed dynamic e-mails using JavaScript, and hand coding of HTML , XHTML, and CSS . Created Dashboards using Java and servlets along with HTML and JavaScript. Developed responsive and interactive pages using Angular . and Node.js frameworks. Implemented various Validation Controls for client-side validation and implemented custom validation controls with JQUERY and JavaScript. Created basic animation for jQuery and rich interface components such as tabs & accordion. Used AJAX to make asynchronous calls to the server to fetch data and update the DOM. Worked closely with UX team to translate designs and wireframes to code. Experienced in DOM manipulation, Event Handling, Event Bubbling, and integration with RESTful services. Developed the middle tier using EJBs. Developed session, entity beans and message driven beans. Entity Beans used for accessing data from the SQL Server database. jQuery opinionated about how a CRUD Create, Read, Update, Delete application should be built. Deployed the application on WebSphere application server in development and production environment. Undertook the Integration and testing of the various parts of the application. Environment Java J EE, EJB, JMS, Servlets, JSP, JDBC, HTML, CSS, JavaScript, AngularJS, AJAX, JUnit, Websphere . , Eclipse, ANT, SQL Server , log j, Subversion, Windows NT Client Computer Management Systems Ltd, Duration Aug -Jul Role Java Developer Description Computer Management systems Ltd. started as Computer Maintenance and Services Company. Today Computer Management systems Limited operates as an IT solutions & amp services company and is involved in technology solutions consulting and services, business system integration and services for transport system, including road traffic signals automation and intelligent transport management. Responsibilities Responsible for Functional Specification and System Design based on Business Requirement Document provided by business analyst. Analyzed use cases, created interfaces and designed the core functionality from presentation layer to business logic layer using UML. Reviewed system requirements and translated into design documents, established specific solutions, and lead the efforts including programming and testing that culminate in business acceptance of the results. Designed and developed client side GUI using JSP, HTML and JavaScript. Used java core concepts Collection Framework Interfaces like List, Set and Queue. Used AJAX and JavaScript for validations and integrating business server side components on the client side with in the browser. Used Servlet as an interface between frontend and backend to handle HTTP requests and to send response back to the front end. Worked on JDBC to connect to MySQL for implementing CRUD operations. Responsible for configuring Apache Tomcat Application Server to access the Database by setting up Data source and MySQL Pool. Developed the business objects using EJB for calling data access objects. Used NetBeans IDE to develop the Application. Used CVS for version control across common source code used by developers. Reviewing test cases and bug fixing. Used Log J to capture the log that includes runtime exceptions. Performed Unit Testing and Integration testing. Strong knowledge of Medicaid and Medicare Services, Health Assessment Systems, Compliance issues and Electronic Health Records Electronic Medical Records. Environment JDK, EJB, Servlets, JSP, JavaScript, CSS, HTML, XML, JDBC, NetBeans IDE, CVS, ANT, Apache Tomcat Application Server, UML, MySQL and Windows XP. Certification MTA Microsoft Technology Associate certification, on the topic -Database fundamentals.",
  "preprocessed_text": "candidate sr. java full stack developer career objective seeking challenging position utilize skill ability challenging dynamic growing organization provides ample opportunity professional skill knowledge enhanced resourceful innovative flexible professional summary around year experience object-oriented programming design development testing implementation enterprise application using java ee technology software development life cycle sdlc experience java stream lambda function method filter predicate collection default method extensive experience developing application using java java bean jsp jsf servlets rest web service apache strut framework spring mvc framework ejb jdbc jndi spring hibernate javascript ajax junit test driven development oracle strong experience spring framework module spring mvc ioc aop jdbc jta io orm spring dashboard spring boot spring data jpa spring cloud microservices spring rest spring eureka spring ribbon spring netflix spring zuul proxy experienced service oriented architecture web service using soap rest strong understanding micro service pattern circuit breaker hystrix ddd aggregator proxy chaining developed application using latest technology like ejb spring .x .x hibernate .x rest based web service axis jax w jax r rule engine drool ilog jbpm tool deployed application pivotal cloud foundry experience angular j jquery karma jasmine ext j grunt javascript vbscript perl ajax adobe flex actionscript json html dhtml cs tile tag library experience developing application using ee design pattern like creational structural behavioural design pattern in-depth knowledge core java concept oops collection threading generic exception handling multi-threading execution service concurrent utility file io garbage collection serialization excellent deploying application aws ec instance create snapshot data stored aws installed application aws ec instance also configured storage bucket excellent working experience web-based gui development using servlets jsp jsf proficient sql wrote stored procedure trigger besides writing ddl dml transaction query development tool like toad oracle sql developer implemented security service using pivotal cloud foundry knowledgeable rdbms concept like writing sql query working experience relational dbms like mysql oracle sql pl sql sql server m sql db oracle performance tuning strong experience nosql concept developed various database using nosql strong experience mongodb development report schema design map reduce function migration sql relational database nosql database like mongodb cassandra couchdb experienced middleware persistence framework like hibernate jpa entity mapping java class using hibernate query language hql hsql named query criterion projection extensively used crucible subversion git bamboo rally software maven jenkins jira experience window unix operating system knowledge hands-on experience selenium junit log testing tool excellent team player dynamic flexible positive attitude excellent learning skill able work java mainframe simultaneously experience deploying configuring maintaining application web server bea weblogic ibm web sphere apache tomcat good knowledge aws amazon web service feature like ec rds elb eb esb cloudfront vpc software skill professional experience client change health care nashville tn duration sep till role sr. java ee full stack developer description web application based ee architecture provides web-based access inpatient outpatient data data repository user review well update enter new data data repository many clinician use data repository daily accessing patient data aid making important clinical decision data repository mainly composed various module running inside application project aim provide company data develop evidence-based health policy decision well client program used issuing retrieving data database depending query finding health policy premium responsibility involved requirement gathering system design analysis implementation setting development environment developed multiple angular component compatible latest version type script angular cli involved development ui using html cs bootstrap ext j angular j extensively involved coding angularjs add functionality effect like accordion infinite scroll bar slider bar draggle droppable resizable progress bar customized data table high chart angular j directive implemented responsive web design using bootstrap espresso framework used internally developing service quick easy view ui extensively used java stream lambda function predicate functional interface method filter collection default method developed microservices different level layer flow network involved implementing micro service based restful api utilizing spring boot spring mvc implemented application using spring ioc spring mvc framework spring batch handled security using spring security implemented service oriented architecture soa using jms mq series sending receiving message creating web service extensive use spring data design development user interface involved implementation application using conventional design practice web-service oriented architecture mvc-model view controller created injected spring service spring controller daos achieve dependency injection wire object business class extensively used spring framework implemented mvc design pattern developed restful web service transmission data json format used pl sql stored procedure application needed execute part scheduling mechanism heavily used join stored procedure view union oracle data base fetch data developed application using rule engines-jboss drool .x work flow human task implement business rule validation provided drool dashboard business user extensively used hibernate relational mapping one-to-many many-to-many secondary project extensively worked hibernate cache query criterion transaction secondary project worked creation custom docker container image tagging pushing image integration spring boot used load balancing pivotal cloud foundry service testing node j done using mocha chai spring boot used mockito junit jmeter mock mvc achieved test driven development created docker container docker console managing application life cycle hand experience mongodb installation configuring monitoring designing shared environment used maven build dependency management tool creating ear war jar file deployed application server integrated svn jenkins jmeter jenkins job environment java ee spring ioc spring mvc spring restful web service spring security hibernate jms angularjs oracle crud jira ci cd selenium dao xml mdb jms ibm websphere dml mvc restful junit jmeter log svn ec microservices bootstrap- jenkins ibm rational rose client well fargo san antonio tx duration sep sep role sr. java ee full stack developer description obsolete server outdates software needed standardization process circumstance necessitated need upgrading xenos server new licensing agreement internal application customer decision move away xenos e-vision document transformation generation support function responsibility developed microservices using spring boot technology extensive use python regression testing using pydev pycharm involved implementation application using conventional design practice java edition web-service oriented architecture mvc-model view controller gradle building application elk stack logging developed ui react j implemented node j server-side proxy event-driven model migrated angular angular take advantage feature like mobility driven better performance revamped dependency injection strong flexible routing created stack using amazon cloud formation template launch aws infrastructure resource used aws lambda run code aws experience automating infrastructure aws using web service used aws included managing application cloud creating instance designed implemented mongodb schema hoverfly mocking json response development purpose ping federate security client authentication purpose developed application using spring framework achieve dependency injection loose coupling modularity easy unit testing extensively used spring tool suite eclipse git version tool system developing java based application worked initial spring maven configuration set project spring maven framework created spring boot application testing suite using spring junit plugin mockito framework involved development geo location service using api call work test end-to-end environment server used linux command see application log building job using jenkins used spring core annotation dependency injection used apache camel integrate spring framework extensively used multithreading concept developed use case diagram class diagram sequence diagram using rational rose software deployed project .war ear production primary call person team junits python unit extensive functional unit testing code deployed application pivotal cloud foundry develop micro-service spring cloud framework support next generation cloud framework developed module jsp spring ejb xml deployed jboss application server tested web service using soap ui mockito framework developed service reusable interoperable using soap web service gocd pipeline running application developed configuring check application building failing followed agile-sprint methodology delivering work environment jdk spring framework soap drool angular spring weblogic jboss git jsp ejb html java script react j apache maven apache camel mongodb soap ui putty client dallas tx duration jan aug role sr. java developer description torch troubleshooting operation resolution care help web-based application used mobility personnel customer care retail business business network operation verify customer cellular account feature network element profile used troubleshoot resolve technical customer service issue out-of-synch condition billing provisioned network element depending access level user view edit certain profile field gain access functionality certain application cellular switch responsibility strut framework mvc design pattern action class action servlets form bean used eclipse ide writing code bea weblogic application server implemented simulated top-down soap based web service test business logic rating calculation used jdbc mq series web service hibernate framework access data back-end m sql database server used stored procedure crunch data creating view fetching data multiple table m sql server used java persistence api jpa managing relational data mapping spring framework implement bean declare service accessed using application context jms sending receiving message application server involved developing application using spring framework dependency injection inversion control implemented business logic using ejb session entity bean used xml sax parse simulated xml file simulated test data used svn version control used log logging framework write log message various level developed automated test application validates various xml document using junit xslt used jrockit jdk develop run underwriting workbench application used gwt migration followed agile methodology development process work dns map website ip extensively used gwt developing ajax application used maven validate compile deploy file environment jdk java ee ejb jsf hibernate jakarta strut spring jsp cs jstl jdbc servlets xml jrockit junit javascript vss jms agile programming eclipse gwt mssql server ajax axis web service jax-ws bea weblogic server uml maven unix svn client state farm insurance bloomington il duration oct dec role java ee developer mid-level description auto insurance application allows customer access account online application provides employer access customer information process authorize claim customer generates free quote customer depending type insurance package selected also facilitates customer pay monthly premium responsibility involved various phase software development life cycle sdlc application like requirement gathering design analysis code development generated use case diagram class diagram sequence diagram using rational rose developed application using java ee strut jdbc implemented automation using selenium webdriver java selenium grid maven worked various use case development using strut testing functionality involved preparing high level detail level design system using ee created strut form bean action class jsps following strut framework standard implemented database connectivity using jdbc oracle database backend involved development model library strut form class mvc used display tag library decoration used display table report grid design designed developed file upload file download feature using jdbc oracle blob worked core java using file operation read system file downloads present jsp involved development underwriting process involves communication without side system using ibm mq jms used pl sql stored procedure application needed execute part scheduling mechanism designed developed application based strut framework using mvc design pattern developed strut action class using strut controller component developed soap based xml web service apache ant used entire build process used rational clear case version control junit easymock unit testing used quartz scheduler process trigger application daily basis configured websphere application server deployed web component provided troubleshooting error handling support multiple project environment flex ejb strut spring jsp servlets jasper report jms ibm mq xml soap uddi wsdl jdbc javascript xslt xml uml html jndi rational rose oracle ibm websphere clearcase log ant junit ibm rad apache tomcat client virtusa duration jul -sep role java developer mid-level description system customer website portal utilized existing customer perform function like self registration enter meter reading order supply create service request account management responsibility responsible creating efficient design developing user interaction screen using html cs javascript angular jquery ajax json developed dynamic e-mail using javascript hand coding html xhtml cs created dashboard using java servlets along html javascript developed responsive interactive page using angular node.js framework implemented various validation control client-side validation implemented custom validation control jquery javascript created basic animation jquery rich interface component tab accordion used ajax make asynchronous call server fetch data update dom worked closely ux team translate design wireframes code experienced dom manipulation event handling event bubbling integration restful service developed middle tier using ejbs developed session entity bean message driven bean entity bean used accessing data sql server database jquery opinionated crud create read update delete application built deployed application websphere application server development production environment undertook integration testing various part application environment java ee ejb jms servlets jsp jdbc html cs javascript angularjs ajax junit websphere eclipse ant sql server log subversion window nt client computer management system ltd duration aug -jul role java developer description computer management system ltd. started computer maintenance service company today computer management system limited operates solution amp service company involved technology solution consulting service business system integration service transport system including road traffic signal automation intelligent transport management responsibility responsible functional specification system design based business requirement document provided business analyst analyzed use case created interface designed core functionality presentation layer business logic layer using uml reviewed system requirement translated design document established specific solution lead effort including programming testing culminate business acceptance result designed developed client side gui using jsp html javascript used java core concept collection framework interface like list set queue used ajax javascript validation integrating business server side component client side browser used servlet interface frontend backend handle request send response back front end worked jdbc connect mysql implementing crud operation responsible configuring apache tomcat application server access database setting data source mysql pool developed business object using ejb calling data access object used netbeans ide develop application used cv version control across common source code used developer reviewing test case bug fixing used log capture log includes runtime exception performed unit testing integration testing strong knowledge medicaid medicare service health assessment system compliance issue electronic health record electronic medical record environment jdk ejb servlets jsp javascript cs html xml jdbc netbeans ide cv ant apache tomcat application server uml mysql window xp certification mta microsoft technology associate certification topic -database fundamental",
  "statistics": {
    "word_count": 3559,
    "unique_word_count": 1113,
    "avg_word_length": 4.970778308513627,
    "stopword_count": 675
  },
  "metadata": {
    "filename": "Candidate 92 Java Developer.docx",
    "file_size": 61626,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:56.680699",
    "input_filename": "Candidate 92 Java Developer.json"
  }
}