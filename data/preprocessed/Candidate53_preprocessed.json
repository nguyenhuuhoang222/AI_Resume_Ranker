{
  "id": "Candidate53",
  "raw_text": " Candidate53\n469-629-8109\nLooking for Contract (C2C or C2H) roles only\nProfessional Summary:\nAround 8 years of progressively responsible experience in development, testing, documentation & production support applications using Internet, Web and Client Server Technologies in N-Tier J2EE Architecture.\nExperience in Test Driven Development (TDD), Waterfall model and Agile methodologies like SCRUM.\nExpertise through all parts of Software Development Life Cycle (SDLC) in developing web applications using JAVA, J2EE, EJB, Web services, SOA, SOAP, RESTful etc.\nExtensive hands-on experience with core expertise in design, development, and deployment of N-Tier enterprise applications for the J2EE platform using Core Java, Servlets, Struts, Spring, EJB, JSP, Web services, JPA, JNDI, JMS, JAXP, JUnit, JMeter.\nExpertise in spring framework, including Spring IoC/core, Spring DAO support, Spring ORM, Spring micro services, Spring AOP, Spring Security, Spring MVC, Spring Cache, and Spring Integration, and Spring Boot, Spring REST, Spring Eureka, Spring Ribbon, Spring Netflix, Spring Zulu.\nExperience of working on GIT and SVN.\nExperience in Selenium Web Driver automation tool with TestNG framework using Java.\nHands on experience in Front-End technologies like Angular Js 1.4.7, Bootstrap 3.1, HTML5, JavaScript, CSS3, JQuery, Google Web Toolkit (GWT), Tag Libraries, Custom Tags, Ajax and Node JS and ExtJS.\nExpertise in designing, developing and deploying applications using J2EE technologies including Servlets, JSP, EJB 2.x/3.x, JSTL, Struts, Spring 3.5, JMS, AJAX, JDBC, JNDI, Java Beans Hibernate and Web Services.\nExperience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM.\nExtensive knowledge and working experience of web development technologies such as JavaScript, JQuery UI, AngularJS, Angular2.0, HTML5, CSS3, SASS and Bootstrap.\nExtensive experience in building rich user friendly, high performance web applications using HTML5/4, CSS3/2, SASS, and JQuery and implementing cross-browser style-sheets\nInstalled and configured the Web Server and Database Server in Linux Platform.\nExtensively worked to build Model-View-Controller (MVC) and multi-tier client/server architecture using design patterns like DAO, DTO (Data Transfer object), Singleton and Session Façade.\nExperience in using various Amazon Web Services (AWS) Components like EC2 for virtual servers, S3.\nCreated and supported numerous Java Swing and Servlet based applications using Eclipse.\nWorked on deploying the latest builds in standalone as well as set up the JBoss cluster nodes to deploy builds using JBOSS Deployment Manager.\nApplication development experience using Serialization, Externalization, Collection, Generics, Core JAVA, Applets and Swing.\nDeveloped REST API test automation, utilizing REST Assured for Java and the TestNG Framework.\nExperience in building Microservices and implementing Spring Cloud- Netflix OSS Stack and Hystrix Circuit Breaker.\nAuthored the application using Spring Cloud and worked on Microservices Architecture using NETFLIX OSS configurations like Hystrix.\nExpertise in the Apache Camel Integration Framework, in conjunction with Apache CXF and ActiveMQ. Experienced in working with Spring Integration.EJB Session Beans were used to process request from user interface using OSS.\nPerformed necessary day-to-day SVN/GIT support for different projects.\nDeveloped Selenium Automation framework using Java, Java Script executor and Selenium Web Driver.\nKnowledge on all the AWS components like VPC, EC2, ELB, Auto Scaling, launch Configurations, S3, Glacier, Lifecycle rules for storage, Route 53, Cloud watch, Cloud Trial, RedShift, Volume and Snapshot management, SNS, IAM and Roles.\nGood working knowledge of NoSQL Database, MongoDB.\nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services, uses SOAP, WSDL. Exposure to JAXB & JAX-WS & JAX-RS.\nManaged GIT, Jenkins. Designed and automated build & release process.\nExperience in writing SQL queries, Stored Procedures, Triggers, views with the major databases like Oracle 9i to 11g, SQL, PL/SQL and MS Access.\nExperiences in Data Modeling, Dimensional Modeling of large databases.\nGood experience in Information Technology field as a SQL server developer with strong expertise in SQL server development, designing Stored Procedures/Transact SQL coding.\nHands on Experience in Installing, Configuring, Managing, Monitoring and Troubleshooting SQL server […]\nTechnical Skills:\nProgramming Languages: \tJava8/J2EE, SQL, PL/SQL, HTML, DHTML, JavaScript, Perl, UML, XML, XSL, XSLT, JQuery\nJ2EE Standards: \t\tJDBC, JNDI, Java Mail, JTA\nWeb Technologies: \tJSP, Servlet, JAX-WS, AXIS, REST (JAX-RS), SOA, SOAP, JMS, Bootstrap, EJB, Angular-JS, RMI, IBM MQ Series\nDatabases: \t\t\tOracle, MySQL, Sybase, SQL-Server-2008, Mongo-DB, Hadoop\nIDE's: \t\t\t\tEclipse, Intellij, Sublime, RAD, WSAD\nWeb/App Servers: \t\tWebSphere Application Server, WebLogic, JBoss, Apache Tomcat\nFrameworks: \t\t\tStruts, Node-JS, Spring, JSF, Hibernate, Apache Camel\nOperating Systems:\t\tWindows, UNIX, Solaris, Red Hat, AIX\nVersion Control Tools: \t\tCVS, SVN, Git, ClearCase\nTools/Utilities: \t\t\tLog4j, Ant, JUnit, Caliber, Maven, Gradle 2.1, Jenkins, SOAP UI\nMethodologies: \t\tAgile (Scrum, TDD), Waterfall\nIntegration:                                Apache Camel, JBoss Fuse 6.2, Active MQ, Apache ATOM, WESB\n\nClient: Hanger Inc., Austin, TX                                                                                 \tJan’ 2016 – Till Date\nRole: Sr. Java Full Stack Developer\nResponsibilities\nActively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model.\nDesigned and developed Microservices using REST framework and Spring Boot and used Bootstrap along with AngularJS in creating the Application.\nUsed NodeJS for doing non-blocking design operation for server-side code and Angular.js framework in developing various UI components.\nDeveloped the responsive UI web pages using XHTML, HTML5, CSS3, Angular JS 2, JavaScript, node JS and has worked with Angular JS filters in expressions and directives to filter data in the UI.\nDesigned and coded application components in an Agile environment utilizing a Test Driven Development (TDD) approach. \nExtensively used MVC, Factory, Delegate and Singleton design patterns.\nUsed Spring framework including Spring core/IoC, Spring Web, Spring Security and implement the authentication, authorization, and access-control features by using Spring Security.\nUsed Spring Inversion of Control (IoC) for injecting the beans and reduced the coupling between the classes and implemented the Model View Controller using Spring MVC.\nImplemented the application using Spring Boot Framework and handled the security using Spring Security.\nProvide expert technical leadership to customers and partners regarding all aspects of Pivotal Cloud Foundry (PCF).\nDeveloped single page applications using Angular 2, Typescript, HTML5, CSS3, and Bootstrap.\nDeployed EARs, WARs and configured application specific JVM settings, Web container parameters using the Admin Console and WebSphere admin scripts.\nAccomplished Work Load Management by creating Clusters.\nInvolved in designing, developing and testing the web application by using the HTML5, CSS3, Bootstrap, and React.JS.\nUsing the ReactJS, Flux for SPA development.\nInvolved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js.\nImplemented various screens for the front end using React.js and used various predefined components from NPM (Node Package Manager) and Redux library.\nUsed React-Router to turn application into Single Page Application\nInvolved in using React JS components, Forms, Events, Keys, Router, Animations and Flux concept.\nProject migration into cloud environment using AWS, Docker container.\nApplication and developed cross browser and multi browser compatible web pages using HTML5, CSS3 and Bootstrap.\nImplemented code according to create AngularJS Controller, which isolate scopes perform operations.\nCreated Typescript reusable components and services to consume REST API's using Component-based architecture provided by Angular 2.\nImplemented REST based web services using JAX-RS annotations, Jersey provider and consumed using HTTP services from angular JS modules.\nResponsible for setting up AngularJS framework for UI development.\nUsed Spring framework to provide loose coupling between different application modules.\nDeveloped Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB.\nDevelop a data integration application using Apache Camel leveraging Apache CXF and messaging middleware like ActiveMQ. Agile methodology used.\nUsed Microservices to communicate using synchronous protocols HTTP and REST for implementing SOA.\nEnvironment: J2EE, Java 1.8, Spring framework, Spring MVC, Hibernate, JSP, AWS, AJAX, SOA, TDD, Web Services, SQL Server, Microservices, XML, Ext JS, NodeJS, AngularJS, Angular2.0, Typescript, JQuery, JavaScript, IBM RAD 9.1, WebSphere 8.5, Agile Methodology, Design Patterns, PCF, Clear Case, Apache Maven, Apache Cassandra, MongoDB, JUnit, Html, Unit, XSLT, HTML/DHTML, JENKINS, Spark, Kafka.\nClient: Exelon Corp, Houston, TX                                                                                      Jun’ 2014 – Dec’ 15\nRole: Java Full Stack Developer\nResponsibilities:\nResponsible for gathering and understanding the system requirements by interacting with clients.\nGenerated the Class diagrams, Sequence diagrams extensively for all the process flows using RAD, MS VISIO.\nDesigned and developed GUI screens for user interfaces using JSP, JavaScript, XSLT, AJAX, XML, HTML5, CSS3, Bootstrap, JQuery and DHTML.\nDeveloped a HTTPS server and implemented features to serve different file types(TLS)\nExtensively involved in coding with Core Java concepts like Collections, Exception Handling, Multithreading, Java I/O, and Generics to implement some business logic.\nUsed Core, Context, and Security, Bean modules of Spring Framework.\nImplemented MVC, Singleton, Factory, DAO, Value Object, session, Facade, Data Access Object, Business Object paradigm.\nHandling orchestration service and rule engine which is implemented in NodeJS.\nUsed JQuery framework for creating front end applications and for Client Side validations.\nUsed iBatis for designing, developing and maintain the data layer.\nCreated Stored Procedures, SQL Statements and triggers for the effective retrieval and storage of data into database.\nApplication developed on Agile methodologies scrum and iterative method process.\nUsed Apache Log4J logging API to log errors and messages.\nCreated JUnit test suite to automate the testing of the business logic.\nUsed React-Router to turn application into Single Page Application.\nUsed ReactJS components, Forms, Events, Keys, Router, Animations and Flux concept.\nBuilding stable React components and stand-alone functions to be added to any future pages.\nDeveloped the Drag and Drop functionality using React-Dragabble.\nUsed React-Autocomplete for creating Google maps location search on the webpage.\nInvolved in 24x7 support, Maintenance and enhancement of the application.\nAutomate the web application using Selenium-Automation tools.\nJPA and Spring Rest to provide a Restful Interface based on Spring Boot application\nEnvironment: JDK 1.7, Spring framework, XML, HTML, JSP, AngularJS, Hibernate, iBatis, ANT, JavaScript, VSS, XSLT, CSS, AJAX, JMS, Spring Boot, Hibernate, SOAP, Web Services, AWS, Web Sphere Application Server, Tomcat, Oracle DB, MQ Series, JUnit, UNIX.\nClient: Gap Inc., San Francisco, CA                                                                              Sep’ 2012 – May’ 2014\nRole: Java/J2EE Developer\nResponsibilities:\nDesign and implemented the backend layer using Hibernate.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) architecture and Hibernate.\nApplied design patterns including MVC Pattern, Façade Pattern, Abstract Factory Pattern, DAO Pattern and Singleton.\nMade use of content negotiation (XML, JSON, text/plain) using JAXB, GSON, Jackson, and XStream.\nUsed JQuery for back end table of Customers/Orders - for administrators to inspect and edit.\nExtensively used JMX API for management and monitoring solutions.\nInvolved in developing front end screens using JSP, JSTL, DHTML, HTML, CSS, AJAX and JavaScript.\nConfigured the Docker Containers and creating Dockers files for different environments.\nAnalyzed, diagnosed and resolved data delivery and data quality issues, fixed SSIS package and job defects, solved data conflicts and inappropriate usages of data in different environments.\nProvided query optimization and performance tuning for T-SQL scripts, SSIS packages and SSRS reports. Analyzed SQL Server execution plans for query performance tuning. Generated indexes or modified SQL executing logic to optimize query performance.\nDeveloped Web services to allow communication between applications through SOAP over HTTP using Apache Axis2.\nImplemented Hibernate for data persistence in Workflow screens. Used RAD6, WSAD as IDE for development of the application. Worked with Weblogic, Tomcat as the application servers and JMS as the message Server.\nPerformed Clear Quest defects, Database change requests logging using Clear Quest. Used Perforce as versioning system.\nDeveloped RESTful services using Jersey, JAX-RS and Restlet to call third party vendors\nDeveloped the automation environment for build, deployment, and configuration of Portlets onto the IBM WebSphere portal server using ANT scripts, XML Access scripts and JACL scripts.\nUsed Spring Framework for Dependency injection and integrated with the EJB 3.0 using annotations.\nWhich would in turn call the third party partner web services (both RESTful and SOAP).\nConfigured and built Spring MVC application on Tomcat web server.\nInvestigate, debug and fixed potential bugs or defects in the implemented code.\nImplemented JUnit tests and mandated 90% min. code coverage.\nDesigned builds which can grow and support builds using Gradle.\nDevelop named HQL queries and Criteria queries for use in application.\nImplemented transaction management for ORM project using Spring Transaction Management API.\nCreated and built project using Maven.\nCreated Stored Procedures and other SQL scripts using PL-SQL.\nImplemented logging using log4j and Spring AOP.\nImplemented various cross-project functionalities using Spring AOP.\nConfiguring the service on Weblogic/WAS application server for successful deployment\nEnvironment: Solaris, JSP, JSF, Spring, Servlet, Hibernate, JMS, JCA, JMX, XML, CSS, XML Schema, AJAX (JQUERY, AJAX), JSON, JAXP, SAX, DOM, JAXB, Java Portlet Specifications, JAX-RPC, SAAJ, SOAP, Java script, PL/SQL, D/HTML, XHTML, Maven, Log4j, JUnit, Weblogic 8.0, Oracle 9i RDBMS, Mercury Quality Center 9.0, Eclipse 3.2.\nClient: Marsh & McLennan Company, NJ                                                                    Oct’2010 – Aug’ 2012\nRole: Java/J2EE Developer\nResponsibilities:\nResponsible for analysis, design, development and integration of UI components with backend using J2EE technologies such as Servlets, Java Beans and JSP.\nUsing Technologies like SOAP, WSDL and UDDI based Web Services.\nDeveloped Hibernate 3.0 in Data Access Layer to access and update information in the database.\nDesigned the workflow, system architecture, drawing sequence diagrams, activity diagrams, class diagrams, HTML pages, database schema and tables.\nWriting JSP's for user interfaces, JSP's uses Java Beans objects to produce responses.\nInvolved in Tomcat server configuration for deployment.\nUsed JUnit framework for Unit testing of application.\nUsed log4j 1.2 to log different types of messages to write on to the proprietary log model.\nUse Case, Class, Sequence diagrams and also in complete development, testing and maintenance process of the application\nStore persistent JMS messages or temporarily store messages sent using the store-and-forward feature.\nInvolved in testing the XML files and checked whether data is parsed and loaded to staging tables.\nStore persistent JMS messages or temporarily store messages sent using the store-and-forward feature.\nUsed Hibernate to persist and retrieve data from database.\nEnvironment: Java, J2EE, Struts, Spring, Hibernate, JSP, Servlet, XML Schema, SOAP, JavaScript, PL/SQL, DHTML, XHTML, Ant 1.6, Log4j, JUnit, Weblogic10.0, Oracle 11g, Wsdl, IBM Rational rose, Maven, Eclipse, XSD.\nClient: Barklays \t                                                                                                   Nov’2009 – Sep’2010\nRole: Java Developer\nResponsibilities:\nPreparing the documentation for High Level design, Low Level design of the application and Process Flow of control for the entire application.\nPlayed key role in the design for the implementation of this application.\nImplemented the Consolidated applications front-end pages using JSP, JSTL, and Struts Tag Libraries.\nUsed JavaScript for client-side validations. Used JUnit for unit testing of the system and Log4J for logging\nImplemented validation rules using Struts framework.\nDesigned the Web application implementing the Struts framework for Model-View -Controller (MVC) pattern to make it extensible and flexible.\nUsed Hibernate for Object Relational Mapping.\nUsed Hibernate for Database Persistence to perform CRUD operation like insert, update, retrieve.\nUsed extensive JavaScript for creating the Global templates that can be used across the JSP Pages.\nConfigured Logger, appender and layout using log4j.\nUsed Eclipse Integrated Development Environment (IDE) in entire project development.\nUsed Ant for building JAR and WAR for the application.\nEnvironment: Servlets, JSP, EJB, Struts, Hibernate, JNDI, HTML, CSS, XML, JUnit, DOM, SAX, ANT, Web logic Server, Oracle9i.\nReferences: Provided upon request",
  "cleaned_text": "Candidate Looking for Contract C C or C H roles only Professional Summary Around years of progressively responsible experience in development, testing, documentation & production support applications using Internet, Web and Client Server Technologies in N-Tier J EE Architecture. Experience in Test Driven Development TDD , Waterfall model and Agile methodologies like SCRUM. Expertise through all parts of Software Development Life Cycle SDLC in developing web applications using JAVA, J EE, EJB, Web services, SOA, SOAP, RESTful etc. Extensive hands-on experience with core expertise in design, development, and deployment of N-Tier enterprise applications for the J EE platform using Core Java, Servlets, Struts, Spring, EJB, JSP, Web services, JPA, JNDI, JMS, JAXP, JUnit, JMeter. Expertise in spring framework, including Spring IoC core, Spring DAO support, Spring ORM, Spring micro services, Spring AOP, Spring Security, Spring MVC, Spring Cache, and Spring Integration, and Spring Boot, Spring REST, Spring Eureka, Spring Ribbon, Spring Netflix, Spring Zulu. Experience of working on GIT and SVN. Experience in Selenium Web Driver automation tool with TestNG framework using Java. Hands on experience in Front-End technologies like Angular Js . . , Bootstrap . , HTML , JavaScript, CSS , JQuery, Google Web Toolkit GWT , Tag Libraries, Custom Tags, Ajax and Node JS and ExtJS. Expertise in designing, developing and deploying applications using J EE technologies including Servlets, JSP, EJB .x .x, JSTL, Struts, Spring . , JMS, AJAX, JDBC, JNDI, Java Beans Hibernate and Web Services. Experience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM. Extensive knowledge and working experience of web development technologies such as JavaScript, JQuery UI, AngularJS, Angular . , HTML , CSS , SASS and Bootstrap. Extensive experience in building rich user friendly, high performance web applications using HTML , CSS , SASS, and JQuery and implementing cross-browser style-sheets Installed and configured the Web Server and Database Server in Linux Platform. Extensively worked to build Model-View-Controller MVC and multi-tier client server architecture using design patterns like DAO, DTO Data Transfer object , Singleton and Session Facade. Experience in using various Amazon Web Services AWS Components like EC for virtual servers, S . Created and supported numerous Java Swing and Servlet based applications using Eclipse. Worked on deploying the latest builds in standalone as well as set up the JBoss cluster nodes to deploy builds using JBOSS Deployment Manager. Application development experience using Serialization, Externalization, Collection, Generics, Core JAVA, Applets and Swing. Developed REST API test automation, utilizing REST Assured for Java and the TestNG Framework. Experience in building Microservices and implementing Spring Cloud- Netflix OSS Stack and Hystrix Circuit Breaker. Authored the application using Spring Cloud and worked on Microservices Architecture using NETFLIX OSS configurations like Hystrix. Expertise in the Apache Camel Integration Framework, in conjunction with Apache CXF and ActiveMQ. Experienced in working with Spring Integration.EJB Session Beans were used to process request from user interface using OSS. Performed necessary day-to-day SVN GIT support for different projects. Developed Selenium Automation framework using Java, Java Script executor and Selenium Web Driver. Knowledge on all the AWS components like VPC, EC , ELB, Auto Scaling, launch Configurations, S , Glacier, Lifecycle rules for storage, Route , Cloud watch, Cloud Trial, RedShift, Volume and Snapshot management, SNS, IAM and Roles. Good working knowledge of NoSQL Database, MongoDB. Worked on Service Oriented Architecture SOA such as Apache Axis web services, uses SOAP, WSDL. Exposure to JAXB & JAX-WS & JAX-RS. Managed GIT, Jenkins. Designed and automated build & release process. Experience in writing SQL queries, Stored Procedures, Triggers, views with the major databases like Oracle i to g, SQL, PL SQL and MS Access. Experiences in Data Modeling, Dimensional Modeling of large databases. Good experience in Information Technology field as a SQL server developer with strong expertise in SQL server development, designing Stored Procedures Transact SQL coding. Hands on Experience in Installing, Configuring, Managing, Monitoring and Troubleshooting SQL server ... Technical Skills Programming Languages Java J EE, SQL, PL SQL, HTML, DHTML, JavaScript, Perl, UML, XML, XSL, XSLT, JQuery J EE Standards JDBC, JNDI, Java Mail, JTA Web Technologies JSP, Servlet, JAX-WS, AXIS, REST JAX-RS , SOA, SOAP, JMS, Bootstrap, EJB, Angular-JS, RMI, IBM MQ Series Databases Oracle, MySQL, Sybase, SQL-Server- , Mongo-DB, Hadoop IDE s Eclipse, Intellij, Sublime, RAD, WSAD Web App Servers WebSphere Application Server, WebLogic, JBoss, Apache Tomcat Frameworks Struts, Node-JS, Spring, JSF, Hibernate, Apache Camel Operating Systems Windows, UNIX, Solaris, Red Hat, AIX Version Control Tools CVS, SVN, Git, ClearCase Tools Utilities Log j, Ant, JUnit, Caliber, Maven, Gradle . , Jenkins, SOAP UI Methodologies Agile Scrum, TDD , Waterfall Integration Apache Camel, JBoss Fuse . , Active MQ, Apache ATOM, WESB Client Hanger Inc., Austin, TX Jan Till Date Role Sr. Java Full Stack Developer Responsibilities Actively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model. Designed and developed Microservices using REST framework and Spring Boot and used Bootstrap along with AngularJS in creating the Application. Used NodeJS for doing non-blocking design operation for server-side code and Angular.js framework in developing various UI components. Developed the responsive UI web pages using XHTML, HTML , CSS , Angular JS , JavaScript, node JS and has worked with Angular JS filters in expressions and directives to filter data in the UI. Designed and coded application components in an Agile environment utilizing a Test Driven Development TDD approach. Extensively used MVC, Factory, Delegate and Singleton design patterns. Used Spring framework including Spring core IoC, Spring Web, Spring Security and implement the authentication, authorization, and access-control features by using Spring Security. Used Spring Inversion of Control IoC for injecting the beans and reduced the coupling between the classes and implemented the Model View Controller using Spring MVC. Implemented the application using Spring Boot Framework and handled the security using Spring Security. Provide expert technical leadership to customers and partners regarding all aspects of Pivotal Cloud Foundry PCF . Developed single page applications using Angular , Typescript, HTML , CSS , and Bootstrap. Deployed EARs, WARs and configured application specific JVM settings, Web container parameters using the Admin Console and WebSphere admin scripts. Accomplished Work Load Management by creating Clusters. Involved in designing, developing and testing the web application by using the HTML , CSS , Bootstrap, and React.JS. Using the ReactJS, Flux for SPA development. Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js. Implemented various screens for the front end using React.js and used various predefined components from NPM Node Package Manager and Redux library. Used React-Router to turn application into Single Page Application Involved in using React JS components, Forms, Events, Keys, Router, Animations and Flux concept. Project migration into cloud environment using AWS, Docker container. Application and developed cross browser and multi browser compatible web pages using HTML , CSS and Bootstrap. Implemented code according to create AngularJS Controller, which isolate scopes perform operations. Created Typescript reusable components and services to consume REST API s using Component-based architecture provided by Angular . Implemented REST based web services using JAX-RS annotations, Jersey provider and consumed using HTTP services from angular JS modules. Responsible for setting up AngularJS framework for UI development. Used Spring framework to provide loose coupling between different application modules. Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB. Develop a data integration application using Apache Camel leveraging Apache CXF and messaging middleware like ActiveMQ. Agile methodology used. Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOA. Environment J EE, Java . , Spring framework, Spring MVC, Hibernate, JSP, AWS, AJAX, SOA, TDD, Web Services, SQL Server, Microservices, XML, Ext JS, NodeJS, AngularJS, Angular . , Typescript, JQuery, JavaScript, IBM RAD . , WebSphere . , Agile Methodology, Design Patterns, PCF, Clear Case, Apache Maven, Apache Cassandra, MongoDB, JUnit, Html, Unit, XSLT, HTML DHTML, JENKINS, Spark, Kafka. Client Exelon Corp, Houston, TX Jun Dec Role Java Full Stack Developer Responsibilities Responsible for gathering and understanding the system requirements by interacting with clients. Generated the Class diagrams, Sequence diagrams extensively for all the process flows using RAD, MS VISIO. Designed and developed GUI screens for user interfaces using JSP, JavaScript, XSLT, AJAX, XML, HTML , CSS , Bootstrap, JQuery and DHTML. Developed a HTTPS server and implemented features to serve different file types TLS Extensively involved in coding with Core Java concepts like Collections, Exception Handling, Multithreading, Java I O, and Generics to implement some business logic. Used Core, Context, and Security, Bean modules of Spring Framework. Implemented MVC, Singleton, Factory, DAO, Value Object, session, Facade, Data Access Object, Business Object paradigm. Handling orchestration service and rule engine which is implemented in NodeJS. Used JQuery framework for creating front end applications and for Client Side validations. Used iBatis for designing, developing and maintain the data layer. Created Stored Procedures, SQL Statements and triggers for the effective retrieval and storage of data into database. Application developed on Agile methodologies scrum and iterative method process. Used Apache Log J logging API to log errors and messages. Created JUnit test suite to automate the testing of the business logic. Used React-Router to turn application into Single Page Application. Used ReactJS components, Forms, Events, Keys, Router, Animations and Flux concept. Building stable React components and stand-alone functions to be added to any future pages. Developed the Drag and Drop functionality using React-Dragabble. Used React-Autocomplete for creating Google maps location search on the webpage. Involved in x support, Maintenance and enhancement of the application. Automate the web application using Selenium-Automation tools. JPA and Spring Rest to provide a Restful Interface based on Spring Boot application Environment JDK . , Spring framework, XML, HTML, JSP, AngularJS, Hibernate, iBatis, ANT, JavaScript, VSS, XSLT, CSS, AJAX, JMS, Spring Boot, Hibernate, SOAP, Web Services, AWS, Web Sphere Application Server, Tomcat, Oracle DB, MQ Series, JUnit, UNIX. Client Gap Inc., San Francisco, CA Sep May Role Java J EE Developer Responsibilities Design and implemented the backend layer using Hibernate. Involved in multi-tiered J EE design utilizing Spring Inversion of Control IOC architecture and Hibernate. Applied design patterns including MVC Pattern, Facade Pattern, Abstract Factory Pattern, DAO Pattern and Singleton. Made use of content negotiation XML, JSON, text plain using JAXB, GSON, Jackson, and XStream. Used JQuery for back end table of Customers Orders - for administrators to inspect and edit. Extensively used JMX API for management and monitoring solutions. Involved in developing front end screens using JSP, JSTL, DHTML, HTML, CSS, AJAX and JavaScript. Configured the Docker Containers and creating Dockers files for different environments. Analyzed, diagnosed and resolved data delivery and data quality issues, fixed SSIS package and job defects, solved data conflicts and inappropriate usages of data in different environments. Provided query optimization and performance tuning for T-SQL scripts, SSIS packages and SSRS reports. Analyzed SQL Server execution plans for query performance tuning. Generated indexes or modified SQL executing logic to optimize query performance. Developed Web services to allow communication between applications through SOAP over HTTP using Apache Axis . Implemented Hibernate for data persistence in Workflow screens. Used RAD , WSAD as IDE for development of the application. Worked with Weblogic, Tomcat as the application servers and JMS as the message Server. Performed Clear Quest defects, Database change requests logging using Clear Quest. Used Perforce as versioning system. Developed RESTful services using Jersey, JAX-RS and Restlet to call third party vendors Developed the automation environment for build, deployment, and configuration of Portlets onto the IBM WebSphere portal server using ANT scripts, XML Access scripts and JACL scripts. Used Spring Framework for Dependency injection and integrated with the EJB . using annotations. Which would in turn call the third party partner web services both RESTful and SOAP . Configured and built Spring MVC application on Tomcat web server. Investigate, debug and fixed potential bugs or defects in the implemented code. Implemented JUnit tests and mandated min. code coverage. Designed builds which can grow and support builds using Gradle. Develop named HQL queries and Criteria queries for use in application. Implemented transaction management for ORM project using Spring Transaction Management API. Created and built project using Maven. Created Stored Procedures and other SQL scripts using PL-SQL. Implemented logging using log j and Spring AOP. Implemented various cross-project functionalities using Spring AOP. Configuring the service on Weblogic WAS application server for successful deployment Environment Solaris, JSP, JSF, Spring, Servlet, Hibernate, JMS, JCA, JMX, XML, CSS, XML Schema, AJAX JQUERY, AJAX , JSON, JAXP, SAX, DOM, JAXB, Java Portlet Specifications, JAX-RPC, SAAJ, SOAP, Java script, PL SQL, D HTML, XHTML, Maven, Log j, JUnit, Weblogic . , Oracle i RDBMS, Mercury Quality Center . , Eclipse . . Client Marsh & McLennan Company, NJ Oct Aug Role Java J EE Developer Responsibilities Responsible for analysis, design, development and integration of UI components with backend using J EE technologies such as Servlets, Java Beans and JSP. Using Technologies like SOAP, WSDL and UDDI based Web Services. Developed Hibernate . in Data Access Layer to access and update information in the database. Designed the workflow, system architecture, drawing sequence diagrams, activity diagrams, class diagrams, HTML pages, database schema and tables. Writing JSP s for user interfaces, JSP s uses Java Beans objects to produce responses. Involved in Tomcat server configuration for deployment. Used JUnit framework for Unit testing of application. Used log j . to log different types of messages to write on to the proprietary log model. Use Case, Class, Sequence diagrams and also in complete development, testing and maintenance process of the application Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature. Involved in testing the XML files and checked whether data is parsed and loaded to staging tables. Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature. Used Hibernate to persist and retrieve data from database. Environment Java, J EE, Struts, Spring, Hibernate, JSP, Servlet, XML Schema, SOAP, JavaScript, PL SQL, DHTML, XHTML, Ant . , Log j, JUnit, Weblogic . , Oracle g, Wsdl, IBM Rational rose, Maven, Eclipse, XSD. Client Barklays Nov Sep Role Java Developer Responsibilities Preparing the documentation for High Level design, Low Level design of the application and Process Flow of control for the entire application. Played key role in the design for the implementation of this application. Implemented the Consolidated applications front-end pages using JSP, JSTL, and Struts Tag Libraries. Used JavaScript for client-side validations. Used JUnit for unit testing of the system and Log J for logging Implemented validation rules using Struts framework. Designed the Web application implementing the Struts framework for Model-View -Controller MVC pattern to make it extensible and flexible. Used Hibernate for Object Relational Mapping. Used Hibernate for Database Persistence to perform CRUD operation like insert, update, retrieve. Used extensive JavaScript for creating the Global templates that can be used across the JSP Pages. Configured Logger, appender and layout using log j. Used Eclipse Integrated Development Environment IDE in entire project development. Used Ant for building JAR and WAR for the application. Environment Servlets, JSP, EJB, Struts, Hibernate, JNDI, HTML, CSS, XML, JUnit, DOM, SAX, ANT, Web logic Server, Oracle i. References Provided upon request",
  "preprocessed_text": "candidate looking contract role professional summary around year progressively responsible experience development testing documentation production support application using internet web client server technology n-tier ee architecture experience test driven development tdd waterfall model agile methodology like scrum expertise part software development life cycle sdlc developing web application using java ee ejb web service soa soap restful etc extensive hands-on experience core expertise design development deployment n-tier enterprise application ee platform using core java servlets strut spring ejb jsp web service jpa jndi jms jaxp junit jmeter expertise spring framework including spring ioc core spring dao support spring orm spring micro service spring aop spring security spring mvc spring cache spring integration spring boot spring rest spring eureka spring ribbon spring netflix spring zulu experience working git svn experience selenium web driver automation tool testng framework using java hand experience front-end technology like angular j bootstrap html javascript cs jquery google web toolkit gwt tag library custom tag ajax node j extjs expertise designing developing deploying application using ee technology including servlets jsp ejb .x .x jstl strut spring jms ajax jdbc jndi java bean hibernate web service experience xml related technology like xml dtd xsl xslt xpath jaxb jaxp sax dom extensive knowledge working experience web development technology javascript jquery ui angularjs angular html cs sas bootstrap extensive experience building rich user friendly high performance web application using html cs sas jquery implementing cross-browser style-sheets installed configured web server database server linux platform extensively worked build model-view-controller mvc multi-tier client server architecture using design pattern like dao dto data transfer object singleton session facade experience using various amazon web service aws component like ec virtual server created supported numerous java swing servlet based application using eclipse worked deploying latest build standalone well set jboss cluster node deploy build using jboss deployment manager application development experience using serialization externalization collection generic core java applet swing developed rest api test automation utilizing rest assured java testng framework experience building microservices implementing spring cloud- netflix os stack hystrix circuit breaker authored application using spring cloud worked microservices architecture using netflix os configuration like hystrix expertise apache camel integration framework conjunction apache cxf activemq experienced working spring integration.ejb session bean used process user interface using os performed necessary day-to-day svn git support different project developed selenium automation framework using java java script executor selenium web driver knowledge aws component like vpc ec elb auto scaling launch configuration glacier lifecycle rule storage route cloud watch cloud trial redshift volume snapshot management sn iam role good working knowledge nosql database mongodb worked service oriented architecture soa apache axis web service us soap wsdl exposure jaxb jax-ws jax-rs managed git jenkins designed automated build release process experience writing sql query stored procedure trigger view major database like oracle sql pl sql m access experience data modeling dimensional modeling large database good experience information technology field sql server developer strong expertise sql server development designing stored procedure transact sql coding hand experience installing configuring managing monitoring troubleshooting sql server ... technical skill programming language java ee sql pl sql html dhtml javascript perl uml xml xsl xslt jquery ee standard jdbc jndi java mail jta web technology jsp servlet jax-ws axis rest jax-rs soa soap jms bootstrap ejb angular-js rmi ibm mq series database oracle mysql sybase sql-server- mongo-db hadoop ide eclipse intellij sublime rad wsad web app server websphere application server weblogic jboss apache tomcat framework strut node-js spring jsf hibernate apache camel operating system window unix solaris red hat aix version control tool cv svn git clearcase tool utility log ant junit caliber maven gradle jenkins soap ui methodology agile scrum tdd waterfall integration apache camel jboss fuse active mq apache atom wesb client hanger inc. austin tx jan till role sr. java full stack developer responsibility actively involved analysis design development system testing user acceptance testing successfully followed agile methodology scrum cycle model designed developed microservices using rest framework spring boot used bootstrap along angularjs creating application used nodejs non-blocking design operation server-side code angular.js framework developing various ui component developed responsive ui web page using xhtml html cs angular j javascript node j worked angular j filter expression directive filter data ui designed coded application component agile environment utilizing test driven development tdd approach extensively used mvc factory delegate singleton design pattern used spring framework including spring core ioc spring web spring security implement authentication authorization access-control feature using spring security used spring inversion control ioc injecting bean reduced coupling class implemented model view controller using spring mvc implemented application using spring boot framework handled security using spring security provide expert technical leadership customer partner regarding aspect pivotal cloud foundry pcf developed single application using angular typescript html cs bootstrap deployed ear war configured application specific jvm setting web container parameter using admin console websphere admin script accomplished work load management creating cluster involved designing developing testing web application using html cs bootstrap react.js using reactjs flux spa development involved responsive design developed single isomorphic responsive website could served desktop tablet mobile user using react.js implemented various screen front end using react.js used various predefined component npm node package manager redux library used react-router turn application single application involved using react j component form event key router animation flux concept project migration cloud environment using aws docker container application developed cross browser multi browser compatible web page using html cs bootstrap implemented code according create angularjs controller isolate scope perform operation created typescript reusable component service consume rest api using component-based architecture provided angular implemented rest based web service using jax-rs annotation jersey provider consumed using service angular j module responsible setting angularjs framework ui development used spring framework provide loose coupling different application module developed hibernate spring integration data abstraction interact database mongodb develop data integration application using apache camel leveraging apache cxf messaging middleware like activemq agile methodology used used microservices communicate using synchronous protocol rest implementing soa environment ee java spring framework spring mvc hibernate jsp aws ajax soa tdd web service sql server microservices xml ext j nodejs angularjs angular typescript jquery javascript ibm rad websphere agile methodology design pattern pcf clear case apache maven apache cassandra mongodb junit html unit xslt html dhtml jenkins spark kafka client exelon corp houston tx jun dec role java full stack developer responsibility responsible gathering understanding system requirement interacting client generated class diagram sequence diagram extensively process flow using rad m visio designed developed gui screen user interface using jsp javascript xslt ajax xml html cs bootstrap jquery dhtml developed server implemented feature serve different file type tl extensively involved coding core java concept like collection exception handling multithreading java generic implement business logic used core context security bean module spring framework implemented mvc singleton factory dao value object session facade data access object business object paradigm handling orchestration service rule engine implemented nodejs used jquery framework creating front end application client side validation used ibatis designing developing maintain data layer created stored procedure sql statement trigger effective retrieval storage data database application developed agile methodology scrum iterative method process used apache log logging api log error message created junit test suite automate testing business logic used react-router turn application single application used reactjs component form event key router animation flux concept building stable react component stand-alone function added future page developed drag drop functionality using react-dragabble used react-autocomplete creating google map location search webpage involved support maintenance enhancement application automate web application using selenium-automation tool jpa spring rest provide restful interface based spring boot application environment jdk spring framework xml html jsp angularjs hibernate ibatis ant javascript vss xslt cs ajax jms spring boot hibernate soap web service aws web sphere application server tomcat oracle db mq series junit unix client gap inc. san francisco ca sep may role java ee developer responsibility design implemented backend layer using hibernate involved multi-tiered ee design utilizing spring inversion control ioc architecture hibernate applied design pattern including mvc pattern facade pattern abstract factory pattern dao pattern singleton made use content negotiation xml json text plain using jaxb gson jackson xstream used jquery back end table customer order administrator inspect edit extensively used jmx api management monitoring solution involved developing front end screen using jsp jstl dhtml html cs ajax javascript configured docker container creating docker file different environment analyzed diagnosed resolved data delivery data quality issue fixed ssis package job defect solved data conflict inappropriate usage data different environment provided query optimization performance tuning t-sql script ssis package ssrs report analyzed sql server execution plan query performance tuning generated index modified sql executing logic optimize query performance developed web service allow communication application soap using apache axis implemented hibernate data persistence workflow screen used rad wsad ide development application worked weblogic tomcat application server jms message server performed clear quest defect database change request logging using clear quest used perforce versioning system developed restful service using jersey jax-rs restlet call third party vendor developed automation environment build deployment configuration portlets onto ibm websphere portal server using ant script xml access script jacl script used spring framework dependency injection integrated ejb using annotation would turn call third party partner web service restful soap configured built spring mvc application tomcat web server investigate debug fixed potential bug defect implemented code implemented junit test mandated min code coverage designed build grow support build using gradle develop named hql query criterion query use application implemented transaction management orm project using spring transaction management api created built project using maven created stored procedure sql script using pl-sql implemented logging using log spring aop implemented various cross-project functionality using spring aop configuring service weblogic application server successful deployment environment solaris jsp jsf spring servlet hibernate jms jca jmx xml cs xml schema ajax jquery ajax json jaxp sax dom jaxb java portlet specification jax-rpc saaj soap java script pl sql html xhtml maven log junit weblogic oracle rdbms mercury quality center eclipse client marsh mclennan company nj oct aug role java ee developer responsibility responsible analysis design development integration ui component backend using ee technology servlets java bean jsp using technology like soap wsdl uddi based web service developed hibernate data access layer access update information database designed workflow system architecture drawing sequence diagram activity diagram class diagram html page database schema table writing jsp user interface jsp us java bean object produce response involved tomcat server configuration deployment used junit framework unit testing application used log log different type message write proprietary log model use case class sequence diagram also complete development testing maintenance process application store persistent jms message temporarily store message sent using store-and-forward feature involved testing xml file checked whether data parsed loaded staging table store persistent jms message temporarily store message sent using store-and-forward feature used hibernate persist retrieve data database environment java ee strut spring hibernate jsp servlet xml schema soap javascript pl sql dhtml xhtml ant log junit weblogic oracle wsdl ibm rational rose maven eclipse xsd client barklays nov sep role java developer responsibility preparing documentation high level design low level design application process flow control entire application played key role design implementation application implemented consolidated application front-end page using jsp jstl strut tag library used javascript client-side validation used junit unit testing system log logging implemented validation rule using strut framework designed web application implementing strut framework model-view -controller mvc pattern make extensible flexible used hibernate object relational mapping used hibernate database persistence perform crud operation like insert update retrieve used extensive javascript creating global template used across jsp page configured logger appender layout using log j. used eclipse integrated development environment ide entire project development used ant building jar war application environment servlets jsp ejb strut hibernate jndi html cs xml junit dom sax ant web logic server oracle i. provided",
  "statistics": {
    "word_count": 3069,
    "unique_word_count": 911,
    "avg_word_length": 4.835125448028674,
    "stopword_count": 485
  },
  "metadata": {
    "filename": "Candidate53.docx",
    "file_size": 33043,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:56.974801",
    "input_filename": "Candidate53.json"
  }
}