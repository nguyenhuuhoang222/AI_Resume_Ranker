{
  "id": "Candidate87",
  "raw_text": "Candidate87\n(720) 722-0838\nObjective:\nTo work in the most challenging position with an organization that provides ample opportunities to learn and to contribute for the growth of an organization. Possess 8 years of professional IT experience in designing and developing Web based and Enterprise applications using JAVA/J2EE technologies in Telecom, Financial, Insurance and Digital domains. \nProfessional Summary:\nExperienced in all phases of Software Development Life Cycle (SDLC) including Analysis, Design, and Development, Debugging, Support, Integration, Maintenance, and Enhancements of Java/J2EE Applications.\nExperience in working in environments using Agile (SCRUM) and Waterfall development methodologies.\nExpertise in client and server scripting languages like HTML5, CSS3, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS, Backbone.js and Node JS.\nExperience with Java 8 features such as lambda expressions, Parallel operations on collections and for effective sorting mechanisms and new Date Time API. \nHandled operations and maintenance support for AWS cloud resources which includes launching, maintaining, and troubleshooting EC2 instances, S3 buckets, Auto Scaling, Dynamo DB, AWS IAM, Elastic Load Balancers (ELB) and Relational Database Services (RDS). Also created snapshots for data to store in AWS S3.\nExperience in developing and solid understanding of Service Oriented Architecture and Microservices Architecture.\nStrong hands on experience in implementing Design patterns like MVC, Data Access Object, Session Façade, Business Delegate, Factory, Proxy, and Singleton. \nExperience in developing web-based enterprise applications using Core Java, J2EE, Servlets, JSP, JSF, JDBC, Hibernate, Web Services (SOAP and REST), MVC Framework (Struts, Spring MVC) and SQL.\nExperience in both providing and consuming Web Services using SOAP and RESTful (JAX-RS and JAX-WS). \nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nStrong experience in Core Java concepts like Collections, Multithreading, Event Handling, Exception Handling, and Generics.\nExperience with different Spring framework modules like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Boot, Spring Batch, Spring Security, and Spring cloud.\nExperience in design and development of robust and highly scalable web service platforms and API’s based on REST and SOAP for e-commerce applications using AXIS, WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC technologies and Jersey frameworks.\nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX.\nExperience on CQL (Cassandra query language), for retrieving the data present in Cassandra cluster by running queries in CQL. \nProficient in writing and handling SQL Queries, PL/SQL, Stored Procedures, and Triggers.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB and Dynamo DB.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nGood experience writing application deployment scripts using Shell Scripting. Worked on Windows, UNIX, LINUX platforms to move the project into production environment. \nExperience with Junit, Jasmine, Karma, Mockito and Log4J in developing test cases.\nWorking knowledge with version control tools like SVN, CVS, GIT, and Visual Source Safe.\nHands on experience in building tools like ANT, Maven, Gradle.\nExperienced in developing Rich GUI's by using Eclipse RCP, HTML, frameworks.\nHighly experience with Java complaint IDE’s like Spring Tool Suite, Eclipse, IntelliJ, and RAD.\nTechnical Skills\nCertifications\nAWS Certified Developer – Associate (KDNJ3B41CBQQQXSF)\t\t       \t\t\t Nov ‘17\nProfessional Experience:\nClient: BCBS, Chicago, IL                           \t\t                                                                                           Jan’17 – Till date\nRole: Full Stack Developer\nDescription: Well Mark Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. “Find a plan” is a web based J2EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan that’s right for you.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, JQuery, Angular JS and Node JS.\nBuilt AngularJS modules, controllers, pop up modals, and file uploaders.\nCreated reusable directives, factories, and services in AngularJS.\nUsed Backbone.js and ReactJS to create Controllers to handle events triggered by clients and send request to server.\nUsed plug-in development for RCP version for developing the layouts like GridLayout and Fillout for RCP. \nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions, Spring HATEOAS, Spring Cloud and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2. \nDesigned and developed Microservices business components and RESTful service endpoints using Spring boot.\nImplemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.\nImplemented first-hand the best/worst practices for integrating Microservices into existing system architecture.\nMicroservices were being used as a strategy to gradually replace a core monolithic application while still adding business features.\nWorked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.\nImplemented Multithreading, Concurrency, Exception Handling, and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nParticipated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments.\nAuthored application using Spring Cloud services (spring version of Netflix OSS-Eureka, Circuit Breaker, and Ribbon). \nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nWorked Docker container management along with volumes, container based DB and services, Docker Artifactory configuration and setup.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Oracle DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the Mongo DB.\nConfigured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution.\nValidations are done using SoapUI and Ready API testing tool framework in different environments. \nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nDeployed and tested the application on Web Sphere Application Server. \nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the (CI) and (CD) process for the application using the Jenkins.\nInstalled and deployed monitoring solution with Splunk services.\nWorked on Log4J to validate functionalities and JUnit for unit testing.\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nEnvironment: Java1.8, J2EE, HTML5, CSS3, Bootstrap, JQuery, Angular JS, ReactJS, JavaScript, Node JS, Eclipse Rich Client Platform, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring HATEOAS, Spring Data, Hibernate, Active MQ, RESTful, Postman, SOAP, Micro Service, AWS, EC2, Docker, Mongo DB, Oracle DB, Maven, STS, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\nClient: Capital One, Wilmington, DE\t\t\t\t\t\t\t                    Feb’16 – Jan’17\nRole:  Full Stack Developer\nDescription: The move money services help general users and investment users, to carry monetary transactions among friends, family and to manage loans and pay bills.  The project consisted of developing and maintaining services of Capital One move money services like bill pay, home loan accounts, mortgage accounts etc. the services were developed maintained and tested for the devices and the web. We worked on the architectures, services and the front-end UI for each of the applications.\nResponsibilities:\nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDesigned, developed a custom, single-page, responsive web application on front end using AngularJS.\nDeveloped custom directives, Factories and Services in AngularJS and created AngularJS Controller to isolate the scopes to perform operations.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries.\nAdded user validations and user permissions by using the NodeJS with libraries Express JS.\nImplemented Grails TagLibs to avoid groovy code in GSP pages. \nUsed Grails command objects for validating non-persistent objects. \nDeveloped an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity.\nDesigned the application using various Spring technologies and used Spring Security to provide better authentication instances.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Added WS-Security using XWSS to secure the Web services.\nUsed AWS SDK for connecting to Amazon S3 buckets and EC2 to deploy on Docker Container with Microservices architecture.\nDeveloped AWS Lambda Functions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS.\nDeveloped services that utilize the Cloud Foundry and Azure client libraries (SDK) for Java.\nDeployed application using Pivotal Cloud Foundry (PCF) CLI. \nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nRefactored existing monolithic application by identifying components that needs to be transformed to Micro- services architecture, with Spring Boot-based services interacting through a combination of REST and AWS API-Gateway.\nInstalled secured and configured AWS cloud servers and virtual servers using Spring Cloud for AWS.\nAnalysis the logs data and filter required columns by Log stash configuration and send it to Elasticsearch.\nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management.\nImplemented Web-Services to integrate between different applications components using Restful web services by using Jersey for JAX-RS implementation.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nWorked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nUsed WebSphere server to route our JMS queue messages to different business floors and configured routes in WebSphere.\nUsed Apache Camel Framework to transform, extract and load the data.\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework. \nImplemented request and response objects using SOAP web services and created routes using Apache Camel. \nDefined several UML diagrams; Activity diagrams, Sequence, and Object diagrams.\nDeveloped unit and integration tests for existing microservices using JUnit, Mockito and Docker environments.\nInvolved in installing and configuring Maven for application builds and deployment.\nConfigured and customized logs using Log4J and Used GIT as a version control tool. Used JMeter to test performance of SOAP protocol.\nWorked on Creating Kafka Adaptors for decoupling the application dependency.\nUsed JIRA to assign, track, report and audit the issues in the application.\nSetup the CI and CD process for the application using the Jenkins.\nInvolved in System Testing, Integration Testing, and Production Testing on WebLogic Server.\nEnvironment: HTML5, CSS3, JavaScript, Bootstrap, AngularJS, NodeJS, Express JS, jQuery, AJAX, Agile(SCRUM), Groovy, Grails, Hibernate, Spring, Struts, MongoDB, Spring Batch, Spring Boot, Spring Cloud, Spring Security, Servlet, JSON XML, GIT, Spring MVC, Apache Camel, JUnit, Maven, JMS, WebSphere, Restful, JAX-RS, Log4J, AWS, Docker, Microservices, Kafka, Elasticsearch, Logstash, JIRA, Jenkins, JMeter.\nClient: Sprint, Kansas City, MO                \t\t                                  \t\t\t                    May’14 – Dec’15\nRole:  Java/J2EEdeveloper\t\nDescription: Sprint Synaptic Storage as a Service is a web services-based storage solution that easily scales up and down to any size you need and allows you to pay only for the storage you use. It provides elastic capacity on demand with no commitments, minimums, or limits and allows access to your stored data from virtually anywhere and anytime.\nResponsibilities:\nInvolved in complete development of ‘Agile Development Methodology/SCRUM’, developed and tested the application during various iterations.\nDeveloped screens using HTML, CSS and JQuery.\nDeveloped the User Interface using Spring framework, JQuery and Ajax.\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS.\nDeveloped and configured Jasmine test cases to test the Angular controllers for UI in Jasmine framework (JavaScript Testing Framework) in Eclipse IDE. \nHandled Java multithreading part in back - end component, one thread will be running for each user, which serves that user.\nUsed spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications. \nDeveloped the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO and PO.\nDeveloped various Java beans for performance of business processes and effectively involved in Impact analysis.\nDeveloped application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.\nImplemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. \nInstalled and configured JBOSS server with MYSQL persistence. Extracted rules data from the database and decision tables.\nCreated SOAP web services interface to Java-based runtime engine and accounts.\nHands on experience on Cassandra architecture with better understanding and write processes including mem-table, stable and commit log. \nActively involved in writing SQL using SQL query builder.\nWorked on MYSQL databases and Oracle databases technologies. \nUsed Maven as build tool and deploying the application.\nActively used the defect tracking tool JIRA to create and track the defects during QA phase of the project.\nUsed SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nDeveloped test cases using Junit.\nEnvironment: SCRUM, SDLC, Maven, HTML, CSS, JQuery, Jasmine FrameWork, Spring, Ajax, AngularJS, AOP, JDBC, Spring IOC, Hibernate, DAO, PO, Java beans, SOAP, SQL, Cassandra, JIRA, QA, SVN, Junit, JBOSS Server, Drools.\nClient:  State Farm, South Houston, TX                                                                                                            Aug’11 – Dec’13\nRole:  Java developer\t\t\t\t\nDescription: State Farm is a group of insurance and financial services companies in the United States. The group's main business is State Farm Mutual Automobile Insurance Company, a mutual insurance firm that also owns the other State Farm companies.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modelling, analysis, design, development, testing, and monitoring.\nInvolved in the front end using JSP, HTML, CSS, JavaScript and JQuery.\nDeveloped GUI using SWT/RCP technology.\nExperience in working with different plug-ins of Eclipse RCP.\nDeveloped different GUI screens using widgets like Tree and Table form in Eclipse SWT/RCP.\nDeveloped perspective to show different views together in RCP.\nDeveloped Menus and views using Extension point in RCP. \nImplemented MVC architecture using JSP, Spring, Hibernate and used Spring Framework to initialize managed beans and services.\nInvolved in development of Agent Verification System using Spring MVC framework. \nUsed Spring Inheritance to develop beans from already developed parent beans.\nUsed Spring AOP for logging, auditing, and transaction management to distinguish business logic from the cross-cutting concerns. \nUsed Spring Security for Authentication and Authorization of the application.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the My SQL back-end database by integrating Spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nDeveloped Unit /Integration test cases using JUnit.\nUsed Gradle tool for building and deploying the Web applications in Web Logic Server.\nUsed JIRA tool for tracking stories progress and follow agile methodology.\nUsed logging techniques provided by Log4J tool for efficient logging and debugging. \nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN). \nInvolved in Maintenance and Enhancements for the project.\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, Struts, Spring IOC, Spring MVC, Spring AOP, JDBC, Hibernate, My SQL, HQL, SQL, JUnit, Gradle, JIRA, Log4J, Eclipse, SVN, Sybase, RCP and Web Logic Server.\nClient: Techno soft Solutions                                      \t\t\t\t   Sep’10 – Aug’11\nRole: Java/J2EE Developer\nDescription: Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest E-Mail, messaging, and Internet networks. These services range from architecture and design of software solutions, website design & development to deployment services and operational support.\nResponsibilities:\nDeveloped front-end screens using JSP, HTML, CSS, JavaScript, JSON.\nImplemented Struts MVC design pattern and front controller pattern along with Action Servlet as front controller for this application.\nDeveloped SCM by using the JSP/HTML like one form for each functionality user interface, standard validations using the JavaScript, Servlets used as the controllers for the business logic and business logic using JDBC, XML parsing techniques etc using MVC.\nDeveloped SingleSignOn (SSO) functionality, through which we can run SCM from Oracle Applications.\nInvolved in developing the Routings and configured Routing Program as scheduled the concurrent request.\nDeveloped Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute.\nInvolved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow.\nExtensively worked on creating the setups for Organizations, Templates, Concurrent Requests, Cross Reference Types, User Creations, assigning responsibilities, creating value sets, Descriptive Flex Fields etc, in Oracle Applications.\nUsed CVS as version control system.\nEnvironment: Java, JDBC, Servlets, Oracle, JSP, XML, UML, HTML, CSS, JavaScript, UNIX, CVS, DB2 and Ionic Framework.\nClient: See Software                                                                                                      May’09 - Aug’10\nRole: Jr. Java Developer\t\t\t\t\nDescription: see software is a pioneer in providing tax automation products, solutions for both direct and indirect taxes. The application developed offers various computation & filing services for account payable, account receivable and payroll transactions and is a preferred tax solution partner for various ERP vendors and implementers.\nResponsibilities:\nInvolved in Analysis and Design of the project, and developing prototypes of the product.\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nDeveloped Controller Servlets, Action, and Form objects for process of interacting with Oracle database and retrieving dynamic data.\nWrote custom support modules for upgrade implementation using PL/SQL, UNIX Shell scripts.\nDeveloped backend components, DB Scripts for the backend communication.\nUsed Apache Log4j logging API to log errors and messages.\nInvolved in Documentation and use case design using UML modeling include development of Class diagrams, Sequence diagrams, and use case Transaction diagrams.\nDeveloped HTML and JSP pages using Struts.\nResponsible for performance tuning of the product and eliminating memory leakages in the product.\nUsed Junit to perform unit testing.\nUsed Eclipse tool for application development.\nUsed Configuration Management Tools for version control which is built on CVS.\nEnvironment:  Java, JSP, HTML, AJAX, XML, DOM, SAX, JNDI, Struts, DB, PL/SQL, UNIX Shell Scripting, Rational Rose, Apache Tomcat, Oracle, JUnit, Log4j, CVS, Eclipse.",
  "cleaned_text": "Candidate Objective To work in the most challenging position with an organization that provides ample opportunities to learn and to contribute for the growth of an organization. Possess years of professional IT experience in designing and developing Web based and Enterprise applications using JAVA J EE technologies in Telecom, Financial, Insurance and Digital domains. Professional Summary Experienced in all phases of Software Development Life Cycle SDLC including Analysis, Design, and Development, Debugging, Support, Integration, Maintenance, and Enhancements of Java J EE Applications. Experience in working in environments using Agile SCRUM and Waterfall development methodologies. Expertise in client and server scripting languages like HTML , CSS , JavaScript, Bootstrap, JQuery, Angular JS, ReactJS, Backbone.js and Node JS. Experience with Java features such as lambda expressions, Parallel operations on collections and for effective sorting mechanisms and new Date Time API. Handled operations and maintenance support for AWS cloud resources which includes launching, maintaining, and troubleshooting EC instances, S buckets, Auto Scaling, Dynamo DB, AWS IAM, Elastic Load Balancers ELB and Relational Database Services RDS . Also created snapshots for data to store in AWS S . Experience in developing and solid understanding of Service Oriented Architecture and Microservices Architecture. Strong hands on experience in implementing Design patterns like MVC, Data Access Object, Session Facade, Business Delegate, Factory, Proxy, and Singleton. Experience in developing web-based enterprise applications using Core Java, J EE, Servlets, JSP, JSF, JDBC, Hibernate, Web Services SOAP and REST , MVC Framework Struts, Spring MVC and SQL. Experience in both providing and consuming Web Services using SOAP and RESTful JAX-RS and JAX-WS . Experience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL Hibernate Query Language . Strong experience in Core Java concepts like Collections, Multithreading, Event Handling, Exception Handling, and Generics. Experience with different Spring framework modules like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Boot, Spring Batch, Spring Security, and Spring cloud. Experience in design and development of robust and highly scalable web service platforms and APIs based on REST and SOAP for e-commerce applications using AXIS, WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC technologies and Jersey frameworks. Expertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX. Experience on CQL Cassandra query language , for retrieving the data present in Cassandra cluster by running queries in CQL. Proficient in writing and handling SQL Queries, PL SQL, Stored Procedures, and Triggers. Good experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB and No SQL databases like Mongo DB and Dynamo DB. Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue. Experience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere. Good experience writing application deployment scripts using Shell Scripting. Worked on Windows, UNIX, LINUX platforms to move the project into production environment. Experience with Junit, Jasmine, Karma, Mockito and Log J in developing test cases. Working knowledge with version control tools like SVN, CVS, GIT, and Visual Source Safe. Hands on experience in building tools like ANT, Maven, Gradle. Experienced in developing Rich GUI s by using Eclipse RCP, HTML, frameworks. Highly experience with Java complaint IDEs like Spring Tool Suite, Eclipse, IntelliJ, and RAD. Technical Skills Certifications AWS Certified Developer Associate KDNJ B CBQQQXSF Nov Professional Experience Client BCBS, Chicago, IL Jan Till date Role Full Stack Developer Description Well Mark Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. Find a plan is a web based J EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan thats right for you. Responsibilities Involved in various phases of Software Development Life Cycle SDLC and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings. Developed UI using HTML , CSS , JavaScript, Bootstrap, JQuery, Angular JS and Node JS. Built AngularJS modules, controllers, pop up modals, and file uploaders. Created reusable directives, factories, and services in AngularJS. Used Backbone.js and ReactJS to create Controllers to handle events triggered by clients and send request to server. Used plug-in development for RCP version for developing the layouts like GridLayout and Fillout for RCP. Designed and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions, Spring HATEOAS, Spring Cloud and Spring JDBC. Implemented the authentication and authorization of the application using Spring Security and Oauth . Designed and developed Microservices business components and RESTful service endpoints using Spring boot. Implemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively. Implemented first-hand the best worst practices for integrating Microservices into existing system architecture. Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features. Worked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker. Implemented Multithreading, Concurrency, Exception Handling, and Collections whenever necessary. Prepared calls through Hibernate and Spring JDBC for Interacting with the Database. Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances. Participated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments. Authored application using Spring Cloud services spring version of Netflix OSS-Eureka, Circuit Breaker, and Ribbon . Involved in writing Java API for Amazon Lambda to manage some of the AWS services. Participated in creation of Spring Configurations using Java features, Lambda expressions, Streams, filters. Worked Docker container management along with volumes, container based DB and services, Docker Artifactory configuration and setup. Experience in writing complex PL SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Oracle DB. Performed data extraction and loading the JSON data with the server-side content in to the Mongo DB. Configured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server. Used Active MQ to communicate with controller and used service layer to implement the business logic. Implemented Batch jobs using Spring Batch created various item readers, item writers and item processors. Involved in support for end to operations support for OSS BSS Business Support System identify gaps, and propose solutions and manage issue resolution. Validations are done using SoapUI and Ready API testing tool framework in different environments. Worked with Spring Ribbon and Kafka broker service to handle heavy traffic. Deployed and tested the application on Web Sphere Application Server. Developed test cases for unit testing in the integration layer using Mockito framework. Used UNIX shell scripts to search modify files. Setup the CI and CD process for the application using the Jenkins. Installed and deployed monitoring solution with Splunk services. Worked on Log J to validate functionalities and JUnit for unit testing. Implemented configured and customized JIRA issue tracking software with agile plug-in across all company functions. Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts. Environment Java . , J EE, HTML , CSS , Bootstrap, JQuery, Angular JS, ReactJS, JavaScript, Node JS, Eclipse Rich Client Platform, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring HATEOAS, Spring Data, Hibernate, Active MQ, RESTful, Postman, SOAP, Micro Service, AWS, EC , Docker, Mongo DB, Oracle DB, Maven, STS, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log j and GIT. Client Capital One, Wilmington, DE Feb Jan Role Full Stack Developer Description The move money services help general users and investment users, to carry monetary transactions among friends, family and to manage loans and pay bills. The project consisted of developing and maintaining services of Capital One move money services like bill pay, home loan accounts, mortgage accounts etc. the services were developed maintained and tested for the devices and the web. We worked on the architectures, services and the front-end UI for each of the applications. Responsibilities Responsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development. Upgraded existing UI with HTML , CSS , jQuery and Bootstrap with AngularJS interaction. Designed, developed a custom, single-page, responsive web application on front end using AngularJS. Developed custom directives, Factories and Services in AngularJS and created AngularJS Controller to isolate the scopes to perform operations. Created the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model. Used JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries. Added user validations and user permissions by using the NodeJS with libraries Express JS. Implemented Grails TagLibs to avoid groovy code in GSP pages. Used Grails command objects for validating non-persistent objects. Developed an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity. Designed the application using various Spring technologies and used Spring Security to provide better authentication instances. Developed SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability. Developed Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth- . . Added WS-Security using XWSS to secure the Web services. Used AWS SDK for connecting to Amazon S buckets and EC to deploy on Docker Container with Microservices architecture. Developed AWS Lambda Functions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS. Developed services that utilize the Cloud Foundry and Azure client libraries SDK for Java. Deployed application using Pivotal Cloud Foundry PCF CLI. Used Micro-services to ensure the scalability of application on cloud infrastructure. Refactored existing monolithic application by identifying components that needs to be transformed to Micro- services architecture, with Spring Boot-based services interacting through a combination of REST and AWS API-Gateway. Installed secured and configured AWS cloud servers and virtual servers using Spring Cloud for AWS. Analysis the logs data and filter required columns by Log stash configuration and send it to Elasticsearch. Developed the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management. Implemented Web-Services to integrate between different applications components using Restful web services by using Jersey for JAX-RS implementation. Developed SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability. Worked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc. Extensively used JSON to parse the data from server side to satisfy the business requirement. Used WebSphere server to route our JMS queue messages to different business floors and configured routes in WebSphere. Used Apache Camel Framework to transform, extract and load the data. Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework. Implemented request and response objects using SOAP web services and created routes using Apache Camel. Defined several UML diagrams Activity diagrams, Sequence, and Object diagrams. Developed unit and integration tests for existing microservices using JUnit, Mockito and Docker environments. Involved in installing and configuring Maven for application builds and deployment. Configured and customized logs using Log J and Used GIT as a version control tool. Used JMeter to test performance of SOAP protocol. Worked on Creating Kafka Adaptors for decoupling the application dependency. Used JIRA to assign, track, report and audit the issues in the application. Setup the CI and CD process for the application using the Jenkins. Involved in System Testing, Integration Testing, and Production Testing on WebLogic Server. Environment HTML , CSS , JavaScript, Bootstrap, AngularJS, NodeJS, Express JS, jQuery, AJAX, Agile SCRUM , Groovy, Grails, Hibernate, Spring, Struts, MongoDB, Spring Batch, Spring Boot, Spring Cloud, Spring Security, Servlet, JSON XML, GIT, Spring MVC, Apache Camel, JUnit, Maven, JMS, WebSphere, Restful, JAX-RS, Log J, AWS, Docker, Microservices, Kafka, Elasticsearch, Logstash, JIRA, Jenkins, JMeter. Client Sprint, Kansas City, MO May Dec Role Java J EEdeveloper Description Sprint Synaptic Storage as a Service is a web services-based storage solution that easily scales up and down to any size you need and allows you to pay only for the storage you use. It provides elastic capacity on demand with no commitments, minimums, or limits and allows access to your stored data from virtually anywhere and anytime. Responsibilities Involved in complete development of Agile Development Methodology SCRUM, developed and tested the application during various iterations. Developed screens using HTML, CSS and JQuery. Developed the User Interface using Spring framework, JQuery and Ajax. Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS. Developed and configured Jasmine test cases to test the Angular controllers for UI in Jasmine framework JavaScript Testing Framework in Eclipse IDE. Handled Java multithreading part in back - end component, one thread will be running for each user, which serves that user. Used spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications. Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO and PO. Developed various Java beans for performance of business processes and effectively involved in Impact analysis. Developed application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema. Implemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. Installed and configured JBOSS server with MYSQL persistence. Extracted rules data from the database and decision tables. Created SOAP web services interface to Java-based runtime engine and accounts. Hands on experience on Cassandra architecture with better understanding and write processes including mem-table, stable and commit log. Actively involved in writing SQL using SQL query builder. Worked on MYSQL databases and Oracle databases technologies. Used Maven as build tool and deploying the application. Actively used the defect tracking tool JIRA to create and track the defects during QA phase of the project. Used SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts. Developed test cases using Junit. Environment SCRUM, SDLC, Maven, HTML, CSS, JQuery, Jasmine FrameWork, Spring, Ajax, AngularJS, AOP, JDBC, Spring IOC, Hibernate, DAO, PO, Java beans, SOAP, SQL, Cassandra, JIRA, QA, SVN, Junit, JBOSS Server, Drools. Client State Farm, South Houston, TX Aug Dec Role Java developer Description State Farm is a group of insurance and financial services companies in the United States. The group s main business is State Farm Mutual Automobile Insurance Company, a mutual insurance firm that also owns the other State Farm companies. Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering, modelling, analysis, design, development, testing, and monitoring. Involved in the front end using JSP, HTML, CSS, JavaScript and JQuery. Developed GUI using SWT RCP technology. Experience in working with different plug-ins of Eclipse RCP. Developed different GUI screens using widgets like Tree and Table form in Eclipse SWT RCP. Developed perspective to show different views together in RCP. Developed Menus and views using Extension point in RCP. Implemented MVC architecture using JSP, Spring, Hibernate and used Spring Framework to initialize managed beans and services. Involved in development of Agent Verification System using Spring MVC framework. Used Spring Inheritance to develop beans from already developed parent beans. Used Spring AOP for logging, auditing, and transaction management to distinguish business logic from the cross-cutting concerns. Used Spring Security for Authentication and Authorization of the application. Created data model and generated Hibernate mappings and domain objects using Hibernate tools. Interfaced with the My SQL back-end database by integrating Spring with Hibernate. Extensively used hibernate named queries, criteria queries, Hibernate Query Language HQL and Optimistic Locking and Caching to process the data from the database. Developed Unit Integration test cases using JUnit. Used Gradle tool for building and deploying the Web applications in Web Logic Server. Used JIRA tool for tracking stories progress and follow agile methodology. Used logging techniques provided by Log J tool for efficient logging and debugging. Developed the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control SVN . Involved in Maintenance and Enhancements for the project. Environment Java, J EE, HTML, CSS, JavaScript, JQuery, Struts, Spring IOC, Spring MVC, Spring AOP, JDBC, Hibernate, My SQL, HQL, SQL, JUnit, Gradle, JIRA, Log J, Eclipse, SVN, Sybase, RCP and Web Logic Server. Client Techno soft Solutions Sep Aug Role Java J EE Developer Description Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest E-Mail, messaging, and Internet networks. These services range from architecture and design of software solutions, website design & development to deployment services and operational support. Responsibilities Developed front-end screens using JSP, HTML, CSS, JavaScript, JSON. Implemented Struts MVC design pattern and front controller pattern along with Action Servlet as front controller for this application. Developed SCM by using the JSP HTML like one form for each functionality user interface, standard validations using the JavaScript, Servlets used as the controllers for the business logic and business logic using JDBC, XML parsing techniques etc using MVC. Developed SingleSignOn SSO functionality, through which we can run SCM from Oracle Applications. Involved in developing the Routings and configured Routing Program as scheduled the concurrent request. Developed Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute. Involved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow. Extensively worked on creating the setups for Organizations, Templates, Concurrent Requests, Cross Reference Types, User Creations, assigning responsibilities, creating value sets, Descriptive Flex Fields etc, in Oracle Applications. Used CVS as version control system. Environment Java, JDBC, Servlets, Oracle, JSP, XML, UML, HTML, CSS, JavaScript, UNIX, CVS, DB and Ionic Framework. Client See Software May - Aug Role Jr. Java Developer Description see software is a pioneer in providing tax automation products, solutions for both direct and indirect taxes. The application developed offers various computation & filing services for account payable, account receivable and payroll transactions and is a preferred tax solution partner for various ERP vendors and implementers. Responsibilities Involved in Analysis and Design of the project, and developing prototypes of the product. Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture. Developed Controller Servlets, Action, and Form objects for process of interacting with Oracle database and retrieving dynamic data. Wrote custom support modules for upgrade implementation using PL SQL, UNIX Shell scripts. Developed backend components, DB Scripts for the backend communication. Used Apache Log j logging API to log errors and messages. Involved in Documentation and use case design using UML modeling include development of Class diagrams, Sequence diagrams, and use case Transaction diagrams. Developed HTML and JSP pages using Struts. Responsible for performance tuning of the product and eliminating memory leakages in the product. Used Junit to perform unit testing. Used Eclipse tool for application development. Used Configuration Management Tools for version control which is built on CVS. Environment Java, JSP, HTML, AJAX, XML, DOM, SAX, JNDI, Struts, DB, PL SQL, UNIX Shell Scripting, Rational Rose, Apache Tomcat, Oracle, JUnit, Log j, CVS, Eclipse.",
  "preprocessed_text": "candidate objective work challenging position organization provides ample opportunity learn contribute growth organization possess year professional experience designing developing web based enterprise application using java ee technology telecom financial insurance digital domain professional summary experienced phase software development life cycle sdlc including analysis design development debugging support integration maintenance enhancement java ee application experience working environment using agile scrum waterfall development methodology expertise client server scripting language like html cs javascript bootstrap jquery angular j reactjs backbone.js node j experience java feature lambda expression parallel operation collection effective sorting mechanism new time api handled operation maintenance support aws cloud resource includes launching maintaining troubleshooting ec instance bucket auto scaling dynamo db aws iam elastic load balancer elb relational database service rds also created snapshot data store aws experience developing solid understanding service oriented architecture microservices architecture strong hand experience implementing design pattern like mvc data access object session facade business delegate factory proxy singleton experience developing web-based enterprise application using core java ee servlets jsp jsf jdbc hibernate web service soap rest mvc framework strut spring mvc sql experience providing consuming web service using soap restful jax-rs jax-ws experience using persistence framework like hibernate jpa mapping java class database using hql hibernate query language strong experience core java concept like collection multithreading event handling exception handling generic experience different spring framework module like spring core spring aop spring ioc spring mvc spring boot spring batch spring security spring cloud experience design development robust highly scalable web service platform apis based rest soap e-commerce application using axis wsdl uddi xml jax-ws jax-rs jaxb jax-rpc technology jersey framework expertise xml technology xsl xslt xml schema xpath xforms xsl-fo parser like sax experience cql cassandra query language retrieving data present cassandra cluster running query cql proficient writing handling sql query pl sql stored procedure trigger good experience relational database like oracle sql m sql server ibm db sql database like mongo db dynamo db experienced implementation jms exchange information reliable channel asynchronous way using active mq rabbit mq message queue experience application server like web logic jboss apache tomcat ibm web sphere good experience writing application deployment script using shell scripting worked window unix linux platform move project production environment experience junit jasmine karma mockito log developing test case working knowledge version control tool like svn cv git visual source safe hand experience building tool like ant maven gradle experienced developing rich gui using eclipse rcp html framework highly experience java complaint ides like spring tool suite eclipse intellij rad technical skill certification aws certified developer associate kdnj cbqqqxsf nov professional experience client bcbs chicago il jan till role full stack developer description well mark blue cross blue shield leading insurance company owned policyholder bcbs health insurance health care provider company find plan web based ee application created help individual family easily shop buy health insurance well mark offer variety insurance plan well tool help choose plan thats right responsibility involved various phase software development life cycle sdlc worked highly dynamic agile environment participated scrum sprint meeting developed ui using html cs javascript bootstrap jquery angular j node j built angularjs module controller pop modal file uploaders created reusable directive factory service angularjs used backbone.js reactjs create controller handle event triggered client send server used plug-in development rcp version developing layout like gridlayout fillout rcp designed implemented application using spring boot spring mvc spring ioc spring annotation spring aop spring transaction spring hateoas spring cloud spring jdbc implemented authentication authorization application using spring security oauth designed developed microservices business component restful service endpoint using spring boot implemented restful soap based web service using jax-rs jax-ws respectively implemented first-hand best worst practice integrating microservices existing system architecture microservices used strategy gradually replace core monolithic application still adding business feature worked integrated hystrix dashboard monitor spring micro-services using circuit breaker implemented multithreading concurrency exception handling collection whenever necessary prepared call hibernate spring jdbc interacting database experienced aws service smoothly manage application cloud creating modifying instance participated troubleshooting issue aws netflix eureka cloud environment authored application using spring cloud service spring version netflix oss-eureka circuit breaker ribbon involved writing java api amazon lambda manage aws service participated creation spring configuration using java feature lambda expression stream filter worked docker container management along volume container based db service docker artifactory configuration setup experience writing complex pl sql query using join stored procedure function trigger cursor index oracle db performed data extraction loading json data server-side content mongo db configured jms server setup db connection pool setup deployed returned item web sphere server used active mq communicate controller used service layer implement business logic implemented batch job using spring batch created various item reader item writer item processor involved support end operation support os bs business support system identify gap propose solution manage issue resolution validation done using soapui ready api testing tool framework different environment worked spring ribbon kafka broker service handle heavy traffic deployed tested application web sphere application server developed test case unit testing integration layer using mockito framework used unix shell script search modify file setup ci cd process application using jenkins installed deployed monitoring solution splunk service worked log validate functionality junit unit testing implemented configured customized jira issue tracking software agile plug-in across company function used maintain version file took responsibility code merges branch trunk creating new branch new feature implementation start environment java ee html cs bootstrap jquery angular j reactjs javascript node j eclipse rich client platform spring ioc spring mvc spring security spring boot spring batch spring hateoas spring data hibernate active mq restful postman soap micro service aws ec docker mongo db oracle db maven sts web sphere application server mockito jms unix jenkins jira log git client capital one wilmington de feb jan role full stack developer description move money service help general user investment user carry monetary transaction among friend family manage loan pay bill project consisted developing maintaining service capital one move money service like bill pay home loan account mortgage account etc service developed maintained tested device web worked architecture service front-end ui application responsibility responsible stage design development deployment application active role test driven development termed tdd apart agile software development upgraded existing ui html cs jquery bootstrap angularjs interaction designed developed custom single-page responsive web application front end using angularjs developed custom directive factory service angularjs created angularjs controller isolate scope perform operation created angularjs app using yeoman grunt bower used angular ui component model used javascript jquery user interaction page creating responsive web application integrating twitter bootstrap angular j medium query added user validation user permission using nodejs library express j implemented grail taglibs avoid groovy code gsp page used grail command object validating non-persistent object developed api write xml document database utilized xml xsl transformation dynamic web-content database connectivity designed application using various spring technology used spring security provide better authentication instance developed soap based jax-ws web service interface integrating multiple system code re-usability developed restful web service system interact system secured service spring-security oauth- added ws-security using xwss secure web service used aws sdk connecting amazon bucket ec deploy docker container microservices architecture developed aws lambda function stateless style ensure affinity compute infrastructure manage server run code aws developed service utilize cloud foundry azure client library sdk java deployed application using pivotal cloud foundry pcf cli used micro-services ensure scalability application cloud infrastructure refactored existing monolithic application identifying component need transformed micro- service architecture spring boot-based service interacting combination rest aws api-gateway installed secured configured aws cloud server virtual server using spring cloud aws analysis log data filter required column log stash configuration send elasticsearch developed persistence layer using hibernate framework created pojo object mapped using hibernate annotation transaction management implemented web-services integrate different application component using restful web service using jersey jax-rs implementation developed soap based jax-ws web service interface integrating multiple system code re-usability worked mongodb database concept locking transaction index sharding replication schema design etc extensively used json parse data server side satisfy business requirement used websphere server route jms queue message different business floor configured route websphere used apache camel framework transform extract load data used spring core annotation dependency injection used apache camel integrate spring framework implemented response object using soap web service created route using apache camel defined several uml diagram activity diagram sequence object diagram developed unit integration test existing microservices using junit mockito docker environment involved installing configuring maven application build deployment configured customized log using log used git version control tool used jmeter test performance soap protocol worked creating kafka adaptor decoupling application dependency used jira assign track report audit issue application setup ci cd process application using jenkins involved system testing integration testing production testing weblogic server environment html cs javascript bootstrap angularjs nodejs express j jquery ajax agile scrum groovy grail hibernate spring strut mongodb spring batch spring boot spring cloud spring security servlet json xml git spring mvc apache camel junit maven jms websphere restful jax-rs log aws docker microservices kafka elasticsearch logstash jira jenkins jmeter client sprint kansa city mo may dec role java eedeveloper description sprint synaptic storage service web services-based storage solution easily scale size need allows pay storage use provides elastic capacity demand commitment minimum limit allows access stored data virtually anywhere anytime responsibility involved complete development agile development methodology scrum developed tested application various iteration developed screen using html cs jquery developed user interface using spring framework jquery ajax implemented routing logic navigation screen screen implemented login functionality client side angularjs developed configured jasmine test case test angular controller ui jasmine framework javascript testing framework eclipse ide handled java multithreading part back end component one thread running user serf user used spring frame work spring aop feature jdbc module feature persist data database application developed persistence layer using hibernate framework configuring mapping hibernate mapping file created dao po developed various java bean performance business process effectively involved impact analysis developed application service component configured bean using spring ioc creation hibernate mapping file generation database schema implemented highly-scalable vertical horizontal performance efficient drool architecture installed configured jboss server mysql persistence extracted rule data database decision table created soap web service interface java-based runtime engine account hand experience cassandra architecture better understanding write process including mem-table stable commit log actively involved writing sql using sql query builder worked mysql database oracle database technology used maven build tool deploying application actively used defect tracking tool jira create track defect qa phase project used svn maintain version file took responsibility code merges branch trunk creating new branch new feature implementation start developed test case using junit environment scrum sdlc maven html cs jquery jasmine framework spring ajax angularjs aop jdbc spring ioc hibernate dao po java bean soap sql cassandra jira qa svn junit jboss server drool client state farm south houston tx aug dec role java developer description state farm group insurance financial service company united state group main business state farm mutual automobile insurance company mutual insurance firm also owns state farm company responsibility involved various phase software development life cycle sdlc requirement gathering modelling analysis design development testing monitoring involved front end using jsp html cs javascript jquery developed gui using swt rcp technology experience working different plug-in eclipse rcp developed different gui screen using widget like tree table form eclipse swt rcp developed perspective show different view together rcp developed menu view using extension point rcp implemented mvc architecture using jsp spring hibernate used spring framework initialize managed bean service involved development agent verification system using spring mvc framework used spring inheritance develop bean already developed parent bean used spring aop logging auditing transaction management distinguish business logic cross-cutting concern used spring security authentication authorization application created data model generated hibernate mapping domain object using hibernate tool interfaced sql back-end database integrating spring hibernate extensively used hibernate named query criterion query hibernate query language hql optimistic locking caching process data database developed unit integration test case using junit used gradle tool building deploying web application web logic server used jira tool tracking story progress follow agile methodology used logging technique provided log tool efficient logging debugging developed application using eclipse ide used feature editing debugging compiling formatting build automation version control svn involved maintenance enhancement project environment java ee html cs javascript jquery strut spring ioc spring mvc spring aop jdbc hibernate sql hql sql junit gradle jira log eclipse svn sybase rcp web logic server client techno soft solution sep aug role java ee developer description techno soft provides range professional service delivered expert operational experience building running largest e-mail messaging internet network service range architecture design software solution website design development deployment service operational support responsibility developed front-end screen using jsp html cs javascript json implemented strut mvc design pattern front controller pattern along action servlet front controller application developed scm using jsp html like one form functionality user interface standard validation using javascript servlets used controller business logic business logic using jdbc xml parsing technique etc using mvc developed singlesignon sso functionality run scm oracle application involved developing routings configured routing program scheduled concurrent developed server-side component business service creating item bom sourcing rule substitute involved raising notification oracle user mailing concept intimating start next process using workflow extensively worked creating setup organization template concurrent request cross reference type user creation assigning responsibility creating value set descriptive flex field etc oracle application used cv version control system environment java jdbc servlets oracle jsp xml uml html cs javascript unix cv db ionic framework client see software may aug role jr. java developer description see software pioneer providing tax automation product solution direct indirect tax application developed offer various computation filing service account payable account receivable payroll transaction preferred tax solution partner various erp vendor implementers responsibility involved analysis design project developing prototype product developed application using strut framework leverage classical model view controller mvc architecture developed controller servlets action form object process interacting oracle database retrieving dynamic data wrote custom support module upgrade implementation using pl sql unix shell script developed backend component db script backend communication used apache log logging api log error message involved documentation use case design using uml modeling include development class diagram sequence diagram use case transaction diagram developed html jsp page using strut responsible performance tuning product eliminating memory leakage product used junit perform unit testing used eclipse tool application development used configuration management tool version control built cv environment java jsp html ajax xml dom sax jndi strut db pl sql unix shell scripting rational rose apache tomcat oracle junit log cv eclipse",
  "statistics": {
    "word_count": 3814,
    "unique_word_count": 1069,
    "avg_word_length": 5.017566858940745,
    "stopword_count": 792
  },
  "metadata": {
    "filename": "Candidate87.docx",
    "file_size": 55387,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:53.949475",
    "input_filename": "Candidate87.json"
  }
}