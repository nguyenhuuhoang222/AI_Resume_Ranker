{
  "id": "Candidate146",
  "raw_text": "Candidate 146\nCandidate146java04@gmail.com\n315-221-3723\nOBJECTIVE:  \t\nTechnically skilled and qualified Java programmer looking for a position of a Full Stack Java Programmer to utilize my proficiency and skills in creating best interactive websites.\nProfessional Summary:\n8+ years of experience as a Full Stack Developer with solid understanding in all the phases of the Software Development Lifecycle (SDLC), this includes Analysis, Design, Development, Testing and Maintenance of Java UI applications for large Enterprise Customers.\nStrong programming skills in Java, J2EE, J2SE with extensive ability to develop scalable applications.\nExperienced in developing Web UI Applications using HTML5, CSS3, Boot Strap, Java Script, Type script, Ajax, JQuery, Angular.js, React.js, Express.js, Node JS, JQuery UI and Spring MVC. \nExperience in XML related technologies like XSL, XSD, XPATH, DTD, and XML Schemas, XML Parsers like DOM & SAX. \nWorked on Lambda Expressions, Functional interfaces Stream API's, Time API, and Improvements on Collection, Concurrency, and IO improvements by using Java 8. \nHands on experience in Amazon Web Services (AWS) provisioning and good knowledge on AWS services like Elastic Compute Cloud (EC2), Simple Storage Service (S3), Glacier, Auto Scaling, IAM, Dynamo DB, Virtual Private Cloud (VPC), Route53, Cloud Watch, AWS CLI, Cloud Formation, Cloud Front, Elastic Beanstalk, ELB (Elastic Load Balancers), RDS, SNS, SWF, SES, SQS, and EBS etc. \nExperienced in AWS Dynamo DB to capture the any modification on DB. \nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nAdding permissions to AWS SQS to interact with the Queue and involved in writing custom policies.\nExperienced in using Eureka Servers while deploying in EC2. \nThorough knowledge of Micro service architecture and experience in implementing several design patterns \n Designed and developed Micro service business components using Java /J2EE, Spring Boot and Implemented REST web services based on RESTful APIs. \nExpertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP for User Interface Applications.\nExperienced on spring framework applications like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Batch, Spring JPA, Spring Security and Spring Boot and did integration to Micro services into existing system architecture.\nProficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\n Developed DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - like MySQL, PostgreSQL, SQL server 2012, PL-SQL Oracle10g and NoSQL databases like MongoDB.\nIntegrated Hibernate in context files and configured Hibernate session factory. \nGood Experience in developing Web Services, Restful API using Jersey Framework, and SOAP using Spring-WS.  \nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWell versed in developing SOA services and consuming the services. \nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nBuild hypermedia-driven and implemented connectors between HATEOAS and Spring REST services.\n Improved overall performance via Multithreading, collections, synchronization, and exception handling strategies. \nUsed Apache for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExtensive experience in using NPM, BOWER, Grunt and Gulp for build process.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nPerform API functional testing in POSTMAN and SWAGGER.\nExperience in message streaming by using Apache Kafka. \nExperience with large-scale distributed systems using JMS, Message Queues and Spring JMS Integration. \nHands-on experience in using message brokers such as Active MQ and RabbitMQ.\nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nExperienced on tools like JIRA for bug tracking.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/CVS/GIT/GITHUB.\nExperience with web/application servers Web Sphere, Web Logic, Jetty, JBoss, and Tomcat Server.\nExperience in performing Unit testing, Integration Testing and generation of test cases using JUnit. \nExperience in working on version control tools like SVN, CVS and GIT. \nGood exposure on using IDE'S like Eclipse, Sublime Text, IntelliJ and Net Beans. \nManaged the platform over the years through Agile, Scrum and Waterfall practices \nTECHNICAL SKILLS: \nProfessional Experience:\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDevelop new fronted from the ground up using HTML5, CSS3, JAVASCRIPT, JQuery, Bootstrap, AngularJS, and NodeJS as front end building Environment.\nConfigure and run gulp tasks in NodeJS runtime and handle injection, CSS pre-processing, minifying, test-running, and building-sync. \nDeveloped custom directives, Factories and Services in AngularJS and implemented code per coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nExpertise in consuming Restful web services using Node JS, AngularJS and jQuery along with JSON parsing to implement AJAX call and render the response data to User Interface. \nExtensively used Java 8 features such as lambda expressions, Parallel operations on collections, multithreading and for effective sorting mechanisms.\nUsed Streams and Lambda expressions available as part of Java 8 to store and process the data. \nDesigned and developed the framework to consume the web services hosted in Amazon EC2instances. \nWorked with AWS cloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nExperienced with event-driven and scheduled AWS Lambda functions to trigger various AWS resources.\nUsed AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application and Amazon Cloud Watch is used to monitor the application and to store the logging information. \nMYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service. \nConfigured and managed AWS Glacier, to move old data to archives based on retention policy of databases/ applications. \nInvolved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies.\nParticipated in troubleshooting issues on AWS, Netflix Eureka and Cloud environments.\nAnalysing of SOA based application with Solar/web service/apache ignite cache based systems for optimal design/usage.\nExperienced in implementing Micro Services, SOA with xml base web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach.\nWorked with the SPRING framework hibernate integration to maximize the Classical model view controller layer (MVC) Architecture. \nImplemented SPRING MVC application framework to create and configure of Java beans using SPRING IOC and used SPRING Hibernate support, transaction management. \nExperience in creating RESTful web services using Jersey, spring framework and JAX-RS.\nImplemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth1/2. \nCreating REST based Web Services by establishing links using HATEOAS from spring based Applications.\nInvolved in developing API’s and Rest API proxy using APIGEE edge and for sending mobile notifications.\nDeveloped the Web Services Client using REST, RSDL for verifying the new customer history to a connection.\nDeveloped DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - MySQL and Mongo DB.\nOptimized the full text search function by connecting to Mongo DB. \nWorked with Docker to deploy Micro-services in modern containers to increase Isolation.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nInvolved in Designing Kafka messaging queues. \n Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nPerformed daily Night Build & Weekly Build & Release for the product using Ant, Maven build scripts.\nUsing JUnit test in Eclipse, developed Unit test cases and test suite, Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nDeployed the Application EAR and RESTful Services on JBoss Application Server.\nInvolved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs, payments etc. \nEnvironment: Java/JDK, J2SE/J2EE, HTML5, CSS3, JavaScript, JQuery, Spring, Spring Boot, Spring Batch, Spring MVC, AngularJS, NodeJS, Ec2, S3, SDK, MySQL, SOA, JDBC, Hystrix Dashboard, AWS, Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN, JUnit, Jenkins, JBoss, Linux OS, MongoDB, GIT, PL/SQL, Docker, ANT, JIERA, Kafka, JMS.\nResponsibilities: \nResponsible for all stages of design, development, and deployment of applications.\nActive role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Ajax, Angular JS, React JS for developing presentation layer.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation.  \nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nAnalyze business requirements and develop various business delegates to integrate with Middleware services like JAX-WS using SOAP and REST. \nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security and Oauth-1.0.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUsed the Spring IOC feature to get Hibernate session factory and resolve other bean dependencies also used Spring framework AOP features and JDBC module features to persist the data to the database for few applications.\nUtilized spring core, AOP and security to build robust business operations with transactional support. \nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nSound knowledge in SQL within Oracle, MySQL, MS-SQL Server 2012.\nImplemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously, and send JMS message to Apache Active MQ on the edge device.\nDeveloped unit and integration tests for existing micro services using JUnit, Mockito and Docker environments.\nDeveloped and Implemented ANT and MAVEN Scripts to automation of build process on MAVEN build tools to test the application manually and run the JUNIT Test suites.\nDeveloped ANT scripts to build and deploy the application in the WebSphere Application Server. \nUsed JIRA tool for Issue/bug tracking, monitoring of work assignment in the system \nLog4J was used to monitor the error logs and used GIT as version control tool. \nEnvironment: Java, J2SE/J2EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML5, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, MYSQL, JMS, Oracle, Angular JS, WebSphere, Spring, Spring Boot, Spring Batch, AJAX, jQuery, JUnit, Maven, ACTIVE MQ, Rabbit MQ.\nResponsibilities:\nContributed greatly to increase the code quality and productivity through Test Driven Development (TDD) and Agile Estimation and Planning. \nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nWorked extensively on the front-end side using JSP, HTML, CSS3, JavaScript and JQuery. \nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nResponsible for JAVA, J2SE/J2EE, JBPM, EL and Java FX coding / development.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate Java Bean classes using Apache Axis.\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate, WebLogic.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nDeveloped and Deployed the Application on Eclipse IDE and WebLogic Web Servers. \nDeveloped build script using MAVEN to build, package, test and deployed the application in WebLogic. \nUse WebLogic fuse for remote console login, JMX management and web server console.\nUsed Ant & maven scripts for build and deployment of the application. \nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking. \nCode walk through, modules integration and unit testing using JUnit and Mockito. \nUsed Log4J, Splunk for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. \nProject coordination with other Development teams, System managers and web master and developed good working environment.\nEnvironment: Java, JSP, Servlets, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, WebLogic, Mockito, Junit, Maven, Log4J, SVN, Oracle, UNIX.\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs). \nUsed Hibernate in persistence layer and developed POJO's, Data Access Object to handle database operations.\nWorked on System security with the use of SSL (Secure socket layer), encryption and used role-based security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on micro services, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nUsed the spring validation and Tiles Framework in the presentation layer. \nDeveloped user interface using JSP, Spring Tag Libraries to simplify the complexities of the application. \nDeveloped user interface with Java Server Pages, Ajax support to speed up the application form filling. \nWSDL has been used to expose the Web Services. \nUsed Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nDesigned various tables required for the project using Oracle database \nUsed Apache Tomcat server for deploying the application.\n Involved in writing the Maven build file to build and deploy the application. \nInvolved in writing JUnit Test Cases and Ant Build Script. \nUsed Log4J to capture the logging information.\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, Apache Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\nResponsibilities:\nInvolved in all phases of project from analysis and requirement phase to delivering the project.\nWorked in a Waterfall environment and participated throughout the SDLC process. \nImplemented Struts MVC Design pattern for the Application for the front-end appearance and log in Screens.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications.\nDeveloped the view-controller components using Servlet/JSPs, JavaScript, CSS and HTML.\nWrote client side validation in Java Script.\nInvolved in creating JSP pages for presentation of the data to the end user.\nDeveloped JSP / Action servlet classes \nApplied J2EE design patterns such as MVC, Singleton, and Data Access Objects in the architecture \nUsed JDBC as DAO class to persist the data on to Oracle Database.\nWrote ANT scripts to deploy the components on Jetty Application Server.\nDid regular code reviews and fixed major bugs without side effects.\nStrict adherence to Java coding standards.\nImplementing Log4j for logging and debugging.\nPrepared JUnit test cases and executed the test cases using JUnit.\nUsed Firebug to keep track of issues.\nDeveloped the whole project on Eclipse IDE.\nInvolved in bug fixing during the System testing, Joint System testing and User acceptance testing.\nEnvironment: \nJava, HTML, JSP, Servlet, EJB, Struts, JDBC, Oracle 8i, WebSphere Application Server, ANT, JUnit, Java Script, Rational Rose, Dream Weaver, CSS, Ant, Log4j, Firebug, Eclipse.\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nInvolved in development, testing and implementation of the complete business solution. \nUsed Java Servlets extensively and using JDBC for database access. \nDesigned and developed user interfaces using JSP, JavaScript and XHTML. \nUsed various J2EE design patterns like Singleton, Command Pattern for the implementation of the application. \nDesigned, coded and configured server side J2EE components like JSP, Servlets, JavaBeans, JDBC, JNDI, JTS, Java Mail API, XML. \nInvolved in database design and developed SQL Queries on MySQL. \nConfigured the product for different application servers. \nInvolved in client side validations using JavaScript.\nUsed Swing Layout managers and Swing components for creating desktop application.\nEnvironment: Java, JDBC, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, Eclipse, Putty, MySQL, Apache Tomcat Server.",
  "cleaned_text": "Candidate OBJECTIVE Technically skilled and qualified Java programmer looking for a position of a Full Stack Java Programmer to utilize my proficiency and skills in creating best interactive websites. Professional Summary years of experience as a Full Stack Developer with solid understanding in all the phases of the Software Development Lifecycle SDLC , this includes Analysis, Design, Development, Testing and Maintenance of Java UI applications for large Enterprise Customers. Strong programming skills in Java, J EE, J SE with extensive ability to develop scalable applications. Experienced in developing Web UI Applications using HTML , CSS , Boot Strap, Java Script, Type script, Ajax, JQuery, Angular.js, React.js, Express.js, Node JS, JQuery UI and Spring MVC. Experience in XML related technologies like XSL, XSD, XPATH, DTD, and XML Schemas, XML Parsers like DOM & SAX. Worked on Lambda Expressions, Functional interfaces Stream API s, Time API, and Improvements on Collection, Concurrency, and IO improvements by using Java . Hands on experience in Amazon Web Services AWS provisioning and good knowledge on AWS services like Elastic Compute Cloud EC , Simple Storage Service S , Glacier, Auto Scaling, IAM, Dynamo DB, Virtual Private Cloud VPC , Route , Cloud Watch, AWS CLI, Cloud Formation, Cloud Front, Elastic Beanstalk, ELB Elastic Load Balancers , RDS, SNS, SWF, SES, SQS, and EBS etc. Experienced in AWS Dynamo DB to capture the any modification on DB. Extensive working with Amazon web Services like using Elastic Beanstalk, EC and AMI with Linux. Adding permissions to AWS SQS to interact with the Queue and involved in writing custom policies. Experienced in using Eureka Servers while deploying in EC . Thorough knowledge of Micro service architecture and experience in implementing several design patterns Designed and developed Micro service business components using Java J EE, Spring Boot and Implemented REST web services based on RESTful APIs. Expertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP for User Interface Applications. Experienced on spring framework applications like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Batch, Spring JPA, Spring Security and Spring Boot and did integration to Micro services into existing system architecture. Proficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container. Developed DAOs Data Access Object using Hibernate as ORM to interact with DBMS - like MySQL, PostgreSQL, SQL server , PL-SQL Oracle g and NoSQL databases like MongoDB. Integrated Hibernate in context files and configured Hibernate session factory. Good Experience in developing Web Services, Restful API using Jersey Framework, and SOAP using Spring-WS. Experienced with web services SOAP RESTful and used to scale the applications for better BOA. Well versed in developing SOA services and consuming the services. Worked on Service Oriented Architecture SOA such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS. Build hypermedia-driven and implemented connectors between HATEOAS and Spring REST services. Improved overall performance via Multithreading, collections, synchronization, and exception handling strategies. Used Apache for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services. Extensive experience in using NPM, BOWER, Grunt and Gulp for build process. Experience with Docker images, Containers, push pull with Spring Boot, used Jenkins for CICD and AI. Perform API functional testing in POSTMAN and SWAGGER. Experience in message streaming by using Apache Kafka. Experience with large-scale distributed systems using JMS, Message Queues and Spring JMS Integration. Hands-on experience in using message brokers such as Active MQ and RabbitMQ. Hands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon. Strongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing. Experienced on tools like JIRA for bug tracking. Experienced with CICD - ANT MAVEN GRADLE JENKINS CVS GIT GITHUB. Experience with web application servers Web Sphere, Web Logic, Jetty, JBoss, and Tomcat Server. Experience in performing Unit testing, Integration Testing and generation of test cases using JUnit. Experience in working on version control tools like SVN, CVS and GIT. Good exposure on using IDE S like Eclipse, Sublime Text, IntelliJ and Net Beans. Managed the platform over the years through Agile, Scrum and Waterfall practices TECHNICAL SKILLS Professional Experience Responsibilities Worked in a highly dynamic AGILE environment and participated in scrum and sprint meetings. Develop new fronted from the ground up using HTML , CSS , JAVASCRIPT, JQuery, Bootstrap, AngularJS, and NodeJS as front end building Environment. Configure and run gulp tasks in NodeJS runtime and handle injection, CSS pre-processing, minifying, test-running, and building-sync. Developed custom directives, Factories and Services in AngularJS and implemented code per coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. Expertise in consuming Restful web services using Node JS, AngularJS and jQuery along with JSON parsing to implement AJAX call and render the response data to User Interface. Extensively used Java features such as lambda expressions, Parallel operations on collections, multithreading and for effective sorting mechanisms. Used Streams and Lambda expressions available as part of Java to store and process the data. Designed and developed the framework to consume the web services hosted in Amazon EC instances. Worked with AWS cloud service in creating EC instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC . Experienced with event-driven and scheduled AWS Lambda functions to trigger various AWS resources. Used AWS SDK for connection to Amazon S buckets as it is used as the object storage service to store and retrieve the media files related to the application and Amazon Cloud Watch is used to monitor the application and to store the logging information. MYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service. Configured and managed AWS Glacier, to move old data to archives based on retention policy of databases applications. Involved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies. Participated in troubleshooting issues on AWS, Netflix Eureka and Cloud environments. Analysing of SOA based application with Solar web service apache ignite cache based systems for optimal design usage. Experienced in implementing Micro Services, SOA with xml base web Services SOAP UDDI WSDL using Top Down and Bottom Up approach. Worked with the SPRING framework hibernate integration to maximize the Classical model view controller layer MVC Architecture. Implemented SPRING MVC application framework to create and configure of Java beans using SPRING IOC and used SPRING Hibernate support, transaction management. Experience in creating RESTful web services using Jersey, spring framework and JAX-RS. Implemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth . Creating REST based Web Services by establishing links using HATEOAS from spring based Applications. Involved in developing APIs and Rest API proxy using APIGEE edge and for sending mobile notifications. Developed the Web Services Client using REST, RSDL for verifying the new customer history to a connection. Developed DAOs Data Access Object using Hibernate as ORM to interact with DBMS - MySQL and Mongo DB. Optimized the full text search function by connecting to Mongo DB. Worked with Docker to deploy Micro-services in modern containers to increase Isolation. Worked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. Involved in Designing Kafka messaging queues. Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies. Performed daily Night Build & Weekly Build & Release for the product using Ant, Maven build scripts. Using JUnit test in Eclipse, developed Unit test cases and test suite, Curl was also implemented to test. Used Jenkins as the integration tool and improved scalability of applications on cross-platforms. Deployed the Application EAR and RESTful Services on JBoss Application Server. Involved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs, payments etc. Environment Java JDK, J SE J EE, HTML , CSS , JavaScript, JQuery, Spring, Spring Boot, Spring Batch, Spring MVC, AngularJS, NodeJS, Ec , S , SDK, MySQL, SOA, JDBC, Hystrix Dashboard, AWS, Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN, JUnit, Jenkins, JBoss, Linux OS, MongoDB, GIT, PL SQL, Docker, ANT, JIERA, Kafka, JMS. Responsibilities Responsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development. Defined and constructed layers, server-side objects and client-side interfaces based on J EE design patterns. Designed, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML , CSS , Ajax, Angular JS, React JS for developing presentation layer. Created the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model. Actively involved in using MVC, HTML to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation. Developed SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability. Analyze business requirements and develop various business delegates to integrate with Middleware services like JAX-WS using SOAP and REST. Worked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. Developed Restful Web services for other systems to interact with our system and secured the service with Spring-Security and Oauth- . . Used Spring MVC components to implement business layer and Spring Boot for Micro-services. Used the Spring IOC feature to get Hibernate session factory and resolve other bean dependencies also used Spring framework AOP features and JDBC module features to persist the data to the database for few applications. Utilized spring core, AOP and security to build robust business operations with transactional support. Configured hibernate with Spring ORM as part of spring and Hibernate Integration for best results. Developed the data access classes using JDBC and SQLquerylog j for logging and SVN for version control. Sound knowledge in SQL within Oracle, MySQL, MS-SQL Server . Implemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously, and send JMS message to Apache Active MQ on the edge device. Developed unit and integration tests for existing micro services using JUnit, Mockito and Docker environments. Developed and Implemented ANT and MAVEN Scripts to automation of build process on MAVEN build tools to test the application manually and run the JUNIT Test suites. Developed ANT scripts to build and deploy the application in the WebSphere Application Server. Used JIRA tool for Issue bug tracking, monitoring of work assignment in the system Log J was used to monitor the error logs and used GIT as version control tool. Environment Java, J SE J EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP Rest, Web Services, JavaScript, UML, Bower, HTML , CSS, SASS, Sonar, WAS WSDL, JIRA, JAX-WS, JAX-RS, MYSQL, JMS, Oracle, Angular JS, WebSphere, Spring, Spring Boot, Spring Batch, AJAX, jQuery, JUnit, Maven, ACTIVE MQ, Rabbit MQ. Responsibilities Contributed greatly to increase the code quality and productivity through Test Driven Development TDD and Agile Estimation and Planning. Used AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA. Worked extensively on the front-end side using JSP, HTML, CSS , JavaScript and JQuery. Developed HTML and JavaScript. Developed Scripts for UNIX platform deployment. Responsible for JAVA, J SE J EE, JBPM, EL and Java FX coding development. Used Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes. Implemented SOA to develop REST Based Web services using Apache Axis. Designed and developed Web Services SOAP, WSDL . Created and compiled XML Schema to generate Java Bean classes using Apache Axis. Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements. Involved in Java Multithreading to cascade multiple changes on multiple records in only one transaction Using Struts Framework developed and implemented the web-based application following the MVC. Implemented the service layer using Spring with transaction and logging interceptors. Fixing the bugs and developing new enhancements using JAVA J EE, spring, Hibernate, WebLogic. Used spring framework for middle tier and Spring-hibernate for data access. Used Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables. Implemented J EE patterns, Data Access Object DAO , Session facade, Business Delegate and Value Object. Developed and Deployed the Application on Eclipse IDE and WebLogic Web Servers. Developed build script using MAVEN to build, package, test and deployed the application in WebLogic. Use WebLogic fuse for remote console login, JMX management and web server console. Used Ant & maven scripts for build and deployment of the application. Used Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking. Code walk through, modules integration and unit testing using JUnit and Mockito. Used Log J, Splunk for logging and tracing the messages. Implemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. Project coordination with other Development teams, System managers and web master and developed good working environment. Environment Java, JSP, Servlets, Spring AOP IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services SOAP WSDL and REST , Multithreading, WebLogic, Mockito, Junit, Maven, Log J, SVN, Oracle, UNIX. Responsibilities Involved in the analysis, design, and development and testing phases of Software Development Life Cycle. Developed N-tier client-server business application software using Model View Controller MVC Architecture. Extensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects DTOs and Data Access Objects DAOs . Used Hibernate in persistence layer and developed POJO s, Data Access Object to handle database operations. Worked on System security with the use of SSL Secure socket layer , encryption and used role-based security. JSON being light in nature was used as the chief source of communication between the server and application. Expertise in developing reusable and interoperable Web service modules based on micro services, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. Involved in the development of Servlet, Struts Action classes, Business Objects, Web Services. Involved in writing JSP using Bean, Logic, HTML, and Iterate Tags. Used the spring validation and Tiles Framework in the presentation layer. Developed user interface using JSP, Spring Tag Libraries to simplify the complexities of the application. Developed user interface with Java Server Pages, Ajax support to speed up the application form filling. WSDL has been used to expose the Web Services. Used Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL. SOAP has been used as a protocol to Communicate in the form of XML messages. Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC. Used Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts. Developed Struts Action Forms, Action classes and performed action mapping using Struts. Designed various tables required for the project using Oracle database Used Apache Tomcat server for deploying the application. Involved in writing the Maven build file to build and deploy the application. Involved in writing JUnit Test Cases and Ant Build Script. Used Log J to capture the logging information. Environment Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL SQL, Apache Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven. Responsibilities Involved in all phases of project from analysis and requirement phase to delivering the project. Worked in a Waterfall environment and participated throughout the SDLC process. Implemented Struts MVC Design pattern for the Application for the front-end appearance and log in Screens. Developed applications using Application Lifecycle Management to deliver reliable applications. Developed the view-controller components using Servlet JSPs, JavaScript, CSS and HTML. Wrote client side validation in Java Script. Involved in creating JSP pages for presentation of the data to the end user. Developed JSP Action servlet classes Applied J EE design patterns such as MVC, Singleton, and Data Access Objects in the architecture Used JDBC as DAO class to persist the data on to Oracle Database. Wrote ANT scripts to deploy the components on Jetty Application Server. Did regular code reviews and fixed major bugs without side effects. Strict adherence to Java coding standards. Implementing Log j for logging and debugging. Prepared JUnit test cases and executed the test cases using JUnit. Used Firebug to keep track of issues. Developed the whole project on Eclipse IDE. Involved in bug fixing during the System testing, Joint System testing and User acceptance testing. Environment Java, HTML, JSP, Servlet, EJB, Struts, JDBC, Oracle i, WebSphere Application Server, ANT, JUnit, Java Script, Rational Rose, Dream Weaver, CSS, Ant, Log j, Firebug, Eclipse. Responsibilities Created user-friendly GUI interface and Web pages using HTML, CSS and JSP. Involved in development, testing and implementation of the complete business solution. Used Java Servlets extensively and using JDBC for database access. Designed and developed user interfaces using JSP, JavaScript and XHTML. Used various J EE design patterns like Singleton, Command Pattern for the implementation of the application. Designed, coded and configured server side J EE components like JSP, Servlets, JavaBeans, JDBC, JNDI, JTS, Java Mail API, XML. Involved in database design and developed SQL Queries on MySQL. Configured the product for different application servers. Involved in client side validations using JavaScript. Used Swing Layout managers and Swing components for creating desktop application. Environment Java, JDBC, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log J, CVS, Eclipse, Putty, MySQL, Apache Tomcat Server.",
  "preprocessed_text": "candidate objective technically skilled qualified java programmer looking position full stack java programmer utilize proficiency skill creating best interactive website professional summary year experience full stack developer solid understanding phase software development lifecycle sdlc includes analysis design development testing maintenance java ui application large enterprise customer strong programming skill java ee se extensive ability develop scalable application experienced developing web ui application using html cs boot strap java script type script ajax jquery angular.js react.js express.js node j jquery ui spring mvc experience xml related technology like xsl xsd xpath dtd xml schema xml parser like dom sax worked lambda expression functional interface stream api time api improvement collection concurrency io improvement using java hand experience amazon web service aws provisioning good knowledge aws service like elastic compute cloud ec simple storage service glacier auto scaling iam dynamo db virtual private cloud vpc route cloud watch aws cli cloud formation cloud front elastic beanstalk elb elastic load balancer rds sn swf s sqs eb etc experienced aws dynamo db capture modification db extensive working amazon web service like using elastic beanstalk ec ami linux adding permission aws sqs interact queue involved writing custom policy experienced using eureka server deploying ec thorough knowledge micro service architecture experience implementing several design pattern designed developed micro service business component using java ee spring boot implemented rest web service based restful apis expertise design development enterprise level spring based web application using spring rest hibernate ejb strut servlets jsp user interface application experienced spring framework application like spring core spring aop spring ioc spring mvc spring batch spring jpa spring security spring boot integration micro service existing system architecture proficient spring aop security event handling spring mvc spring ioc container developed daos data access object using hibernate orm interact dbms like mysql postgresql sql server pl-sql oracle nosql database like mongodb integrated hibernate context file configured hibernate session factory good experience developing web service restful api using jersey framework soap using spring-ws experienced web service soap restful used scale application better boa well versed developing soa service consuming service worked service oriented architecture soa apache axis web service use soap rest wsdl exposure jaxb jax-rpc jax-rs jax-ws build hypermedia-driven implemented connector hateoas spring rest service improved overall performance via multithreading collection synchronization exception handling strategy used apache integration data processing spring multi-threaded message consumption worked zookeeper maintain service extensive experience using npm bower grunt gulp build process experience docker image container push pull spring boot used jenkins cicd ai perform api functional testing postman swagger experience message streaming using apache kafka experience large-scale distributed system using jms message queue spring jms integration hands-on experience using message broker active mq rabbitmq hand experience netflix cloud fall-back technology like eureka hystrix ribbon strongly associated usage selenium jenkins junit curl unit system testing experienced tool like jira bug tracking experienced cicd ant maven gradle jenkins cv git experience web application server web sphere web logic jetty jboss tomcat server experience performing unit testing integration testing generation test case using junit experience working version control tool like svn cv git good exposure using ide like eclipse sublime text intellij bean managed platform year agile scrum waterfall practice technical skill professional experience responsibility worked highly dynamic agile environment participated scrum sprint meeting develop new fronted ground using html cs javascript jquery bootstrap angularjs nodejs front end building environment configure run gulp task nodejs runtime handle injection cs pre-processing minifying test-running building-sync developed custom directive factory service angularjs implemented code per coding standard created angularjs controller isolate scope perform operation extensively used core java exception collection expertise consuming restful web service using node j angularjs jquery along json parsing implement ajax call render response data user interface extensively used java feature lambda expression parallel operation collection multithreading effective sorting mechanism used stream lambda expression part java store process data designed developed framework consume web service hosted amazon ec instance worked aws cloud service creating ec instance providing role sometimes participated writing custom policy deployed application elastic bean stalk ec experienced event-driven scheduled aws lambda function trigger various aws resource used aws sdk connection amazon bucket used object storage service store retrieve medium file related application amazon cloud watch used monitor application store logging information mysql used database application hosted cloud using amazon rds service configured managed aws glacier move old data archive based retention policy database application involved aws sqs interact queue giving role involved writing custom policy participated troubleshooting issue aws netflix eureka cloud environment analysing soa based application solar web service apache ignite cache based system optimal design usage experienced implementing micro service soa xml base web service soap uddi wsdl using top bottom approach worked spring framework hibernate integration maximize classical model view controller layer mvc architecture implemented spring mvc application framework create configure java bean using spring ioc used spring hibernate support transaction management experience creating restful web service using jersey spring framework jax-rs implemented restful web service retrieve data client side made rest api call angular j parsed data project client handled security authorization using spring security oauth creating rest based web service establishing link using hateoas spring based application involved developing apis rest api proxy using apigee edge sending mobile notification developed web service client using rest rsdl verifying new customer history connection developed daos data access object using hibernate orm interact dbms mysql mongo db optimized full text search function connecting mongo db worked docker deploy micro-services modern container increase isolation worked thread handling maintain continuity execution extensively implemented multithreading concept handle transaction management isolation propagation level involved designing kafka messaging queue used maven build process used generating documentation reporting adding dependency performed daily night build weekly build release product using ant maven build script using junit test eclipse developed unit test case test suite curl also implemented test used jenkins integration tool improved scalability application cross-platforms deployed application ear restful service jboss application server involved production support maintenance application troubleshooting issue jboss checking log payment etc environment java jdk se ee html cs javascript jquery spring spring boot spring batch spring mvc angularjs nodejs ec sdk mysql soa jdbc hystrix dashboard aws netflix ribbon hibernate rest json restful eclipse maven junit jenkins jboss linux o mongodb git pl sql docker ant jiera kafka jms responsibility responsible stage design development deployment application active role test driven development termed tdd apart agile software development defined constructed layer server-side object client-side interface based ee design pattern designed analyzed developed front-end back-end servlets bootstrap designing html cs ajax angular j react j developing presentation layer created angularjs app using yeoman grunt bower used angular ui component model actively involved using mvc html enable client-side meet specific criterion applying various validation variable used cs class provide visual feedback validation developed soap based jax-ws web service interface integrating multiple system code re-usability analyze business requirement develop various business delegate integrate middleware service like jax-ws using soap rest worked rest web service backend service used oracle database service restful web service using jersey jax-rs implementation developed restful web service system interact system secured service spring-security oauth- used spring mvc component implement business layer spring boot micro-services used spring ioc feature get hibernate session factory resolve bean dependency also used spring framework aop feature jdbc module feature persist data database application utilized spring core aop security build robust business operation transactional support configured hibernate spring orm part spring hibernate integration best result developed data access class using jdbc sqlquerylog logging svn version control sound knowledge sql within oracle mysql ms-sql server implemented function send receive amqp message rabbitmq synchronously asynchronously send jms message apache active mq edge device developed unit integration test existing micro service using junit mockito docker environment developed implemented ant maven script automation build process maven build tool test application manually run junit test suite developed ant script build deploy application websphere application server used jira tool issue bug tracking monitoring work assignment system log used monitor error log used git version control tool environment java se ee jdk rcp aws sdk git swing jfc spring hibernate core java soap rest web service javascript uml bower html cs sas sonar wsdl jira jax-ws jax-rs mysql jms oracle angular j websphere spring spring boot spring batch ajax jquery junit maven active mq rabbit mq responsibility contributed greatly increase code quality productivity test driven development tdd agile estimation planning used angularjs create view hook model dom synchronize data server spa worked extensively front-end side using jsp html cs javascript jquery developed html javascript developed script unix platform deployment responsible java se ee jbpm el java fx coding development used twitter bootstrap create responsive web page displayed properly different screen size implemented soa develop rest based web service using apache axis designed developed web service soap wsdl created compiled xml schema generate java bean class using apache axis involved system analysis design methodology well object oriented design development using ooad methodology capture model business requirement involved java multithreading cascade multiple change multiple record one transaction using strut framework developed implemented web-based application following mvc implemented service layer using spring transaction logging interceptor fixing bug developing new enhancement using java ee spring hibernate weblogic used spring framework middle tier spring-hibernate data access used spring mvc web module involved design development new action class interact business logic used hibernate orm map java class data base table implemented ee pattern data access object dao session facade business delegate value object developed deployed application eclipse ide weblogic web server developed build script using maven build package test deployed application weblogic use weblogic fuse remote console login jmx management web server console used ant maven script build deployment application used eclipse ide tool develop application jira bug issue tracking code walk module integration unit testing using junit mockito used log splunk logging tracing message implemented test script based user requirement specified business side requirement document analysing business requirement handling per requirement project coordination development team system manager web master developed good working environment environment java jsp servlets spring aop ioc spring mvc hibernate xml jbpm html jdbc web service web service soap wsdl rest multithreading weblogic mockito junit maven log svn oracle unix responsibility involved analysis design development testing phase software development life cycle developed n-tier client-server business application software using model view controller mvc architecture extensive use core java collection generic exception handling design pattern functionality involved writing different design pattern like filter action business delegate service locater data transfer object dtos data access object daos used hibernate persistence layer developed pojo data access object handle database operation worked system security use ssl secure socket layer encryption used role-based security json light nature used chief source communication server application expertise developing reusable interoperable web service module based micro service soa architecture using soap restful preparation java jsp coding standard checklist involved development servlet strut action class business object web service involved writing jsp using bean logic html iterate tag used spring validation tile framework presentation layer developed user interface using jsp spring tag library simplify complexity application developed user interface java server page ajax support speed application form filling wsdl used expose web service used apache axis web service framework creating consuming web service client using soap wsdl soap used protocol communicate form xml message implementing exposing micro service base restful api utilizing spring boot spring mvc used hibernate transaction management hibernate batch transaction hibernate cache concept developed strut action form action class performed action mapping using strut designed various table required project using oracle database used apache tomcat server deploying application involved writing maven build file build deploy application involved writing junit test case ant build script used log capture logging information environment java jsp html cs servlets xml soap wsdl oracle eclipse jax-r jax-ws pl sql apache server strut dao aop spring mvc spring hibernate junit maven responsibility involved phase project analysis requirement phase delivering project worked waterfall environment participated throughout sdlc process implemented strut mvc design pattern application front-end appearance log screen developed application using application lifecycle management deliver reliable application developed view-controller component using servlet jsps javascript cs html wrote client side validation java script involved creating jsp page presentation data end user developed jsp action servlet class applied ee design pattern mvc singleton data access object architecture used jdbc dao class persist data oracle database wrote ant script deploy component jetty application server regular code review fixed major bug without side effect strict adherence java coding standard implementing log logging debugging prepared junit test case executed test case using junit used firebug keep track issue developed whole project eclipse ide involved bug fixing system testing joint system testing user acceptance testing environment java html jsp servlet ejb strut jdbc oracle websphere application server ant junit java script rational rose dream weaver cs ant log firebug eclipse responsibility created user-friendly gui interface web page using html cs jsp involved development testing implementation complete business solution used java servlets extensively using jdbc database access designed developed user interface using jsp javascript xhtml used various ee design pattern like singleton command pattern implementation application designed coded configured server side ee component like jsp servlets javabeans jdbc jndi jts java mail api xml involved database design developed sql query mysql configured product different application server involved client side validation using javascript used swing layout manager swing component creating desktop application environment java jdbc servlets strut jsp hibernate java mail api ajax html xml ant log cv eclipse putty mysql apache tomcat server",
  "statistics": {
    "word_count": 3530,
    "unique_word_count": 939,
    "avg_word_length": 4.858923512747875,
    "stopword_count": 735
  },
  "metadata": {
    "filename": "Candidate146.docx",
    "file_size": 51327,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:51.974521",
    "input_filename": "Candidate146.json"
  }
}