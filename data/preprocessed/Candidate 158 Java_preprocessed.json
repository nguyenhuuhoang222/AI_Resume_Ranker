{
  "id": "Candidate 158 Java",
  "raw_text": "Candidate 158\nJava Full Stack Developer\n+1-2245728262\nSUMMARY:\nJava Full Stack developer with 7 years of experience in full software development life cycle including requirement analysis, design, coding, testing, debugging, maintenance and Big Data.\nExtensive experience in developing Web interfaces using HTML5, CSS3, Bootstrap, SASS, LESS, JavaScript, jQuery, Angular-JS, spring, spring REST and Backbone-JS. \nInvolved in Requirements gathering, Analysis, Design, Development and Testing of application developed using AGILE SCRUM methodology. \nDocumentation of the workflow and development cycle from start to finish including Design specification, report generation and interaction with group and vendor services.\nExtensive knowledge in developing single page applications (SPAs) using JavaScript frameworks like AngularJS, ReactJS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries.\nCommand in ReactJS for creating interactive UI's using One-way data flow, Virtual DOM, JSX, React Native concepts. \nExperienced in build tools like Ant, Maven, Gradle and using them with continuous integration tools like Jenkins to create and publish application artifacts. \nExperienced in performing automation using Selenium, Java and performing Behavioral driven testing using Cucumber and Jbehive. \nStrong work experience on Hadoop ecosystem components like Hive, HBase, Spark, Kafka, Sqoop.\nExperienced in installation, usage and management on AWS (Amazon Web Services), Jenkins and GIT for application servers.\nStrong knowledge of UNIX and basic Shell scripting. \nCreated POC's using Node-JS, Mongo-db, Express-JS and Body-Parser to create REST services. \nGood understanding of NoSQL Database and hands on work experience in writing application on No SQL database which is MongoDB. \nExperience in developing Stored Procedures, functions, triggers using Oracle and comfortable using databases SQL Server, node, MySQL and MS Access. \nProvided post-production application support, and perform project/task estimation throughout the duration of the project. \n                                                                            TECHNICAL SKILLS: \nLanguages:  C, C++, Java, SQL, PL/SQL. \nTools and Framework: Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, Spring Security, JSF, JUnit, SOAP UI, JReport, Rational Rose, IBM MQ, RabbitMQ, Spring Boot. \n Build Tools: ANT, Vagrant, Maven, Gradle, Docker, Jenkins. \nVersion Control: Git,Tortoise SVN, CVS.\nWeb Technologies: HTML5, CSS3, JavaScript, JQuery, Bootstrap, JSON Restful, Angular.2, React.JS, AJAX, Node.JS. \nJ2SE/J2EE Technologies: Java, J2EE, JDBC, JMS, Java Beans, JSTL, Jakarta Struts, JSF, EJB, Spring, Hibernate. \nMethodologies: Agile, Test Driven Development, Waterfall. \nDatabases: Oracle, SQL-Server, MySQL server, MS SQL, MongoDB, NoSQL, Cassandra, HBase, Hive. \nWeb/Application Servers: Apache Tomcat, IBM Web Sphere, Web logic Application server, JBOSS, Camel. \nXML Technologies: XML, XSL, DOM, SAX, DTD, XQuery, XSD and XSLT. \nIDE / Tools: Eclipse, IntelliJ, Spring Tool Suite (STS), RAD, Adobe Dreamweaver. \nTesting Tools / Others: JUnit, Mockito, Soap UI, SLF4J, Log4j and JIRA. \nPlatforms: Windows, Linux and UNIX. \nWeb Services: SOAP, Restful, Micro services, JAX-RPC, WSDL.\nBig Data Technologies & Tools: Hadoop, Hive, MapReduce, Sqoop, HBASE, Impala, Kafka, Spark, Sqoop, Splunk.\nCloud Technologies:  AWS EC2, S3, RDS, MS Azure.\n                                                                                 Career Overview \nFULL STACK JAVA DEVELOPER                                                                                                          \nKogentix, Chicago, IL                                                                                                              January 2017 to Present\nResponsible for gathering and understanding the requirements and interacting with clients \nImplemented various J2EE patterns like Singleton Pattern, Factory Pattern, Abstract Factory pattern, Data Access Objects, Adaptor(Wrapper) Pattern.\nProject focus is on ingesting large sets of business related structured data into hdfs environment,perform fraud detection and reporting.\nInvolved in development of common data ingestion platform for various systems.\nIndividual contributor for developing Spring XD module job for csv data ingestion.\nHandling L3 production support responsibilities for various source systems apart from regular development tasks. Had source ownership of many source systems.\nInvolved in transformation and validation of data sets using pig and unix.\nMember of a team which is responsible for data import from MySQL,Oracle to Hive using sqoop.\nAcquire data from relational databases using Sqoop import and load the data to hive warehouse.\nPerform basic cleansing operations on the tables in hive.\nUtilized RabbitMQ for asynchronous messaging. \nInvolved in writing POJO classes and hbm mapping files to map database tables with Java objects \nInvolved in writing XML configuration file for Hibernate-Database connectivity\nWorked on application layer protocols like FTP, DNS, HTTP to handle requests on EC2 instance \nWorked on WSO2 for monitoring API usage \nExtracted reusable modules from a monolithic application into libraries for use in new microservices \nUsing Microservices in SOA architecture style where in Spring Boot services are provided to the other components by application components, through a communication protocol over a network \nIntegrated Struts framework and Hibernate and used Spring Framework for Dependency injection \nUsed AWS to deploy the project on EC2 instance \nExperience with Circle CI, GitHub, and Productive Auto Scaling(PAS) in AWS \nTroubleshoot, analyze, and check production issues in the existing EMS application and fixed bug in given timeframe \nJava Full Stack Developer \nNPD Group, Port Washington, NY                                                                        November 2015 to December 2016\nResponsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels. \nWorked on SOA to develop RESTful Web service to generate and consume services from different modules. Implemented MVC Framework to make single page applications [SPAs] for responsive services. \nUse JS framework such as AngularJS (for data driven apps) and Backbone.js (for heavy DOM manipulation). \nWeb application development using AngularJS with cutting edge HTML5 and CSS3. \nBuilt the project upon the Single Page Application (SPA) criteria. \nInvolved in building applications using ReactJS by building re-usable UI Components. \nWorked through cross browser compatibility issues with layout and styles for all new CSS that was implemented. \nConfigured System.js to bundle Angular 2 version app and created Call flow diagrams for IVR applications using VISIO \nUsed Front End Developing UI Interface using JSF, JSTL, HTML5.0, CSS, JavaScript, Ajax, and JQuery. \nWrote NoSQL queries and procedures to fetch the data from MongoDB for Inpatient accounts. \nUsed AngularJS to develop client side applications using JavaScript in a clean Model View Controller (MVC) way. \nExperienced in using Twitter Bootstrap Framework responsive design. Developed UI screens and client side scripts incorporating Servlets, JSF, and JavaScript. \nDeveloped additional UI Components using JSF and implemented an asynchronous, AJAX communication (JQuery) based rich client to improve customer experience. \nUsed Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy. Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation. \nUsed JavaScript and GWT to update a portion of a web page thus reducing bandwidth usage and load time in web pages to get user input and requests and Developed dynamic frontends using ReactJS. \nUsed Spring MVC, Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate. \nDesigned stored procedures, triggers and functions in Oracle for business-critical requirements. Created E-R graphs and relationships among different database and creation tables with low coupling. \nDeveloped generic database Connection Pooling with WebLogic Admin server using spring, SQL query optimization. \nUsed Jasper reports and Jfree charts to generate various statistical reports. \nInvolved in performing Unit and Integration testing (JUnit). \nStrictly followed TDD using Agile methodologies. \nUsed Apache JMeter for load testing and log4J for debugging with various levels. Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server. Utilized Gradle for continuous integration. \n Java/J2EE Developer                                        \n Thermo Fisher Scientific Inc                                                                                       January 2014 to October 2015\nInvolving in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document. \nUsed for polyglot programming, troubleshooting and aggregate testing. \nImplemented new features, components, and services from specs employing Java-based technologies without supervision. \nWrite the SQL queries for CRUD operations, and Stored Procedures. \nCreated custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS. \nConfigured JDBC in the application server. \nCreated Oracle store procedures for handling and processing complex data based logics. \nWorked on Java Script libraries like jQuery and JSON. \nUsed Maven for build and Jenkins for continuous integration. \nDesigned and developed web-based software using Spring MVC Framework and Spring Core. \nWorked on the JAVA Collections API for handling the data objects between the business layers and the front end. \nSet up JBoss Server, Configured MySQL Cluster in Linux OS and installed OpenCall XDMS. \nSuccessfully handled JSON/XML data and carried out JSON/XML parsing for form submissions and DOM manipulation. \nUsed Spring ORM module to integrate with Hibernate. \nDesigned and developed Web Services to provide services to the various clients using Restful. \nDesigned the user interface of the application using HTML5, CSS, JSF 2.1, JavaScript and AJAX. \nImplemented Hibernate Framework to connect to database and mapping of java objects to oracle database tables. \nUsed Log4J to capture the logging information and JUnit to test the application classes. \nJava/J2EE Developer    \nRegions Bank - Austin, TX                                                                                        October 2012 to December 2013\nResponsible for writing functional and technical specifications \nExtensively used J2EE design Patterns. \nImplemented the DOJO API for powerful scripting. \nFor updating the new modification and issues AJAX scripting is used. \nImplemented JSP, spring, Java Script and CSS for developing User Interfaces. \nFor exchanging the text and communication with web service JSON is used extensively. \nDeveloped Rich UI applications using JavaScript, HTML, and CSS. \nUsed the JavaScript alert dialog boxes with my Perl CGI program \nImplemented Collection Framework and used the Thread, I/O functionalities for meeting access. \nUsed Hibernate for database and to manage Transactions. \nHibernate as an ORM tool for OR mappings and configured hibernate.cfg.xml and hibernate.hbm.xml files to create the connection pool. \nUpgraded existing UI with HTML 5, CSS3, jQuery and Bootstrapwith AngularJS 2.0 interaction. \nHibernate Persistence Strategy is used for database operations and Developed Hibernate as the data abstraction to interact with the database. \nDeveloped Session and Entity (CMP) beans (EJB) for crucial business logic \nWorked on XML Parsing (DOM/SAX), XML Schemas/DTD and XML Beans. \nExtensively used JUnit for Unit Testing \nJava Developer           \nSun Life                                                                                                          April 2010 to August 2012\nDesigning JSP using Java Beans. \nInvolved in Design, Development, Testing and Integration of the application. \nImplemented Struts framework 2.0 (Action and Controller classes) for dispatching request to appropriate class \nDeveloped using simple Struts Validation for validation of user input as per the business logic and initial data loading. \nDesign and implementation of front end web pages using CSS, DHTML, Java Script, JSP and HTML.\nDesigned table structure and coded scripts to create tables, indexes, views, sequence, synonyms and database triggers. \nInvolved in writing Database procedures, Triggers, PL/SQL statements for data retrieve. \nImplemented AOP and IOC concept using UI Spring 2.0 Framework. \nDeveloped using Transaction Management API of Spring 2.0 and coordinates transactions for Java objects \nGenerated WSDL files using AXIS2 tool. \nDeveloped using CVS as a version controlling tool for managing the module developments. \nConfigured and Tested Application on the IBM Web Sphere App. Server \nUsed Hibernate ORM tools which automate the mapping between SQL databases and objects in Java. \nWritten JUnit test cases for Business Objects, and prepared code documentation for future reference and upgrades. ",
  "cleaned_text": "Candidate Java Full Stack Developer - SUMMARY Java Full Stack developer with years of experience in full software development life cycle including requirement analysis, design, coding, testing, debugging, maintenance and Big Data. Extensive experience in developing Web interfaces using HTML , CSS , Bootstrap, SASS, LESS, JavaScript, jQuery, Angular-JS, spring, spring REST and Backbone-JS. Involved in Requirements gathering, Analysis, Design, Development and Testing of application developed using AGILE SCRUM methodology. Documentation of the workflow and development cycle from start to finish including Design specification, report generation and interaction with group and vendor services. Extensive knowledge in developing single page applications SPAs using JavaScript frameworks like AngularJS, ReactJS and experienced in performing Responsive web design using Bootstrap and CSS Media queries. Command in ReactJS for creating interactive UI s using One-way data flow, Virtual DOM, JSX, React Native concepts. Experienced in build tools like Ant, Maven, Gradle and using them with continuous integration tools like Jenkins to create and publish application artifacts. Experienced in performing automation using Selenium, Java and performing Behavioral driven testing using Cucumber and Jbehive. Strong work experience on Hadoop ecosystem components like Hive, HBase, Spark, Kafka, Sqoop. Experienced in installation, usage and management on AWS Amazon Web Services , Jenkins and GIT for application servers. Strong knowledge of UNIX and basic Shell scripting. Created POC s using Node-JS, Mongo-db, Express-JS and Body-Parser to create REST services. Good understanding of NoSQL Database and hands on work experience in writing application on No SQL database which is MongoDB. Experience in developing Stored Procedures, functions, triggers using Oracle and comfortable using databases SQL Server, node, MySQL and MS Access. Provided post-production application support, and perform project task estimation throughout the duration of the project. TECHNICAL SKILLS Languages C, C , Java, SQL, PL SQL. Tools and Framework Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, Spring Security, JSF, JUnit, SOAP UI, JReport, Rational Rose, IBM MQ, RabbitMQ, Spring Boot. Build Tools ANT, Vagrant, Maven, Gradle, Docker, Jenkins. Version Control Git,Tortoise SVN, CVS. Web Technologies HTML , CSS , JavaScript, JQuery, Bootstrap, JSON Restful, Angular. , React.JS, AJAX, Node.JS. J SE J EE Technologies Java, J EE, JDBC, JMS, Java Beans, JSTL, Jakarta Struts, JSF, EJB, Spring, Hibernate. Methodologies Agile, Test Driven Development, Waterfall. Databases Oracle, SQL-Server, MySQL server, MS SQL, MongoDB, NoSQL, Cassandra, HBase, Hive. Web Application Servers Apache Tomcat, IBM Web Sphere, Web logic Application server, JBOSS, Camel. XML Technologies XML, XSL, DOM, SAX, DTD, XQuery, XSD and XSLT. IDE Tools Eclipse, IntelliJ, Spring Tool Suite STS , RAD, Adobe Dreamweaver. Testing Tools Others JUnit, Mockito, Soap UI, SLF J, Log j and JIRA. Platforms Windows, Linux and UNIX. Web Services SOAP, Restful, Micro services, JAX-RPC, WSDL. Big Data Technologies & Tools Hadoop, Hive, MapReduce, Sqoop, HBASE, Impala, Kafka, Spark, Sqoop, Splunk. Cloud Technologies AWS EC , S , RDS, MS Azure. Career Overview FULL STACK JAVA DEVELOPER Kogentix, Chicago, IL January to Present Responsible for gathering and understanding the requirements and interacting with clients Implemented various J EE patterns like Singleton Pattern, Factory Pattern, Abstract Factory pattern, Data Access Objects, Adaptor Wrapper Pattern. Project focus is on ingesting large sets of business related structured data into hdfs environment,perform fraud detection and reporting. Involved in development of common data ingestion platform for various systems. Individual contributor for developing Spring XD module job for csv data ingestion. Handling L production support responsibilities for various source systems apart from regular development tasks. Had source ownership of many source systems. Involved in transformation and validation of data sets using pig and unix. Member of a team which is responsible for data import from MySQL,Oracle to Hive using sqoop. Acquire data from relational databases using Sqoop import and load the data to hive warehouse. Perform basic cleansing operations on the tables in hive. Utilized RabbitMQ for asynchronous messaging. Involved in writing POJO classes and hbm mapping files to map database tables with Java objects Involved in writing XML configuration file for Hibernate-Database connectivity Worked on application layer protocols like FTP, DNS, HTTP to handle requests on EC instance Worked on WSO for monitoring API usage Extracted reusable modules from a monolithic application into libraries for use in new microservices Using Microservices in SOA architecture style where in Spring Boot services are provided to the other components by application components, through a communication protocol over a network Integrated Struts framework and Hibernate and used Spring Framework for Dependency injection Used AWS to deploy the project on EC instance Experience with Circle CI, GitHub, and Productive Auto Scaling PAS in AWS Troubleshoot, analyze, and check production issues in the existing EMS application and fixed bug in given timeframe Java Full Stack Developer NPD Group, Port Washington, NY November to December Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels. Worked on SOA to develop RESTful Web service to generate and consume services from different modules. Implemented MVC Framework to make single page applications SPAs for responsive services. Use JS framework such as AngularJS for data driven apps and Backbone.js for heavy DOM manipulation . Web application development using AngularJS with cutting edge HTML and CSS . Built the project upon the Single Page Application SPA criteria. Involved in building applications using ReactJS by building re-usable UI Components. Worked through cross browser compatibility issues with layout and styles for all new CSS that was implemented. Configured System.js to bundle Angular version app and created Call flow diagrams for IVR applications using VISIO Used Front End Developing UI Interface using JSF, JSTL, HTML . , CSS, JavaScript, Ajax, and JQuery. Wrote NoSQL queries and procedures to fetch the data from MongoDB for Inpatient accounts. Used AngularJS to develop client side applications using JavaScript in a clean Model View Controller MVC way. Experienced in using Twitter Bootstrap Framework responsive design. Developed UI screens and client side scripts incorporating Servlets, JSF, and JavaScript. Developed additional UI Components using JSF and implemented an asynchronous, AJAX communication JQuery based rich client to improve customer experience. Used Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy. Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation. Used JavaScript and GWT to update a portion of a web page thus reducing bandwidth usage and load time in web pages to get user input and requests and Developed dynamic frontends using ReactJS. Used Spring MVC, Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate. Designed stored procedures, triggers and functions in Oracle for business-critical requirements. Created E-R graphs and relationships among different database and creation tables with low coupling. Developed generic database Connection Pooling with WebLogic Admin server using spring, SQL query optimization. Used Jasper reports and Jfree charts to generate various statistical reports. Involved in performing Unit and Integration testing JUnit . Strictly followed TDD using Agile methodologies. Used Apache JMeter for load testing and log J for debugging with various levels. Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server. Utilized Gradle for continuous integration. Java J EE Developer Thermo Fisher Scientific Inc January to October Involving in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document. Used for polyglot programming, troubleshooting and aggregate testing. Implemented new features, components, and services from specs employing Java-based technologies without supervision. Write the SQL queries for CRUD operations, and Stored Procedures. Created custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS. Configured JDBC in the application server. Created Oracle store procedures for handling and processing complex data based logics. Worked on Java Script libraries like jQuery and JSON. Used Maven for build and Jenkins for continuous integration. Designed and developed web-based software using Spring MVC Framework and Spring Core. Worked on the JAVA Collections API for handling the data objects between the business layers and the front end. Set up JBoss Server, Configured MySQL Cluster in Linux OS and installed OpenCall XDMS. Successfully handled JSON XML data and carried out JSON XML parsing for form submissions and DOM manipulation. Used Spring ORM module to integrate with Hibernate. Designed and developed Web Services to provide services to the various clients using Restful. Designed the user interface of the application using HTML , CSS, JSF . , JavaScript and AJAX. Implemented Hibernate Framework to connect to database and mapping of java objects to oracle database tables. Used Log J to capture the logging information and JUnit to test the application classes. Java J EE Developer Regions Bank - Austin, TX October to December Responsible for writing functional and technical specifications Extensively used J EE design Patterns. Implemented the DOJO API for powerful scripting. For updating the new modification and issues AJAX scripting is used. Implemented JSP, spring, Java Script and CSS for developing User Interfaces. For exchanging the text and communication with web service JSON is used extensively. Developed Rich UI applications using JavaScript, HTML, and CSS. Used the JavaScript alert dialog boxes with my Perl CGI program Implemented Collection Framework and used the Thread, I O functionalities for meeting access. Used Hibernate for database and to manage Transactions. Hibernate as an ORM tool for OR mappings and configured hibernate.cfg.xml and hibernate.hbm.xml files to create the connection pool. Upgraded existing UI with HTML , CSS , jQuery and Bootstrapwith AngularJS . interaction. Hibernate Persistence Strategy is used for database operations and Developed Hibernate as the data abstraction to interact with the database. Developed Session and Entity CMP beans EJB for crucial business logic Worked on XML Parsing DOM SAX , XML Schemas DTD and XML Beans. Extensively used JUnit for Unit Testing Java Developer Sun Life April to August Designing JSP using Java Beans. Involved in Design, Development, Testing and Integration of the application. Implemented Struts framework . Action and Controller classes for dispatching request to appropriate class Developed using simple Struts Validation for validation of user input as per the business logic and initial data loading. Design and implementation of front end web pages using CSS, DHTML, Java Script, JSP and HTML. Designed table structure and coded scripts to create tables, indexes, views, sequence, synonyms and database triggers. Involved in writing Database procedures, Triggers, PL SQL statements for data retrieve. Implemented AOP and IOC concept using UI Spring . Framework. Developed using Transaction Management API of Spring . and coordinates transactions for Java objects Generated WSDL files using AXIS tool. Developed using CVS as a version controlling tool for managing the module developments. Configured and Tested Application on the IBM Web Sphere App. Server Used Hibernate ORM tools which automate the mapping between SQL databases and objects in Java. Written JUnit test cases for Business Objects, and prepared code documentation for future reference and upgrades.",
  "preprocessed_text": "candidate java full stack developer summary java full stack developer year experience full software development life cycle including requirement analysis design coding testing debugging maintenance big data extensive experience developing web interface using html cs bootstrap sas less javascript jquery angular-js spring spring rest backbone-js involved requirement gathering analysis design development testing application developed using agile scrum methodology documentation workflow development cycle start finish including design specification report generation interaction group vendor service extensive knowledge developing single application spa using javascript framework like angularjs reactjs experienced performing responsive web design using bootstrap cs medium query command reactjs creating interactive ui using one-way data flow virtual dom jsx react native concept experienced build tool like ant maven gradle using continuous integration tool like jenkins create publish application artifact experienced performing automation using selenium java performing behavioral driven testing using cucumber jbehive strong work experience hadoop ecosystem component like hive hbase spark kafka sqoop experienced installation usage management aws amazon web service jenkins git application server strong knowledge unix basic shell scripting created poc using node-js mongo-db express-js body-parser create rest service good understanding nosql database hand work experience writing application sql database mongodb experience developing stored procedure function trigger using oracle comfortable using database sql server node mysql m access provided post-production application support perform project task estimation throughout duration project technical skill language java sql pl sql tool framework strut spring hibernate spring mvc spring web flow spring ioc spring aop spring security jsf junit soap ui jreport rational rose ibm mq rabbitmq spring boot build tool ant vagrant maven gradle docker jenkins version control git tortoise svn cv web technology html cs javascript jquery bootstrap json restful angular react.js ajax node.js se ee technology java ee jdbc jms java bean jstl jakarta strut jsf ejb spring hibernate methodology agile test driven development waterfall database oracle sql-server mysql server m sql mongodb nosql cassandra hbase hive web application server apache tomcat ibm web sphere web logic application server jboss camel xml technology xml xsl dom sax dtd xquery xsd xslt ide tool eclipse intellij spring tool suite sts rad adobe dreamweaver testing tool others junit mockito soap ui slf log jira platform window linux unix web service soap restful micro service jax-rpc wsdl big data technology tool hadoop hive mapreduce sqoop hbase impala kafka spark sqoop splunk cloud technology aws ec rds m azure career overview full stack java developer kogentix chicago il january present responsible gathering understanding requirement interacting client implemented various ee pattern like singleton pattern factory pattern abstract factory pattern data access object adaptor wrapper pattern project focus ingesting large set business related structured data hdfs environment perform fraud detection reporting involved development common data ingestion platform various system individual contributor developing spring xd module job csv data ingestion handling production support responsibility various source system apart regular development task source ownership many source system involved transformation validation data set using pig unix member team responsible data import mysql oracle hive using sqoop acquire data relational database using sqoop import load data hive warehouse perform basic cleansing operation table hive utilized rabbitmq asynchronous messaging involved writing pojo class hbm mapping file map database table java object involved writing xml configuration file hibernate-database connectivity worked application layer protocol like ftp dns handle request ec instance worked wso monitoring api usage extracted reusable module monolithic application library use new microservices using microservices soa architecture style spring boot service provided component application component communication protocol network integrated strut framework hibernate used spring framework dependency injection used aws deploy project ec instance experience circle ci productive auto scaling pa aws troubleshoot analyze check production issue existing em application fixed bug given timeframe java full stack developer npd group port washington ny november december responsible gathering requirement client business unit participating design discussion implementation feasibility analysis business analyst level worked soa develop restful web service generate consume service different module implemented mvc framework make single application spa responsive service use j framework angularjs data driven apps backbone.js heavy dom manipulation web application development using angularjs cutting edge html cs built project single application spa criterion involved building application using reactjs building re-usable ui component worked cross browser compatibility issue layout style new cs implemented configured system.js bundle angular version app created call flow diagram ivr application using visio used front end developing ui interface using jsf jstl html cs javascript ajax jquery wrote nosql query procedure fetch data mongodb inpatient account used angularjs develop client side application using javascript clean model view controller mvc way experienced using twitter bootstrap framework responsive design developed ui screen client side script incorporating servlets jsf javascript developed additional ui component using jsf implemented asynchronous ajax communication jquery based rich client improve customer experience used spring orm support hibernate manage hibernate resource consistent exception hierarchy integrated spring dao data access using hibernate spring validation framework server side validation used javascript gwt update portion web thus reducing bandwidth usage load time web page get user input request developed dynamic frontends using reactjs used spring mvc spring orm spring security module integrate mysql database implement persistence layer hibernate designed stored procedure trigger function oracle business-critical requirement created e-r graph relationship among different database creation table low coupling developed generic database connection pooling weblogic admin server using spring sql query optimization used jasper report jfree chart generate various statistical report involved performing unit integration testing junit strictly followed tdd using agile methodology used apache jmeter load testing log debugging various level used subversion version control across common source code used developer deployed application weblogic application server utilized gradle continuous integration java ee developer thermo fisher scientific inc january october involving design development testing implementation process system working iterative life cycle business requirement creating detail design document used polyglot programming troubleshooting aggregate testing implemented new feature component service spec employing java-based technology without supervision write sql query crud operation stored procedure created custom component using jquery javascript used maintenance application ms configured jdbc application server created oracle store procedure handling processing complex data based logic worked java script library like jquery json used maven build jenkins continuous integration designed developed web-based software using spring mvc framework spring core worked java collection api handling data object business layer front end set jboss server configured mysql cluster linux o installed opencall xdms successfully handled json xml data carried json xml parsing form submission dom manipulation used spring orm module integrate hibernate designed developed web service provide service various client using restful designed user interface application using html cs jsf javascript ajax implemented hibernate framework connect database mapping java object oracle database table used log capture logging information junit test application class java ee developer region bank austin tx october december responsible writing functional technical specification extensively used ee design pattern implemented dojo api powerful scripting updating new modification issue ajax scripting used implemented jsp spring java script cs developing user interface exchanging text communication web service json used extensively developed rich ui application using javascript html cs used javascript alert dialog box perl cgi program implemented collection framework used thread functionality meeting access used hibernate database manage transaction hibernate orm tool mapping configured hibernate.cfg.xml hibernate.hbm.xml file create connection pool upgraded existing ui html cs jquery bootstrapwith angularjs interaction hibernate persistence strategy used database operation developed hibernate data abstraction interact database developed session entity cmp bean ejb crucial business logic worked xml parsing dom sax xml schema dtd xml bean extensively used junit unit testing java developer sun life april august designing jsp using java bean involved design development testing integration application implemented strut framework action controller class dispatching appropriate class developed using simple strut validation validation user input per business logic initial data loading design implementation front end web page using cs dhtml java script jsp html designed table structure coded script create table index view sequence synonym database trigger involved writing database procedure trigger pl sql statement data retrieve implemented aop ioc concept using ui spring framework developed using transaction management api spring coordinate transaction java object generated wsdl file using axis tool developed using cv version controlling tool managing module development configured tested application ibm web sphere app server used hibernate orm tool automate mapping sql database object java written junit test case business object prepared code documentation future reference upgrade",
  "statistics": {
    "word_count": 2114,
    "unique_word_count": 766,
    "avg_word_length": 5.061967833491012,
    "stopword_count": 409
  },
  "metadata": {
    "filename": "Candidate 158 Java.docx",
    "file_size": 30700,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:52.939835",
    "input_filename": "Candidate 158 Java.json"
  }
}