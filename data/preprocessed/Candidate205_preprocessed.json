{
  "id": "Candidate205",
  "raw_text": "Candidate205\t\t\t    \t\t\t\t601 651 0507\nOBJECTIVE:  \t\nSeeking a position at your Company where I can maximize my 8+ years’ experience and with business 2 business and business 2 client application using Two-tier, Three-tier and N-tier architecture in domains like Telecom, Finance, E-Commerce etc. A self-starter, quick learner and capable of working independently to achieve deadlines.\nPROFESSIONAL SUMMARY:\nKnowledge on Java 8 features like Stream API and Lambda expressions, Method References, creating resource classes, Fetching documents from DB.\nProficient in Java and J2EE technologies including JSP, JDBC, JPA and JMS.\nExperienced in HTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets.\nExperienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX.\nWorked in MVC architecture with Angular JS and SPRING and Spring AOP.\nExpertise to make SPA’s better using AngularJS directives and filters and integrated with Spring forms.\nExperienced with Front-End frameworks like AJAX, JavaScript, NodeJS and Angular JS.\nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nExpertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications.\nProficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\nUsed Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption.\nDeveloped and implemented Stand-Alone applications with Spring Micro services and their patterns.\nWorked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix/Dashboard on designing and implementing Micro service applications.\nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExperienced in AWS Dynamo DB to capture the any modification on DB. \nAdding permissions to AWS SQS to interact with the Queue and involved in writing custom policies.\nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nProficient in SQL, PL/SQL, Stored Procedures and Triggers while dealing with automation on DB.\nExperienced with NoSQL databases like MongoDB and Cassandra on large data platforms.\nProficiency in developing/maintaining using Oracle, MySQL and SQL Server.\nExperienced in web Application servers like Web Logic, JBoss, WebSphere and Tomcat.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD.\nExperience in using Jenkins for Continuous Integration and Sonar jobs for java code quality.\nStrongly associated with usage of Selenium and Junit for Unit and System Testing.\nExperience with the Integrated Development Environments like Eclipse, NetBeans, STS and IntelliJ.\nTECHNICAL SKILLS: \nPROFESSIONAL EXPERIENCE: \nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modelling, analysis, design, development, and testing.\nMaintained Interface compatibility and concurrency in the project using Java 8 new features like default, static methods and Concurrency API.\nDeveloped the view-controller components using JSPs, HTML5, CSS3, AJAX, JavaScript (jQuery).\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS.\nHands-on experience in developing integration with Elastic search in any of the programming languages like JAVA and Having knowledge of advance reporting using Elastic search and Node JS.\nImplemented core features of AngularJS framework such as dependency Injection, Data-binding, Filters, Directives, Templates, Services and Deep Linking Designing. \nWorked on server-side validations, handle actions, events and Encapsulation by implementing React JS.\nInvolved in developing code to convert a REST response in to a JSON and display that using Swagger UI.\nUsed Spring MVC framework for implementing Model-View- Controller (MVC) architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced, and maintenance will be very easy.\nUsed Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc.\nUsed Spring Batch for processing large amount of data like transaction management, job processing, resource management and logging.\nSecured the API's by implementing Oauth2 token based authentication/authorization scheme using spring security.\nDesigned and developed third-party Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol.\nUsed Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java.\nDeveloped the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS.\nDesigned and developed Micro Services business components using Spring Boot.\nHands on Coding to build REST Micro Services using Spring Cloud, Oracle, XSD, JSON, Spring Config, Cloud Foundry and Jenkins.\nMicro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features.\nImplemented API based gateway for online transactions through which we did provide an integration API Kit to make a call to the gateway, to capture credit card details.\nResponsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it.\nStrong knowledge on Virtualization, Cloud Computing and Web services. Performed configuration, deployment and support of cloud services including Amazon Web Services (AWS). \nKnowledge of using Amazon Cloud Watch to monitor the application performance and used the logs to identify any threshold limits.\nWorked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container Service-Docker.\nWorked on developing Restful endpoints to cache application specific data in in-memory data clusters and exposed them with Restful endpoints. \nImplemented REST based microservices using Spring framework, Eureka (Service discovery mechanism) and Jersey API. Used REST Client and POSTMAN to test the services.\nInvolved in creating EC2 instances and installed required configurations and applications on it and created S3 buckets for storing object level data into it.\nDeveloped APIs to read and publish data from Elasticsearch cluster using native Java Transport client as well as REST client. Worked on Spring Integration with the Elasticsearch.\nWorked on Docker container snapshots, attaching to a running container, removing images, managing director structures and managing container.\nWrote SQL in Data Access Object (DAO) to handle the transactions and data persistency in the back-end.\nInvolved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database and MySQL.\nConfigured Apache Tomcat Server and deployed the web components on the STS IDE. \nWorked on setting up Maven scripts to build, package, and deploy application code to the target Tomcat Application Servers and worked on continuous integration servers like Jenkins.\nFocused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality.\nWorked on Log4J to validate functionalities and JUnit for unit testing.\nPerformed automation testing and authored test scripts using Selenium Web Driver, Selenium Grid and Junit.\nActively involved in architecture of DevOps platform and cloud solutions.\nWorked in Agile TDD environment using SDLC tools like GIT, Jira, Jenkins, Maven for build packaging and deployments of the application components.\nEnvironment: Agile, Java/J2EE, AngularJS, NodeJS, HTML5, CSS3, JSP, AJAX, JavaScript, JSON, Swagger, Spring MVC, Spring Security, Spring Boot, Spring Batch, Microservices, AWS, EC2, Elasticsearch, Eureka, Oracle, MySQL, Tomcat, Maven, Jenkins, DevOps, Docker, Jira, Git, STS and Log4J.\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.\nUsed Java 8 Lambda expressions along with Streams for creating internal iteration and performing chain operations such as Filter, Map, Collect on a Collection Objects.\nDeveloped an attractive GUI using AngularJS that users can interact dynamically at runtime.\nDeveloped custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nDeveloped an application were involved in design changes using HTML5, CSS3 and fraction of JavaScript.\nWorked extensively to achieve DOM Show, hide elements and Event Handling using Angular JS.\nExperienced on Spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot and did integration to Micro services into existing system architecture.\nCreating REST based Web Services by establishing links using Hateoas from spring based Applications.\nExperienced in implementing Micro services, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach. \nInvolved in writing application level code to interact with APIs, Web Services using JSON.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nWorked with Docker to deploy Micro-services in modern containers to increase Isolation.\nInvolved in developing APIs and REST\t API proxy using APIGEE edge and for sending mobile notifications.\nExperienced with cloud services like Cloud Foundry and AWS.\nDeveloped the Web Services Client using REST, RSDL for verifying the new customer history to a connection. \nUsed Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nWorked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.\nUsed Apache Camel routes to build customized routes and Spring XML and Camel blueprint to integrate with other Enterprise applications. \nUsed Apache Camel to integrate the different applications using protocols like ActiveMQ and JMS.\nWorked with AWS cloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nPerformed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB.\nInvolved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies.\nWriting Queries to get the information from MongoDB for adjusting the data in DB.\nWorked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. \nInvolved in the development of distributed Server-side components and deployed the various Session and Entity Bean Components in the IBM WebSphere Application Server.\nUsed MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nUsed Selenium Grid to execute Selenium automation suites on different platforms.\nUsing JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test.\nWorked in various DevOps tools like Jenkins, Puppet, SVN, GIT, and Ansible Well knowledge in CI (Continuous Integration) and CD (Continuous Deployment) methodologies with Jenkins.\nUsed Jenkins as the integration tool and improved Scalability of applications on Cross-Platforms.\nProvided the Production Support for different application and took part in the enhancements of the application and suggested the required changes as per the requirements.\nConfigured and customized logs using Log4J.\nInvolved in System Testing, Integration Testing, and Production Testing on WebSphere Server.\nEnvironment: Agile, Java, J2EE, JSON, AngularJS, Web Services, Spring Batch, Spring Boot, Spring MVC, AWS, RESTful, Eclipse, MAVEN, JUnit, APIGEE, DevOps, Jenkins, IBM WebSphere Server, MongoDB, JMS, Zookeeper, Apache Camel, Kafka, Hystrix, CICD, GIT, PL/SQL, Docker and Log4J.\n Responsibilities: \nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDeveloped and implemented Swing, spring and J2EE based MVC framework for the application. \nUsed multithreading in programming to improve overall performance.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Angular JS and AJAX, for developing presentation layer.\nInvolved in payment status report for asynchronous exchange of information using JMS. \nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries and Used JSF (Java Server Faces) to implement component based User Interface Applications.\nUsed spring framework including spring core/IoC, Spring Web, Spring Security. \nUsed Spring AOP for reporting and used a Test-Driven approach to development leveraging.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nUsed Dependency Injection feature for wiring and defined dependencies using constructor arguments.\nImplementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code.\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUtilized spring core, AOP and security to build robust business operations with transactional support. \nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nCRUD was used as part of servlets where DML operations were required on RDBMS like SQL DB’s.\nCreated Hibernate persistent and configuration files for ORM implementation.\nUsed Tomcat Server as the chief enterprise level server while dealing the database activities with hibernates.\nUsed Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol.\nDeveloped unit and integration tests for existing microservices using Junit and Mockito environments.\nDeveloped the data access classes using JDBC and log4j for logging and SVN for version control.\nWorked with and implemented on developing and maintaining robust and effective Page Object Model Design Pattern and Created Keyword-Driven and Data-Driven Framework using Selenium WebDriver configured under TestNG environment and used MAVEN for adding dependencies.\nParticipated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nMaintaining production critical servers running UNIX/Linux supporting database and Web services.\nEnvironment: TDD, Java, J2EE, jQuery, AJAX, JavaScript, HTML, CSS, Spring, Hibernate, SOAP/Rest, Web Services, Sonar, JAX-WS, JAX-RS, JMS, Oracle, Tomcat, JUnit, UNIX/Linux, Maven, Git and Log4J.\nResponsibilities:\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nResponsible for JAVA, J2EE, JSF, JBPM, EL and Java FX coding / development.\nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nUsed Multithreading to improve performance in generating the reports in Java.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate, WebLogic.\nUsed Spring framework for middle tier and Spring-hibernate for data access.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nExtensively developed User defined Custom JSP tags to separate presentation from application logic.\nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate Java Bean classes using Apache Axis.\nDeveloped stored procedures, triggers in MySQL for lowering traffic between servers & clients.\nInstallation, Configuration & administration of WebLogic application Server.\nUsed Log4J for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. \nProject coordination with other Development teams, System managers and web master and developed good working environment and Production Support as well.\nEnvironment: Java, JSP, Servlets, JSF, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web Services (SOAP/WSDL and REST), MySQL, Web Logic Server, Junit, Maven, Log4J, SVN and UNIX.\nResponsibilities:\nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs). \nUsed Hibernate in persistence layer and developed POJO's, Data Access Object to handle database operations.\nExpertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JUnit Test Cases and Ant Build Script. \nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nWSDL has been used to expose the Web Services. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nDeveloped client request validations and processing using JavaScript and HTML.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nHands-on Experience on Selenium Web Driver to write user stories. \nUsed MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern.\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, WebSphere Server, Struts, DAO, Spring AOP, Spring MVC, Hibernate, Junit and Maven.\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern.\nWrote JavaScript for client-side validation.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nConfigured Bean mappings within the framework and Hibernate persistence.\nMonitored the logs using Log4j and fixed the problem.\nThe application was deployed on the Tomcat.\nUsed CVS as version control system. \nKnowledge on bug fixing and Production Support.\nEnvironment: J2EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, Eclipse IDE, CVS and Log4j.\nResponsibilities:\nDesign and Development of the Object-Oriented applications using OOA and OOD techniques in all Business\nAreas using CVS.\nDesigned and developed web pages using HTML, CSS and JSP.\nWrote Client-side validation scripts using JavaScript.\nStored data in Oracle database and accessed using Oracle JDBC drivers.\nImported Client data into the database from XML file by using the XML Parser.\nWorked on bug fixing and Production Support.\nEnvironment: JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.",
  "cleaned_text": "Candidate OBJECTIVE Seeking a position at your Company where I can maximize my years experience and with business business and business client application using Two-tier, Three-tier and N-tier architecture in domains like Telecom, Finance, E-Commerce etc. A self-starter, quick learner and capable of working independently to achieve deadlines. PROFESSIONAL SUMMARY Knowledge on Java features like Stream API and Lambda expressions, Method References, creating resource classes, Fetching documents from DB. Proficient in Java and J EE technologies including JSP, JDBC, JPA and JMS. Experienced in HTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets. Experienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX. Worked in MVC architecture with Angular JS and SPRING and Spring AOP. Expertise to make SPAs better using AngularJS directives and filters and integrated with Spring forms. Experienced with Front-End frameworks like AJAX, JavaScript, NodeJS and Angular JS. Worked on Service Oriented Architecture SOA such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS. Expertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications. Proficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container. Used Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption. Developed and implemented Stand-Alone applications with Spring Micro services and their patterns. Worked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix Dashboard on designing and implementing Micro service applications. Hands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon. Experienced in AWS Dynamo DB to capture the any modification on DB. Adding permissions to AWS SQS to interact with the Queue and involved in writing custom policies. Extensive working with Amazon web Services like using Elastic Beanstalk, EC and AMI with Linux. Proficient in SQL, PL SQL, Stored Procedures and Triggers while dealing with automation on DB. Experienced with NoSQL databases like MongoDB and Cassandra on large data platforms. Proficiency in developing maintaining using Oracle, MySQL and SQL Server. Experienced in web Application servers like Web Logic, JBoss, WebSphere and Tomcat. Experience with Docker images, Containers, push pull with Spring Boot, used Jenkins for CICD. Experience in using Jenkins for Continuous Integration and Sonar jobs for java code quality. Strongly associated with usage of Selenium and Junit for Unit and System Testing. Experience with the Integrated Development Environments like Eclipse, NetBeans, STS and IntelliJ. TECHNICAL SKILLS PROFESSIONAL EXPERIENCE Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering, modelling, analysis, design, development, and testing. Maintained Interface compatibility and concurrency in the project using Java new features like default, static methods and Concurrency API. Developed the view-controller components using JSPs, HTML , CSS , AJAX, JavaScript jQuery . Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS. Hands-on experience in developing integration with Elastic search in any of the programming languages like JAVA and Having knowledge of advance reporting using Elastic search and Node JS. Implemented core features of AngularJS framework such as dependency Injection, Data-binding, Filters, Directives, Templates, Services and Deep Linking Designing. Worked on server-side validations, handle actions, events and Encapsulation by implementing React JS. Involved in developing code to convert a REST response in to a JSON and display that using Swagger UI. Used Spring MVC framework for implementing Model-View- Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced, and maintenance will be very easy. Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc. Used Spring Batch for processing large amount of data like transaction management, job processing, resource management and logging. Secured the API s by implementing Oauth token based authentication authorization scheme using spring security. Designed and developed third-party Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol. Used Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java. Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS. Designed and developed Micro Services business components using Spring Boot. Hands on Coding to build REST Micro Services using Spring Cloud, Oracle, XSD, JSON, Spring Config, Cloud Foundry and Jenkins. Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features. Implemented API based gateway for online transactions through which we did provide an integration API Kit to make a call to the gateway, to capture credit card details. Responsible for creating an instance on Amazon EC AWS and deployed the application on it. Strong knowledge on Virtualization, Cloud Computing and Web services. Performed configuration, deployment and support of cloud services including Amazon Web Services AWS . Knowledge of using Amazon Cloud Watch to monitor the application performance and used the logs to identify any threshold limits. Worked on AWS services to deploy static websites and dynamic Web Apps on EC using Elastic Beanstalk and Elastic Container Service-Docker. Worked on developing Restful endpoints to cache application specific data in in-memory data clusters and exposed them with Restful endpoints. Implemented REST based microservices using Spring framework, Eureka Service discovery mechanism and Jersey API. Used REST Client and POSTMAN to test the services. Involved in creating EC instances and installed required configurations and applications on it and created S buckets for storing object level data into it. Developed APIs to read and publish data from Elasticsearch cluster using native Java Transport client as well as REST client. Worked on Spring Integration with the Elasticsearch. Worked on Docker container snapshots, attaching to a running container, removing images, managing director structures and managing container. Wrote SQL in Data Access Object DAO to handle the transactions and data persistency in the back-end. Involved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database and MySQL. Configured Apache Tomcat Server and deployed the web components on the STS IDE. Worked on setting up Maven scripts to build, package, and deploy application code to the target Tomcat Application Servers and worked on continuous integration servers like Jenkins. Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality. Worked on Log J to validate functionalities and JUnit for unit testing. Performed automation testing and authored test scripts using Selenium Web Driver, Selenium Grid and Junit. Actively involved in architecture of DevOps platform and cloud solutions. Worked in Agile TDD environment using SDLC tools like GIT, Jira, Jenkins, Maven for build packaging and deployments of the application components. Environment Agile, Java J EE, AngularJS, NodeJS, HTML , CSS , JSP, AJAX, JavaScript, JSON, Swagger, Spring MVC, Spring Security, Spring Boot, Spring Batch, Microservices, AWS, EC , Elasticsearch, Eureka, Oracle, MySQL, Tomcat, Maven, Jenkins, DevOps, Docker, Jira, Git, STS and Log J. Responsibilities Worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings. Used Java Lambda expressions along with Streams for creating internal iteration and performing chain operations such as Filter, Map, Collect on a Collection Objects. Developed an attractive GUI using AngularJS that users can interact dynamically at runtime. Developed custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. Developed an application were involved in design changes using HTML , CSS and fraction of JavaScript. Worked extensively to achieve DOM Show, hide elements and Event Handling using Angular JS. Experienced on Spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot and did integration to Micro services into existing system architecture. Creating REST based Web Services by establishing links using Hateoas from spring based Applications. Experienced in implementing Micro services, Service Oriented Architecture SOA with XML based Web Services SOAP UDDI WSDL using Top Down and Bottom Up approach. Involved in writing application level code to interact with APIs, Web Services using JSON. JSON being light in nature was used as the chief source of communication between the server and application. Experience in creating RESTful web services using Jersey, Spring framework and JAX-RS. Worked with Docker to deploy Micro-services in modern containers to increase Isolation. Involved in developing APIs and REST API proxy using APIGEE edge and for sending mobile notifications. Experienced with cloud services like Cloud Foundry and AWS. Developed the Web Services Client using REST, RSDL for verifying the new customer history to a connection. Used Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services. Worked with Spring Ribbon and Kafka broker service to handle heavy traffic. Worked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker. Used Apache Camel routes to build customized routes and Spring XML and Camel blueprint to integrate with other Enterprise applications. Used Apache Camel to integrate the different applications using protocols like ActiveMQ and JMS. Worked with AWS cloud service in creating EC instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC . Performed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB. Involved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies. Writing Queries to get the information from MongoDB for adjusting the data in DB. Worked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. Involved in the development of distributed Server-side components and deployed the various Session and Entity Bean Components in the IBM WebSphere Application Server. Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies. Used Selenium Grid to execute Selenium automation suites on different platforms. Using JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test. Worked in various DevOps tools like Jenkins, Puppet, SVN, GIT, and Ansible Well knowledge in CI Continuous Integration and CD Continuous Deployment methodologies with Jenkins. Used Jenkins as the integration tool and improved Scalability of applications on Cross-Platforms. Provided the Production Support for different application and took part in the enhancements of the application and suggested the required changes as per the requirements. Configured and customized logs using Log J. Involved in System Testing, Integration Testing, and Production Testing on WebSphere Server. Environment Agile, Java, J EE, JSON, AngularJS, Web Services, Spring Batch, Spring Boot, Spring MVC, AWS, RESTful, Eclipse, MAVEN, JUnit, APIGEE, DevOps, Jenkins, IBM WebSphere Server, MongoDB, JMS, Zookeeper, Apache Camel, Kafka, Hystrix, CICD, GIT, PL SQL, Docker and Log J. Responsibilities Responsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development. Defined and constructed layers, server-side objects and client-side interfaces based on J EE design patterns. Developed and implemented Swing, spring and J EE based MVC framework for the application. Used multithreading in programming to improve overall performance. Designed, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML , CSS , Angular JS and AJAX, for developing presentation layer. Involved in payment status report for asynchronous exchange of information using JMS. Used JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries and Used JSF Java Server Faces to implement component based User Interface Applications. Used spring framework including spring core IoC, Spring Web, Spring Security. Used Spring AOP for reporting and used a Test-Driven approach to development leveraging. Developed SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability. Used Dependency Injection feature for wiring and defined dependencies using constructor arguments. Implementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code. Configured hibernate with Spring ORM as part of spring and Hibernate Integration for best results. Used Spring MVC components to implement business layer and Spring Boot for Micro-services. Utilized spring core, AOP and security to build robust business operations with transactional support. Worked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. CRUD was used as part of servlets where DML operations were required on RDBMS like SQL DBs. Created Hibernate persistent and configuration files for ORM implementation. Used Tomcat Server as the chief enterprise level server while dealing the database activities with hibernates. Used Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol. Developed unit and integration tests for existing microservices using Junit and Mockito environments. Developed the data access classes using JDBC and log j for logging and SVN for version control. Worked with and implemented on developing and maintaining robust and effective Page Object Model Design Pattern and Created Keyword-Driven and Data-Driven Framework using Selenium WebDriver configured under TestNG environment and used MAVEN for adding dependencies. Participated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status. GUI design and development using Java Swing, JFC Used for open source web testing. Maintaining production critical servers running UNIX Linux supporting database and Web services. Environment TDD, Java, J EE, jQuery, AJAX, JavaScript, HTML, CSS, Spring, Hibernate, SOAP Rest, Web Services, Sonar, JAX-WS, JAX-RS, JMS, Oracle, Tomcat, JUnit, UNIX Linux, Maven, Git and Log J. Responsibilities Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements. Involved in Java Multithreading to cascade multiple changes on multiple records in only one transaction Responsible for JAVA, J EE, JSF, JBPM, EL and Java FX coding development. Developed HTML and JavaScript. Developed Scripts for UNIX platform deployment. Using Struts Framework developed and implemented the web-based application following the MVC. Used Multithreading to improve performance in generating the reports in Java. Used Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables. Implemented J EE patterns, Data Access Object DAO , Session facade, Business Delegate and Value Object. Implemented the service layer using Spring with transaction and logging interceptors. Fixing the bugs and developing new enhancements using JAVA J EE, spring, Hibernate, WebLogic. Used Spring framework for middle tier and Spring-hibernate for data access. Used Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes. Implemented SOA to develop REST Based Web services using Apache Axis. Extensively developed User defined Custom JSP tags to separate presentation from application logic. Designed and developed Web Services SOAP, WSDL . Created and compiled XML Schema to generate Java Bean classes using Apache Axis. Developed stored procedures, triggers in MySQL for lowering traffic between servers & clients. Installation, Configuration & administration of WebLogic application Server. Used Log J for logging and tracing the messages. Implemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. Project coordination with other Development teams, System managers and web master and developed good working environment and Production Support as well. Environment Java, JSP, Servlets, JSF, Spring AOP IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web Services SOAP WSDL and REST , MySQL, Web Logic Server, Junit, Maven, Log J, SVN and UNIX. Responsibilities Extensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects DTOs and Data Access Objects DAOs . Used Hibernate in persistence layer and developed POJO s, Data Access Object to handle database operations. Expertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. Involved in the development of Servlet, Struts Action classes, Business Objects, Web Services. Involved in writing JUnit Test Cases and Ant Build Script. Involved in writing JSP using Bean, Logic, HTML, and Iterate Tags. WSDL has been used to expose the Web Services. SOAP has been used as a protocol to Communicate in the form of XML messages. Developed client request validations and processing using JavaScript and HTML. Used Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts. Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC. Developed Struts Action Forms, Action classes and performed action mapping using Struts. Hands-on Experience on Selenium Web Driver to write user stories. Used MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern. Environment Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL SQL, WebSphere Server, Struts, DAO, Spring AOP, Spring MVC, Hibernate, Junit and Maven. Responsibilities Created user-friendly GUI interface and Web pages using HTML, CSS and JSP. Developed web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern. Wrote JavaScript for client-side validation. Wrote SQL for JDBC prepared statements to retrieve the data from database. Configured Bean mappings within the framework and Hibernate persistence. Monitored the logs using Log j and fixed the problem. The application was deployed on the Tomcat. Used CVS as version control system. Knowledge on bug fixing and Production Support. Environment J EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, Eclipse IDE, CVS and Log j. Responsibilities Design and Development of the Object-Oriented applications using OOA and OOD techniques in all Business Areas using CVS. Designed and developed web pages using HTML, CSS and JSP. Wrote Client-side validation scripts using JavaScript. Stored data in Oracle database and accessed using Oracle JDBC drivers. Imported Client data into the database from XML file by using the XML Parser. Worked on bug fixing and Production Support. Environment JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.",
  "preprocessed_text": "candidate objective seeking position company maximize year experience business business business client application using two-tier three-tier n-tier architecture domain like telecom finance e-commerce etc self-starter quick learner capable working independently achieve deadline professional summary knowledge java feature like stream api lambda expression method creating resource class fetching document db proficient java ee technology including jsp jdbc jpa jms experienced html xhtml dhtml xml cs angular javascript jquery jsp servlets experienced developing web application using java servlets jsp jdbc jndi ajax worked mvc architecture angular j spring spring aop expertise make spa better using angularjs directive filter integrated spring form experienced front-end framework like ajax javascript nodejs angular j worked service oriented architecture soa apache axis web service use soap rest wsdl exposure jaxb jax-rpc jax-rs jax-ws expertise design development enterprise level spring based web application using spring rest hibernate ejb strut servlets jsp jsf user interface application proficient spring aop security event handling spring mvc spring ioc container used apache kafka integration data processing spring multi-threaded message consumption developed implemented stand-alone application spring micro service pattern worked spring ribbon load balancing used fail safe methodology using circuit breaker pattern hystrix dashboard designing implementing micro service application hand experience netflix cloud fall-back technology like eureka hystrix ribbon experienced aws dynamo db capture modification db adding permission aws sqs interact queue involved writing custom policy extensive working amazon web service like using elastic beanstalk ec ami linux proficient sql pl sql stored procedure trigger dealing automation db experienced nosql database like mongodb cassandra large data platform proficiency developing maintaining using oracle mysql sql server experienced web application server like web logic jboss websphere tomcat experience docker image container push pull spring boot used jenkins cicd experience using jenkins continuous integration sonar job java code quality strongly associated usage selenium junit unit system testing experience integrated development environment like eclipse netbeans sts intellij technical skill professional experience responsibility involved various phase software development life cycle sdlc requirement gathering modelling analysis design development testing maintained interface compatibility concurrency project using java new feature like default static method concurrency api developed view-controller component using jsps html cs ajax javascript jquery implemented routing logic navigation screen screen implemented login functionality client side angularjs hands-on experience developing integration elastic search programming language like java knowledge advance reporting using elastic search node j implemented core feature angularjs framework dependency injection data-binding filter directive template service deep linking designing worked server-side validation handle action event encapsulation implementing react j involved developing code convert rest response json display using swagger ui used spring mvc framework implementing model-view- controller mvc architecture web tier level isolate layer application complexity integration reduced maintenance easy used spring aop solving crosscutting concern like keeping logged data transaction detail etc used spring batch processing large amount data like transaction management job processing resource management logging secured api implementing oauth token based authentication authorization scheme using spring security designed developed third-party payment service offer user convenient payment method based oauth protocol used hibernate orm framework persistence engine wrote hibernate query automate mapping oracle database object java developed monolithic application involved migrating existing monolithic application micro service architecture based restful service deployment done aws designed developed micro service business component using spring boot hand coding build rest micro service using spring cloud oracle xsd json spring config cloud foundry jenkins micro service used strategy gradually replace core monolithic application still adding business feature implemented api based gateway online transaction provide integration api kit make call gateway capture credit card detail responsible creating instance amazon ec aws deployed application strong knowledge virtualization cloud computing web service performed configuration deployment support cloud service including amazon web service aws knowledge using amazon cloud watch monitor application performance used log identify threshold limit worked aws service deploy static website dynamic web apps ec using elastic beanstalk elastic container service-docker worked developing restful endpoint cache application specific data in-memory data cluster exposed restful endpoint implemented rest based microservices using spring framework eureka service discovery mechanism jersey api used rest client postman test service involved creating ec instance installed required configuration application created bucket storing object level data developed apis read publish data elasticsearch cluster using native java transport client well rest client worked spring integration elasticsearch worked docker container snapshot attaching running container removing image managing director structure managing container wrote sql data access object dao handle transaction data persistency back-end involved writing sql stored procedure handling complex query help toad access java program oracle database mysql configured apache tomcat server deployed web component sts ide worked setting maven script build package deploy application code target tomcat application server worked continuous integration server like jenkins focused test driven development creating detailed junit test every single piece functionality writing functionality worked log validate functionality junit unit testing performed automation testing authored test script using selenium web driver selenium grid junit actively involved architecture devops platform cloud solution worked agile tdd environment using sdlc tool like git jira jenkins maven build packaging deployment application component environment agile java ee angularjs nodejs html cs jsp ajax javascript json swagger spring mvc spring security spring boot spring batch microservices aws ec elasticsearch eureka oracle mysql tomcat maven jenkins devops docker jira git sts log j. responsibility worked highly dynamic agile environment participated scrum sprint meeting used java lambda expression along stream creating internal iteration performing chain operation filter map collect collection object developed attractive gui using angularjs user interact dynamically runtime developed custom directive factory service angularjs implemented code according coding standard created angularjs controller isolate scope perform operation extensively used core java exception collection developed application involved design change using html cs fraction javascript worked extensively achieve dom show hide element event handling using angular j experienced spring framework application like spring core spring aop spring mvc spring batch spring security spring boot integration micro service existing system architecture creating rest based web service establishing link using hateoas spring based application experienced implementing micro service service oriented architecture soa xml based web service soap uddi wsdl using top bottom approach involved writing application level code interact apis web service using json json light nature used chief source communication server application experience creating restful web service using jersey spring framework jax-rs worked docker deploy micro-services modern container increase isolation involved developing apis rest api proxy using apigee edge sending mobile notification experienced cloud service like cloud foundry aws developed web service client using rest rsdl verifying new customer history connection used apache kafka integration data processing spring multi-threaded message consumption worked zookeeper maintain service worked spring ribbon kafka broker service handle heavy traffic worked integrated hystrix dashboard monitor spring micro-services using circuit breaker used apache camel route build customized route spring xml camel blueprint integrate enterprise application used apache camel integrate different application using protocol like activemq jms worked aws cloud service creating ec instance providing role sometimes participated writing custom policy deployed application elastic bean stalk ec performed query operation aws dynamo db captured modification data dynamo db involved aws sqs interact queue giving role involved writing custom policy writing query get information mongodb adjusting data db worked business logic calculation performs analysis handle data transfer generates xsl presentation layer sql command database layer involved development distributed server-side component deployed various session entity bean component ibm websphere application server used maven build process used generating documentation reporting adding dependency used selenium grid execute selenium automation suite different platform using junit test eclipse developed unit test case test suite curl also implemented test worked various devops tool like jenkins puppet svn git ansible well knowledge ci continuous integration cd continuous deployment methodology jenkins used jenkins integration tool improved scalability application cross-platforms provided production support different application took part enhancement application suggested required change per requirement configured customized log using log j. involved system testing integration testing production testing websphere server environment agile java ee json angularjs web service spring batch spring boot spring mvc aws restful eclipse maven junit apigee devops jenkins ibm websphere server mongodb jms zookeeper apache camel kafka hystrix cicd git pl sql docker log j. responsibility responsible stage design development deployment application active role test driven development termed tdd apart agile software development defined constructed layer server-side object client-side interface based ee design pattern developed implemented swing spring ee based mvc framework application used multithreading programming improve overall performance designed analyzed developed front-end back-end servlets bootstrap designing html cs angular j ajax developing presentation layer involved payment status report asynchronous exchange information using jms used javascript jquery user interaction page creating responsive web application integrating twitter bootstrap angular j medium query used jsf java server face implement component based user interface application used spring framework including spring core ioc spring web spring security used spring aop reporting used test-driven approach development leveraging developed soap based jax-ws web service interface integrating multiple system code re-usability used dependency injection feature wiring defined dependency using constructor argument implementation data access layer cumbersome greatly resolved using spring jpa implementation data access layer reducing boiler-plate-code configured hibernate spring orm part spring hibernate integration best result used spring mvc component implement business layer spring boot micro-services utilized spring core aop security build robust business operation transactional support worked rest web service backend service used oracle database service restful web service using jersey jax-rs implementation crud used part servlets dml operation required rdbms like sql db created hibernate persistent configuration file orm implementation used tomcat server chief enterprise level server dealing database activity hibernates used git version control system application used jmeter test performance soap protocol developed unit integration test existing microservices using junit mockito environment developed data access class using jdbc log logging svn version control worked implemented developing maintaining robust effective object model design pattern created keyword-driven data-driven framework using selenium webdriver configured testng environment used maven adding dependency participated defect tracking team using alm quality center defect tracking defect priority status gui design development using java swing jfc used open source web testing maintaining production critical server running unix linux supporting database web service environment tdd java ee jquery ajax javascript html cs spring hibernate soap rest web service sonar jax-ws jax-rs jms oracle tomcat junit unix linux maven git log j. responsibility involved system analysis design methodology well object oriented design development using ooad methodology capture model business requirement involved java multithreading cascade multiple change multiple record one transaction responsible java ee jsf jbpm el java fx coding development developed html javascript developed script unix platform deployment using strut framework developed implemented web-based application following mvc used multithreading improve performance generating report java used spring mvc web module involved design development new action class interact business logic used hibernate orm map java class data base table implemented ee pattern data access object dao session facade business delegate value object implemented service layer using spring transaction logging interceptor fixing bug developing new enhancement using java ee spring hibernate weblogic used spring framework middle tier spring-hibernate data access used twitter bootstrap create responsive web page displayed properly different screen size implemented soa develop rest based web service using apache axis extensively developed user defined custom jsp tag separate presentation application logic designed developed web service soap wsdl created compiled xml schema generate java bean class using apache axis developed stored procedure trigger mysql lowering traffic server client installation configuration administration weblogic application server used log logging tracing message implemented test script based user requirement specified business side requirement document analysing business requirement handling per requirement project coordination development team system manager web master developed good working environment production support well environment java jsp servlets jsf spring aop ioc spring mvc hibernate xml jbpm html jdbc web service soap wsdl rest mysql web logic server junit maven log svn unix responsibility extensive use core java collection generic exception handling design pattern functionality involved writing different design pattern like filter action business delegate service locater data transfer object dtos data access object daos used hibernate persistence layer developed pojo data access object handle database operation expertise developing reusable interoperable web service module based microservices soa architecture using soap restful preparation java jsp coding standard checklist involved development servlet strut action class business object web service involved writing junit test case ant build script involved writing jsp using bean logic html iterate tag wsdl used expose web service soap used protocol communicate form xml message developed client validation processing using javascript html used hibernate transaction management hibernate batch transaction hibernate cache concept implementing exposing micro service base restful api utilizing spring boot spring mvc developed strut action form action class performed action mapping using strut hands-on experience selenium web driver write user story used maven build tool adding dependence object model design pattern environment java jsp html cs servlets xml soap wsdl oracle eclipse jax-r jax-ws pl sql websphere server strut dao spring aop spring mvc hibernate junit maven responsibility created user-friendly gui interface web page using html cs jsp developed web application using strut jsp servlet java bean us mvc design pattern wrote javascript client-side validation wrote sql jdbc prepared statement retrieve data database configured bean mapping within framework hibernate persistence monitored log using log fixed problem application deployed tomcat used cv version control system knowledge bug fixing production support environment ee jdbc strut hibernate javascript html cs jsp servlet tomcat oracle eclipse ide cv log j. responsibility design development object-oriented application using ooa ood technique business area using cv designed developed web page using html cs jsp wrote client-side validation script using javascript stored data oracle database accessed using oracle jdbc driver imported client data database xml file using xml parser worked bug fixing production support environment jdk servlets jsp jdbc sql html javascript eclipse xml cv",
  "statistics": {
    "word_count": 3566,
    "unique_word_count": 936,
    "avg_word_length": 5.071789119461582,
    "stopword_count": 780
  },
  "metadata": {
    "filename": "Candidate205.docx",
    "file_size": 53644,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:56.780038",
    "input_filename": "Candidate205.json"
  }
}