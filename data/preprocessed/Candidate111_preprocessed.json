{
  "id": "Candidate111",
  "raw_text": "Candidate111\n    Email: candidate111java@aol.com\t \t\t\tPhone: (551) 242-0224\n   Summary:\n8 plus years of IT experience in various web-based, Enterprise, Client/Server and Distributed applications using Java/ J2EE.\t\t                                                                                        \nHave extensive knowledge and working experience on Software Development Life Cycle (SDLC), Service-Oriented architecture (SOA), Object Oriented Analysis and Design (OOAD), UML and J2EE Architecture.\nExperienced in design and development of web applications using the technologies like HTML, CSS, JavaScript, Bootstrap, AngularJS and Backbone JS\nImplemented various Ajax Frameworks such as jQuery, DOJO, JSON.\nExperience in developing Web Applications with various frameworks, Jakarta Struts 2.0, Spring, Spring MVC, JSF, Servlet, JSP, JSTL and Filters.\nWorked with various modules of spring framework like Spring IOC, Spring AOP, Spring Batch, Spring DAO, Spring boot and spring web services.\nExtensively worked on Core Java concepts and expertise in collection framework\nExtensive experience in developing, implementing and maintaining an AJAX based rich client for improved user experience.\nExceptional understanding in JavaScript framework like JQuery\nExpertise in object-oriented JavaScript and framework such as AngularJS, NodeJS Familiar with Express JS and Meteor JS web application framework.\nGood Understanding of Document Object Model (DOM) and DOM Functions\nImplemented SOAP based web services by using various API’s like AXIS2, Apache CXF, strong knowledge in using WSDL and UDDI.\nWorked with JERSEY, CXF API to implement RESTFul web services, strong knowledge on JAX-RS annotations. \nExpertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate and i-batis framework.\nExperience in database programming using Oracle, SQL Server, DB2, MySQL and proficiency in developing SQL in JDBC as well as client server environments.\nExpertise in noSQL database like \t\n Good knowledge on cloud AWS, EC2, S3, RDS, Load Balancer, Auto Scaling, SQS and Amazon Simple DB.\nWorked on different Applications and Web Servers like IBM Web Sphere, BEA Web Logic, Apache Tomcat and JBoss.\nWell versed with J2EE Design Patterns like DAO, Service Locator, Value Object, Business Delegate Pattern, Front Controller Pattern, Singleton, MVC, Session facade etc\nPerformed Integration and deployment of applications using ANT, Maven, Hudson, Quick Build and Jenkins and worked on repositories like CVS, Clear Case, SVN, GIT\nWorked on Selenium to perform Automation testing and Performance testing is done by using Jmeter and Load Runner.\nDesigned and developed various integration components using JMS, MQ Series and Apache Kafka.\nStrong knowledge on working with Jasmin-Karma, Protractor for client side unit testing  \nExperience on working build tools like Grunt, Gulp.\nWorked with the package managers such as NPM and Bower.\nExpertise in writing JUnit test cases using Junit Frameworks like Mockito, JMock\nTechnical Skills:\nProfessional Experience:    \nClient: Cummins, Columbia-IN                                                                                                  Nov 2015 to till date\t\t\t\t\t\t\nRole: Full stack Java developer\nDescription:\nCummins corporation that designs, manufactures, and distributes engines, filtration, and power generation products. In collaboration with third party client at Cummins IT infrastructure team we came up with an enterprise application using ConceptWave Order Care at enterprise level and create catalog management tool for 3rd party client. \nResponsibilities:\nDeveloped Single page applications (SPA) using Angular.JS 2.0, HTML5, CSS3 using Saas for websites requiring data-rich and instant feedback on interaction.\nDeveloped Client side script using AngularJS 2.0 to consume data from Web services.\nCreated Angular JS controllers and services.\nUsed angular js 2.0 filters for filter functionality in search box and Iterator functionalities.\nBuilt great user interfaces with Modern Javascript Frameworks like React JS\nInstalled node.js and utilized the npm with Grunt for the build\nUsed Node.js Bower for UI Dependency management. Worked on bower.json and bower.rc files.\nDeveloped Server side scripting using Node JS.\nImplemented Cassandra as the NoSQL Database for JavaScript part of the application\nImplemented CRUD operations from Node JS to Cassandra by connecting them using Cassandra driver.\nUsed the Rest Templates in the spring services to call the Rest web services.\nUsed Web Services (SOAP & WSDL) to exchange data between portal and other modules \nUsed Spring framework and J2EE components, Utilized IoC, AOP and DAO modules. Developed controller classes, backend processes, complex services and database interaction Added security for service layer methods using Spring Security.\nConfigured faces-config.xml and applicationcontext.xml for Spring AOP Integration.\nDeveloped microservices as part of application architecture using Spring Boot.\nDeveloped Rest Controllers and Request Mapping methods using Spring Boot.\nDeveloped loosely coupled architecture and standalone components using Spring Boot.\nImplemented RESTFUL Web Service using JAX-RS and Jersey framework.\nIn order to support messaging system Apache Kafka is used instead of JMS services.\nWorked on Creating Kafka Adaptors for decoupling the application dependency.\nInvolved in creating the Hibernate POJO Objects and mapped from Java to MYSQL Database using Hibernate ORM.\nUsed Elasticsearch for analytics and reporting of the data.\nImplemented Elasticsearch for transport API.\nPerformed unit testing of the Angular JS part with the help of Karma, Jasmine testing framework.\nUsed Maven tool for dependency management and used Jenkins for continues integration\nWorked on creating and publishing Docker images to Docker registries and from Docker registries to azure containers\nMaintained the user accounts, RDS, VPC, RDB, Dynamo DB, SES, SQS and SNS services in AWS cloud. \nInvolved in deploying systems on Amazon Web Services Infrastructure services EC2, S3, SQS, Cloud Formation. \nDeveloped queues using AWS SQS with JMS for services to subscribe and listen events. Implemented logic to listen and to subscribe events.\nEnvironment:  Selenium, Angular js, Node js, Backbone js, React js, IOP, Spring Batch, Spring boot, Elasticsearch, Eclipse, Oracle, JBoss, karma, Jasmine, Jax-rs, Jersey, SOAP UI, AWS, EC2, S3, SQS , JSP, Servlets, JDBC, Hibernate, XML, XSLT, CSS, Saas, DOM, Grunt, GWT, Junit , GIT, Oracle1, TOAD, UNIX, Maven, Jenkins, Agile Scrum, JIRA\nClient: Abbvie Labs, Chicago-IL \t\t\t\t\t\tApr 2014 – Nov 2015\nRole: Sr. Java/UI Developer\nDescription: \nAbbvie is a pharmaceutical company that discovers, develops and markets both biopharmaceuticals and small molecule drugs. It originated in 2013 as a spin-off Abbott Laboratories. Health care application that can discover and advance innovative therapies and meet the health needs of people and societies around the globe. Involved in developing both front end and back end modules.\nResponsibilities:\nInvolved in the requirements review, Design, Development, Unit testing and Bug fixing of the system and used Agile Development methodology.\nInvolved in developing the pages using HTML 5, CSS3, Bootstrap and worked on CSS3 effects to enhance user experience as per the client requirements.\nUsed Flux application architecture to build client -side web application.\nDesigned modular and reusable React components using Flux Architecture\nImplemented client side interface using React JS.\nDeveloped various screens for the front end using React JS and used various predefined components from NPM (Node Package Manager) and Redux library.\nDeveloped complex SPA using React Router.\nUsed Backbone JS to optimize in-browser use and to load the module and to improve the Speed\nExtensively used JQUERY, JSON, AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations\nBuilt backend REST API with Node.js, Express.js.\nImplemented modules into Node JS to integrate with designs and requirements.\nManaged software packages of Node JS with NPM and the project through Github.\nUsed Async Module to control the execution flow of call backs.\nDeveloped server side application by using Node JS and Express JS for interacting with No SQL Database Mongo DB.\nImplemented Mongo DB to store and handle unstructured data.\nUsed Mongoose connector as the Driver to establish Express JS to Mongo DB connection.\nUsed Webpack module bundler for splitting the code base into multiple bundles with reactJs.\nWorked on Webpack to create the graph of application dependencies.\nUsed Babel to create the pipeline which is built out of plugins also converted JSX syntax using Bable.\nResponsible for implementing the business requirements using Spring Framework\nInvolved in user interface design using Spring Boot Framework and web based user controls\nWorked on Spring Controllers and configured using annotations to handle the presentation requests\nDeployed and consumed web services based on REST protocols using Jaxb and Jersey api.\nUsed JSTL for developing the JSP.\nUsed JAXB, JAXP for parsing auditing information in xml format\nUsed Hibernate for connecting to the database and mapping the entities by using hibernate annotations.\nWritten automation scripts using Java and Selenium and implementing automation scripts using Sauce Labs. Used jmeter for performance testing\nPerformed unit testing using JUNIT framework and Clover tools\nConfigured Log4j for adding the debugging information in the code base.\nExtensively used Mocha and Chai JavaScript unit Testing tools for testing JavaScript pages.\nInvolved in designing and developing of Object Oriented methodologies using UML and Use Case, Class.\nUsed Putty for UNIX login to check the server logs. \nProficient in using SVN version control and wrote build and deployment scripting using ANT\nSupported the application in production and used Splunk to review the production logs.\nUsed Jenkins for Continuous Integration and deployment into WebLogic application Server.\nDeployed and Monitored Micro Services Using Spring Cloud Foundry Also Managed Domains and Routes with the Cloud Foundry.\nEnvironment: Java, J2EE, jmeter, Servlets, JSP, JDBC, Spring MVC, Angular js, Node js, Backbone js, Bable , webpack, , Hibernate, Rest, Web Services, Mongo DB, Apache Ant, CVS, Design Patterns, HTML, Java Script, AJAX, XML, SQL, PL/SQL, Oracle, SQL Developer, Mocha ,chai, JUnit, JIRA, cloud foundry, UNIX\nClient: Taghleef Industries – Wilmington, DE\t\t\t\t                    Mar 2013 – Mar 2014\nRole: Sr. Java Developer\nDescription: \nFinancial Accounting software is an Intranet application, which enables to maintain the accounts and access them from various branch offices. The entire package is broadly divided into five modules, which include financial module, Orders module, Inventory module, invoicing module and Networking module. The data entered in one module updates all the other related modules.\nResponsibilities:\nDeveloped web interface for Users Modules using JSP, HTML, XML, CSS, Java Script and AJAX with spring frame work\nImplemented User Friendly UI design with HTML, CSS and JavaScript for client side validation and form submission functions.\nCreated Single Page Application with loading multiple views using route services and adding more user experience to make it more dynamic by using AngularJS framework.\nUsed AngularJs and jQuery to make the pages dynamic and two way data binding.\nDesigned user friendly navigation for displaying various sections of data using JQuery.\nCreated Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security.\nUsed Spring MVC framework for transfer the data from GUI to DB with Ajax frame work.\nImplemented Spring IOC & AOP.\nUsed Spring MVC, Spring Batch Template for object-to-relational mapping from the database and creating POJOs.\nIntegrated and implemented Hibernate with spring frame work to perform ORM for database connectivity to DB2.\nImplemented Restful services by Jax R s, CXF API’s\nUsed JMS for programs to create, send and receive messages by using different modules like publisher, subscriber messaging and point to point messaging using IBM-MQ-Series\nImplemented DAO (Data Access Object) design pattern to access data from DB2\nDesigned OAUTH framework for authorization flow for web services.\nWorked with Web Services using SOAP (WSDL), tested using SOAP UI tool and REST (WADL).\nDeveloped using J2EE design patterns like Command Pattern, Session Facade, Business Delegate, Service Locator, Data Access Object and Value Object Patterns.\nUsed WebSphere Application Server to deploy the build.\nUsed log4j for debugging the application.\nInvolved in Configuration of data source and deployment of application in development, Test and Production.\nUsed Drools for implementing business rules and validations.\nDeveloped Applications using Rule Engines, Drools. Explored Drools modules such as Drools Expert, DroolsFusion, and Drools Flow.\nGIT for version Controlling.\nExperience in writing unit test cases using Jasmine and Karma framework\nUsed J-Unit test cases to test the application and performed random checks to analysis the portability, reliability and flexibility of the project.\nDevelopment process the Scrum, Iterative Agile methodologies for web Application\nInvolved in configuration setting for Development, Test, and Production Environment.\nEnvironment: Eclipse, Java API, Hibernate, JDK, JDBC, JMS, Message Queues, Web services, iBatis, UML, XML,DB2,Web Sphere, Toad, Rest Services, Git, CXF, HTML, XHTML,CSS, JavaScript, Jenkins, log4j, SVN, JUnit, J2ME  and Windows  \nClient: PNC Bank- Pittsburgh, PA\t                                                            \tJan 2012 – Feb 2013\nRole: Java/UI Developer\nDescription: \nThis project is developed mainly to serve the huge domain of customers. The application also allows bank employees to open a new account for customers or access, modify the customer account information based upon their role. The application offers various functionalities, some of the them include Transfer Funds, Make a Payment, Set up Automatic Payments, Keep the Change, Receive the bills electronically, Request E-mail Notifications, Balance Enquiry. Etc.\nResponsibilities:\nStrongly involved in the design and development phases of the web applications and operated as an effective team member.\nDeveloped the responsive UI web pages using XHTML, jQuery, HTML, CSS, Java Script, JSF, Prime Faces, and AJAX.\nCreated web pages with CSS Box model, animations & transitions, web fonts and content & counters.\nInvolved in Design UI for Member module using JSF Framework.\nCreated Web Service using SOAP, to allow application and services to connect to them over the Internet.\nUsed Spring Core for dependency injection/Inversion of control (IOC) and implemented using Spring Annotations\nDeveloped a batch processing system with REST based APIs, using Spring Batch, integrated with Quartz scheduling.\nWorking on implementing JSF-Prime faces tree for the data model viewer alternative to visio tool. \nUsed JAX WS Security to secure the web services.\nResponsible to solve the problems using JavaScript and can hand-code it effortlessly.\nCleaned up and rewrote front end using HTML, JavaScript and CSS to meet validation requirements.\nImplemented source controls using JavaScript and JQuery and designed the functionalities based on the templates which are intuitive to the users.\nProficiently used JQuery UI widgets which reduced the amount of hand-coded program and easily maintained its modularity. \nUsed JQuery in developing the Rich Internet Applications (RIA) with AJAX mechanism and JSON as a data exchange tool.\nUsed AJAX effectively for fetching data from the Rest APIs.\nTaken care of Java multithreading in common java classes / library. Used multithreading in programming to improve overall performance.\nDeveloped and deployed Web Services in Apache CXF framework using JAX-WS.\nImplemented Web Services to integrate between different applications using SOAP services using JAX-WS.\nImplemented Oracle DB as the underlying Database of the application.\nUsed Hibernate for the Persistence layer of the application for the database connectivity.\nImplemented DAO design pattern for providing persistence as a service to the business layer.\nManaging messaging Topics using IBM MQ messaging broker.\nConfigured Weblogic Application server and deployed the web components.\nMaven was used for the entire build process and Hudson for Continuous Integration\nUsed Rational Clear Case for version control and PowerMock for unit testing. \nGenerated Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose.\nSubstantially experienced in the development methodology involved with the scrum method and the sprint cycles.\nWrote business rules using Drools and business logic processing customs declarations.\nEnvironment: HTML 4.01, CSS2, JavaScript, JQuery, Debugging, Eclipse Java SDK , MVC, Entity Bean, Web logic, JSP, Servlets, JSTL, Clear case, PowerMock, JavaScript, and Oracle, Hudson, TOAD, Maven\nClient: Barclays Bank\t\t\t\t       Feb 2010 - Nov 2011\nRole: Java Developer\nDescription:\nBarclays Bank is a leading financial service company. It provides online banking for customers to set up online bill payment from their Debit Card/Current Account to various merchants. Customer has various facilities like Merchant registration, Recurring Payment, Schedule a payment, Fund Transfer, Bill Info, etc. Bank is enhancing its web interface with more features and functionality to its customers.\nResponsibilities:\nActively involved in the Requirement gathering for the enhancements to the existing project. \nInvolved in Struts framework code implementation \nExtensively worked with Servlets and Struts based multitier applications in developing J2EE components. \nImplemented Action Servlet in the Struts framework to perform request mapping.\nUsed JavaScript, HTML, and jQuery for forms validations.\nDesign and Development of GUI using JSPs, JSP custom tags, Struts tags, HTML, DHTML, CSS, Applets and JavaScript. \nUsed JSTL tag library in JSP's.\nComplete Involvement in development and validation of screens using HTML and JavaScript. \nWorked on web pages with JSP, Ajax, JavaScript, CSS, DHTMLand XHTML. \nUsed core java technologies like Multi-Threading and synchronization in the application.\nInvolved in development of SOAP Web services using Apache Axis to extract client related data from databases \nCreated stubs from the WSDL for using the methods available in the Web Service. \nUsed JPA ORM frameworks for database connectivity.\nDeveloped Session, Entity beans (EJB) for crucial business Logic.\nUsed Java Messaging Services (JMS) for reliable and asynchronous exchange of important information such as payment status report on IBM WebSphere MQ messaging system.\nDeployed web, presentation and business components on Apache Tomcat Application Servers. \nUsed various design patterns like Session Facade, Singleton and Factory patterns in the application.\nUsed log4j to log messages depending on the messages type and level. \nAnalyzed client requirements, developed complex SQL query using relational database over MYSQL.\nCreated and managed data and tables using PL/SQL.\nInvolved in the analysis, design, and development and testing phases of Software Development Lifecycle (SDLC) using Agile and Waterfall methodology. \nDeployed the Web application using ANT build script. \nResponsible for Unit Testing with Junit, integration testing of software. \nUsed Rational Clear Case for version controlling and used diff merging, check-ins, check-outs, and adding new work files to source control and labeling. \nInvolved in development and deployment of application on UNIX environment. \nWorked with Unix shell scripting in the process of deployment.\nEnvironment: Struts, Hibernate, Servlets, JSP, HTML, Ajax, XML, JavaScript, CSS, DHTML, XHTML, ANT, Junit, JDBC, JBoss, Oracle, Clear case, Apache, log4j, JSTL, PL/SQL, SOAP, WSDL, Unix.\nClient: Computer Management Services Limited\t\t\t\t\t                     Jan 2009 - Dec 2010\nRole: Java Developer\nDescription: \nThis Project automates the Maintenance, Auditing of Employees academic, Financial and payroll Information and having all the details of the employee’s benefits; In addition to that this application gives the Information of the Organization structure and total maintainer details of the organization\nResponsibilities\nDesign Implementation of GUI using HTML, JSP, Tiles, Validator and Java Script for front-end validations.\nDeveloped Java Sever Pages, Tiles, Validator, Action classes and EJBs for various user transactions.\nDesigning of Java Servlets and Objects using J2EE standards.\nDesigned the project by using MVC framework.\nUsed JSP for presentation layer, entity beans as the model to represent the persistent data and interacted with Oracle database as per MVC Architecture.\nCreating custom tags for JSP for maximum re-usability of user interface components.\nUsed JDBC calls in the Enterprise Java Beans (EJB) to access Oracle Database.\nDeveloped the XML Schema for the data maintenance and structures.\nWorked on building the persistence using JPA\nUsed the XML Parsers like SAX parser to parse the data.\nImplemented EJB session beans, messaging technologies like Message Driven Bean, JMS.\nInvolved to develop Multithreading for improving CPU time.\nUsed multithreading process to convert data\nUsed JUnit framework for unit testing of application and Log4j to capture the log that includes runtime exceptions\nCoded ANT build scripts to build and deploy the application on WebSphere \nEnvironment: Core Java, J2EE, Servlets, Multithreading, JSP, Struts, EJB, JMS, UML, Rational Rose, MQ Series, CVS, Oracle, Eclipse, Web Logic, HTML, JavaScript, JUnit, ANT, XML SAX, DOM, XSL.\nEducation: Bachelor’s in Computer Science & Engineering",
  "cleaned_text": "Candidate Email Phone Summary plus years of IT experience in various web-based, Enterprise, Client Server and Distributed applications using Java J EE. Have extensive knowledge and working experience on Software Development Life Cycle SDLC , Service-Oriented architecture SOA , Object Oriented Analysis and Design OOAD , UML and J EE Architecture. Experienced in design and development of web applications using the technologies like HTML, CSS, JavaScript, Bootstrap, AngularJS and Backbone JS Implemented various Ajax Frameworks such as jQuery, DOJO, JSON. Experience in developing Web Applications with various frameworks, Jakarta Struts . , Spring, Spring MVC, JSF, Servlet, JSP, JSTL and Filters. Worked with various modules of spring framework like Spring IOC, Spring AOP, Spring Batch, Spring DAO, Spring boot and spring web services. Extensively worked on Core Java concepts and expertise in collection framework Extensive experience in developing, implementing and maintaining an AJAX based rich client for improved user experience. Exceptional understanding in JavaScript framework like JQuery Expertise in object-oriented JavaScript and framework such as AngularJS, NodeJS Familiar with Express JS and Meteor JS web application framework. Good Understanding of Document Object Model DOM and DOM Functions Implemented SOAP based web services by using various APIs like AXIS , Apache CXF, strong knowledge in using WSDL and UDDI. Worked with JERSEY, CXF API to implement RESTFul web services, strong knowledge on JAX-RS annotations. Expertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate and i-batis framework. Experience in database programming using Oracle, SQL Server, DB , MySQL and proficiency in developing SQL in JDBC as well as client server environments. Expertise in noSQL database like Good knowledge on cloud AWS, EC , S , RDS, Load Balancer, Auto Scaling, SQS and Amazon Simple DB. Worked on different Applications and Web Servers like IBM Web Sphere, BEA Web Logic, Apache Tomcat and JBoss. Well versed with J EE Design Patterns like DAO, Service Locator, Value Object, Business Delegate Pattern, Front Controller Pattern, Singleton, MVC, Session facade etc Performed Integration and deployment of applications using ANT, Maven, Hudson, Quick Build and Jenkins and worked on repositories like CVS, Clear Case, SVN, GIT Worked on Selenium to perform Automation testing and Performance testing is done by using Jmeter and Load Runner. Designed and developed various integration components using JMS, MQ Series and Apache Kafka. Strong knowledge on working with Jasmin-Karma, Protractor for client side unit testing Experience on working build tools like Grunt, Gulp. Worked with the package managers such as NPM and Bower. Expertise in writing JUnit test cases using Junit Frameworks like Mockito, JMock Technical Skills Professional Experience Client Cummins, Columbia-IN Nov to till date Role Full stack Java developer Description Cummins corporation that designs, manufactures, and distributes engines, filtration, and power generation products. In collaboration with third party client at Cummins IT infrastructure team we came up with an enterprise application using ConceptWave Order Care at enterprise level and create catalog management tool for rd party client. Responsibilities Developed Single page applications SPA using Angular.JS . , HTML , CSS using Saas for websites requiring data-rich and instant feedback on interaction. Developed Client side script using AngularJS . to consume data from Web services. Created Angular JS controllers and services. Used angular js . filters for filter functionality in search box and Iterator functionalities. Built great user interfaces with Modern Javascript Frameworks like React JS Installed node.js and utilized the npm with Grunt for the build Used Node.js Bower for UI Dependency management. Worked on bower.json and bower.rc files. Developed Server side scripting using Node JS. Implemented Cassandra as the NoSQL Database for JavaScript part of the application Implemented CRUD operations from Node JS to Cassandra by connecting them using Cassandra driver. Used the Rest Templates in the spring services to call the Rest web services. Used Web Services SOAP & WSDL to exchange data between portal and other modules Used Spring framework and J EE components, Utilized IoC, AOP and DAO modules. Developed controller classes, backend processes, complex services and database interaction Added security for service layer methods using Spring Security. Configured faces-config.xml and applicationcontext.xml for Spring AOP Integration. Developed microservices as part of application architecture using Spring Boot. Developed Rest Controllers and Request Mapping methods using Spring Boot. Developed loosely coupled architecture and standalone components using Spring Boot. Implemented RESTFUL Web Service using JAX-RS and Jersey framework. In order to support messaging system Apache Kafka is used instead of JMS services. Worked on Creating Kafka Adaptors for decoupling the application dependency. Involved in creating the Hibernate POJO Objects and mapped from Java to MYSQL Database using Hibernate ORM. Used Elasticsearch for analytics and reporting of the data. Implemented Elasticsearch for transport API. Performed unit testing of the Angular JS part with the help of Karma, Jasmine testing framework. Used Maven tool for dependency management and used Jenkins for continues integration Worked on creating and publishing Docker images to Docker registries and from Docker registries to azure containers Maintained the user accounts, RDS, VPC, RDB, Dynamo DB, SES, SQS and SNS services in AWS cloud. Involved in deploying systems on Amazon Web Services Infrastructure services EC , S , SQS, Cloud Formation. Developed queues using AWS SQS with JMS for services to subscribe and listen events. Implemented logic to listen and to subscribe events. Environment Selenium, Angular js, Node js, Backbone js, React js, IOP, Spring Batch, Spring boot, Elasticsearch, Eclipse, Oracle, JBoss, karma, Jasmine, Jax-rs, Jersey, SOAP UI, AWS, EC , S , SQS , JSP, Servlets, JDBC, Hibernate, XML, XSLT, CSS, Saas, DOM, Grunt, GWT, Junit , GIT, Oracle , TOAD, UNIX, Maven, Jenkins, Agile Scrum, JIRA Client Abbvie Labs, Chicago-IL Apr Nov Role Sr. Java UI Developer Description Abbvie is a pharmaceutical company that discovers, develops and markets both biopharmaceuticals and small molecule drugs. It originated in as a spin-off Abbott Laboratories. Health care application that can discover and advance innovative therapies and meet the health needs of people and societies around the globe. Involved in developing both front end and back end modules. Responsibilities Involved in the requirements review, Design, Development, Unit testing and Bug fixing of the system and used Agile Development methodology. Involved in developing the pages using HTML , CSS , Bootstrap and worked on CSS effects to enhance user experience as per the client requirements. Used Flux application architecture to build client -side web application. Designed modular and reusable React components using Flux Architecture Implemented client side interface using React JS. Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux library. Developed complex SPA using React Router. Used Backbone JS to optimize in-browser use and to load the module and to improve the Speed Extensively used JQUERY, JSON, AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations Built backend REST API with Node.js, Express.js. Implemented modules into Node JS to integrate with designs and requirements. Managed software packages of Node JS with NPM and the project through Github. Used Async Module to control the execution flow of call backs. Developed server side application by using Node JS and Express JS for interacting with No SQL Database Mongo DB. Implemented Mongo DB to store and handle unstructured data. Used Mongoose connector as the Driver to establish Express JS to Mongo DB connection. Used Webpack module bundler for splitting the code base into multiple bundles with reactJs. Worked on Webpack to create the graph of application dependencies. Used Babel to create the pipeline which is built out of plugins also converted JSX syntax using Bable. Responsible for implementing the business requirements using Spring Framework Involved in user interface design using Spring Boot Framework and web based user controls Worked on Spring Controllers and configured using annotations to handle the presentation requests Deployed and consumed web services based on REST protocols using Jaxb and Jersey api. Used JSTL for developing the JSP. Used JAXB, JAXP for parsing auditing information in xml format Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations. Written automation scripts using Java and Selenium and implementing automation scripts using Sauce Labs. Used jmeter for performance testing Performed unit testing using JUNIT framework and Clover tools Configured Log j for adding the debugging information in the code base. Extensively used Mocha and Chai JavaScript unit Testing tools for testing JavaScript pages. Involved in designing and developing of Object Oriented methodologies using UML and Use Case, Class. Used Putty for UNIX login to check the server logs. Proficient in using SVN version control and wrote build and deployment scripting using ANT Supported the application in production and used Splunk to review the production logs. Used Jenkins for Continuous Integration and deployment into WebLogic application Server. Deployed and Monitored Micro Services Using Spring Cloud Foundry Also Managed Domains and Routes with the Cloud Foundry. Environment Java, J EE, jmeter, Servlets, JSP, JDBC, Spring MVC, Angular js, Node js, Backbone js, Bable , webpack, , Hibernate, Rest, Web Services, Mongo DB, Apache Ant, CVS, Design Patterns, HTML, Java Script, AJAX, XML, SQL, PL SQL, Oracle, SQL Developer, Mocha ,chai, JUnit, JIRA, cloud foundry, UNIX Client Taghleef Industries Wilmington, DE Mar Mar Role Sr. Java Developer Description Financial Accounting software is an Intranet application, which enables to maintain the accounts and access them from various branch offices. The entire package is broadly divided into five modules, which include financial module, Orders module, Inventory module, invoicing module and Networking module. The data entered in one module updates all the other related modules. Responsibilities Developed web interface for Users Modules using JSP, HTML, XML, CSS, Java Script and AJAX with spring frame work Implemented User Friendly UI design with HTML, CSS and JavaScript for client side validation and form submission functions. Created Single Page Application with loading multiple views using route services and adding more user experience to make it more dynamic by using AngularJS framework. Used AngularJs and jQuery to make the pages dynamic and two way data binding. Designed user friendly navigation for displaying various sections of data using JQuery. Created Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security. Used Spring MVC framework for transfer the data from GUI to DB with Ajax frame work. Implemented Spring IOC & AOP. Used Spring MVC, Spring Batch Template for object-to-relational mapping from the database and creating POJOs. Integrated and implemented Hibernate with spring frame work to perform ORM for database connectivity to DB . Implemented Restful services by Jax R s, CXF APIs Used JMS for programs to create, send and receive messages by using different modules like publisher, subscriber messaging and point to point messaging using IBM-MQ-Series Implemented DAO Data Access Object design pattern to access data from DB Designed OAUTH framework for authorization flow for web services. Worked with Web Services using SOAP WSDL , tested using SOAP UI tool and REST WADL . Developed using J EE design patterns like Command Pattern, Session Facade, Business Delegate, Service Locator, Data Access Object and Value Object Patterns. Used WebSphere Application Server to deploy the build. Used log j for debugging the application. Involved in Configuration of data source and deployment of application in development, Test and Production. Used Drools for implementing business rules and validations. Developed Applications using Rule Engines, Drools. Explored Drools modules such as Drools Expert, DroolsFusion, and Drools Flow. GIT for version Controlling. Experience in writing unit test cases using Jasmine and Karma framework Used J-Unit test cases to test the application and performed random checks to analysis the portability, reliability and flexibility of the project. Development process the Scrum, Iterative Agile methodologies for web Application Involved in configuration setting for Development, Test, and Production Environment. Environment Eclipse, Java API, Hibernate, JDK, JDBC, JMS, Message Queues, Web services, iBatis, UML, XML,DB ,Web Sphere, Toad, Rest Services, Git, CXF, HTML, XHTML,CSS, JavaScript, Jenkins, log j, SVN, JUnit, J ME and Windows Client PNC Bank- Pittsburgh, PA Jan Feb Role Java UI Developer Description This project is developed mainly to serve the huge domain of customers. The application also allows bank employees to open a new account for customers or access, modify the customer account information based upon their role. The application offers various functionalities, some of the them include Transfer Funds, Make a Payment, Set up Automatic Payments, Keep the Change, Receive the bills electronically, Request E-mail Notifications, Balance Enquiry. Etc. Responsibilities Strongly involved in the design and development phases of the web applications and operated as an effective team member. Developed the responsive UI web pages using XHTML, jQuery, HTML, CSS, Java Script, JSF, Prime Faces, and AJAX. Created web pages with CSS Box model, animations & transitions, web fonts and content & counters. Involved in Design UI for Member module using JSF Framework. Created Web Service using SOAP, to allow application and services to connect to them over the Internet. Used Spring Core for dependency injection Inversion of control IOC and implemented using Spring Annotations Developed a batch processing system with REST based APIs, using Spring Batch, integrated with Quartz scheduling. Working on implementing JSF-Prime faces tree for the data model viewer alternative to visio tool. Used JAX WS Security to secure the web services. Responsible to solve the problems using JavaScript and can hand-code it effortlessly. Cleaned up and rewrote front end using HTML, JavaScript and CSS to meet validation requirements. Implemented source controls using JavaScript and JQuery and designed the functionalities based on the templates which are intuitive to the users. Proficiently used JQuery UI widgets which reduced the amount of hand-coded program and easily maintained its modularity. Used JQuery in developing the Rich Internet Applications RIA with AJAX mechanism and JSON as a data exchange tool. Used AJAX effectively for fetching data from the Rest APIs. Taken care of Java multithreading in common java classes library. Used multithreading in programming to improve overall performance. Developed and deployed Web Services in Apache CXF framework using JAX-WS. Implemented Web Services to integrate between different applications using SOAP services using JAX-WS. Implemented Oracle DB as the underlying Database of the application. Used Hibernate for the Persistence layer of the application for the database connectivity. Implemented DAO design pattern for providing persistence as a service to the business layer. Managing messaging Topics using IBM MQ messaging broker. Configured Weblogic Application server and deployed the web components. Maven was used for the entire build process and Hudson for Continuous Integration Used Rational Clear Case for version control and PowerMock for unit testing. Generated Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose. Substantially experienced in the development methodology involved with the scrum method and the sprint cycles. Wrote business rules using Drools and business logic processing customs declarations. Environment HTML . , CSS , JavaScript, JQuery, Debugging, Eclipse Java SDK , MVC, Entity Bean, Web logic, JSP, Servlets, JSTL, Clear case, PowerMock, JavaScript, and Oracle, Hudson, TOAD, Maven Client Barclays Bank Feb - Nov Role Java Developer Description Barclays Bank is a leading financial service company. It provides online banking for customers to set up online bill payment from their Debit Card Current Account to various merchants. Customer has various facilities like Merchant registration, Recurring Payment, Schedule a payment, Fund Transfer, Bill Info, etc. Bank is enhancing its web interface with more features and functionality to its customers. Responsibilities Actively involved in the Requirement gathering for the enhancements to the existing project. Involved in Struts framework code implementation Extensively worked with Servlets and Struts based multitier applications in developing J EE components. Implemented Action Servlet in the Struts framework to perform request mapping. Used JavaScript, HTML, and jQuery for forms validations. Design and Development of GUI using JSPs, JSP custom tags, Struts tags, HTML, DHTML, CSS, Applets and JavaScript. Used JSTL tag library in JSP s. Complete Involvement in development and validation of screens using HTML and JavaScript. Worked on web pages with JSP, Ajax, JavaScript, CSS, DHTMLand XHTML. Used core java technologies like Multi-Threading and synchronization in the application. Involved in development of SOAP Web services using Apache Axis to extract client related data from databases Created stubs from the WSDL for using the methods available in the Web Service. Used JPA ORM frameworks for database connectivity. Developed Session, Entity beans EJB for crucial business Logic. Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report on IBM WebSphere MQ messaging system. Deployed web, presentation and business components on Apache Tomcat Application Servers. Used various design patterns like Session Facade, Singleton and Factory patterns in the application. Used log j to log messages depending on the messages type and level. Analyzed client requirements, developed complex SQL query using relational database over MYSQL. Created and managed data and tables using PL SQL. Involved in the analysis, design, and development and testing phases of Software Development Lifecycle SDLC using Agile and Waterfall methodology. Deployed the Web application using ANT build script. Responsible for Unit Testing with Junit, integration testing of software. Used Rational Clear Case for version controlling and used diff merging, check-ins, check-outs, and adding new work files to source control and labeling. Involved in development and deployment of application on UNIX environment. Worked with Unix shell scripting in the process of deployment. Environment Struts, Hibernate, Servlets, JSP, HTML, Ajax, XML, JavaScript, CSS, DHTML, XHTML, ANT, Junit, JDBC, JBoss, Oracle, Clear case, Apache, log j, JSTL, PL SQL, SOAP, WSDL, Unix. Client Computer Management Services Limited Jan - Dec Role Java Developer Description This Project automates the Maintenance, Auditing of Employees academic, Financial and payroll Information and having all the details of the employees benefits In addition to that this application gives the Information of the Organization structure and total maintainer details of the organization Responsibilities Design Implementation of GUI using HTML, JSP, Tiles, Validator and Java Script for front-end validations. Developed Java Sever Pages, Tiles, Validator, Action classes and EJBs for various user transactions. Designing of Java Servlets and Objects using J EE standards. Designed the project by using MVC framework. Used JSP for presentation layer, entity beans as the model to represent the persistent data and interacted with Oracle database as per MVC Architecture. Creating custom tags for JSP for maximum re-usability of user interface components. Used JDBC calls in the Enterprise Java Beans EJB to access Oracle Database. Developed the XML Schema for the data maintenance and structures. Worked on building the persistence using JPA Used the XML Parsers like SAX parser to parse the data. Implemented EJB session beans, messaging technologies like Message Driven Bean, JMS. Involved to develop Multithreading for improving CPU time. Used multithreading process to convert data Used JUnit framework for unit testing of application and Log j to capture the log that includes runtime exceptions Coded ANT build scripts to build and deploy the application on WebSphere Environment Core Java, J EE, Servlets, Multithreading, JSP, Struts, EJB, JMS, UML, Rational Rose, MQ Series, CVS, Oracle, Eclipse, Web Logic, HTML, JavaScript, JUnit, ANT, XML SAX, DOM, XSL. Education Bachelors in Computer Science & Engineering",
  "preprocessed_text": "candidate summary plus year experience various web-based enterprise client server distributed application using java ee extensive knowledge working experience software development life cycle sdlc service-oriented architecture soa object oriented analysis design ooad uml ee architecture experienced design development web application using technology like html cs javascript bootstrap angularjs backbone j implemented various ajax framework jquery dojo json experience developing web application various framework jakarta strut spring spring mvc jsf servlet jsp jstl filter worked various module spring framework like spring ioc spring aop spring batch spring dao spring boot spring web service extensively worked core java concept expertise collection framework extensive experience developing implementing maintaining ajax based rich client improved user experience exceptional understanding javascript framework like jquery expertise object-oriented javascript framework angularjs nodejs familiar express j meteor j web application framework good understanding document object model dom dom function implemented soap based web service using various apis like axis apache cxf strong knowledge using wsdl uddi worked jersey cxf api implement restful web service strong knowledge jax-rs annotation expertise implementing persistence logic using jdbc jpa spring jdbc hibernate i-batis framework experience database programming using oracle sql server db mysql proficiency developing sql jdbc well client server environment expertise nosql database like good knowledge cloud aws ec rds load balancer auto scaling sqs amazon simple db worked different application web server like ibm web sphere bea web logic apache tomcat jboss well versed ee design pattern like dao service locator value object business delegate pattern front controller pattern singleton mvc session facade etc performed integration deployment application using ant maven hudson quick build jenkins worked repository like cv clear case svn git worked selenium perform automation testing performance testing done using jmeter load runner designed developed various integration component using jms mq series apache kafka strong knowledge working jasmin-karma protractor client side unit testing experience working build tool like grunt gulp worked package manager npm bower expertise writing junit test case using junit framework like mockito jmock technical skill professional experience client cummins columbia-in nov till role full stack java developer description cummins corporation design manufacture distributes engine filtration power generation product collaboration third party client cummins infrastructure team came enterprise application using conceptwave order care enterprise level create catalog management tool rd party client responsibility developed single application spa using angular.js html cs using saas website requiring data-rich instant feedback interaction developed client side script using angularjs consume data web service created angular j controller service used angular j filter filter functionality search box iterator functionality built great user interface modern javascript framework like react j installed node.js utilized npm grunt build used node.js bower ui dependency management worked bower.json bower.rc file developed server side scripting using node j implemented cassandra nosql database javascript part application implemented crud operation node j cassandra connecting using cassandra driver used rest template spring service call rest web service used web service soap wsdl exchange data portal module used spring framework ee component utilized ioc aop dao module developed controller class backend process complex service database interaction added security service layer method using spring security configured faces-config.xml applicationcontext.xml spring aop integration developed microservices part application architecture using spring boot developed rest controller mapping method using spring boot developed loosely coupled architecture standalone component using spring boot implemented restful web service using jax-rs jersey framework order support messaging system apache kafka used instead jms service worked creating kafka adaptor decoupling application dependency involved creating hibernate pojo object mapped java mysql database using hibernate orm used elasticsearch analytics reporting data implemented elasticsearch transport api performed unit testing angular j part help karma jasmine testing framework used maven tool dependency management used jenkins continues integration worked creating publishing docker image docker registry docker registry azure container maintained user account rds vpc rdb dynamo db s sqs sn service aws cloud involved deploying system amazon web service infrastructure service ec sqs cloud formation developed queue using aws sqs jms service subscribe listen event implemented logic listen subscribe event environment selenium angular j node j backbone j react j iop spring batch spring boot elasticsearch eclipse oracle jboss karma jasmine jax-rs jersey soap ui aws ec sqs jsp servlets jdbc hibernate xml xslt cs saas dom grunt gwt junit git oracle toad unix maven jenkins agile scrum jira client abbvie lab chicago-il apr nov role sr. java ui developer description abbvie pharmaceutical company discovers develops market biopharmaceuticals small molecule drug originated spin-off abbott laboratory health care application discover advance innovative therapy meet health need people society around globe involved developing front end back end module responsibility involved requirement review design development unit testing bug fixing system used agile development methodology involved developing page using html cs bootstrap worked cs effect enhance user experience per client requirement used flux application architecture build client -side web application designed modular reusable react component using flux architecture implemented client side interface using react j developed various screen front end using react j used various predefined component npm node package manager redux library developed complex spa using react router used backbone j optimize in-browser use load module improve speed extensively used jquery json ajax dom scripting create interactive web application like message posting auto complete form validation built backend rest api node.js express.js implemented module node j integrate design requirement managed software package node j npm project used async module control execution flow call back developed server side application using node j express j interacting sql database mongo db implemented mongo db store handle unstructured data used mongoose connector driver establish express j mongo db connection used webpack module bundler splitting code base multiple bundle reactjs worked webpack create graph application dependency used babel create pipeline built plugins also converted jsx syntax using bable responsible implementing business requirement using spring framework involved user interface design using spring boot framework web based user control worked spring controller configured using annotation handle presentation request deployed consumed web service based rest protocol using jaxb jersey api used jstl developing jsp used jaxb jaxp parsing auditing information xml format used hibernate connecting database mapping entity using hibernate annotation written automation script using java selenium implementing automation script using sauce lab used jmeter performance testing performed unit testing using junit framework clover tool configured log adding debugging information code base extensively used mocha chai javascript unit testing tool testing javascript page involved designing developing object oriented methodology using uml use case class used putty unix login check server log proficient using svn version control wrote build deployment scripting using ant supported application production used splunk review production log used jenkins continuous integration deployment weblogic application server deployed monitored micro service using spring cloud foundry also managed domain route cloud foundry environment java ee jmeter servlets jsp jdbc spring mvc angular j node j backbone j bable webpack hibernate rest web service mongo db apache ant cv design pattern html java script ajax xml sql pl sql oracle sql developer mocha chai junit jira cloud foundry unix client taghleef industry wilmington de mar mar role sr. java developer description financial accounting software intranet application enables maintain account access various branch office entire package broadly divided five module include financial module order module inventory module invoicing module networking module data entered one module update related module responsibility developed web interface user module using jsp html xml cs java script ajax spring frame work implemented user friendly ui design html cs javascript client side validation form submission function created single application loading multiple view using route service adding user experience make dynamic using angularjs framework used angularjs jquery make page dynamic two way data binding designed user friendly navigation displaying various section data using jquery created logging aspect auditing logging purpose using spring aop implemented security application using spring security used spring mvc framework transfer data gui db ajax frame work implemented spring ioc aop used spring mvc spring batch template object-to-relational mapping database creating pojos integrated implemented hibernate spring frame work perform orm database connectivity db implemented restful service jax cxf apis used jms program create send receive message using different module like publisher subscriber messaging point point messaging using ibm-mq-series implemented dao data access object design pattern access data db designed oauth framework authorization flow web service worked web service using soap wsdl tested using soap ui tool rest wadl developed using ee design pattern like command pattern session facade business delegate service locator data access object value object pattern used websphere application server deploy build used log debugging application involved configuration data source deployment application development test production used drool implementing business rule validation developed application using rule engine drool explored drool module drool expert droolsfusion drool flow git version controlling experience writing unit test case using jasmine karma framework used j-unit test case test application performed random check analysis portability reliability flexibility project development process scrum iterative agile methodology web application involved configuration setting development test production environment environment eclipse java api hibernate jdk jdbc jms message queue web service ibatis uml xml db web sphere toad rest service git cxf html xhtml cs javascript jenkins log svn junit window client pnc bank- pittsburgh pa jan feb role java ui developer description project developed mainly serve huge domain customer application also allows bank employee open new account customer access modify customer account information based role application offer various functionality include transfer fund make payment set automatic payment keep change receive bill electronically e-mail notification balance enquiry etc responsibility strongly involved design development phase web application operated effective team member developed responsive ui web page using xhtml jquery html cs java script jsf prime face ajax created web page cs box model animation transition web font content counter involved design ui member module using jsf framework created web service using soap allow application service connect internet used spring core dependency injection inversion control ioc implemented using spring annotation developed batch processing system rest based apis using spring batch integrated quartz scheduling working implementing jsf-prime face tree data model viewer alternative visio tool used jax w security secure web service responsible solve problem using javascript hand-code effortlessly cleaned rewrote front end using html javascript cs meet validation requirement implemented source control using javascript jquery designed functionality based template intuitive user proficiently used jquery ui widget reduced amount hand-coded program easily maintained modularity used jquery developing rich internet application ria ajax mechanism json data exchange tool used ajax effectively fetching data rest apis taken care java multithreading common java class library used multithreading programming improve overall performance developed deployed web service apache cxf framework using jax-ws implemented web service integrate different application using soap service using jax-ws implemented oracle db underlying database application used hibernate persistence layer application database connectivity implemented dao design pattern providing persistence service business layer managing messaging topic using ibm mq messaging broker configured weblogic application server deployed web component maven used entire build process hudson continuous integration used rational clear case version control powermock unit testing generated use case diagram class diagram sequence diagram using rational rose substantially experienced development methodology involved scrum method sprint cycle wrote business rule using drool business logic processing custom declaration environment html cs javascript jquery debugging eclipse java sdk mvc entity bean web logic jsp servlets jstl clear case powermock javascript oracle hudson toad maven client barclays bank feb nov role java developer description barclays bank leading financial service company provides online banking customer set online bill payment debit card current account various merchant customer various facility like merchant registration recurring payment schedule payment fund transfer bill info etc bank enhancing web interface feature functionality customer responsibility actively involved requirement gathering enhancement existing project involved strut framework code implementation extensively worked servlets strut based multitier application developing ee component implemented action servlet strut framework perform mapping used javascript html jquery form validation design development gui using jsps jsp custom tag strut tag html dhtml cs applet javascript used jstl tag library jsp s. complete involvement development validation screen using html javascript worked web page jsp ajax javascript cs dhtmland xhtml used core java technology like multi-threading synchronization application involved development soap web service using apache axis extract client related data database created stub wsdl using method web service used jpa orm framework database connectivity developed session entity bean ejb crucial business logic used java messaging service jms reliable asynchronous exchange important information payment status report ibm websphere mq messaging system deployed web presentation business component apache tomcat application server used various design pattern like session facade singleton factory pattern application used log log message depending message type level analyzed client requirement developed complex sql query using relational database mysql created managed data table using pl sql involved analysis design development testing phase software development lifecycle sdlc using agile waterfall methodology deployed web application using ant build script responsible unit testing junit integration testing software used rational clear case version controlling used diff merging check-in check-outs adding new work file source control labeling involved development deployment application unix environment worked unix shell scripting process deployment environment strut hibernate servlets jsp html ajax xml javascript cs dhtml xhtml ant junit jdbc jboss oracle clear case apache log jstl pl sql soap wsdl unix client computer management service limited jan dec role java developer description project automates maintenance auditing employee academic financial payroll information detail employee benefit addition application give information organization structure total maintainer detail organization responsibility design implementation gui using html jsp tile validator java script front-end validation developed java sever page tile validator action class ejbs various user transaction designing java servlets object using ee standard designed project using mvc framework used jsp presentation layer entity bean model represent persistent data interacted oracle database per mvc architecture creating custom tag jsp maximum re-usability user interface component used jdbc call enterprise java bean ejb access oracle database developed xml schema data maintenance structure worked building persistence using jpa used xml parser like sax parser parse data implemented ejb session bean messaging technology like message driven bean jms involved develop multithreading improving cpu time used multithreading process convert data used junit framework unit testing application log capture log includes runtime exception coded ant build script build deploy application websphere environment core java ee servlets multithreading jsp strut ejb jms uml rational rose mq series cv oracle eclipse web logic html javascript junit ant xml sax dom xsl education bachelor computer science engineering",
  "statistics": {
    "word_count": 3675,
    "unique_word_count": 1049,
    "avg_word_length": 4.974965986394558,
    "stopword_count": 742
  },
  "metadata": {
    "filename": "Candidate111.docx",
    "file_size": 43676,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:51.913253",
    "input_filename": "Candidate111.json"
  }
}