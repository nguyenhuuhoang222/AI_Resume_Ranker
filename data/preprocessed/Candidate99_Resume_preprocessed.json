{
  "id": "Candidate99_Resume",
  "raw_text": " Candidate 99\nCandidate99.snr87@gmail.com\n(347)-921-1618\nOBJECTIVE\nLooking to contribute design, analysis, development, management, documentation and interpersonal skills to an organization that’s growing, expanding and using leading-edge; Industry-proven technologies. The fundamental aim is to gain a dynamic and challenging role in the areas of Software Engineering in big projects that will offer the best opportunity for further development of my abilities, skills and knowledge in an established substantial firm with long term career growth possibilities. I strongly believe that I will highly contribute to the company development with my individual ability of organized, creative, and self-motivated in multi-tasking and working individually or as a member of the team.\nPROFESSIONAL SUMMARY\nHaving 8 years of Extensive IT experience in all phases of Software Development Life Cycle (SDLC) including Analysis, design, implementation, integration, testing and maintenance of applications using JAVA/J2EE technologies. \nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like Agile Methodology, Waterfall and Test-Driven Development.\nExperience with design patterns like Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern.\nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, jQuery, Ajax, Angular JS and Node.js.\nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, s, Spring Security, Spring Data and Spring Boot. \nExperience with Java 8 features such as lambda expressions, Streams and Parallel Operations.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture and Test-Driven Development.\nHands-on experience on various AWS Cloud services like EC2, optRoute53, EBS, Auto Scaling, VPC, Cloud      Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling.\nHaving Good experience in developing and migrating existing application into cloud-based platforms like Amazon Web Services (AWS) and Pivotal Cloud Foundry. \nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC).\nStrong experience in developing and consuming SOAP and RESTful based Web Services.\nExpertise in XML technologies like DTD, XSD, XSLT and various parsers like DOM, SAX and JAXB.  \nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nExtensive knowledge in developing java persistence API (JPA) layer using Mybatis.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nExpertise in using JDBC and Hibernate for connection and access to databases.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB, Cassandra and Dynamo DB.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\nStrong interpersonal and communication skills and self-motivated individual showing ability to learn and use new technologies and frameworks in considerably less time.\nTechnical Skills:\nPROFESSIONAL EXPERIENCE\nClient: Deutsche Bank\t\t                                                                                                            July’16 – Till Date\nLocation: New York\nRole: Sr. Java Full Stack Developer\nDescription: Deutsche bank spanned across the Europe, Asia and Middle East as well, which mainly involves in Global Transaction Banking, Corporate banking & Securities and Wealth management. Loan application of our project is an n tier based client/server comprehensive solution that makes it possible to receive process and close loans from a broker, over Internet, or at the bank branch. The Loan system resides on a robust database engine, providing clients with proven scalability that will meet the needs of the largest lenders. This centralized database aggregates loan information for all lines of business and sources of origination. \nResponsibilities: \nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development and testing Followed Agile methodology. \nInteracted with the client, provide/take feedback on the features, suggest implement optimal solutions and tailored application to customer needs.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications \nUtilized Java 8 features like Lambda expressions for collection evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, jQuery, Angular 2, and Node JS.\nInvolved in Java code, which generated XML document, which in turn used XSLT to translate the content into HTML to present to GUI.\nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2. \nImplemented Spring IOC to make code loosely coupled and for Dependency Injection and Spring AOP for logging purposes.\n Used Thymeleaf as server side template engine along with spring MVC and spring data repositories.\nDesigned and developed Micro Services business components and RESTful service endpoints using Spring boot.\nImplemented Micro Service Architecture with Spring Boot based RESTful services and consumed SOAP based Web Services. \nImplemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.\nImplemented RESTful Web Services to retrieve data from client side using Micro Services Architecture.\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nImplemented Multithreading, Concurrency, Exception Handling and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperience in Hibernate which includes integrating legacy databases, writing custom CRUD statements, integrating stored procedures and functions and also performed polymorphic associations.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nExperienced working with database setup and maintenance on AWS EC2.\nCurrently working on Docker container implementation for the Enterprise build system.\nWorked Docker container management along with volumes, container based DB and services, Docker Arti factory configuration and setup.\nIngested Data in to OLMS repository which come from the upstream as a source information.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB.\nWorked on Mongo DB and wrote code which finds, update, save and insert data to Mongo DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the Mongo DB.\nConfigured JMS Server setup and DB Connection pool setup & deployed Returned items in Web Sphere Server.\nDeveloped JMS components to send messages from one application to other application internally using Active MQ.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution.\nValidations are done using SoapUI and Ready API testing tool framework in different environments. \nDeployed and tested the application on Web Sphere Application Server. \nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the Continuous Integration (CI) and Continuous Development(CD) process for the application using the Jenkins.\nUsed Jenkins for continuous integration with Maven and GitHub.\nWorked on Log4J to validate functionalities and JUnit for unit testing\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts\nUsed Eclipse IDE tool for application development.\nEnvironment: Java 1.7 and 1.8, J2EE, HTML5, CSS3, Bootstrap, jQuery, Angular 2, JavaScript, Node JS, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring Data, Thymeleaf,  Hibernate, Active MQ, RESTful, SOAP, Micro Service Architecture, AWS, EC2, Docker, Mongo DB, Oracle DB, CI/CD, Maven, Eclipse, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\nClient: Biogen Idec\t\t\t                                                                                                  Dec’14 - July’16\nLocation: Cambridge, MA\nRole: Java Full Stack Developer\nDescription: Biogen Idec Inc. is a global biotechnology company based in Cambridge, Massachusetts, specializing in discovering, developing, and delivering therapies for the treatment of neurodegenerative, hematologic and autoimmune diseases to patients worldwide. Zinbryta (daclizumab) online portal for pharmacies and prescribers to distribute the drug for the treatment of adults with relapsing forms of Multiple Sclerosis (MS).\nResponsibilities:\nInvolved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications, Development and Customization of the Application.\nDesigned front-end presentation logic using JSP, HTML5, CSS3 and Strut tags. \nUsed JavaScript, jQuery, AngularJS, and AJAX technologies for front end user input validations and Restful web service calls. \nUsed jQuery for front end validations. \nCreated a Single Page Application (SPA) using AngularJS as framework, to bind data with specific views and to synchronize data with server. \nSystem builds using Spring Model View Controller (MVC) architecture.\nImplemented pre-authentication framework (Spring Security) for authentication and authorization. \nUsed Spring framework including Spring core /IOC, Spring Web, Spring Security, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions.\nUsed a Micro service architecture, with Spring Boot-based services interacting through a combination of REST and MQ to deploy Identity micro services and Micro Components\nUsed Hibernate, ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with an SQL-based schema.\n Handed Java Multi-Threading part in back-end component, one thread will be running for each user.  \nWritten SQL Queries and stored procedures to interact with Oracle DB.\nRESTful web services using Jersey for JAX-RS implementation.\nDesigned, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nDeployed and Monitored Micro Services Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry \nConfigured Data Sources for the Oracle database system using IBM WebSphere. \nDeveloped JUnit test cases for elements, web beans, handlers and view helper classes.\nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. \nUsed SVN for version control tool and Spring Tool Suite (STS) for IDE.\nUsed Tortoise SVN to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nImplementation of Restful services in Apache camel using rest component, event notifier, JSON.\nConfigured and customized logs using Log4J.\nActively participated in the daily SCRUM meetings to produce quality deliverables.\nPerformed the technical design reviews and code reviews. \nCoordinated with Business Analyst, Architecture and QA team to ensure the quality and success for each iteration tasks.\nDesign, develop and test of SOA services using SOA / Web Service / Oracle Fusion Middleware\nEnvironment: Java, J2EE, JavaScript, XML, Tortoise SVN, Spring MVC, JDBC, Maven, Apache Camel, JMS, JSP, HTML, AngularJS, AJAX, AWS, Spring, Spring Framework, Spring Boot, Spring Security, Hibernate, SOA, Soap, Restful, WSDL, JIRA, CSS, Log4J, JUnit, Linux, STS, Oracle, Agile Methodology.\nClient: John Deere Financials\t\t\t\t                                                               Oct’13 - Dec’14\nLocation: Des Moines, IOWA\nRole: Java Developer\nDescription: Customer Self Service application is used by all John Deere Financial customers where they can pay the loan and view the loan details. It will process direct payments for Installment, Lease and Revolving account customers. CSS has more than 450000 accounts. This Multi-language based application and handle English and French languages.\nResponsibilities:\nDeveloped applications according to a structured agile project management methodology\nUsed the light weight container of the Spring Framework to provide architectural flexibility for Inversion of controller (IOC)\nInvolved in developing User Interface (UI) with HTML5, CSS3, JavaScript, DOJO, jQuery, JSON and JSF.\nUsed JSF tags and Content Server tags for writing java, JSF code and rendering the assets\nUsed Spring Framework for Dependency Injection\nDeveloped the application framework using MVC architecture using JSF, spring and hibernate\nWorked in development of data abstraction layer using Hibernate ORM framework with spring support.\nDeveloped an XML based editor interface that allows users to easily enter data for the attribute.\nWorked in the development of Servlets, JSP'S, Spring Beans and POJOs\nDeveloped Web services using Apache Axis SOAP engine that would be exposed to external applications to retrieve data from e-Client servicing platform\nWorked in development of web services for business operations using SOAP, WSDL, JAX-WS, JDOM, XML, XSL and Apache CXF\nWorked in Data extractor development to retrieve report data from a centralized database using RPM SOAP web services\nConsumed Web Services as a gateway for the payment through the third-party\nExtremely used plain JavaScript and jQuery, JavaScript Library to do the client-side validations\nUsed Maven as build automation tool for deploying the project on Apache Tomcat Server.\nDeveloped MySQL stored procedures and triggers using SQL in order to calculate and update the tables to implement business logic\nWorked in Writing and executing the Unit Test cases using JUnit to test specific functionality in the code\nUsed JMS to establish message communication\nAdded AJAX calls using jQuery\nUsed Log4J to capture the log that includes runtime exceptions, monitored error logs and fixed the problems\nDeveloped and used Maven for compiling and building the applications.\nEnvironment: Java, JSP, XML, HTML, JavaScript, jQuery, CSS3, Servlets, Spring, Hibernate, SOAP Web Services, MySQL, SQL, JAXP, POJO, AJAX, Apache Tomcat Server, JSF, DOJO, JSON, AXIS, MAVEN, JUNIT, JMS, Log4j.\nClient: The E-Vault company\t\t\t\t                                                               Jan ’12 - July ‘13\nLocation: Salt Lake City, Utah\nRole: Java Developer\n      Description: The E-Vault company (a subsidiary of Seagate) Sales representative get Sales Order Leads and they use the Salesforce application to enter the information into that system. They also Use a NetSuite Order Processing and Accounting system to process the orders, generate invoices, make entries in AP, AC, GL, etc. and work order, etc. They are transferring the Sales order leads manually enter the NetSuite application.   The team wants to capture the different types of Salesforce entered Order leads into orders into the NetSuite system.   The incoming data will be in JSON format that data will get new properties and the new JSON object will be the SQL database using REST based POST http action methods.\nResponsibilities: \nDesigned use case diagrams, data flow diagrams, component diagram, class diagram, and sequence diagram for the given requirement. Also involved in the review meetings of the design architecture for the new requirement and enhancement, given review comments for the designs.\nImplemented GUI using HTML, JSP, CSS, TILES, AJAX, JSTL, Struts TagLibs and Portal Pages.\nUsed AJAX to dynamically load a portion of the page when it was not needed for reloading the entire page.\nUsing RIDC Interface get content details and Create Content through application.\nDeveloped custom Skeleton, custom Skin and custom Layouts.\nImplemented custom LAF files applied to portal.\nDesign & Development of page flows, Web logic Workshop.\nDeveloped several JSP pages and JSR 168 for displaying and processing Information.\nImplemented customization by using Dynamic Visitor Tools (DVT).\nUsed Java-J2EE patterns like Model View Controller, Data Transfer Objects, Singleton, and factory patterns,\nDeveloped and implemented Content Publish using Site Studio, Content Publisher.\nUsing RIDC Interface get content details and Create Content through application.\nImplemented Spring IOC Setter Method Injection and writing Spring Configuration XML file that contains declarations and another dependent object declaration.\nI have worked in DAO layer of the application, written java code to access hibernate session factory using spring hibernate template, Hibernate Search Quires and written search, persistence, deletion for the persistence objects.\nDeveloped Web Services client and Service used SOAP Protocol for sending request and get response. \nCreated JUnit test cases for unit testing application.\nImplemented application logging feature using log4j.\nEnvironment: Java/J2EE, JSP, JSTL, Ajax, Spring, Struts, Ajax, Hibernate, JNDI, Web logic workshop, XML, XSLT, Web Services, UDDI, WSDL, Log4j, Oracle, Oracle Web logic Server, UCM, SVN, LDAP, Windows XP, UNIX, UML.\nClient: Techno soft Solutions\t\t                                                                                              Nov’10 - Dec ‘11\nLocation: New york\nRole: Java Developer\t\t\t\t\t \nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using Internet to interact with the system from any part and allow the customers to buy insurance online. Also used by the HR department to manage the vast information generated due to massive business operations. Main objective is to help in tracking HR related issues, optimize and increase the productivity.\nResponsibilities:\nDeveloped the application based on MVC architecture.\nWorked with Struts as a unified MVC framework and developed Tag Libraries.\nUsed Struts framework in UI designing and validations \nCaptured all the functional and technical requirements of the Supply Chain Management System.\nWas involved in the preparation of the software requirements and design document (SRS & SDS)\nAdapted Java Design Patterns DAO, Value Objects and Session Facade to develop business components. \nDeveloped class diagrams and Sequence diagrams.\nDefined the detailed application and database design.\nDevelopment of GUI for HTML and JSP Versions. Java Servlets were used as the common gateway interface between the client and server. \nJava Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller.\nDeveloped the application using Struts Framework with respect to Model View Controller architecture.\nInvolved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using: J2EE, Java, Servlets, EJB, and JSP. \nFront end validations are written using JavaScript.\nUsed SQL Loader to loading data in text file into Oracle table, and updated relative information in Oracle.\nPerformed Unit Testing using JUnit.\nProvided a User Manual and User Training on the new system to ease them into the new system.\nEnvironment:  JDK, JEE, HTML, CSS, JDBC, struts, JavaScript, JSP, EJB, Java Scripting, CSS, CVS, WebSphere, oracle, Linux.\nClient: SLK Software\t\t\t\t\t\t\t\t\t      July’09 – Nov’10\nLocation:  Australia\nRole: Java Developer\nDescription: SLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level 4 Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products.\nResponsibilities:\nDeveloped Action Classes, which acts as the controller in Struts framework.\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client-side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nUsed SQL queries extensively to talk to DB2 database\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: Java, JDBC, Struts, JavaScript, Html, CSS, JSP, Servlets, Tomcat, DB2, Eclipse IDE, CVS, ANT, Log4J. ",
  "cleaned_text": "Candidate OBJECTIVE Looking to contribute design, analysis, development, management, documentation and interpersonal skills to an organization thats growing, expanding and using leading-edge Industry-proven technologies. The fundamental aim is to gain a dynamic and challenging role in the areas of Software Engineering in big projects that will offer the best opportunity for further development of my abilities, skills and knowledge in an established substantial firm with long term career growth possibilities. I strongly believe that I will highly contribute to the company development with my individual ability of organized, creative, and self-motivated in multi-tasking and working individually or as a member of the team. PROFESSIONAL SUMMARY Having years of Extensive IT experience in all phases of Software Development Life Cycle SDLC including Analysis, design, implementation, integration, testing and maintenance of applications using JAVA J EE technologies. Well versed with complete Software Development Life Cycle SDLC using various methodologies like Agile Methodology, Waterfall and Test-Driven Development. Experience with design patterns like Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern. Expertise in developing UI using JSP, HTML , CSS , Java Script, Bootstrap, jQuery, Ajax, Angular JS and Node.js. Hands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, s, Spring Security, Spring Data and Spring Boot. Experience with Java features such as lambda expressions, Streams and Parallel Operations. Experience in developing the application with Service Oriented Architecture SOA and Micro Services Architecture and Test-Driven Development. Hands-on experience on various AWS Cloud services like EC , optRoute , EBS, Auto Scaling, VPC, Cloud Formation, S , RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling. Having Good experience in developing and migrating existing application into cloud-based platforms like Amazon Web Services AWS and Pivotal Cloud Foundry. Expert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics. Developed Web-based enterprise applications using Java J EE, Core Java, Servlets, JDBC, Hibernate, Web Services SOAP and REST and MVC Framework Struts, Spring MVC . Strong experience in developing and consuming SOAP and RESTful based Web Services. Expertise in XML technologies like DTD, XSD, XSLT and various parsers like DOM, SAX and JAXB. Experience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL Hibernate Query Language . Extensive knowledge in developing java persistence API JPA layer using Mybatis. Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue. Experience in developing XML based Web Services SOAP UDDI WSDL using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration. Strong experience in database design using PL SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data. Expertise in using JDBC and Hibernate for connection and access to databases. Good experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB and No SQL databases like Mongo DB, Cassandra and Dynamo DB. Experience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere. Expertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ. Proficient in Continuous Integration and Continuous Deployment tools like Jenkins. Experience with JUnit and Mockito in developing test cases and Log J in determining application functionality. Having Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server. Experience working with version control tools like Git Hub, Subversion SVN and CVS. Experience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments. Strong interpersonal and communication skills and self-motivated individual showing ability to learn and use new technologies and frameworks in considerably less time. Technical Skills PROFESSIONAL EXPERIENCE Client Deutsche Bank July Till Date Location New York Role Sr. Java Full Stack Developer Description Deutsche bank spanned across the Europe, Asia and Middle East as well, which mainly involves in Global Transaction Banking, Corporate banking & Securities and Wealth management. Loan application of our project is an n tier based client server comprehensive solution that makes it possible to receive process and close loans from a broker, over Internet, or at the bank branch. The Loan system resides on a robust database engine, providing clients with proven scalability that will meet the needs of the largest lenders. This centralized database aggregates loan information for all lines of business and sources of origination. Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering, modeling, analysis, design, development and testing Followed Agile methodology. Interacted with the client, provide take feedback on the features, suggest implement optimal solutions and tailored application to customer needs. Developed applications using Application Lifecycle Management to deliver reliable applications Utilized Java features like Lambda expressions for collection evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment. Developed UI using HTML , CSS , JavaScript, Bootstrap, jQuery, Angular , and Node JS. Involved in Java code, which generated XML document, which in turn used XSLT to translate the content into HTML to present to GUI. Designed and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring JDBC. Implemented the authentication and authorization of the application using Spring Security and Oauth . Implemented Spring IOC to make code loosely coupled and for Dependency Injection and Spring AOP for logging purposes. Used Thymeleaf as server side template engine along with spring MVC and spring data repositories. Designed and developed Micro Services business components and RESTful service endpoints using Spring boot. Implemented Micro Service Architecture with Spring Boot based RESTful services and consumed SOAP based Web Services. Implemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively. Implemented RESTful Web Services to retrieve data from client side using Micro Services Architecture. Experience in creating RESTful web services using Jersey, Spring framework and JAX-RS. Implemented Multithreading, Concurrency, Exception Handling and Collections whenever necessary. Prepared calls through Hibernate and Spring JDBC for Interacting with the Database. Experience in Hibernate which includes integrating legacy databases, writing custom CRUD statements, integrating stored procedures and functions and also performed polymorphic associations. Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances. Experienced working with database setup and maintenance on AWS EC . Currently working on Docker container implementation for the Enterprise build system. Worked Docker container management along with volumes, container based DB and services, Docker Arti factory configuration and setup. Ingested Data in to OLMS repository which come from the upstream as a source information. Experience in writing complex PL SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB. Worked on Mongo DB and wrote code which finds, update, save and insert data to Mongo DB. Performed data extraction and loading the JSON data with the server-side content in to the Mongo DB. Configured JMS Server setup and DB Connection pool setup & deployed Returned items in Web Sphere Server. Developed JMS components to send messages from one application to other application internally using Active MQ. Used Active MQ to communicate with controller and used service layer to implement the business logic. Implemented Batch jobs using Spring Batch created various item readers, item writers and item processors. Involved in support for end to operations support for OSS BSS Business Support System identify gaps, and propose solutions and manage issue resolution. Validations are done using SoapUI and Ready API testing tool framework in different environments. Deployed and tested the application on Web Sphere Application Server. Developed test cases for unit testing in the integration layer using Mockito framework. Used UNIX shell scripts to search modify files. Setup the Continuous Integration CI and Continuous Development CD process for the application using the Jenkins. Used Jenkins for continuous integration with Maven and GitHub. Worked on Log J to validate functionalities and JUnit for unit testing Implemented configured and customized JIRA issue tracking software with agile plug-in across all company functions. Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Used Eclipse IDE tool for application development. Environment Java . and . , J EE, HTML , CSS , Bootstrap, jQuery, Angular , JavaScript, Node JS, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring Data, Thymeleaf, Hibernate, Active MQ, RESTful, SOAP, Micro Service Architecture, AWS, EC , Docker, Mongo DB, Oracle DB, CI CD, Maven, Eclipse, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log j and GIT. Client Biogen Idec Dec - July Location Cambridge, MA Role Java Full Stack Developer Description Biogen Idec Inc. is a global biotechnology company based in Cambridge, Massachusetts, specializing in discovering, developing, and delivering therapies for the treatment of neurodegenerative, hematologic and autoimmune diseases to patients worldwide. Zinbryta daclizumab online portal for pharmacies and prescribers to distribute the drug for the treatment of adults with relapsing forms of Multiple Sclerosis MS . Responsibilities Involved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications, Development and Customization of the Application. Designed front-end presentation logic using JSP, HTML , CSS and Strut tags. Used JavaScript, jQuery, AngularJS, and AJAX technologies for front end user input validations and Restful web service calls. Used jQuery for front end validations. Created a Single Page Application SPA using AngularJS as framework, to bind data with specific views and to synchronize data with server. System builds using Spring Model View Controller MVC architecture. Implemented pre-authentication framework Spring Security for authentication and authorization. Used Spring framework including Spring core IOC, Spring Web, Spring Security, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions. Used a Micro service architecture, with Spring Boot-based services interacting through a combination of REST and MQ to deploy Identity micro services and Micro Components Used Hibernate, ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with an SQL-based schema. Handed Java Multi-Threading part in back-end component, one thread will be running for each user. Written SQL Queries and stored procedures to interact with Oracle DB. RESTful web services using Jersey for JAX-RS implementation. Designed, configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation. Deployed and Monitored Micro Services Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry Configured Data Sources for the Oracle database system using IBM WebSphere. Developed JUnit test cases for elements, web beans, handlers and view helper classes. Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. Used SVN for version control tool and Spring Tool Suite STS for IDE. Used Tortoise SVN to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts. Implementation of Restful services in Apache camel using rest component, event notifier, JSON. Configured and customized logs using Log J. Actively participated in the daily SCRUM meetings to produce quality deliverables. Performed the technical design reviews and code reviews. Coordinated with Business Analyst, Architecture and QA team to ensure the quality and success for each iteration tasks. Design, develop and test of SOA services using SOA Web Service Oracle Fusion Middleware Environment Java, J EE, JavaScript, XML, Tortoise SVN, Spring MVC, JDBC, Maven, Apache Camel, JMS, JSP, HTML, AngularJS, AJAX, AWS, Spring, Spring Framework, Spring Boot, Spring Security, Hibernate, SOA, Soap, Restful, WSDL, JIRA, CSS, Log J, JUnit, Linux, STS, Oracle, Agile Methodology. Client John Deere Financials Oct - Dec Location Des Moines, IOWA Role Java Developer Description Customer Self Service application is used by all John Deere Financial customers where they can pay the loan and view the loan details. It will process direct payments for Installment, Lease and Revolving account customers. CSS has more than accounts. This Multi-language based application and handle English and French languages. Responsibilities Developed applications according to a structured agile project management methodology Used the light weight container of the Spring Framework to provide architectural flexibility for Inversion of controller IOC Involved in developing User Interface UI with HTML , CSS , JavaScript, DOJO, jQuery, JSON and JSF. Used JSF tags and Content Server tags for writing java, JSF code and rendering the assets Used Spring Framework for Dependency Injection Developed the application framework using MVC architecture using JSF, spring and hibernate Worked in development of data abstraction layer using Hibernate ORM framework with spring support. Developed an XML based editor interface that allows users to easily enter data for the attribute. Worked in the development of Servlets, JSP S, Spring Beans and POJOs Developed Web services using Apache Axis SOAP engine that would be exposed to external applications to retrieve data from e-Client servicing platform Worked in development of web services for business operations using SOAP, WSDL, JAX-WS, JDOM, XML, XSL and Apache CXF Worked in Data extractor development to retrieve report data from a centralized database using RPM SOAP web services Consumed Web Services as a gateway for the payment through the third-party Extremely used plain JavaScript and jQuery, JavaScript Library to do the client-side validations Used Maven as build automation tool for deploying the project on Apache Tomcat Server. Developed MySQL stored procedures and triggers using SQL in order to calculate and update the tables to implement business logic Worked in Writing and executing the Unit Test cases using JUnit to test specific functionality in the code Used JMS to establish message communication Added AJAX calls using jQuery Used Log J to capture the log that includes runtime exceptions, monitored error logs and fixed the problems Developed and used Maven for compiling and building the applications. Environment Java, JSP, XML, HTML, JavaScript, jQuery, CSS , Servlets, Spring, Hibernate, SOAP Web Services, MySQL, SQL, JAXP, POJO, AJAX, Apache Tomcat Server, JSF, DOJO, JSON, AXIS, MAVEN, JUNIT, JMS, Log j. Client The E-Vault company Jan - July Location Salt Lake City, Utah Role Java Developer Description The E-Vault company a subsidiary of Seagate Sales representative get Sales Order Leads and they use the Salesforce application to enter the information into that system. They also Use a NetSuite Order Processing and Accounting system to process the orders, generate invoices, make entries in AP, AC, GL, etc. and work order, etc. They are transferring the Sales order leads manually enter the NetSuite application. The team wants to capture the different types of Salesforce entered Order leads into orders into the NetSuite system. The incoming data will be in JSON format that data will get new properties and the new JSON object will be the SQL database using REST based POST http action methods. Responsibilities Designed use case diagrams, data flow diagrams, component diagram, class diagram, and sequence diagram for the given requirement. Also involved in the review meetings of the design architecture for the new requirement and enhancement, given review comments for the designs. Implemented GUI using HTML, JSP, CSS, TILES, AJAX, JSTL, Struts TagLibs and Portal Pages. Used AJAX to dynamically load a portion of the page when it was not needed for reloading the entire page. Using RIDC Interface get content details and Create Content through application. Developed custom Skeleton, custom Skin and custom Layouts. Implemented custom LAF files applied to portal. Design & Development of page flows, Web logic Workshop. Developed several JSP pages and JSR for displaying and processing Information. Implemented customization by using Dynamic Visitor Tools DVT . Used Java-J EE patterns like Model View Controller, Data Transfer Objects, Singleton, and factory patterns, Developed and implemented Content Publish using Site Studio, Content Publisher. Using RIDC Interface get content details and Create Content through application. Implemented Spring IOC Setter Method Injection and writing Spring Configuration XML file that contains declarations and another dependent object declaration. I have worked in DAO layer of the application, written java code to access hibernate session factory using spring hibernate template, Hibernate Search Quires and written search, persistence, deletion for the persistence objects. Developed Web Services client and Service used SOAP Protocol for sending request and get response. Created JUnit test cases for unit testing application. Implemented application logging feature using log j. Environment Java J EE, JSP, JSTL, Ajax, Spring, Struts, Ajax, Hibernate, JNDI, Web logic workshop, XML, XSLT, Web Services, UDDI, WSDL, Log j, Oracle, Oracle Web logic Server, UCM, SVN, LDAP, Windows XP, UNIX, UML. Client Techno soft Solutions Nov - Dec Location New york Role Java Developer Description This project was designed to build a Common Access Platform for customers and insurance agents using Internet to interact with the system from any part and allow the customers to buy insurance online. Also used by the HR department to manage the vast information generated due to massive business operations. Main objective is to help in tracking HR related issues, optimize and increase the productivity. Responsibilities Developed the application based on MVC architecture. Worked with Struts as a unified MVC framework and developed Tag Libraries. Used Struts framework in UI designing and validations Captured all the functional and technical requirements of the Supply Chain Management System. Was involved in the preparation of the software requirements and design document SRS & SDS Adapted Java Design Patterns DAO, Value Objects and Session Facade to develop business components. Developed class diagrams and Sequence diagrams. Defined the detailed application and database design. Development of GUI for HTML and JSP Versions. Java Servlets were used as the common gateway interface between the client and server. Java Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller. Developed the application using Struts Framework with respect to Model View Controller architecture. Involved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using J EE, Java, Servlets, EJB, and JSP. Front end validations are written using JavaScript. Used SQL Loader to loading data in text file into Oracle table, and updated relative information in Oracle. Performed Unit Testing using JUnit. Provided a User Manual and User Training on the new system to ease them into the new system. Environment JDK, JEE, HTML, CSS, JDBC, struts, JavaScript, JSP, EJB, Java Scripting, CSS, CVS, WebSphere, oracle, Linux. Client SLK Software July Nov Location Australia Role Java Developer Description SLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products. Responsibilities Developed Action Classes, which acts as the controller in Struts framework. Developed web application using Struts .X, JSP, Servlets, Java beans that uses MVC design pattern Created user-friendly GUI interface and Web pages using HTML, CSS and JSP Wrote JavaScript for client-side validation. Used Eclipse as IDE tool for creating Servlets, JSP, and XML. Wrote SQL for JDBC prepared statements to retrieve the data from database. Used SQL queries extensively to talk to DB database Monitored the logs using Log J and fixed the problem The application was deployed on the Tomcat. Involved in build and deploying the application using ANT Used CVS as version control system Worked on bug fixing and Production Support Environment Java, JDBC, Struts, JavaScript, Html, CSS, JSP, Servlets, Tomcat, DB , Eclipse IDE, CVS, ANT, Log J.",
  "preprocessed_text": "candidate objective looking contribute design analysis development management documentation interpersonal skill organization thats growing expanding using leading-edge industry-proven technology fundamental aim gain dynamic challenging role area software engineering big project offer best opportunity development ability skill knowledge established substantial firm long term career growth possibility strongly believe highly contribute company development individual ability organized creative self-motivated multi-tasking working individually member team professional summary year extensive experience phase software development life cycle sdlc including analysis design implementation integration testing maintenance application using java ee technology well versed complete software development life cycle sdlc using various methodology like agile methodology waterfall test-driven development experience design pattern like singleton factory pattern prototype business delegate session facade service locator observer decorator front controller dao pattern expertise developing ui using jsp html cs java script bootstrap jquery ajax angular j node.js hand experience different spring framework module like spring core spring aop spring mvc spring security spring data spring boot experience java feature lambda expression stream parallel operation experience developing application service oriented architecture soa micro service architecture test-driven development hands-on experience various aws cloud service like ec optroute eb auto scaling vpc cloud formation rds amazon elastic load balancing iam cloud watch service aws infrastructure like dynamo db sqs emr focusing high-availability fault tolerance auto-scaling good experience developing migrating existing application cloud-based platform like amazon web service aws pivotal cloud foundry expert core java strong understanding garbage collector collection multithreading event handling exception handling generic developed web-based enterprise application using java ee core java servlets jdbc hibernate web service soap rest mvc framework strut spring mvc strong experience developing consuming soap restful based web service expertise xml technology like dtd xsd xslt various parser like dom sax jaxb experience using persistence framework like hibernate jpa mapping java class database using hql hibernate query language extensive knowledge developing java persistence api jpa layer using mybatis experienced implementation jms exchange information reliable channel asynchronous way using active mq rabbit mq message queue experience developing xml based web service soap uddi wsdl using top bottom approach rest based service jax-rs jersey spring integration strong experience database design using pl sql write table stored procedure function trigger indexer proficiency writing complex query retrieve data expertise using jdbc hibernate connection access database good experience relational database like oracle sql m sql server ibm db sql database like mongo db cassandra dynamo db experience application server like web logic jboss apache tomcat ibm web sphere expertise using various ide tool like spring tool suite rad eclipse intellij proficient continuous integration continuous deployment tool like jenkins experience junit mockito developing test case log determining application functionality experience unix linux python shell scripting deployment application server experience working version control tool like git hub subversion svn cv experience build automation tool like gradle ant maven build deployment different environment strong interpersonal communication skill self-motivated individual showing ability learn use new technology framework considerably less time technical skill professional experience client deutsche bank july till location new york role sr. java full stack developer description deutsche bank spanned across europe asia middle east well mainly involves global transaction banking corporate banking security wealth management loan application project tier based client server comprehensive solution make possible receive process close loan broker internet bank branch loan system resides robust database engine providing client proven scalability meet need largest lender centralized database aggregate loan information line business source origination responsibility involved various phase software development life cycle sdlc requirement gathering modeling analysis design development testing followed agile methodology interacted client provide take feedback feature suggest implement optimal solution tailored application customer need developed application using application lifecycle management deliver reliable application utilized java feature like lambda expression collection evaluation comparing data stream api bulk data operation collection would increase performance application parallel operation collection effective sorting mechanism change sequential stream flow thread session establishment developed ui using html cs javascript bootstrap jquery angular node j involved java code generated xml document turn used xslt translate content html present gui designed implemented application using spring boot spring mvc spring ioc spring annotation spring aop spring transaction spring jdbc implemented authentication authorization application using spring security oauth implemented spring ioc make code loosely coupled dependency injection spring aop logging purpose used thymeleaf server side template engine along spring mvc spring data repository designed developed micro service business component restful service endpoint using spring boot implemented micro service architecture spring boot based restful service consumed soap based web service implemented restful soap based web service using jax-rs jax-ws respectively implemented restful web service retrieve data client side using micro service architecture experience creating restful web service using jersey spring framework jax-rs implemented multithreading concurrency exception handling collection whenever necessary prepared call hibernate spring jdbc interacting database experience hibernate includes integrating legacy database writing custom crud statement integrating stored procedure function also performed polymorphic association experienced aws service smoothly manage application cloud creating modifying instance experienced working database setup maintenance aws ec currently working docker container implementation enterprise build system worked docker container management along volume container based db service docker arti factory configuration setup ingested data olm repository come upstream source information experience writing complex pl sql query using join stored procedure function trigger cursor index oracle db worked mongo db wrote code find update save insert data mongo db performed data extraction loading json data server-side content mongo db configured jms server setup db connection pool setup deployed returned item web sphere server developed jms component send message one application application internally using active mq used active mq communicate controller used service layer implement business logic implemented batch job using spring batch created various item reader item writer item processor involved support end operation support os bs business support system identify gap propose solution manage issue resolution validation done using soapui ready api testing tool framework different environment deployed tested application web sphere application server developed test case unit testing integration layer using mockito framework used unix shell script search modify file setup continuous integration ci continuous development cd process application using jenkins used jenkins continuous integration maven worked log validate functionality junit unit testing implemented configured customized jira issue tracking software agile plug-in across company function used maintain version file took responsibility code merges branch trunk creating new branch new feature implementation start used eclipse ide tool application development environment java ee html cs bootstrap jquery angular javascript node j spring ioc spring mvc spring security spring boot spring batch spring data thymeleaf hibernate active mq restful soap micro service architecture aws ec docker mongo db oracle db ci cd maven eclipse web sphere application server mockito jms unix jenkins jira log git client biogen idec dec july location cambridge role java full stack developer description biogen idec inc. global biotechnology company based cambridge massachusetts specializing discovering developing delivering therapy treatment neurodegenerative hematologic autoimmune disease patient worldwide zinbryta daclizumab online portal pharmacy prescribers distribute drug treatment adult relapsing form multiple sclerosis m responsibility involved phase sdlc including requirement collection design analysis customer specification development customization application designed front-end presentation logic using jsp html cs strut tag used javascript jquery angularjs ajax technology front end user input validation restful web service call used jquery front end validation created single application spa using angularjs framework bind data specific view synchronize data server system build using spring model view controller mvc architecture implemented pre-authentication framework spring security authentication authorization used spring framework including spring core ioc spring web spring security spring ioc spring annotation spring aop spring transaction used micro service architecture spring boot-based service interacting combination rest mq deploy identity micro service micro component used hibernate orm solution technique mapping data representation mvc model oracle relational data model sql-based schema handed java multi-threading part back-end component one thread running user written sql query stored procedure interact oracle db restful web service using jersey jax-rs implementation designed configured deployed amazon web service aws multitude application utilizing amazon cloud formation deployed monitored micro service using pivotal cloud foundry also managed domain route cloud foundry configured data source oracle database system using ibm websphere developed junit test case element web bean handler view helper class focused test driven development thereby creating detailed junit test every single piece functionality actually writing functionality used svn version control tool spring tool suite sts ide used tortoise svn maintain version file took responsibility code merges branch trunk creating new branch new feature implementation start implementation restful service apache camel using rest component event notifier json configured customized log using log j. actively participated daily scrum meeting produce quality deliverable performed technical design review code review coordinated business analyst architecture qa team ensure quality success iteration task design develop test soa service using soa web service oracle fusion middleware environment java ee javascript xml tortoise svn spring mvc jdbc maven apache camel jms jsp html angularjs ajax aws spring spring framework spring boot spring security hibernate soa soap restful wsdl jira cs log junit linux sts oracle agile methodology client john deere financials oct dec location de moines iowa role java developer description customer self service application used john deere financial customer pay loan view loan detail process direct payment installment lease revolving account customer cs account multi-language based application handle english french language responsibility developed application according structured agile project management methodology used light weight container spring framework provide architectural flexibility inversion controller ioc involved developing user interface ui html cs javascript dojo jquery json jsf used jsf tag content server tag writing java jsf code rendering asset used spring framework dependency injection developed application framework using mvc architecture using jsf spring hibernate worked development data abstraction layer using hibernate orm framework spring support developed xml based editor interface allows user easily enter data attribute worked development servlets jsp spring bean pojos developed web service using apache axis soap engine would exposed external application retrieve data e-client servicing platform worked development web service business operation using soap wsdl jax-ws jdom xml xsl apache cxf worked data extractor development retrieve report data centralized database using rpm soap web service consumed web service gateway payment third-party extremely used plain javascript jquery javascript library client-side validation used maven build automation tool deploying project apache tomcat server developed mysql stored procedure trigger using sql order calculate update table implement business logic worked writing executing unit test case using junit test specific functionality code used jms establish message communication added ajax call using jquery used log capture log includes runtime exception monitored error log fixed problem developed used maven compiling building application environment java jsp xml html javascript jquery cs servlets spring hibernate soap web service mysql sql jaxp pojo ajax apache tomcat server jsf dojo json axis maven junit jms log j. client e-vault company jan july location salt lake city utah role java developer description e-vault company subsidiary seagate sale representative get sale order lead use salesforce application enter information system also use netsuite order processing accounting system process order generate invoice make entry ap ac gl etc work order etc transferring sale order lead manually enter netsuite application team want capture different type salesforce entered order lead order netsuite system incoming data json format data get new property new json object sql database using rest based post action method responsibility designed use case diagram data flow diagram component diagram class diagram sequence diagram given requirement also involved review meeting design architecture new requirement enhancement given review comment design implemented gui using html jsp cs tile ajax jstl strut taglibs portal page used ajax dynamically load portion needed reloading entire using ridc interface get content detail create content application developed custom skeleton custom skin custom layout implemented custom laf file applied portal design development flow web logic workshop developed several jsp page jsr displaying processing information implemented customization using dynamic visitor tool dvt used java-j ee pattern like model view controller data transfer object singleton factory pattern developed implemented content publish using site studio content publisher using ridc interface get content detail create content application implemented spring ioc setter method injection writing spring configuration xml file contains declaration another dependent object declaration worked dao layer application written java code access hibernate session factory using spring hibernate template hibernate search quire written search persistence deletion persistence object developed web service client service used soap protocol sending get response created junit test case unit testing application implemented application logging feature using log j. environment java ee jsp jstl ajax spring strut ajax hibernate jndi web logic workshop xml xslt web service uddi wsdl log oracle oracle web logic server ucm svn ldap window xp unix uml client techno soft solution nov dec location new york role java developer description project designed build common access platform customer insurance agent using internet interact system part allow customer buy insurance online also used hr department manage vast information generated due massive business operation main objective help tracking hr related issue optimize increase productivity responsibility developed application based mvc architecture worked strut unified mvc framework developed tag library used strut framework ui designing validation captured functional technical requirement supply chain management system involved preparation software requirement design document sr sd adapted java design pattern dao value object session facade develop business component developed class diagram sequence diagram defined detailed application database design development gui html jsp version java servlets used common gateway interface client server java bean used handle business logic model servlets control flow application controller developed application using strut framework respect model view controller architecture involved collecting requirement business user data modeling designing developing tool using ee java servlets ejb jsp front end validation written using javascript used sql loader loading data text file oracle table updated relative information oracle performed unit testing using junit provided user manual user training new system ease new system environment jdk jee html cs jdbc strut javascript jsp ejb java scripting cs cv websphere oracle linux client slk software july nov location australia role java developer description slk software service offshore development company providing end-to-end solution using proven methodology based sei cmm level guideline slk billing care web-based front office application used customer service representative create maintain customer account manage service handle customer issue slk billing care designed front-end application customer related activity supported slk charging billing product responsibility developed action class act controller strut framework developed web application using strut .x jsp servlets java bean us mvc design pattern created user-friendly gui interface web page using html cs jsp wrote javascript client-side validation used eclipse ide tool creating servlets jsp xml wrote sql jdbc prepared statement retrieve data database used sql query extensively talk db database monitored log using log fixed problem application deployed tomcat involved build deploying application using ant used cv version control system worked bug fixing production support environment java jdbc strut javascript html cs jsp servlets tomcat db eclipse ide cv ant log",
  "statistics": {
    "word_count": 3831,
    "unique_word_count": 1124,
    "avg_word_length": 5.035760897937875,
    "stopword_count": 817
  },
  "metadata": {
    "filename": "Candidate99_Resume.docx",
    "file_size": 55194,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:59.957615",
    "input_filename": "Candidate99_Resume.json"
  }
}