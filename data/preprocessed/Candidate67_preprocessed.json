{
  "id": "Candidate67",
  "raw_text": "Candidate67\nSENIOR FULL STACK JAVA DEVELOPER\n+1 (816) 945 2787,  \nSUMMARY:\nHighly Skilled Professional with having 8+ years of professional experience in designing, developing and testing internet/intranet Web-based applications, Client/Server applications, J2EE Architecture, OO Design patterns, Core Java.\nExperience in designing web/enterprise applications using Software Development Lifecycle (SDLC) methodology.\nProficient in applying design patterns like MVC, Singleton, Session Facade, Service Locator, Adapter, Visitor, Observer, Decorator, Front Controller, Data Access Object.\nVery good understanding of Model View Controller (MVC), Client Server and Multi-tier architectures.\nExcellent experience in Object Oriented Analysis and Design (OOAD), Development, Implementation and Testing of various software applications using Java, J2EE.\nExpertise in Java concepts like OOP, JAVA SWING, JDBC, JMS, Multi-Threading and JUnit.\nHands on expertise in designing, developing and deploying applications using J2EE technologies including JSP, Servlets, Spring, Hibernate, EJB, JSTL, Struts, AJAX, JDBC, JNDI, Java Beans, Web Services and RDBMS. \nExpertise in web development using HTML 4/5, DHTML, CSS, Java Script, XSL, XSLT, and XML (DOM, JAXP, JAXB).\nExpertise on Spring Boot, Spring Core, Spring ORM, Spring DAO, and Spring MVC architectures.\nProficient in implementation of frameworks like Struts, spring, JSF, AJAX frameworks (RichFaces, MyFaces) and ORM frameworks like Hibernate.  \nExcellent experience with Application Servers like JBoss, Tomcat7.x/6.x/5.x/4.x/3.x, IBM WebSphere 7.x/6.x/5.x and Oracle/BEA WebLogic 10.x/9.x/8.x/7.x/6.x \nExcellent experience with major relational databases – Oracle 8i/9i/10g, SQL Server 2000/2005/2008, DB2, My SQL.\nGood knowledge and working experience on Big data technologies like Spark, Scala, Hadoop, Map-Reduce, HDFS, Hive, HBase, Zookeeper, Kafka.\nStrong experience with MongoDB development (reports, schema design, map reduce functions) and migrations from SQL relational databases. \nExperience in building large scale web applications using JavaScript, React.js, Backbone.js, Node.js, Ext JS, jQuery.\nSolid experience of Defect/Test Management tools like JIRA, Quality Center/Test Director, Bugzilla.\nDesigning and Developing Single Page web applications (SPA) using AngularJS, and Node.js with other UI technologies/ libs such as Backbone, jQuery, Bootstrap.\nProficient in creating the Dash Boards using the Backbone.js for faster performance with AJAX calls.\nExtensive Experience in retrieving and manipulating data from backend using Database SQL queries, PL/SQL- Stored Procedures, Functions, Sequences, Triggers, Views and Packages.\nExperience in creating rules using Business Rules Engines: Drools, ILOG.\nExpertise in working on ANT, Hudson, Maven, Log4j, JUnit, Mockito, JMock, Test-ng.\nExperience in using various version control tools like SVN, CVS and IBM Rational Clear Case.\nExtensive development experience in different IDE's like Eclipse, NetBeans, JBuilder 9.x/8.x, JSource, JDeveloper.\nExcellent experience in writing ANT, Maven build scripts, providing logging facility using Log4j, Writing JUnit test cases and used Clear Quest, JMeter, Bugzilla for bug tracking.\nProficient in NoSQL DB such as Apache Cassandra DB, Mongo DB.\nExpertise in developing SOA (Service Oriented Architecture), REST and J2EE Web Services based on SOAP, WSDL, UDDI, JAX-WS, JAXB, JAX-RPC, JAX-RS using tools like Apache Axis.\nExperience working with big data and real time/near real time analytics and big data platforms like Hadoop, Spark using programming languages like Scala and Java.\nExperience in preparing project related documents using Microsoft Office Suite like MS-Office, MS-Excel, MS-PowerPoint and MS-Visio.\nExperience in Integration tools Oracle SOA Suite/BPEL/Fusion Middleware, web-methods and Apache CAMEL.\nExtensive experience in using Amazon Web Services like RDS, EC2, Redshift, SQS, SNS, Cloud Watch and S3.\nExperience in Integration of Amazon Web Services, AWS with other applications infrastructure.\nExtensive programming experience with Google Map APIs, YouTube Data APIs.\nTECHNICAL SKILLS:\nEducation:\nBachelor of Technology in Information Technology (B. Tech), Jawaharlal Nehru Technological University, JNTU, Hyderabad.\t\t\t\t\t\t\t\t\t\t\t             Class of 2009\nPROFESSIONAL EXPERIENCE:\nCitizens Energy Group - Indianapolis, IN\t\t\t\t\t\t\t                   Jan’17 - Till Date\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nWorked and developed functionalities in Agile Methodology of SDLC, and involved in Team planning and grooming sessions and Retro session in Agile environment.\nInvolved in development, deployment of Web Applications, Micro services deployed on Cloud Foundry.\nWorking with Offline First Multi-device and Multi-Platform application architecture.\nWorked on Rest Web services as well as Node Rest framework for backend services and developed backend code using Java collections including Set, List, Map, Multithreading and Exception Handling.\nWorking on AngularJS 1.5 to Angular 2.0 Code transition. With ES6 and TypeScript.\nBuilt npm libraries/packages in Node.js and Grunt Task runner for Unit testing AngularJS components as part of Test-driven development. \nPrepared Tableau reports in various subject areas like Materials Procurement Savings, Bill of Materials, Customer Service Index, Employee Productivity and Employee Safety.\nDeveloped Spring Application using Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, and Spring DAO and middleware application using spring core framework.\nUsed Executor Service Multi-Threading in programming and developed various helper classes. \nInvolved in coding for the presentation layer using jQuery, jQuery Mobile, Node.js, and JavaScript.\nInvolved in developing iOS SOA application based on Microservices and Predix cloud.\nWorking on RESTful web services, exclusively consuming REST API with Asynchronous behavior.\nImplemented application using Spring Boot Framework and handled the security using Spring Security. \nSelected the Test Cases to be automated and performed functional testing of the front end using Selenium (IDE and Web Driver) & created Data Driven framework using JUnit.\nDesigned and Implemented Real time applications using Apache Spark and Kafka. \nWrote SQL queries and developed the back-end programs in PL-SQL for this application.\nProvided data persistence by object/relational mapping solution via Hibernate for application save, update, delete operations. \nExperience with messaging systems like Kafka, RabbitMQ\nImplemented interceptors using Hibernate and build and release Spring Boot framework. \nPerformed Unit testing, Integration Testing and generating of test cases for web applications using JUnit.\nUsed Spring (IoC) for injecting the beans and reduced the coupling between the classes. \nImplemented the Model View Controller using Spring MVC and implemented various design patterns.\nWorked on GIT for version control and bug tracking. Worked on Code integration and deployment tool Jenkins, Ansible, Docker.\nManaged local deployments in Kubernetes, creating local cluster and deploying application containers.\nWorked with Object relational databases like PostgreSQL Database and H2 database engine.\nWorked with CouchBase NoSQL database, multiple ERP connections based on RDBMS. \nUsed Node.js, Express.js to create server-side API with MongoDB.\nUsed Postman Collections for Rest API testing. JSON output was tested using Advanced REST Client or POSTMAN.\nStrong understanding of supporting JSON based RESTful web-services, integrating with the front-end.\nDevelop RESTFUL Web Services interface supporting both XML and JSON to publish printing machines operational data, also developed the code to interact with other web services.\nDeploy and debug application on Predix Platform (Cloud Bases PaaS Model) and Cloud foundry.\nENVIRONMENT: J2EE, Spring Boot, JPA, Tableau, Predix (Cloud Foundry), Ansible, JDK 1.8, AngularJS, Node.js, JUnit, Eclipse STS, Spring Framework, Agile Scrum, Rest Web Services, Postman, Postgres DB, HTML5, CSS3, Selenium Web Driver, Amazon Web Services, Apache Spark, Jenkins, Ansible, Docker.\t\t\t\t\nFreeman Health System, Joplin, MO\t\t\t\t\t\t\t     Sept’ 2015 – Dec’ 2016\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nInvolved in Requirements gathering, analysis, design, development, testing and Maintenance phases with TDD approach\nDesigned and developed the UI using HTML5, CSS3, JavaScript, Node.js, and Backbone.js, Ext JS, AJAX, and JSON.\nUsed Bootstrap for responsive design which allows users to access it from any device.\nThe presentation layer used Spring MVC to implement the MVC architecture design and facilitates user interface designed by use of JSP's and tag libraries.\nWorked on Media Queries as a complement to the Grid System of UI Bootstrap to facilitate the implementation of the responsiveness\nEnhanced user experience by designing new web features using MVC Framework like Backbone.js accommodate these advanced and fast technologies. Enhanced User Interface based on Adobe Flex.\nDeveloped entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDD, Scala and Python.\nDeveloped and implemented Swing, spring and J2EE based MVC (Model-View-Controller) framework for the application. \nGathered existing functionality of various products from PE BRD, HLAD and FDN.\nImplemented RUP development process on Software Development Life Cycle and done with effort estimations using Function point’s 3p estimations.\nPrepared design documents with Sequence Diagrams, Class Diagrams using Microsoft VISIO tool.\nUsed spring framework to inject services, entity services, transaction management, and concerns by factory class corresponding to the use case operation executing.\nUsed ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA).\nInvolved in using spring concepts DI/IOC, AOP, Batch implementation and Spring MVC.\nImplemented Declarative transaction management using Spring AOP.\nDeployed Spring Boot based microservices Docker container using Amazon EC2 container services and using AWS admin console.\nWritten Storm topology to accept the events from Kafka producer and emit into Cassandra DB. \t\nUsed spring JDBC Template to do CRUD operations with Database.\nDesigned AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.\nDeveloped modules in the application using micro services architecture style.\nInvolved in building and deploying scripts using Maven3.3 to generate WAR, EAR and JAR files.\nLeveraged Zeno framework for Writing Storm topology to accept the events from Kafka producer and to emit into Mongo DB.\nCreated WSDLs as per wire frames, UI pages generated client jars using JAX-WS.\nUsed Apache CXF to create SOAP based Restful web services.\nDeveloped Applications using Rule Engines, Drools 4. X and ILOG with corresponding to validate the business User Roles.\nUsed CORE and HTML5 tag libraries for expressing Java Server Faces within a view template.\nWrote AngularJS services to consume Restful web service to load data.\nExplored Spark, Kafka, Storm along with other open source projects to create a Realtime analytics framework. \nUsed SVN for version control and source repository, Used Fisheye for Code Review and JIRA for reporting Bugs.\nWorked on Column Filters of Data table using jQuery and ReactJS.\nInvolved in writing Thread Safe blocks for multithread access to make valid transactions.\nCreated continuous integration builds using Ant Jenkins, Docker, Ansible and deployed on WebSphere app server.\nDone with Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed Google Maps API to implement location module in the application.\nUsed Spark-Streaming APIs to perform necessary transformations and actions on data model which gets the data from Kafka in near real time and Persists into Cassandra.\t\nWorked on Rest Web services as well as Node Rest framework for backend services and used MongoDB (NoSQL) for database services.\nUsed ActiveMQ messaging to set up communication between applications in ESB. And flows are created for JAX-WS and JAX-RS web services.\nParticipated in migration to DB2 data base from Oracle DB.\nFollowed coding guidelines and implemented Core Java J2EE design patterns.\nUsed IBM Clear case as version controlling system.\nInvolved in deploying the application in UNIX and to connect to see logs for fixing UAT/Production defects.\nCoordinated with Performance team to get thread dumps tuned java as well as DB code.\nENVIRONMENT: JAVA 1.6/1.7, J2EE, Servlets, JSP, Swing, Web Sphere Application Server 8.x, XML, HTML, XSD, XSLT, XPATH, JAXP, JAXB, WSDL, Maven, Java Spring MVC, SOAP, Drools, JavaScript, Jenkins, Docker, Ansible, AngularJS, Node.js, Backbone.js, Bootstrap, Ext JS, Spring frame work- Boot, DI, AOP, ReactJS, MVC, REST, JAX-RS, CXF, IBM MQ Series, RAD 8.0, JUNIT, TDD, AWS, IBM Clear Case, SOAPUI, JProfiler, Selenium, JNDI, Java/J2EE design patters, Adobe Flex, EMMA, JIRA, Ant, MongoDB, Elastic Search, HP QC, DB2, IBM Optimum tool, Google Maps API, Drools, iLog, Linux, Micro services etc.\t\t\nFNB Corporation, Pittsburgh, PA\t\t\t\t\t\t                          July 2014 – Aug’ 2015\nFull-Stack Java Developer\nRESPONSIBILITIES:\nWorked on JavaScript to validate input, manipulated HTML elements using JavaScript and AngularJS developed external JavaScript codes that can be used in several different web pages.\nCreated rule files using JBoss Drools 5 rules.\nInvolved in preparing High low-level design docs with UML diagrams.\nInvolved in PSI estimations using Fibonacci approach and divided feature into different USs.\nDeveloped the presentation layer written using HTML, CSS3, Ext JS, ReactJS and client-side validations were done using JavaScript, jQuery, and JSON.\nDesigned a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile, tablet and desktop.\nConfigured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scala.\nWritten business logic to retrieve data from legacy systems using web methods Mainframe, Java\nAdministered and configured multiple web methods B2B installations. This included moving developed code to various environments, setting up multiple databases aliases (Oracle), partner server’s subscriptions.\nUsed multithreading extensively to improve the performance of the application.\nWorked on the Common UI layout for defining the Header, Footer and Menu using JSF Facelets.\nDeveloped Spark code using Scala and Spark-SQL/Streaming for faster testing and processing of data.\nDeveloped the application using frameworks like Struts, Java Server Faces (JSF) and Spring frameworks\nUsed AWS Beanstalk for deploying and scaling web applications and services developed with Java, PHP, Node.js, Python, Ruby, Ansible and Docker on familiar servers such as Apache, and IIS.\nDeveloped custom directives, Factories and Services in AngularJS.\nKnowledge on Apache Spark java API and worked on Drools to configure rules as per business requirements.\nImplemented EJB's session bean to maintain mobile session.\nWorked with NoSQL databases such as Cassandra, MongoDB.\nImplemented methods to validate, invalidate, keep a live session for login process and maintaining session credentials.\nImplemented Spring MVC Controller module for better handling of client request, consume RESTful Webservice and sending response back to client.\nUsed Maven repository to include all the jar files required for the JDBC Connections and JSP Tag libraries.\nDeveloped certain features of the application functionality i.e. CRUD (Create, read, update, delete) features using Backbone.js and Responsive Design.\nDeveloped REST services to talk with adapter classes and exposed them to the AngularJS front-end. Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents\nWorked on serialize and de-serialize of data in applications using JSON\nImplemented code to consume messages from streaming data platform (SDP) using Apache Kafka.\t\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic\nDesigned, built, and deployed a multitude application utilizing almost all the AWS stack (Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling).\nExperienced in build, deploy multi module applications using Maven, ANT and CI/CD services like Jenkins, Docker, Ansible.\nTransformed, Navigated, Formatted XML documents using XSL, XSLT, XPath, and XSL-FO.\nInvolved in Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed IBM Clear Case for source code version control.\nENVIRONMENT: JAVA/J2EE, HTML, XHTML, DHTML, JS, AJAX, jQuery, DOJO,CSS3, Servlets, JSP, AngularJS, Node.js, Backbone.js, ReactJS, Bootstrap, XML, XSLT, XPATH, WSDL,AWS,  SOAP, CXF, REST, JAX-RS, JAX-WS, Web Logic server 10.3.3, JMS, Maven, Drools 5 , Eclipse, Jenkins, Docker, Ansible, JUNIT, MongoDB ,Mockito, Star Team, TDD, Spring MVC, Ext JS, EMMA, JIRA, Spring framework DI, AOP, Batch, Struts, Hibernate, Elastic Search, Ant, HP QC, Coherence, Rally, Apache Camel.\nKansas City Life Insurance Company, Kansas City, MO\t\t\t\t\t            Nov 2013 - June 2014\nJava/J2EE Programmer\nRESPONSIBILITIES:\nParticipated in all phases of the project like design, development, testing, enhancements and production support.\nDeveloped and supported all tiers of the application – UI/Business Logic/Database\nWorked on impact analysis to migrate existing persistence layer to Hibernate.\nCreated and injected dependency injection and to wire objects of business classes. \nExpertise in developing Web Applications using Spring Dependency Injection, and AOP for modularity.\nDesigned the Front-end screens using JSP, Servlets, HTML, and JavaScript.\nDesign & Development of User Interface module using J2EE, JSP, Servlets and Struts Framework.\nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalities.\nProvided installation, configuration & maintenance of pre-prod and production Cloud environments including services such as Tomcat, Apache, Jetty, MongoDB, MySQL, and Jira. \nExposed the Web Services to the client applications by sharing the REST Request and Response.\nDeveloped the functionalities under Agile Methodology JIRA processes.\nPrepared documents containing detailed recommendations for automation and support, enabling business process improvements.\nLed and participated in weekly marketing meetings to build relationships with the marketing team and improve problem resolution process.\nInstalled, Configured and administered Tomcat server.\nDeveloped the application using JSP, Java Servlet, and XML.\nWorked with DB2 and Wrote SQL Queries, Stored Procedures, triggers, views and integrated SQL Queries into DAO.\nImplemented entity beans utilizing container-managed relationship for retrieving data.\nThoroughly Unit tested the application by writing test cases in JUnit for different scenarios.\nInvolved in testing, debugging, bugs fixing and documentation of the system.\nENVIRONMENT: Java, JSP, DB2, JUnit, Eclipse, WebLogic, Log4j, XML, J2EE, JSP, JIRA, Web Services. Servlets, Struts Framework.\nBarclays Bank\t\t\t\t\t\t                            Sept 2011 - Oct 2013\nJava/J2ee Developer\nRESPONSIBILITIES:\nWorked extensively with the backend which comprised of Spring, Hibernate and JPA.\nUsed JSON and XML formats to transfer data from the server.\nImplemented Web Services to handle data from third party interfaces used tool like axis 1.4 to create web service clients.\nDeveloped AJAX based web based UI framework.\nCreated simple user interface for application's configuration system using MVC design patterns and Swing framework. \nDeveloped Servlets and JSP for performing CRUD operations on domain specific entities.\nDeveloped Service Layer using POJOs and Spring IOC.\nDeveloped Data Access Layer using Hibernate and DAO Design Pattern.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nUsed Apache POI API to generate excel document for data in each grid in the application.\nExtensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references.\nInvolved in the development of the application based on backend Spring MVC architecture.\nUtilized Spring MVC framework to implement design patterns like IOC (Dependency Injection), Spring DAO (Data access objects), Data Transfer objects, Business objects, ORM Mappings.\nUsed the Spring DAO to handle exception for database transaction like open connections, no result, connection aborted, closing the connections etc.\nUtilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects.\nENVIRONMENT: Spring, Hibernate, Swing, Oracle, Maven, Eclipse, AJAX, JSP, HTML, CSS, Java Script, XML, Servlets, Design Patterns, Web Services.\nSingleSource Computing Pvt. Ltd.\t\t\t\t                          June 2009 – Aug 2011\nJava Developer\nRESPONSIBILITIES:\nInvolved in the software development life cycle requirement gathering, coding, testing, and implementation.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nInstalled, Configured and administered JBoss server.\nDeveloped UI using java swings. \nConfigured and Implemented Web Services specifications.\nDisplayed the Documents in PDF format using Spring AbstractPdfView.\nDeveloper advanced UI features (like slider, crop etc.) using jQuery.\nDynamic web pages are developed using JSP, servlet, HTML, JavaScript, XML and CSS.\nUsed CVS for version control.\nExtracted data in UI for different clients using JSON format. \nImplemented client-side validations using JavaScript \nImplemented AJAX to speed up web application \nUsed Web Developer, Firebug, and IE developer toolbar for debugging and browser compatibility \nParticipated in maintenance and production support. \nUsed Junit to test all the APIs and business logic.\nENVIRONMENT: Web Service, WSDL, spring, Swing, jQuery, HTML, JSON, AJAX, JSP, JavaScript, Web Services.XML, UML, Oracle, JBoss, CVS.",
  "cleaned_text": "Candidate SENIOR FULL STACK JAVA DEVELOPER , SUMMARY Highly Skilled Professional with having years of professional experience in designing, developing and testing internet intranet Web-based applications, Client Server applications, J EE Architecture, OO Design patterns, Core Java. Experience in designing web enterprise applications using Software Development Lifecycle SDLC methodology. Proficient in applying design patterns like MVC, Singleton, Session Facade, Service Locator, Adapter, Visitor, Observer, Decorator, Front Controller, Data Access Object. Very good understanding of Model View Controller MVC , Client Server and Multi-tier architectures. Excellent experience in Object Oriented Analysis and Design OOAD , Development, Implementation and Testing of various software applications using Java, J EE. Expertise in Java concepts like OOP, JAVA SWING, JDBC, JMS, Multi-Threading and JUnit. Hands on expertise in designing, developing and deploying applications using J EE technologies including JSP, Servlets, Spring, Hibernate, EJB, JSTL, Struts, AJAX, JDBC, JNDI, Java Beans, Web Services and RDBMS. Expertise in web development using HTML , DHTML, CSS, Java Script, XSL, XSLT, and XML DOM, JAXP, JAXB . Expertise on Spring Boot, Spring Core, Spring ORM, Spring DAO, and Spring MVC architectures. Proficient in implementation of frameworks like Struts, spring, JSF, AJAX frameworks RichFaces, MyFaces and ORM frameworks like Hibernate. Excellent experience with Application Servers like JBoss, Tomcat .x .x .x .x .x, IBM WebSphere .x .x .x and Oracle BEA WebLogic .x .x .x .x .x Excellent experience with major relational databases Oracle i i g, SQL Server , DB , My SQL. Good knowledge and working experience on Big data technologies like Spark, Scala, Hadoop, Map-Reduce, HDFS, Hive, HBase, Zookeeper, Kafka. Strong experience with MongoDB development reports, schema design, map reduce functions and migrations from SQL relational databases. Experience in building large scale web applications using JavaScript, React.js, Backbone.js, Node.js, Ext JS, jQuery. Solid experience of Defect Test Management tools like JIRA, Quality Center Test Director, Bugzilla. Designing and Developing Single Page web applications SPA using AngularJS, and Node.js with other UI technologies libs such as Backbone, jQuery, Bootstrap. Proficient in creating the Dash Boards using the Backbone.js for faster performance with AJAX calls. Extensive Experience in retrieving and manipulating data from backend using Database SQL queries, PL SQL- Stored Procedures, Functions, Sequences, Triggers, Views and Packages. Experience in creating rules using Business Rules Engines Drools, ILOG. Expertise in working on ANT, Hudson, Maven, Log j, JUnit, Mockito, JMock, Test-ng. Experience in using various version control tools like SVN, CVS and IBM Rational Clear Case. Extensive development experience in different IDE s like Eclipse, NetBeans, JBuilder .x .x, JSource, JDeveloper. Excellent experience in writing ANT, Maven build scripts, providing logging facility using Log j, Writing JUnit test cases and used Clear Quest, JMeter, Bugzilla for bug tracking. Proficient in NoSQL DB such as Apache Cassandra DB, Mongo DB. Expertise in developing SOA Service Oriented Architecture , REST and J EE Web Services based on SOAP, WSDL, UDDI, JAX-WS, JAXB, JAX-RPC, JAX-RS using tools like Apache Axis. Experience working with big data and real time near real time analytics and big data platforms like Hadoop, Spark using programming languages like Scala and Java. Experience in preparing project related documents using Microsoft Office Suite like MS-Office, MS-Excel, MS-PowerPoint and MS-Visio. Experience in Integration tools Oracle SOA Suite BPEL Fusion Middleware, web-methods and Apache CAMEL. Extensive experience in using Amazon Web Services like RDS, EC , Redshift, SQS, SNS, Cloud Watch and S . Experience in Integration of Amazon Web Services, AWS with other applications infrastructure. Extensive programming experience with Google Map APIs, YouTube Data APIs. TECHNICAL SKILLS Education Bachelor of Technology in Information Technology B. Tech , Jawaharlal Nehru Technological University, JNTU, Hyderabad. Class of PROFESSIONAL EXPERIENCE Citizens Energy Group - Indianapolis, IN Jan - Till Date Senior Full Stack Java Developer RESPONSIBILITIES Worked and developed functionalities in Agile Methodology of SDLC, and involved in Team planning and grooming sessions and Retro session in Agile environment. Involved in development, deployment of Web Applications, Micro services deployed on Cloud Foundry. Working with Offline First Multi-device and Multi-Platform application architecture. Worked on Rest Web services as well as Node Rest framework for backend services and developed backend code using Java collections including Set, List, Map, Multithreading and Exception Handling. Working on AngularJS . to Angular . Code transition. With ES and TypeScript. Built npm libraries packages in Node.js and Grunt Task runner for Unit testing AngularJS components as part of Test-driven development. Prepared Tableau reports in various subject areas like Materials Procurement Savings, Bill of Materials, Customer Service Index, Employee Productivity and Employee Safety. Developed Spring Application using Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, and Spring DAO and middleware application using spring core framework. Used Executor Service Multi-Threading in programming and developed various helper classes. Involved in coding for the presentation layer using jQuery, jQuery Mobile, Node.js, and JavaScript. Involved in developing iOS SOA application based on Microservices and Predix cloud. Working on RESTful web services, exclusively consuming REST API with Asynchronous behavior. Implemented application using Spring Boot Framework and handled the security using Spring Security. Selected the Test Cases to be automated and performed functional testing of the front end using Selenium IDE and Web Driver & created Data Driven framework using JUnit. Designed and Implemented Real time applications using Apache Spark and Kafka. Wrote SQL queries and developed the back-end programs in PL-SQL for this application. Provided data persistence by object relational mapping solution via Hibernate for application save, update, delete operations. Experience with messaging systems like Kafka, RabbitMQ Implemented interceptors using Hibernate and build and release Spring Boot framework. Performed Unit testing, Integration Testing and generating of test cases for web applications using JUnit. Used Spring IoC for injecting the beans and reduced the coupling between the classes. Implemented the Model View Controller using Spring MVC and implemented various design patterns. Worked on GIT for version control and bug tracking. Worked on Code integration and deployment tool Jenkins, Ansible, Docker. Managed local deployments in Kubernetes, creating local cluster and deploying application containers. Worked with Object relational databases like PostgreSQL Database and H database engine. Worked with CouchBase NoSQL database, multiple ERP connections based on RDBMS. Used Node.js, Express.js to create server-side API with MongoDB. Used Postman Collections for Rest API testing. JSON output was tested using Advanced REST Client or POSTMAN. Strong understanding of supporting JSON based RESTful web-services, integrating with the front-end. Develop RESTFUL Web Services interface supporting both XML and JSON to publish printing machines operational data, also developed the code to interact with other web services. Deploy and debug application on Predix Platform Cloud Bases PaaS Model and Cloud foundry. ENVIRONMENT J EE, Spring Boot, JPA, Tableau, Predix Cloud Foundry , Ansible, JDK . , AngularJS, Node.js, JUnit, Eclipse STS, Spring Framework, Agile Scrum, Rest Web Services, Postman, Postgres DB, HTML , CSS , Selenium Web Driver, Amazon Web Services, Apache Spark, Jenkins, Ansible, Docker. Freeman Health System, Joplin, MO Sept Dec Senior Full Stack Java Developer RESPONSIBILITIES Involved in Requirements gathering, analysis, design, development, testing and Maintenance phases with TDD approach Designed and developed the UI using HTML , CSS , JavaScript, Node.js, and Backbone.js, Ext JS, AJAX, and JSON. Used Bootstrap for responsive design which allows users to access it from any device. The presentation layer used Spring MVC to implement the MVC architecture design and facilitates user interface designed by use of JSP s and tag libraries. Worked on Media Queries as a complement to the Grid System of UI Bootstrap to facilitate the implementation of the responsiveness Enhanced user experience by designing new web features using MVC Framework like Backbone.js accommodate these advanced and fast technologies. Enhanced User Interface based on Adobe Flex. Developed entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids. Involved in converting Hive SQL queries into Spark transformations using Spark RDD, Scala and Python. Developed and implemented Swing, spring and J EE based MVC Model-View-Controller framework for the application. Gathered existing functionality of various products from PE BRD, HLAD and FDN. Implemented RUP development process on Software Development Life Cycle and done with effort estimations using Function points p estimations. Prepared design documents with Sequence Diagrams, Class Diagrams using Microsoft VISIO tool. Used spring framework to inject services, entity services, transaction management, and concerns by factory class corresponding to the use case operation executing. Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA . Involved in using spring concepts DI IOC, AOP, Batch implementation and Spring MVC. Implemented Declarative transaction management using Spring AOP. Deployed Spring Boot based microservices Docker container using Amazon EC container services and using AWS admin console. Written Storm topology to accept the events from Kafka producer and emit into Cassandra DB. Used spring JDBC Template to do CRUD operations with Database. Designed AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates. Developed modules in the application using micro services architecture style. Involved in building and deploying scripts using Maven . to generate WAR, EAR and JAR files. Leveraged Zeno framework for Writing Storm topology to accept the events from Kafka producer and to emit into Mongo DB. Created WSDLs as per wire frames, UI pages generated client jars using JAX-WS. Used Apache CXF to create SOAP based Restful web services. Developed Applications using Rule Engines, Drools . X and ILOG with corresponding to validate the business User Roles. Used CORE and HTML tag libraries for expressing Java Server Faces within a view template. Wrote AngularJS services to consume Restful web service to load data. Explored Spark, Kafka, Storm along with other open source projects to create a Realtime analytics framework. Used SVN for version control and source repository, Used Fisheye for Code Review and JIRA for reporting Bugs. Worked on Column Filters of Data table using jQuery and ReactJS. Involved in writing Thread Safe blocks for multithread access to make valid transactions. Created continuous integration builds using Ant Jenkins, Docker, Ansible and deployed on WebSphere app server. Done with Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA IST Production. Used Google Maps API to implement location module in the application. Used Spark-Streaming APIs to perform necessary transformations and actions on data model which gets the data from Kafka in near real time and Persists into Cassandra. Worked on Rest Web services as well as Node Rest framework for backend services and used MongoDB NoSQL for database services. Used ActiveMQ messaging to set up communication between applications in ESB. And flows are created for JAX-WS and JAX-RS web services. Participated in migration to DB data base from Oracle DB. Followed coding guidelines and implemented Core Java J EE design patterns. Used IBM Clear case as version controlling system. Involved in deploying the application in UNIX and to connect to see logs for fixing UAT Production defects. Coordinated with Performance team to get thread dumps tuned java as well as DB code. ENVIRONMENT JAVA . . , J EE, Servlets, JSP, Swing, Web Sphere Application Server .x, XML, HTML, XSD, XSLT, XPATH, JAXP, JAXB, WSDL, Maven, Java Spring MVC, SOAP, Drools, JavaScript, Jenkins, Docker, Ansible, AngularJS, Node.js, Backbone.js, Bootstrap, Ext JS, Spring frame work- Boot, DI, AOP, ReactJS, MVC, REST, JAX-RS, CXF, IBM MQ Series, RAD . , JUNIT, TDD, AWS, IBM Clear Case, SOAPUI, JProfiler, Selenium, JNDI, Java J EE design patters, Adobe Flex, EMMA, JIRA, Ant, MongoDB, Elastic Search, HP QC, DB , IBM Optimum tool, Google Maps API, Drools, iLog, Linux, Micro services etc. FNB Corporation, Pittsburgh, PA July Aug Full-Stack Java Developer RESPONSIBILITIES Worked on JavaScript to validate input, manipulated HTML elements using JavaScript and AngularJS developed external JavaScript codes that can be used in several different web pages. Created rule files using JBoss Drools rules. Involved in preparing High low-level design docs with UML diagrams. Involved in PSI estimations using Fibonacci approach and divided feature into different USs. Developed the presentation layer written using HTML, CSS , Ext JS, ReactJS and client-side validations were done using JavaScript, jQuery, and JSON. Designed a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile, tablet and desktop. Configured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scala. Written business logic to retrieve data from legacy systems using web methods Mainframe, Java Administered and configured multiple web methods B B installations. This included moving developed code to various environments, setting up multiple databases aliases Oracle , partner servers subscriptions. Used multithreading extensively to improve the performance of the application. Worked on the Common UI layout for defining the Header, Footer and Menu using JSF Facelets. Developed Spark code using Scala and Spark-SQL Streaming for faster testing and processing of data. Developed the application using frameworks like Struts, Java Server Faces JSF and Spring frameworks Used AWS Beanstalk for deploying and scaling web applications and services developed with Java, PHP, Node.js, Python, Ruby, Ansible and Docker on familiar servers such as Apache, and IIS. Developed custom directives, Factories and Services in AngularJS. Knowledge on Apache Spark java API and worked on Drools to configure rules as per business requirements. Implemented EJB s session bean to maintain mobile session. Worked with NoSQL databases such as Cassandra, MongoDB. Implemented methods to validate, invalidate, keep a live session for login process and maintaining session credentials. Implemented Spring MVC Controller module for better handling of client request, consume RESTful Webservice and sending response back to client. Used Maven repository to include all the jar files required for the JDBC Connections and JSP Tag libraries. Developed certain features of the application functionality i.e. CRUD Create, read, update, delete features using Backbone.js and Responsive Design. Developed REST services to talk with adapter classes and exposed them to the AngularJS front-end. Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents Worked on serialize and de-serialize of data in applications using JSON Implemented code to consume messages from streaming data platform SDP using Apache Kafka. Used Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic Designed, built, and deployed a multitude application utilizing almost all the AWS stack Including EC , MongoDB focusing on high-availability, fault tolerance, and auto-scaling . Experienced in build, deploy multi module applications using Maven, ANT and CI CD services like Jenkins, Docker, Ansible. Transformed, Navigated, Formatted XML documents using XSL, XSLT, XPath, and XSL-FO. Involved in Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA IST Production. Used IBM Clear Case for source code version control. ENVIRONMENT JAVA J EE, HTML, XHTML, DHTML, JS, AJAX, jQuery, DOJO,CSS , Servlets, JSP, AngularJS, Node.js, Backbone.js, ReactJS, Bootstrap, XML, XSLT, XPATH, WSDL,AWS, SOAP, CXF, REST, JAX-RS, JAX-WS, Web Logic server . . , JMS, Maven, Drools , Eclipse, Jenkins, Docker, Ansible, JUNIT, MongoDB ,Mockito, Star Team, TDD, Spring MVC, Ext JS, EMMA, JIRA, Spring framework DI, AOP, Batch, Struts, Hibernate, Elastic Search, Ant, HP QC, Coherence, Rally, Apache Camel. Kansas City Life Insurance Company, Kansas City, MO Nov - June Java J EE Programmer RESPONSIBILITIES Participated in all phases of the project like design, development, testing, enhancements and production support. Developed and supported all tiers of the application UI Business Logic Database Worked on impact analysis to migrate existing persistence layer to Hibernate. Created and injected dependency injection and to wire objects of business classes. Expertise in developing Web Applications using Spring Dependency Injection, and AOP for modularity. Designed the Front-end screens using JSP, Servlets, HTML, and JavaScript. Design & Development of User Interface module using J EE, JSP, Servlets and Struts Framework. Extensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalities. Provided installation, configuration & maintenance of pre-prod and production Cloud environments including services such as Tomcat, Apache, Jetty, MongoDB, MySQL, and Jira. Exposed the Web Services to the client applications by sharing the REST Request and Response. Developed the functionalities under Agile Methodology JIRA processes. Prepared documents containing detailed recommendations for automation and support, enabling business process improvements. Led and participated in weekly marketing meetings to build relationships with the marketing team and improve problem resolution process. Installed, Configured and administered Tomcat server. Developed the application using JSP, Java Servlet, and XML. Worked with DB and Wrote SQL Queries, Stored Procedures, triggers, views and integrated SQL Queries into DAO. Implemented entity beans utilizing container-managed relationship for retrieving data. Thoroughly Unit tested the application by writing test cases in JUnit for different scenarios. Involved in testing, debugging, bugs fixing and documentation of the system. ENVIRONMENT Java, JSP, DB , JUnit, Eclipse, WebLogic, Log j, XML, J EE, JSP, JIRA, Web Services. Servlets, Struts Framework. Barclays Bank Sept - Oct Java J ee Developer RESPONSIBILITIES Worked extensively with the backend which comprised of Spring, Hibernate and JPA. Used JSON and XML formats to transfer data from the server. Implemented Web Services to handle data from third party interfaces used tool like axis . to create web service clients. Developed AJAX based web based UI framework. Created simple user interface for application s configuration system using MVC design patterns and Swing framework. Developed Servlets and JSP for performing CRUD operations on domain specific entities. Developed Service Layer using POJOs and Spring IOC. Developed Data Access Layer using Hibernate and DAO Design Pattern. Used Java Message Service JMS for loosely coupled, reliable and asynchronous exchange of user and real estate information among J EE components and legacy system Involved in working with J EE Design patterns Singleton, Factory, DAO, and Business Delegate and Model View Controller Architecture with JSF and Spring IOC. Used Apache POI API to generate excel document for data in each grid in the application. Extensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references. Involved in the development of the application based on backend Spring MVC architecture. Utilized Spring MVC framework to implement design patterns like IOC Dependency Injection , Spring DAO Data access objects , Data Transfer objects, Business objects, ORM Mappings. Used the Spring DAO to handle exception for database transaction like open connections, no result, connection aborted, closing the connections etc. Utilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects. ENVIRONMENT Spring, Hibernate, Swing, Oracle, Maven, Eclipse, AJAX, JSP, HTML, CSS, Java Script, XML, Servlets, Design Patterns, Web Services. SingleSource Computing Pvt. Ltd. June Aug Java Developer RESPONSIBILITIES Involved in the software development life cycle requirement gathering, coding, testing, and implementation. Used Java Message Service JMS for loosely coupled, reliable and asynchronous exchange of user and real estate information among J EE components and legacy system Involved in working with J EE Design patterns Singleton, Factory, DAO, and Business Delegate and Model View Controller Architecture with JSF and Spring IOC. Installed, Configured and administered JBoss server. Developed UI using java swings. Configured and Implemented Web Services specifications. Displayed the Documents in PDF format using Spring AbstractPdfView. Developer advanced UI features like slider, crop etc. using jQuery. Dynamic web pages are developed using JSP, servlet, HTML, JavaScript, XML and CSS. Used CVS for version control. Extracted data in UI for different clients using JSON format. Implemented client-side validations using JavaScript Implemented AJAX to speed up web application Used Web Developer, Firebug, and IE developer toolbar for debugging and browser compatibility Participated in maintenance and production support. Used Junit to test all the APIs and business logic. ENVIRONMENT Web Service, WSDL, spring, Swing, jQuery, HTML, JSON, AJAX, JSP, JavaScript, Web Services.XML, UML, Oracle, JBoss, CVS.",
  "preprocessed_text": "candidate senior full stack java developer summary highly skilled professional year professional experience designing developing testing internet intranet web-based application client server application ee architecture oo design pattern core java experience designing web enterprise application using software development lifecycle sdlc methodology proficient applying design pattern like mvc singleton session facade service locator adapter visitor observer decorator front controller data access object good understanding model view controller mvc client server multi-tier architecture excellent experience object oriented analysis design ooad development implementation testing various software application using java ee expertise java concept like oop java swing jdbc jms multi-threading junit hand expertise designing developing deploying application using ee technology including jsp servlets spring hibernate ejb jstl strut ajax jdbc jndi java bean web service rdbms expertise web development using html dhtml cs java script xsl xslt xml dom jaxp jaxb expertise spring boot spring core spring orm spring dao spring mvc architecture proficient implementation framework like strut spring jsf ajax framework richfaces myfaces orm framework like hibernate excellent experience application server like jboss tomcat .x .x .x .x .x ibm websphere .x .x .x oracle bea weblogic .x .x .x .x .x excellent experience major relational database oracle sql server db sql good knowledge working experience big data technology like spark scala hadoop map-reduce hdfs hive hbase zookeeper kafka strong experience mongodb development report schema design map reduce function migration sql relational database experience building large scale web application using javascript react.js backbone.js node.js ext j jquery solid experience defect test management tool like jira quality center test director bugzilla designing developing single web application spa using angularjs node.js ui technology libs backbone jquery bootstrap proficient creating dash board using backbone.js faster performance ajax call extensive experience retrieving manipulating data backend using database sql query pl sql- stored procedure function sequence trigger view package experience creating rule using business rule engine drool ilog expertise working ant hudson maven log junit mockito jmock test-ng experience using various version control tool like svn cv ibm rational clear case extensive development experience different ide like eclipse netbeans jbuilder .x .x jsource jdeveloper excellent experience writing ant maven build script providing logging facility using log writing junit test case used clear quest jmeter bugzilla bug tracking proficient nosql db apache cassandra db mongo db expertise developing soa service oriented architecture rest ee web service based soap wsdl uddi jax-ws jaxb jax-rpc jax-rs using tool like apache axis experience working big data real time near real time analytics big data platform like hadoop spark using programming language like scala java experience preparing project related document using microsoft office suite like ms-office ms-excel ms-powerpoint ms-visio experience integration tool oracle soa suite bpel fusion middleware web-methods apache camel extensive experience using amazon web service like rds ec redshift sqs sn cloud watch experience integration amazon web service aws application infrastructure extensive programming experience google map apis youtube data apis technical skill education bachelor technology information technology b. tech jawaharlal nehru technological university jntu hyderabad class professional experience citizen energy group indianapolis jan till senior full stack java developer responsibility worked developed functionality agile methodology sdlc involved team planning grooming session retro session agile environment involved development deployment web application micro service deployed cloud foundry working offline first multi-device multi-platform application architecture worked rest web service well node rest framework backend service developed backend code using java collection including set list map multithreading exception handling working angularjs angular code transition e typescript built npm library package node.js grunt task runner unit testing angularjs component part test-driven development prepared tableau report various subject area like material procurement saving bill material customer service index employee productivity employee safety developed spring application using spring core spring aop spring mvc spring batch spring security spring dao middleware application using spring core framework used executor service multi-threading programming developed various helper class involved coding presentation layer using jquery jquery mobile node.js javascript involved developing io soa application based microservices predix cloud working restful web service exclusively consuming rest api asynchronous behavior implemented application using spring boot framework handled security using spring security selected test case automated performed functional testing front end using selenium ide web driver created data driven framework using junit designed implemented real time application using apache spark kafka wrote sql query developed back-end program pl-sql application provided data persistence object relational mapping solution via hibernate application save update delete operation experience messaging system like kafka rabbitmq implemented interceptor using hibernate build release spring boot framework performed unit testing integration testing generating test case web application using junit used spring ioc injecting bean reduced coupling class implemented model view controller using spring mvc implemented various design pattern worked git version control bug tracking worked code integration deployment tool jenkins ansible docker managed local deployment kubernetes creating local cluster deploying application container worked object relational database like postgresql database database engine worked couchbase nosql database multiple erp connection based rdbms used node.js express.js create server-side api mongodb used postman collection rest api testing json output tested using advanced rest client postman strong understanding supporting json based restful web-services integrating front-end develop restful web service interface supporting xml json publish printing machine operational data also developed code interact web service deploy debug application predix platform cloud base paas model cloud foundry environment ee spring boot jpa tableau predix cloud foundry ansible jdk angularjs node.js junit eclipse sts spring framework agile scrum rest web service postman postgres db html cs selenium web driver amazon web service apache spark jenkins ansible docker freeman health system joplin mo sept dec senior full stack java developer responsibility involved requirement gathering analysis design development testing maintenance phase tdd approach designed developed ui using html cs javascript node.js backbone.js ext j ajax json used bootstrap responsive design allows user access device presentation layer used spring mvc implement mvc architecture design facilitates user interface designed use jsp tag library worked medium query complement grid system ui bootstrap facilitate implementation responsiveness enhanced user experience designing new web feature using mvc framework like backbone.js accommodate advanced fast technology enhanced user interface based adobe flex developed entire user interface using various ext j component like form panel tab panel view port editable grid involved converting hive sql query spark transformation using spark rdd scala python developed implemented swing spring ee based mvc model-view-controller framework application gathered existing functionality various product pe brd hlad fdn implemented rup development process software development life cycle done effort estimation using function point estimation prepared design document sequence diagram class diagram using microsoft visio tool used spring framework inject service entity service transaction management concern factory class corresponding use case operation executing used reactjs create view hook model dom synchronize data server single application spa involved using spring concept di ioc aop batch implementation spring mvc implemented declarative transaction management using spring aop deployed spring boot based microservices docker container using amazon ec container service using aws admin console written storm topology accept event kafka producer emit cassandra db used spring jdbc template crud operation database designed aws cloud formation template create custom sized vpc subnets nat ensure successful deployment web application database template developed module application using micro service architecture style involved building deploying script using maven generate war ear jar file leveraged zeno framework writing storm topology accept event kafka producer emit mongo db created wsdls per wire frame ui page generated client jar using jax-ws used apache cxf create soap based restful web service developed application using rule engine drool ilog corresponding validate business user role used core html tag library expressing java server face within view template wrote angularjs service consume restful web service load data explored spark kafka storm along open source project create realtime analytics framework used svn version control source repository used fisheye code review jira reporting bug worked column filter data table using jquery reactjs involved writing thread safe block multithread access make valid transaction created continuous integration build using ant jenkins docker ansible deployed websphere app server done web sphere server configuration data source connection pooling mq series queue set messaging deploying apps different server different environment like qa ist production used google map api implement location module application used spark-streaming apis perform necessary transformation action data model get data kafka near real time persists cassandra worked rest web service well node rest framework backend service used mongodb nosql database service used activemq messaging set communication application esb flow created jax-ws jax-rs web service participated migration db data base oracle db followed coding guideline implemented core java ee design pattern used ibm clear case version controlling system involved deploying application unix connect see log fixing uat production defect coordinated performance team get thread dump tuned java well db code environment java ee servlets jsp swing web sphere application server .x xml html xsd xslt xpath jaxp jaxb wsdl maven java spring mvc soap drool javascript jenkins docker ansible angularjs node.js backbone.js bootstrap ext j spring frame work- boot di aop reactjs mvc rest jax-rs cxf ibm mq series rad junit tdd aws ibm clear case soapui jprofiler selenium jndi java ee design patter adobe flex emma jira ant mongodb elastic search hp qc db ibm optimum tool google map api drool ilog linux micro service etc fnb corporation pittsburgh pa july aug full-stack java developer responsibility worked javascript validate input manipulated html element using javascript angularjs developed external javascript code used several different web page created rule file using jboss drool rule involved preparing high low-level design doc uml diagram involved psi estimation using fibonacci approach divided feature different us developed presentation layer written using html cs ext j reactjs client-side validation done using javascript jquery json designed responsive website using bootstrap grid system layout content fit different device including mobile tablet desktop configured spark streaming receive real time data kafka store stream data hdfs using scala written business logic retrieve data legacy system using web method mainframe java administered configured multiple web method installation included moving developed code various environment setting multiple database alias oracle partner server subscription used multithreading extensively improve performance application worked common ui layout defining header footer menu using jsf facelets developed spark code using scala spark-sql streaming faster testing processing data developed application using framework like strut java server face jsf spring framework used aws beanstalk deploying scaling web application service developed java php node.js python ruby ansible docker familiar server apache ii developed custom directive factory service angularjs knowledge apache spark java api worked drool configure rule per business requirement implemented ejb session bean maintain mobile session worked nosql database cassandra mongodb implemented method validate invalidate keep live session login process maintaining session credential implemented spring mvc controller module better handling client consume restful webservice sending response back client used maven repository include jar file required jdbc connection jsp tag library developed certain feature application functionality i.e crud create read update delete feature using backbone.js responsive design developed rest service talk adapter class exposed angularjs front-end worked restful web service enforced stateless client server support json change soap restful technology involved detailed analysis based requirement document worked serialize de-serialize data application using json implemented code consume message streaming data platform sdp using apache kafka used spring mvc web module involved design development new action class interact business logic designed built deployed multitude application utilizing almost aws stack including ec mongodb focusing high-availability fault tolerance auto-scaling experienced build deploy multi module application using maven ant ci cd service like jenkins docker ansible transformed navigated formatted xml document using xsl xslt xpath xsl-fo involved web sphere server configuration data source connection pooling mq series queue set messaging deploying apps different server different environment like qa ist production used ibm clear case source code version control environment java ee html xhtml dhtml j ajax jquery dojo cs servlets jsp angularjs node.js backbone.js reactjs bootstrap xml xslt xpath wsdl aws soap cxf rest jax-rs jax-ws web logic server jms maven drool eclipse jenkins docker ansible junit mongodb mockito star team tdd spring mvc ext j emma jira spring framework di aop batch strut hibernate elastic search ant hp qc coherence rally apache camel kansa city life insurance company kansa city mo nov june java ee programmer responsibility participated phase project like design development testing enhancement production support developed supported tier application ui business logic database worked impact analysis migrate existing persistence layer hibernate created injected dependency injection wire object business class expertise developing web application using spring dependency injection aop modularity designed front-end screen using jsp servlets html javascript design development user interface module using ee jsp servlets strut framework extensive use core java collection generic exception handling design pattern functionality provided installation configuration maintenance pre-prod production cloud environment including service tomcat apache jetty mongodb mysql jira exposed web service client application sharing rest response developed functionality agile methodology jira process prepared document containing detailed recommendation automation support enabling business process improvement led participated weekly marketing meeting build relationship marketing team improve problem resolution process installed configured administered tomcat server developed application using jsp java servlet xml worked db wrote sql query stored procedure trigger view integrated sql query dao implemented entity bean utilizing container-managed relationship retrieving data thoroughly unit tested application writing test case junit different scenario involved testing debugging bug fixing documentation system environment java jsp db junit eclipse weblogic log xml ee jsp jira web service servlets strut framework barclays bank sept oct java ee developer responsibility worked extensively backend comprised spring hibernate jpa used json xml format transfer data server implemented web service handle data third party interface used tool like axis create web service client developed ajax based web based ui framework created simple user interface application configuration system using mvc design pattern swing framework developed servlets jsp performing crud operation domain specific entity developed service layer using pojos spring ioc developed data access layer using hibernate dao design pattern used java message service jms loosely coupled reliable asynchronous exchange user real estate information among ee component legacy system involved working ee design pattern singleton factory dao business delegate model view controller architecture jsf spring ioc used apache poi api generate excel document data grid application extensively used spring ioc architectural model inject object based selection component like setter injection interface injection manage object involved development application based backend spring mvc architecture utilized spring mvc framework implement design pattern like ioc dependency injection spring dao data access object data transfer object business object orm mapping used spring dao handle exception database transaction like open connection result connection aborted closing connection etc utilized concept lazy initialization eager fetch based requirement increase performance within session object environment spring hibernate swing oracle maven eclipse ajax jsp html cs java script xml servlets design pattern web service singlesource computing pvt ltd. june aug java developer responsibility involved software development life cycle requirement gathering coding testing implementation used java message service jms loosely coupled reliable asynchronous exchange user real estate information among ee component legacy system involved working ee design pattern singleton factory dao business delegate model view controller architecture jsf spring ioc installed configured administered jboss server developed ui using java swing configured implemented web service specification displayed document pdf format using spring abstractpdfview developer advanced ui feature like slider crop etc using jquery dynamic web page developed using jsp servlet html javascript xml cs used cv version control extracted data ui different client using json format implemented client-side validation using javascript implemented ajax speed web application used web developer firebug ie developer toolbar debugging browser compatibility participated maintenance production support used junit test apis business logic environment web service wsdl spring swing jquery html json ajax jsp javascript web services.xml uml oracle jboss cv",
  "statistics": {
    "word_count": 3972,
    "unique_word_count": 1112,
    "avg_word_length": 4.933031218529708,
    "stopword_count": 661
  },
  "metadata": {
    "filename": "Candidate67.docx",
    "file_size": 48412,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:58.564945",
    "input_filename": "Candidate67.json"
  }
}