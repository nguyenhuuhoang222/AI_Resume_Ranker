{
  "id": "Candidate_11",
  "raw_text": "Candidate11\n(515)309-1612\n8+ years of experience in IT industry worked in all phases of software development life cycle from requirements gathering to the production and successfully implemented several projects.\nPROFESSIONAL SUMMARY:\nExpert working knowledge in using methodologies Agile Methodology & Software Development Life Cycle.\nHaving work experience in different domains like Healthcare, Banking, Finance, Telecom, and Retail.\nDeveloped applications using Java8 features like lambda expressions and functional interfaces.\nProficient in developing front-end systems with JavaScript, ReactJs, JQuery, Ajax, Bootstrap, HTML5, CSS3, Tag Libraries, Custom Tags and JavaScript frameworks such as AngularJS, NodeJS.\nExperienced in Client-side validations using Ajax in NodeJS, AngularJS, dash boards reports using BackboneJS.\nExpert in Java/J2EE technologies such as Struts, Spring Framework, JSP, EJB, Hibernate and Webservice. \nDeveloped applications with Spring using technologies Spring Core,  MVC, DAO, ORM, Boot, Heroku, Security, Integration, Spring Zuul, Spring Eureka, Spring Hystrix, Spring Ribbon.\nUsed Spring Boot Acurator to monitor and manage your application and to interact with different HTTP endpoints such as health, bean details, version details, configurations.\nBuild, Test and developed application from Docker containers and deployed into PCF environment.\nUsed Hibernate for Object Relational Mapping , MyBatis SQL Maps, Slick, and Java Ultra-Lite Persistence. \nExpertise in back-end/server side Java technologies such as webservice, JPA, JMS, JDBC.\nExpert in using SOA and Webservice Technologies and Tools like Webservice, SOAP, REST, UDDI, SOAP UI. \nExperience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM Parsers.\nAdapt in server side development skills using Apache and good knowledge of database connectivity (Data Source) for SQL databases like Oracle, MySQL and NoSQL like MongoDB,  Cassandra.\nMongoDB is used to develop dynamic queries on documents using a document based query language.\nExpertise in using Cassandra for achieving denormalization through features like collections.\nHands on experience on Amazon Webservice  provisioning and good knowledge of AWS services like EC2, S3, Elastic Beanstalk, ELB (Load Balancers), RDS, VPC, Route53, Cloud Watch, Cloud Formation, IAM, SNS.\nUsed Microservice with Spring Boot through a combination of REST and Apache Kafka message brokers.\nExpertise in Microservice using Spring, Spring Boot, Spring Cloud to develop loosely coupled processes.\nExpertise in deploy J2EE applications on IBM WebSphere/Web Logic Application Servers, Tomcat and JBOSS. \nUsed Scala for anonymous functions to increase productivity, applications scalability, and reliability.\nFamiliar with Design Patterns like Singleton, Factory Design, MVC, Data Access Objects, , Adapter, Service Locator, Session Facade, Observer, DAO, service proxy and circuit breaker.  \nUsed Apigee for enterprise business use APIs to securely share data and services across various devices.\nExpertise in Docker containers, leveraging Linux Containers and AMI's to create DockerImages/containers.\nUsed Swagger for designing and describing APIs and for keeping the API design and documentation in sync.\nExpertise in working on building tools like ANT, Maven, Gradle, Groovy, Log4j .\nWorked with Version Control Systems like GIT, WinCVS, CVS, SVN, VSS and Rational Clear Case. \nExperience in Webservice Technologies like SOAP, WSDL, UDDI and Restful. \nExperience in various Agile methodologies like Test Driven Development, SCRUM, and Pair Programming. \nDeveloping Unit  & Integration testing with JUnit, Karma, Jenkins, Camel, Selenium, Jasmine and Mockito.\nUsed Selenium as an automated testing for web applications across different browser and platforms.\n Technical Skills:\nPROFESSIONAL EXPERIENCE:\nClient: Liberty Mutual, Dover, NH                                                                                        September 2017 – Till Date\nRole: JAVA Full Stack Developer\nDescription: Liberty Mutual is an insurance company which offers auto & vehicle insurance, property insurance, life insurance and other insurances where user can manage their policies and file claims online. Company have few external partners where they upload and download necessary data. Our project is to process the transfer of file. Customer and Admin portals are used to trace and configure the transfer. Web Based File Transfer(WBFT) is developed to interact with liberty mutual teams by external trading partners using user interface.\n       Responsibilities:\nUpgraded existing UI with HTML5, CSS3, jQuery, Ajax, and Bootstrap with ReactJS interaction. \nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors, and Gulp as a task runner.\nUsed Node Package Manager(NPM) online repository to install and update the dependencies.\nBuilt REST by building NodeJS in the back-end to handle requests sent from the jQuery Ajax calls.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nUsed NGINX as a reverse proxy with the Spring Netflix components like Eureka, Ribbon, and Spring Cloud.\nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger Lambda Functions Including EC2.\nDeveloped Spring Bach for AWS S3 rules like User Creation, Folder Permission, and deletion of file \nUsed PL/SQL and Oracle databases to store the information about the file transaction, sender, and receiver.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nExperience in working with messaging systems like Kafka, Event Sourcing, and Active MQ.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Datahub dashboard to search and filter the transactions and used elastic search as a search engine.\nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Bamboo for continuous integration.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n      Environment: J2EE, ReactJs, jQuery, CSS3, HTML5, Ajax, NodeJS, Gulp, Core Java, Spring IOC, Spring MVC, \n      Spring Batch, Security, Spring Boot, Hibernate, Microservice, Eureka Server, NGINX, Swagger-UI, \n      Apache Kafka, AWS Cloud, AWS Lambda, S3, EC2, Scala, Datahub, REST Webservice, JAX-WS, SOAP UI, \n      JDBC, PL/SQL, ActiveMQ, JIRA, Bamboo, SVN, GIT, log4j, Junit, Selenium, JMS Queues, WebSphere.\nClient: Express Scripts, St. Louis, MO                                                                                         April 2016 – August 2017\nRole: JAVA Full Stack Developer\nDescription: Express Scripts provides integrated pharmacy benefit management services including network-pharmacy, claims processing, home delivery pharmacy services, specialty pharmacy benefit management through its subsidiary Accredit, benefit-design consultation, drug-utilization review, formulary management, medical and drug data analysis services to manage drug plans for health plans, self-insured employers and government agencies (both as administrator of employee benefits and public assistance programs).\n       Responsibilities:\nDesigned Prototype and project layout skeletons using AngularJS, JQuery, CSS3 and HTML5. \nInvolved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. \nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nUsed Apache Cordova to build native mobile applications using HTML5, CSS3 and Javascript.\nXQuery provides the means to extract and manipulate data from XML documents or any data source that can be viewed as XML.\nUsed Adobe Experience manager(AEM) to manage and deliver digital experiences across websites.\nUsed Groovy for various markup languages such as XML, HTML, and support for regular expressions.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nUsed Java8 Stream API for Parallel execution in the Collections framework module of core java.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring DI, annotations, and MVC to implement business layer and navigation part of application. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda Functions Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling.\nDatabase required for creation of new tables, PL/SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application.\nUsed Cassandra to handle huge amount of data across many servers with out single point of failure.\nImplemented service layer on the top of Cassandra using Core Java, Data Sax API and Restful API.\nUsed PostgreSQL for multi version concurrency control and transaction.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Redis as in memory database, for storing and fetching data in memory to increase the performance.\nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nWorked on Drools Rule Engines with corresponding to validate the business User Roles.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base.\nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Jenkins for continuous integration.\nUsed Apache Camel for integrating different applications with the enterprise design pattern. \nUsed Kubernetes for automating deployment, scaling and management of containerized applications.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nDeveloped Maven scripts and builds using Maven and continuous integration servers like Jenkins.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nDeveloped, Tested and Debugged the Java, JSP using Eclipse RCP. \nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n      Environment: J2EE, AngularJS, jQuery, CSS3, HTML5, Ajax, Core Java, Spring IOC, Spring MVC, Spring \n      Security, Spring Boot, Hibernate, Microservice, Eureka Server, Swagger-UI, Apache Kafka, AWS Cloud, \n      AWS Lambda, S3, EC2, Scala, MongoDB, REST Webservice, JAX-WS, SOAP UI, JDBC, PL/SQL, PostgreSQL,JIRA, \n      GIT, SVN, log4j, Maven, Apache Camel, Junit, Mockito, Jenkins, JMS Queues.\n      Client: Commerce Bank, Kansas City, MO                                                                    Jan 2015 – Mar 2016\n      Role: Sr. JAVA/J2EE Developer & Full Stack Developer\n      Description: The project was to enhance the existing online application with A/C Information, Funds  \n      Transfer, Payment Service, Credit Card Services, Investment Services, Rates Online Application Forms,\n      and Customer Service. Development was based on Spring MVC architecture.\n       Responsibilities:\nFollowed Agile software development paired programming, Test Driven Development, and Scrum meetings.\nDeveloped using new features of Java 1.8 annotations, Generics, enhanced for loop and Enums.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDeveloped Single page application and structured the JavaScript code using AngularJS framework including MVC architectures, different modules, specific controllers, templates, custom directives, and custom filters.\nWorked with java Swing GUI controls for developing a module in the front-end part.\nUsed Java-J2EE patterns like Model View Controller, Singleton, Data Access Objects, factory patterns.\nUsed Core Java concept like Multithreading, Concurrency for performance and memory tuning.\nUsed Spring Framework AOP Module to implement logging in the application for application status.\nSpring MVC Framework IOC design pattern is used to have relationships between application components.  \nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDeveloped Spring Quartz jobs to run the backend jobs and generated reports.\nUsed Hibernate for back end development and Spring dependency injection for middle layer development.\nDeveloped SOAP based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability\t\nDeveloped Microservice and worked on Spring Boot, deployed applications on Pivotal Cloud Foundry. \nUsed DAO pattern to fetch data from database using Hibernate to carry out various database.\nUsed PL/SQL to extract data from the database, delete data and reload data on Oracle DB. \nDeveloped Applications using Rule Engines- JBoss Drools 4.x to validate the business User Roles.\nWorked with Apache Camel as a standalone application by deploying in JBOSS application server. \nUsed Docker to deploy applications using containers to allow package up application with all configuations. \nUsed Spring Boot to interact through a combination of REST and Apache Kafka message brokers\nWorked on development and operations to facilitate deployment of components over AWS using Jenkins.\nUsed SVN, GIT for the version management and for version controlling software and JIRA for issue tracking.\nEnvironment:  Java 1.8, HTML5, CSS3, iQuery, Bootstrap, AngularJs, Swing, Threading, AWS cloud, Spring MVC, \nSpring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, Microservices, PL/SQL, Oracle DB, Cassandra, JBoss Drools 4.x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA.\nClient: E-Trade Financial Corporation, Exchange Place                                               July 2012 – Dec 2014\nRole: Sr. JAVA/J2EE Developer\n       Description: E-Trade Financial Corporation is a U.S based financial services company headquartered in   \n       New York. It is a holding company, the major business of which is an online discount stock brokerage\n       service for self-directed investors.\n Responsibilities:\nPrepared Analysis document and followed AGILE software development with Scrum methodology.\nDeveloped the application on NodeJS platform using JavaScript programming.\nUsed JavaScript and JQuery for validating the input given to the user interface. \nApplied data transformation rules to transform code from one format to another format using NodeJS.\nCreated the Nodejs express server to build MVC framework from front-end side AngularJS to back-end.\nDeveloped front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object.\nExtensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate.\nWorked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. \nInvolved in the development of backend Logics or data access logic using Oracle DB & JDBC. \nDeveloped API using Hibernate to interact with the Oracle database. \nExpertise in Multithreading, Remote Method Invocation (RMI), EJB, Serialization, and Java Beans.\nWorked extensively on SPRING MVC framework to develop new internal web application.\nUsed Spring AOP components for the Logging, Exception handling and Transactional Models.\nEnforce compliance with dynamic processing and security policies by using Mule ESB. \nDeveloped Spring boot application with microservice and deployed it into AWS using EC2 instances. \nUses the DAO pattern for data access layer and JMS API for the messaging requirement.\nDesign PL/SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling.\nTest API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data.\nDeveloped test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs.\nDeveloped and executed SQL queries for testing database integrity and for data analysis using Selenium. \nDeveloped automated regression test cases in Selenium WebDriver using Java programming language. \nUsed Maven to build and generate code analysis reports and JENKINS for continuous integration.\nUsed WebLogic for design, development, and deployment of applications.\nEnvironment: Java, J2EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, AngularJs, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL/SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe (CQ5), Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium.\nClient: US Cellular - Chicago, IL                                                                                                     April 2011 – June 2012\nRole: Java Developer\nDescription: US Cellular is the fifth-largest full-service wireless carrier in the United States, providing     national network coverage and industry-leading innovations designed to elevate the customer experience. The Chicago-based carrier has a strong line-up of cutting-edge devices that are all backed by a high-quality network in big and small cities and rural communities, and currently.        \nResponsibilities:\nSprint planning sessions and participated in the daily Agile SCRUM meetings.\nDesigned and implemented web module using SPRING MVC.\nDesigned & Developed persistence service using Hibernate framework.\nDevelop high-level class diagrams, sequence diagrams, and implement the same in Java, SPRING, and SOAP.\nDeveloped web screens in JSP, JSTL, CSS3 and client side validation using JavaScript and JQuery.\nUsed Struts validation and tiles framework in the presentation layer and tags to simplify complexities. \nDeveloped JSP  custom tags in the web tier to dynamically generate web pages. Worked with Struts (MVC Paradigm) components such as Action Mapping, Action class, Dispatch action class, Action Form bean. \nUsed SPRING ORM module for integration with Hibernate for persistence layer.\nUsed SPRING AOP in exception handling, which reduces the development time to handle the exceptions.\nDeveloped SOAP based Webservice using JAX-WS and tested the webservice with SOAPUI.s\nUsed JIRA for defect tracking and project management.\nUsed STS (SPRING Tool Suite) as software development platform for developing the whole application.\nUsed SVN for the version management and for version controlling software.\nConfigured Selenium WebDriver, TestNG, Maven and created selenium automation scripts using Test NG. \nPerformed functional testing to identify critical points  and automated it by using Selenium web driver. \nUnit and integration test cases are designed  using Junit and Log4j for log error, info and debug messages.\nTested Service and data access tier using JUnit in TDD methodology.\nFollowed Agile SCRUM methodology and used Test Driven Development (TDD). \nProject builds with Maven and Eclipse as IDE for application development and integration of  frameworks.\nUsed Apache Tomcat as application server to deploy the application.\nEnvironment: Java/J2EE, JSP, Spring, Servlet, JDBC, Hibernate, Soap, SPRING, Struts, XML/XSL, DB2, JUnit, JSTL, Jira, Eclipse, SOAP Webservice, Selenium, TDD, SOAP UI, AJAX-WS RAD, Log4j, SQL, Maven, Tomcat, Log4j, WebLogic.\n Client: Footlocker -  New York, NY                                                                                                           Oct 2009 – Mar 2011\n Role: JAVA/J2EE Developer\n Description: This is an internet based online shopping website in which products will be sold                         electronically involving buyers and sellers. The application also has googled map to represent the address. The products that this application sell, or buy are related to electronic products, consumer products and household products.\nResponsibilities:\nInvolved in the complete Software Development Life Cycle including Requirement Analysis, Design, Implementation, Testing and Maintenance.\nDeveloped JSP, HTML5, XHTML5, CSS3 pages for modified views worked on responsive web design.\nWrote Code to interact with back-end JAVA, AJAX, JSON.\nUsed AJAX with JQuery to parse JSON object to dynamically overlay contents on web pages.\nUsed JSF components and custom styles to convert model output to a tabular schedule view for trainees.\nResponsible for system analysis, design and development, which is built on top of J2EE and SPRING MVC.\nInvolved in various phases of Software Development Life Cycle using Agile Methodology.\nDeveloped code for obtaining bean references in SPRING framework using Dependency Injection.\nDeveloped DAO layer using Hibernate and SPRING and implemented the web tier using SPRING MVC.\nUsed Java/J2EE Design Patterns such as DAO pattern, MVC pattern, singleton in the project extensively, which facilitates clean distribution of roles and responsibilities across various layers of processing.\nInvolved in consuming and developing RESTful Webservice using SPRING MVC and Hibernate.\nImplemented Maven Script to create JAR, WAR, EAR and deploy the entire project onto the WebSphere.\nUsed Oracle SQL developer for the writing queries or procedures in SQL.\nMonitored the error logs using Log4J and fixed the problems and GIT, SVN for version control.\nUsed WebSphere as the Application Server to deploy the application.\nUsed JUnit for the unit testing of various modules.\nEnvironment: Java/J2EE, Eclipse, JSP, SOAP, RESTful, JMS,AJAX, JSON, SPRING, Hibernate, XML, XSLT, HTML5, XHTML5, CSS3, JavaScript, JSF, WebSphere, Oracle SQL Developer, Maven, Agile scrum, Integration tool, Log4J, GIT, JUnit.\nClient: YANA Software Pvt., LTD - China.                                                                    Sep 2008- Sep 2009  \nRole: JAVA/J2EE Developer\nDescription:  The product was online banking system which provides personal savings details to the clients. It offers a wide range of financial clients and as per users account status offers him to take up the new schemes. Upon the user request it generates the corresponding requests and sends to the user.\nResponsibilities: \nDeveloped presentation screens by using JSP, HTML and JavaScript.\nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action   Classes for the entire application using Struts Framework and used for server side validation..\nPerformed client side validations using JavaScript.\nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer.\nUsed HQL statements and procedures to fetch the data from the database.\nTransformed, Navigated and Formatted XML documents using XSL, XSLT.\nUsed JMS for asynchronous exchange of message by applications on different platforms.\nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries.\nInvolved in developing SQL queries, stored procedures, and functions.\nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL.\nUsed JUnit Testing Framework for performing Unit testing.\nDeployed application in Tomcat and developed using Rational Application Developer RAD.\n Environment: Struts 2.0, Hibernate 3.0, Servlets 2.5, JSP, JMS, CVS, JavaScript, XSL, XSLT, PL/SQL, Junit, Tomcat, Oracle 10g.                                                                                 ",
  "cleaned_text": "Candidate years of experience in IT industry worked in all phases of software development life cycle from requirements gathering to the production and successfully implemented several projects. PROFESSIONAL SUMMARY Expert working knowledge in using methodologies Agile Methodology & Software Development Life Cycle. Having work experience in different domains like Healthcare, Banking, Finance, Telecom, and Retail. Developed applications using Java features like lambda expressions and functional interfaces. Proficient in developing front-end systems with JavaScript, ReactJs, JQuery, Ajax, Bootstrap, HTML , CSS , Tag Libraries, Custom Tags and JavaScript frameworks such as AngularJS, NodeJS. Experienced in Client-side validations using Ajax in NodeJS, AngularJS, dash boards reports using BackboneJS. Expert in Java J EE technologies such as Struts, Spring Framework, JSP, EJB, Hibernate and Webservice. Developed applications with Spring using technologies Spring Core, MVC, DAO, ORM, Boot, Heroku, Security, Integration, Spring Zuul, Spring Eureka, Spring Hystrix, Spring Ribbon. Used Spring Boot Acurator to monitor and manage your application and to interact with different HTTP endpoints such as health, bean details, version details, configurations. Build, Test and developed application from Docker containers and deployed into PCF environment. Used Hibernate for Object Relational Mapping , MyBatis SQL Maps, Slick, and Java Ultra-Lite Persistence. Expertise in back-end server side Java technologies such as webservice, JPA, JMS, JDBC. Expert in using SOA and Webservice Technologies and Tools like Webservice, SOAP, REST, UDDI, SOAP UI. Experience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM Parsers. Adapt in server side development skills using Apache and good knowledge of database connectivity Data Source for SQL databases like Oracle, MySQL and NoSQL like MongoDB, Cassandra. MongoDB is used to develop dynamic queries on documents using a document based query language. Expertise in using Cassandra for achieving denormalization through features like collections. Hands on experience on Amazon Webservice provisioning and good knowledge of AWS services like EC , S , Elastic Beanstalk, ELB Load Balancers , RDS, VPC, Route , Cloud Watch, Cloud Formation, IAM, SNS. Used Microservice with Spring Boot through a combination of REST and Apache Kafka message brokers. Expertise in Microservice using Spring, Spring Boot, Spring Cloud to develop loosely coupled processes. Expertise in deploy J EE applications on IBM WebSphere Web Logic Application Servers, Tomcat and JBOSS. Used Scala for anonymous functions to increase productivity, applications scalability, and reliability. Familiar with Design Patterns like Singleton, Factory Design, MVC, Data Access Objects, , Adapter, Service Locator, Session Facade, Observer, DAO, service proxy and circuit breaker. Used Apigee for enterprise business use APIs to securely share data and services across various devices. Expertise in Docker containers, leveraging Linux Containers and AMI s to create DockerImages containers. Used Swagger for designing and describing APIs and for keeping the API design and documentation in sync. Expertise in working on building tools like ANT, Maven, Gradle, Groovy, Log j . Worked with Version Control Systems like GIT, WinCVS, CVS, SVN, VSS and Rational Clear Case. Experience in Webservice Technologies like SOAP, WSDL, UDDI and Restful. Experience in various Agile methodologies like Test Driven Development, SCRUM, and Pair Programming. Developing Unit & Integration testing with JUnit, Karma, Jenkins, Camel, Selenium, Jasmine and Mockito. Used Selenium as an automated testing for web applications across different browser and platforms. Technical Skills PROFESSIONAL EXPERIENCE Client Liberty Mutual, Dover, NH September Till Date Role JAVA Full Stack Developer Description Liberty Mutual is an insurance company which offers auto & vehicle insurance, property insurance, life insurance and other insurances where user can manage their policies and file claims online. Company have few external partners where they upload and download necessary data. Our project is to process the transfer of file. Customer and Admin portals are used to trace and configure the transfer. Web Based File Transfer WBFT is developed to interact with liberty mutual teams by external trading partners using user interface. Responsibilities Upgraded existing UI with HTML , CSS , jQuery, Ajax, and Bootstrap with ReactJS interaction. Used various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors, and Gulp as a task runner. Used Node Package Manager NPM online repository to install and update the dependencies. Built REST by building NodeJS in the back-end to handle requests sent from the jQuery Ajax calls. Used Java Lambda expressions to facilitate functional programming and for simplifying the development. Developed classes using core java concepts like Multithreading, Concurrency, Memory Management. Used Multithreading to develop various helper classes in programming to improve overall performance. Used Spring Boot Actuator to externalize application s configuration properties for various environments. Configured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console. Used NGINX as a reverse proxy with the Spring Netflix components like Eureka, Ribbon, and Spring Cloud. Developed microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice. Defined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice. Microservice have been built using Spring Boot, Spring security and deployed to AWS cloud. Used Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging. Utilized AWS Lambda platform to upload data into AWS S buckets and to trigger Lambda Functions Including EC . Developed Spring Bach for AWS S rules like User Creation, Folder Permission, and deletion of file Used PL SQL and Oracle databases to store the information about the file transaction, sender, and receiver. Developed several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. Exposed and consumed SOAP based Webservice to communicate between systems. Developed several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. Used Apache Kafka for building real time data pipelines and for storing data in a distributed cluster. Experience in working with messaging systems like Kafka, Event Sourcing, and Active MQ. Used SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP. Used Datahub dashboard to search and filter the transactions and used elastic search as a search engine. Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects. Developed Unit test cases using Junit, Mockito and Bamboo for continuous integration. Used Docker to collaborate code, run and deliver more securely for both Linux, Windows Server. Used log j for logging and GIT, SVN for project management and version management. Functional testing of the front-end applications is done using Selenium IDE and Web Driver . Created Clusters and instances in WebSphere . Network Deployment to support high availability, fail over and implemented horizontal clustering. Environment J EE, ReactJs, jQuery, CSS , HTML , Ajax, NodeJS, Gulp, Core Java, Spring IOC, Spring MVC, Spring Batch, Security, Spring Boot, Hibernate, Microservice, Eureka Server, NGINX, Swagger-UI, Apache Kafka, AWS Cloud, AWS Lambda, S , EC , Scala, Datahub, REST Webservice, JAX-WS, SOAP UI, JDBC, PL SQL, ActiveMQ, JIRA, Bamboo, SVN, GIT, log j, Junit, Selenium, JMS Queues, WebSphere. Client Express Scripts, St. Louis, MO April August Role JAVA Full Stack Developer Description Express Scripts provides integrated pharmacy benefit management services including network-pharmacy, claims processing, home delivery pharmacy services, specialty pharmacy benefit management through its subsidiary Accredit, benefit-design consultation, drug-utilization review, formulary management, medical and drug data analysis services to manage drug plans for health plans, self-insured employers and government agencies both as administrator of employee benefits and public assistance programs . Responsibilities Designed Prototype and project layout skeletons using AngularJS, JQuery, CSS and HTML . Involved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. Used various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors. Used Apache Cordova to build native mobile applications using HTML , CSS and Javascript. XQuery provides the means to extract and manipulate data from XML documents or any data source that can be viewed as XML. Used Adobe Experience manager AEM to manage and deliver digital experiences across websites. Used Groovy for various markup languages such as XML, HTML, and support for regular expressions. Used Java Lambda expressions to facilitate functional programming and for simplifying the development. Used Java Stream API for Parallel execution in the Collections framework module of core java. Developed classes using core java concepts like Multithreading, Concurrency, Memory Management. Used Multithreading to develop various helper classes in programming to improve overall performance. Used Spring DI, annotations, and MVC to implement business layer and navigation part of application. Used Spring Boot Actuator to externalize application s configuration properties for various environments. Configured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console. Defined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice. Microservice have been built using Spring Boot, Spring security and deployed to AWS cloud. Used Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging. Utilized AWS Lambda platform to upload data into AWS S buckets and to trigger other Lambda Functions Including EC , MongoDB focusing on high-availability, fault tolerance, and auto-scaling. Database required for creation of new tables, PL SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application. Used Cassandra to handle huge amount of data across many servers with out single point of failure. Implemented service layer on the top of Cassandra using Core Java, Data Sax API and Restful API. Used PostgreSQL for multi version concurrency control and transaction. Developed several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. Exposed and consumed SOAP based Webservice to communicate between systems. Developed several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. Used Redis as in memory database, for storing and fetching data in memory to increase the performance. Used Apache Kafka for building real time data pipelines and for storing data in a distributed cluster. Worked on Drools Rule Engines with corresponding to validate the business User Roles. Used SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP. Used Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base. Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects. Developed Unit test cases using Junit, Mockito and Jenkins for continuous integration. Used Apache Camel for integrating different applications with the enterprise design pattern. Used Kubernetes for automating deployment, scaling and management of containerized applications. Used Docker to collaborate code, run and deliver more securely for both Linux, Windows Server. Developed Maven scripts and builds using Maven and continuous integration servers like Jenkins. Used log j for logging and GIT, SVN for project management and version management. Functional testing of the front-end applications is done using Selenium IDE and Web Driver . Developed, Tested and Debugged the Java, JSP using Eclipse RCP. Created Clusters and instances in WebSphere . Network Deployment to support high availability, fail over and implemented horizontal clustering. Environment J EE, AngularJS, jQuery, CSS , HTML , Ajax, Core Java, Spring IOC, Spring MVC, Spring Security, Spring Boot, Hibernate, Microservice, Eureka Server, Swagger-UI, Apache Kafka, AWS Cloud, AWS Lambda, S , EC , Scala, MongoDB, REST Webservice, JAX-WS, SOAP UI, JDBC, PL SQL, PostgreSQL,JIRA, GIT, SVN, log j, Maven, Apache Camel, Junit, Mockito, Jenkins, JMS Queues. Client Commerce Bank, Kansas City, MO Jan Mar Role Sr. JAVA J EE Developer & Full Stack Developer Description The project was to enhance the existing online application with A C Information, Funds Transfer, Payment Service, Credit Card Services, Investment Services, Rates Online Application Forms, and Customer Service. Development was based on Spring MVC architecture. Responsibilities Followed Agile software development paired programming, Test Driven Development, and Scrum meetings. Developed using new features of Java . annotations, Generics, enhanced for loop and Enums. Upgraded existing UI with HTML , CSS , jQuery and Bootstrap with AngularJS interaction. Developed Single page application and structured the JavaScript code using AngularJS framework including MVC architectures, different modules, specific controllers, templates, custom directives, and custom filters. Worked with java Swing GUI controls for developing a module in the front-end part. Used Java-J EE patterns like Model View Controller, Singleton, Data Access Objects, factory patterns. Used Core Java concept like Multithreading, Concurrency for performance and memory tuning. Used Spring Framework AOP Module to implement logging in the application for application status. Spring MVC Framework IOC design pattern is used to have relationships between application components. Developed microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice. Developed Spring Quartz jobs to run the backend jobs and generated reports. Used Hibernate for back end development and Spring dependency injection for middle layer development. Developed SOAP based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability Developed Microservice and worked on Spring Boot, deployed applications on Pivotal Cloud Foundry. Used DAO pattern to fetch data from database using Hibernate to carry out various database. Used PL SQL to extract data from the database, delete data and reload data on Oracle DB. Developed Applications using Rule Engines- JBoss Drools .x to validate the business User Roles. Worked with Apache Camel as a standalone application by deploying in JBOSS application server. Used Docker to deploy applications using containers to allow package up application with all configuations. Used Spring Boot to interact through a combination of REST and Apache Kafka message brokers Worked on development and operations to facilitate deployment of components over AWS using Jenkins. Used SVN, GIT for the version management and for version controlling software and JIRA for issue tracking. Environment Java . , HTML , CSS , iQuery, Bootstrap, AngularJs, Swing, Threading, AWS cloud, Spring MVC, Spring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, Microservices, PL SQL, Oracle DB, Cassandra, JBoss Drools .x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA. Client E-Trade Financial Corporation, Exchange Place July Dec Role Sr. JAVA J EE Developer Description E-Trade Financial Corporation is a U.S based financial services company headquartered in New York. It is a holding company, the major business of which is an online discount stock brokerage service for self-directed investors. Responsibilities Prepared Analysis document and followed AGILE software development with Scrum methodology. Developed the application on NodeJS platform using JavaScript programming. Used JavaScript and JQuery for validating the input given to the user interface. Applied data transformation rules to transform code from one format to another format using NodeJS. Created the Nodejs express server to build MVC framework from front-end side AngularJS to back-end. Developed front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object. Extensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate. Worked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. Involved in the development of backend Logics or data access logic using Oracle DB & JDBC. Developed API using Hibernate to interact with the Oracle database. Expertise in Multithreading, Remote Method Invocation RMI , EJB, Serialization, and Java Beans. Worked extensively on SPRING MVC framework to develop new internal web application. Used Spring AOP components for the Logging, Exception handling and Transactional Models. Enforce compliance with dynamic processing and security policies by using Mule ESB. Developed Spring boot application with microservice and deployed it into AWS using EC instances. Uses the DAO pattern for data access layer and JMS API for the messaging requirement. Design PL SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling. Test API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data. Developed test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs. Developed and executed SQL queries for testing database integrity and for data analysis using Selenium. Developed automated regression test cases in Selenium WebDriver using Java programming language. Used Maven to build and generate code analysis reports and JENKINS for continuous integration. Used WebLogic for design, development, and deployment of applications. Environment Java, J EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, AngularJs, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe CQ , Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium. Client US Cellular - Chicago, IL April June Role Java Developer Description US Cellular is the fifth-largest full-service wireless carrier in the United States, providing national network coverage and industry-leading innovations designed to elevate the customer experience. The Chicago-based carrier has a strong line-up of cutting-edge devices that are all backed by a high-quality network in big and small cities and rural communities, and currently. Responsibilities Sprint planning sessions and participated in the daily Agile SCRUM meetings. Designed and implemented web module using SPRING MVC. Designed & Developed persistence service using Hibernate framework. Develop high-level class diagrams, sequence diagrams, and implement the same in Java, SPRING, and SOAP. Developed web screens in JSP, JSTL, CSS and client side validation using JavaScript and JQuery. Used Struts validation and tiles framework in the presentation layer and tags to simplify complexities. Developed JSP custom tags in the web tier to dynamically generate web pages. Worked with Struts MVC Paradigm components such as Action Mapping, Action class, Dispatch action class, Action Form bean. Used SPRING ORM module for integration with Hibernate for persistence layer. Used SPRING AOP in exception handling, which reduces the development time to handle the exceptions. Developed SOAP based Webservice using JAX-WS and tested the webservice with SOAPUI.s Used JIRA for defect tracking and project management. Used STS SPRING Tool Suite as software development platform for developing the whole application. Used SVN for the version management and for version controlling software. Configured Selenium WebDriver, TestNG, Maven and created selenium automation scripts using Test NG. Performed functional testing to identify critical points and automated it by using Selenium web driver. Unit and integration test cases are designed using Junit and Log j for log error, info and debug messages. Tested Service and data access tier using JUnit in TDD methodology. Followed Agile SCRUM methodology and used Test Driven Development TDD . Project builds with Maven and Eclipse as IDE for application development and integration of frameworks. Used Apache Tomcat as application server to deploy the application. Environment Java J EE, JSP, Spring, Servlet, JDBC, Hibernate, Soap, SPRING, Struts, XML XSL, DB , JUnit, JSTL, Jira, Eclipse, SOAP Webservice, Selenium, TDD, SOAP UI, AJAX-WS RAD, Log j, SQL, Maven, Tomcat, Log j, WebLogic. Client Footlocker - New York, NY Oct Mar Role JAVA J EE Developer Description This is an internet based online shopping website in which products will be sold electronically involving buyers and sellers. The application also has googled map to represent the address. The products that this application sell, or buy are related to electronic products, consumer products and household products. Responsibilities Involved in the complete Software Development Life Cycle including Requirement Analysis, Design, Implementation, Testing and Maintenance. Developed JSP, HTML , XHTML , CSS pages for modified views worked on responsive web design. Wrote Code to interact with back-end JAVA, AJAX, JSON. Used AJAX with JQuery to parse JSON object to dynamically overlay contents on web pages. Used JSF components and custom styles to convert model output to a tabular schedule view for trainees. Responsible for system analysis, design and development, which is built on top of J EE and SPRING MVC. Involved in various phases of Software Development Life Cycle using Agile Methodology. Developed code for obtaining bean references in SPRING framework using Dependency Injection. Developed DAO layer using Hibernate and SPRING and implemented the web tier using SPRING MVC. Used Java J EE Design Patterns such as DAO pattern, MVC pattern, singleton in the project extensively, which facilitates clean distribution of roles and responsibilities across various layers of processing. Involved in consuming and developing RESTful Webservice using SPRING MVC and Hibernate. Implemented Maven Script to create JAR, WAR, EAR and deploy the entire project onto the WebSphere. Used Oracle SQL developer for the writing queries or procedures in SQL. Monitored the error logs using Log J and fixed the problems and GIT, SVN for version control. Used WebSphere as the Application Server to deploy the application. Used JUnit for the unit testing of various modules. Environment Java J EE, Eclipse, JSP, SOAP, RESTful, JMS,AJAX, JSON, SPRING, Hibernate, XML, XSLT, HTML , XHTML , CSS , JavaScript, JSF, WebSphere, Oracle SQL Developer, Maven, Agile scrum, Integration tool, Log J, GIT, JUnit. Client YANA Software Pvt., LTD - China. Sep - Sep Role JAVA J EE Developer Description The product was online banking system which provides personal savings details to the clients. It offers a wide range of financial clients and as per users account status offers him to take up the new schemes. Upon the user request it generates the corresponding requests and sends to the user. Responsibilities Developed presentation screens by using JSP, HTML and JavaScript. Implemented Model View Controller MVC- architecture and developed Form classes, Action Classes for the entire application using Struts Framework and used for server side validation.. Performed client side validations using JavaScript. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from the database. Transformed, Navigated and Formatted XML documents using XSL, XSLT. Used JMS for asynchronous exchange of message by applications on different platforms. Developed the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. Involved in developing SQL queries, stored procedures, and functions. Creation of database objects like tables, views using oracle tools like Toad, and SQL plus. Involved in writing Stored Procedure in using PL SQL. Used JUnit Testing Framework for performing Unit testing. Deployed application in Tomcat and developed using Rational Application Developer RAD. Environment Struts . , Hibernate . , Servlets . , JSP, JMS, CVS, JavaScript, XSL, XSLT, PL SQL, Junit, Tomcat, Oracle g.",
  "preprocessed_text": "candidate year experience industry worked phase software development life cycle requirement gathering production successfully implemented several project professional summary expert working knowledge using methodology agile methodology software development life cycle work experience different domain like healthcare banking finance telecom retail developed application using java feature like lambda expression functional interface proficient developing front-end system javascript reactjs jquery ajax bootstrap html cs tag library custom tag javascript framework angularjs nodejs experienced client-side validation using ajax nodejs angularjs dash board report using backbonejs expert java ee technology strut spring framework jsp ejb hibernate webservice developed application spring using technology spring core mvc dao orm boot heroku security integration spring zuul spring eureka spring hystrix spring ribbon used spring boot acurator monitor manage application interact different endpoint health bean detail version detail configuration build test developed application docker container deployed pcf environment used hibernate object relational mapping mybatis sql map slick java ultra-lite persistence expertise back-end server side java technology webservice jpa jms jdbc expert using soa webservice technology tool like webservice soap rest uddi soap ui experience xml related technology like xml dtd xsl xslt xpath jaxb jaxp sax dom parser adapt server side development skill using apache good knowledge database connectivity data source sql database like oracle mysql nosql like mongodb cassandra mongodb used develop dynamic query document using document based query language expertise using cassandra achieving denormalization feature like collection hand experience amazon webservice provisioning good knowledge aws service like ec elastic beanstalk elb load balancer rds vpc route cloud watch cloud formation iam sn used microservice spring boot combination rest apache kafka message broker expertise microservice using spring spring boot spring cloud develop loosely coupled process expertise deploy ee application ibm websphere web logic application server tomcat jboss used scala anonymous function increase productivity application scalability reliability familiar design pattern like singleton factory design mvc data access object adapter service locator session facade observer dao service proxy circuit breaker used apigee enterprise business use apis securely share data service across various device expertise docker container leveraging linux container ami create dockerimages container used swagger designing describing apis keeping api design documentation sync expertise working building tool like ant maven gradle groovy log worked version control system like git wincvs cv svn vss rational clear case experience webservice technology like soap wsdl uddi restful experience various agile methodology like test driven development scrum pair programming developing unit integration testing junit karma jenkins camel selenium jasmine mockito used selenium automated testing web application across different browser platform technical skill professional experience client liberty mutual dover nh september till role java full stack developer description liberty mutual insurance company offer auto vehicle insurance property insurance life insurance insurance user manage policy file claim online company external partner upload download necessary data project process transfer file customer admin portal used trace configure transfer web based file transfer wbft developed interact liberty mutual team external trading partner using user interface responsibility upgraded existing ui html cs jquery ajax bootstrap reactjs interaction used various jquery bootstrap plug-in like picker bootstrap selector gulp task runner used node package manager npm online repository install update dependency built rest building nodejs back-end handle request sent jquery ajax call used java lambda expression facilitate functional programming simplifying development developed class using core java concept like multithreading concurrency memory management used multithreading develop various helper class programming improve overall performance used spring boot actuator externalize application configuration property various environment configured swagger-ui registered microservice eureka monitor service spring boot console used nginx reverse proxy spring netflix component like eureka ribbon spring cloud developed microservices spring eureka retrieve api route implemented spring circuit breaker pattern integrated hystrix dashboard monitor spring microservice defined hibernate named query batch operation defined criterion query microservice microservice built using spring boot spring security deployed aws cloud used spring cloud aws core spring cloud aws context spring cloud aws messaging utilized aws lambda platform upload data aws bucket trigger lambda function including ec developed spring bach aws rule like user creation folder permission deletion file used pl sql oracle database store information file transaction sender receiver developed several rest webservice produce xml json perform task leveraged web mobile application restful webservice using jersey jax-rs implementation exposed consumed soap based webservice communicate system developed several soap based jax-ws webservice interface integrating multiple system code re-usability jmeter test performance soap protocol used apache kafka building real time data pipeline storing data distributed cluster experience working messaging system like kafka event sourcing active mq used soap ui functional testing performance testing regression testing test rest soap used datahub dashboard search filter transaction used elastic search search engine created configured new jira project worked department maintain existing jira project developed unit test case using junit mockito bamboo continuous integration used docker collaborate code run deliver securely linux window server used log logging git svn project management version management functional testing front-end application done using selenium ide web driver created cluster instance websphere network deployment support high availability fail implemented horizontal clustering environment ee reactjs jquery cs html ajax nodejs gulp core java spring ioc spring mvc spring batch security spring boot hibernate microservice eureka server nginx swagger-ui apache kafka aws cloud aws lambda ec scala datahub rest webservice jax-ws soap ui jdbc pl sql activemq jira bamboo svn git log junit selenium jms queue websphere client express script st. louis mo april august role java full stack developer description express script provides integrated pharmacy benefit management service including network-pharmacy claim processing home delivery pharmacy service specialty pharmacy benefit management subsidiary accredit benefit-design consultation drug-utilization review formulary management medical drug data analysis service manage drug plan health plan self-insured employer government agency administrator employee benefit public assistance program responsibility designed prototype project layout skeleton using angularjs jquery cs html involved designing developed presentation layer using ajax jquery third-party library used various jquery bootstrap plug-in like picker bootstrap selector used apache cordova build native mobile application using html cs javascript xquery provides mean extract manipulate data xml document data source viewed xml used adobe experience manager aem manage deliver digital experience across website used groovy various markup language xml html support regular expression used java lambda expression facilitate functional programming simplifying development used java stream api parallel execution collection framework module core java developed class using core java concept like multithreading concurrency memory management used multithreading develop various helper class programming improve overall performance used spring di annotation mvc implement business layer navigation part application used spring boot actuator externalize application configuration property various environment configured swagger-ui registered microservice eureka monitor service spring boot console defined hibernate named query batch operation defined criterion query microservice microservice built using spring boot spring security deployed aws cloud used spring cloud aws core spring cloud aws context spring cloud aws messaging utilized aws lambda platform upload data aws bucket trigger lambda function including ec mongodb focusing high-availability fault tolerance auto-scaling database required creation new table pl sql stored procedure function view index constraint trigger required sql tuning reduce response time application used cassandra handle huge amount data across many server single point failure implemented service layer top cassandra using core java data sax api restful api used postgresql multi version concurrency control transaction developed several rest webservice produce xml json perform task leveraged web mobile application restful webservice using jersey jax-rs implementation exposed consumed soap based webservice communicate system developed several soap based jax-ws webservice interface integrating multiple system code re-usability jmeter test performance soap protocol used redis memory database storing fetching data memory increase performance used apache kafka building real time data pipeline storing data distributed cluster worked drool rule engine corresponding validate business user role used soap ui functional testing performance testing regression testing test rest soap used apigee web-scale enterprise flexibility premise hybrid deployment single code base created configured new jira project worked department maintain existing jira project developed unit test case using junit mockito jenkins continuous integration used apache camel integrating different application enterprise design pattern used kubernetes automating deployment scaling management containerized application used docker collaborate code run deliver securely linux window server developed maven script build using maven continuous integration server like jenkins used log logging git svn project management version management functional testing front-end application done using selenium ide web driver developed tested debugged java jsp using eclipse rcp created cluster instance websphere network deployment support high availability fail implemented horizontal clustering environment ee angularjs jquery cs html ajax core java spring ioc spring mvc spring security spring boot hibernate microservice eureka server swagger-ui apache kafka aws cloud aws lambda ec scala mongodb rest webservice jax-ws soap ui jdbc pl sql postgresql jira git svn log maven apache camel junit mockito jenkins jms queue client commerce bank kansa city mo jan mar role sr. java ee developer full stack developer description project enhance existing online application information fund transfer payment service credit card service investment service rate online application form customer service development based spring mvc architecture responsibility followed agile software development paired programming test driven development scrum meeting developed using new feature java annotation generic enhanced loop enums upgraded existing ui html cs jquery bootstrap angularjs interaction developed single application structured javascript code using angularjs framework including mvc architecture different module specific controller template custom directive custom filter worked java swing gui control developing module front-end part used java-j ee pattern like model view controller singleton data access object factory pattern used core java concept like multithreading concurrency performance memory tuning used spring framework aop module implement logging application application status spring mvc framework ioc design pattern used relationship application component developed microservices spring eureka retrieve api route implemented spring circuit breaker pattern integrated hystrix dashboard monitor spring microservice developed spring quartz job run backend job generated report used hibernate back end development spring dependency injection middle layer development developed soap based jax-ws webservice interface integrating multiple system code re-usability developed microservice worked spring boot deployed application pivotal cloud foundry used dao pattern fetch data database using hibernate carry various database used pl sql extract data database delete data reload data oracle db developed application using rule engines- jboss drool .x validate business user role worked apache camel standalone application deploying jboss application server used docker deploy application using container allow package application configuations used spring boot interact combination rest apache kafka message broker worked development operation facilitate deployment component aws using jenkins used svn git version management version controlling software jira issue tracking environment java html cs iquery bootstrap angularjs swing threading aws cloud spring mvc spring boot spring quartz hibernate framework hibernate transaction management hibernate batch transaction jax-ws microservices pl sql oracle db cassandra jboss drool .x docker jms maven jenkins apache camel svn jira client e-trade financial corporation exchange place july dec role sr. java ee developer description e-trade financial corporation u.s based financial service company headquartered new york holding company major business online discount stock brokerage service self-directed investor responsibility prepared analysis document followed agile software development scrum methodology developed application nodejs platform using javascript programming used javascript jquery validating input given user interface applied data transformation rule transform code one format another format using nodejs created nodejs express server build mvc framework front-end side angularjs back-end developed front-end code ajax call angularjs jquery retrieve data json object extensive experience using framework apis like strut spring ibatis hibernate worked spring framework like spring ioc spring dao spring orm spring integration involved development backend logic data access logic using oracle db jdbc developed api using hibernate interact oracle database expertise multithreading remote method invocation rmi ejb serialization java bean worked extensively spring mvc framework develop new internal web application used spring aop component logging exception handling transactional model enforce compliance dynamic processing security policy using mule esb developed spring boot application microservice deployed aws using ec instance us dao pattern data access layer jms api messaging requirement design pl sql batch using core java connectivity oracle data maintenance handling test api response wcs change deployed continuous basis validate green box mongodb data developed test case performed unit test using junit framework used jira tracking bug developed executed sql query testing database integrity data analysis using selenium developed automated regression test case selenium webdriver using java programming language used maven build generate code analysis report jenkins continuous integration used weblogic design development deployment application environment java ee spring hibernate strut weblogic restful jquery ajax ext j javascript angularjs jsp jstl servlet microservice oracle crud pl sql jira angular gwt jdbc aws mongodb nodejs adobe cq bootstrap core java jbpm nosql uml eclipse junit maven agile soa jira jenkins selenium client u cellular chicago il april june role java developer description u cellular fifth-largest full-service wireless carrier united state providing national network coverage industry-leading innovation designed elevate customer experience chicago-based carrier strong line-up cutting-edge device backed high-quality network big small city rural community currently responsibility sprint planning session participated daily agile scrum meeting designed implemented web module using spring mvc designed developed persistence service using hibernate framework develop high-level class diagram sequence diagram implement java spring soap developed web screen jsp jstl cs client side validation using javascript jquery used strut validation tile framework presentation layer tag simplify complexity developed jsp custom tag web tier dynamically generate web page worked strut mvc paradigm component action mapping action class dispatch action class action form bean used spring orm module integration hibernate persistence layer used spring aop exception handling reduces development time handle exception developed soap based webservice using jax-ws tested webservice soapui.s used jira defect tracking project management used sts spring tool suite software development platform developing whole application used svn version management version controlling software configured selenium webdriver testng maven created selenium automation script using test ng performed functional testing identify critical point automated using selenium web driver unit integration test case designed using junit log log error info debug message tested service data access tier using junit tdd methodology followed agile scrum methodology used test driven development tdd project build maven eclipse ide application development integration framework used apache tomcat application server deploy application environment java ee jsp spring servlet jdbc hibernate soap spring strut xml xsl db junit jstl jira eclipse soap webservice selenium tdd soap ui ajax-ws rad log sql maven tomcat log weblogic client footlocker new york ny oct mar role java ee developer description internet based online shopping website product sold electronically involving buyer seller application also googled map represent product application sell buy related electronic product consumer product household product responsibility involved complete software development life cycle including requirement analysis design implementation testing maintenance developed jsp html xhtml cs page modified view worked responsive web design wrote code interact back-end java ajax json used ajax jquery parse json object dynamically overlay content web page used jsf component custom style convert model output tabular schedule view trainee responsible system analysis design development built top ee spring mvc involved various phase software development life cycle using agile methodology developed code obtaining bean spring framework using dependency injection developed dao layer using hibernate spring implemented web tier using spring mvc used java ee design pattern dao pattern mvc pattern singleton project extensively facilitates clean distribution role responsibility across various layer processing involved consuming developing restful webservice using spring mvc hibernate implemented maven script create jar war ear deploy entire project onto websphere used oracle sql developer writing query procedure sql monitored error log using log fixed problem git svn version control used websphere application server deploy application used junit unit testing various module environment java ee eclipse jsp soap restful jms ajax json spring hibernate xml xslt html xhtml cs javascript jsf websphere oracle sql developer maven agile scrum integration tool log git junit client yana software pvt. ltd china sep sep role java ee developer description product online banking system provides personal saving detail client offer wide range financial client per user account status offer take new scheme user generates corresponding request sends user responsibility developed presentation screen using jsp html javascript implemented model view controller mvc- architecture developed form class action class entire application using strut framework used server side validation .. performed client side validation using javascript used hibernate annotation reduce time configuration level accessed annotated bean hibernate dao layer used hql statement procedure fetch data database transformed navigated formatted xml document using xsl xslt used jms asynchronous exchange message application different platform developed view component using jsp html strut logic tag strut tag library involved developing sql query stored procedure function creation database object like table view using oracle tool like toad sql plus involved writing stored procedure using pl sql used junit testing framework performing unit testing deployed application tomcat developed using rational application developer rad environment strut hibernate servlets jsp jms cv javascript xsl xslt pl sql junit tomcat oracle",
  "statistics": {
    "word_count": 4341,
    "unique_word_count": 1107,
    "avg_word_length": 4.985487214927436,
    "stopword_count": 815
  },
  "metadata": {
    "filename": "Candidate_11.docx",
    "file_size": 69066,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:51.684361",
    "input_filename": "Candidate_11.json"
  }
}