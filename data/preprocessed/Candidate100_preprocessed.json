{
  "id": "Candidate100",
  "raw_text": "Candidate100\n469 524 9207\nCandidate100.java18@gmail.com\nSUMMARY:\n8+ years of experience as a Java Full stack developer and Java/J2EE Developer in full software development life cycle including requirement analysis, design, coding, testing, debugging and maintenance. \nExtensive experience in developing JAVA based applications using JAVA, JEE, JDBC, EJB, Servlets, JSP, JSF, JMS and Web services. \nExperienced with SDLC development involving requirements, analysis, design, implementation, maintenance, testing, and documentation of application software in Web and Enterprise based environment, and Distributed n-tier architecture.\nExtensive experience in developing Web interfaces using HTML5, CSS3, Bootstrap, JavaScript, JQuery and AngularJS. \nExperience  in  implementing  Java/J2EE technologies  for  application  development  in  various  layers  of  projects  i.e. requirement gathering, analysis, design, implementation, Unit testing and deployment from UAT to Prod.\nProficient working on Java Frameworks like Struts1.x/2.x, Hibernate 3.x, JSF, and Spring Framework 4.x.\nExperience  in  developing  Full  stack  applications  using AngularJS,  NodeJS,  HTML,  CSS,  JavaScript, Bootstrap, Java, EXTJS, JSF etc.\nExperience in designing and development enterprise applications using java, jsp, Servlets, JDBC, JNDI, RMI, EJB, JavaScript, XML, REST Web services, JMS, Java Mail, WSDL, SOAP 1.1, Hibernate\nHands on experience in various agile methodologies like Test Driven Development (TDD), SCRUM, and Pair Programming.\nExperience in working with Web/Application Servers like Web logic, JBoss and Tomcat Servers and databases such as Oracle 10g/11g, DB2, MySql and SQL Server 6.5/7.0. \nExperienced in developing Microservices with Spring Boot, Spring REST, Spring Cloud, Eureka, API-Gateway etc.\nExperienced in other front-end technologies such as Typescript, BOOTSTRAP, Angular1.5, Angular2, Ajax, JSON, NodeJS etc. \nExperience with Spring Boot and Micro services design and development.\nHands on experience with Core Java with multithreading, Concurrency, Exception Handling, File handling, IO, Generics, Data structures and Collections, Garbage Collection\nExperience in working with J2EE technologies such as Servlets, JSP, JDBC, EJB, JNDI, Java Beans, JMS, Object-Oriented (OOP) and Client & Server-side technologies.\nExpertise in developing GUI using Swing, HTML, DHTML, DOJO, Java Script, CSS, Angular JS, ReactJS, Bootstrap, Apache Cassandra, Full Stack JSF, XML, REST, JQuery and AJAX scripting.\nExperienced in Software Development Life Cycle (SDLC) implementing Waterfall, V-Model, & Agile methodologies.\nGood understanding of NoSQL Database and hands on work experience in writing application on NoSQL database which is Apache Cassandra. \nExperience in developing Stored Procedures, functions, triggers using Oracle and comfortable using databases SQL Server, DB2, MySQL. \nExperience in working with Version Control Tools like Sareena PVCS, Clear case, SVN, and Git-hub.\nExtensive experience in design and development of J2EE applications using Core Java, Java Collections, Data Structures, Multithreading, Transaction Management, JDBC, Servlets, JSP, XML, Web Services and other open source frameworks and APIs.\nDesigned UI layout using HTML, CSS, JSP, AJAX, JavaScript, JQuery, and JSTL Taglibs.\nWorked on JavaScript to validate input, manipulated HTML elements using JavaScript, developed external JavaScript codes that can be used in several different web pages.\nExpertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD.\nExperience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers.\nExtensive use of Version Controls like SVN, CVS and GIT subversions.\nExperienced with Jenkins for build & deploy the applications.\nExtensive experience in usage of ORM (Hibernate) in Spring framework\nExtensive working experience with SOAP and Restful Web services.\nWorked with XML parsers like DOM, SAX and JAXB.\nHave good Working knowledge on ANT, MAVEN and Log4J.\nHave good Working knowledge on Spring Boot, Micro Services.\nGood working knowledge on IDEs such as Eclipse and Intellij.\nHands on experience with Web & Application Servers such as Apache Tomcat, JBoss, and Web Logic.\nExperienced in Unit Testing, Functional Testing, System Testing, Integration Testing, and Regression Testing. Involved in writing Junit test cases.\nExpertise in developing reference implementation (Proof of concepts) for key deliverables by evaluating and executing with latest and optimal technology stacks.\nHave Good experience in resolving production issues.\nPossess hands on experience on handling Responsibilities like, coordinating with offshore team, study and understand the business processes and functionality of the Application, Managing / developing enhancement deliveries and new releases.\nStrong understanding of OOPS concepts and design patterns.\nOver one year of experience as Hadoop Developer with good knowledge in Hadoop Ecosystem technologies.\nHands on experience in setting up databases in AWS using RDS, storage using S3 bucket and configuring instance backups to S3 bucket to ensure fault tolerance and high availability.\nExperience in developing Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement.\nExperience using Sqoop to import data into HDFS from RDBMS and vice-versa.\nSelf-motivated Team Player with excellent Interpersonal and Communication Skills.\nTECHNICAL SKILLS:\nProgramming Languages:\t\tJAVA, J2EE, SQL, PL/SQL, C, C++\nJ2EE Technologies:\t\t             EJB, Servlets, JSP, JSTL, JDBC, JSF, RMI, JNDI, JMS\nWeb Technologies: \tHTML, DHTML, AngularJS, JQuery, XML, XSLT, CSS, JSON, JSON-DTD, AJAX, Bootstrap, NodeJS, ReactJS, IDE IBM RAD, RSA, Eclipse, My Eclipse, NetBeans, JBuilder, IntelliJ \nApplication/Web Server                        IBM WebSphere, Oracle WebLogic, JBOSS, Apache Tomcat and Glassfish\nDatabases:\t\t                          Oracle, MySQL, DB2.\nXML Technologies:            \t\tXML, XSLT, XPATH, SAX, DOM, JAXB\nWeb Services:\t\t                          SOAP, REST, JAX-WS, JAX-RPC, JAX-RS\nMethodologies:\tRUP (Rational Unified Process), Agile, Waterfall, SCRUM, Rapid Application Development.\nOperating Systems:\t\t             Windows, Linux, UNIX\nApplication Frameworks:\tStruts 1.x/2.x, Spring (Dependency Injection, Spring MVC, Factory Pattern, Spring Core, Spring Context, Spring DAO, Spring IOC, Spring JDBC, Spring Security, Spring Boot, Spring Batch, Spring with Hibernate) ORM Frameworks JPA, Hibernate, Spring JPA, DAO OO Modeling Rational Rose, MS Visio Version Control Clear Case, SVN (Apache Subversion), CVS, Git\nOther Tools:\tANT, Maven, Log4j, Jenkins, Junit, JIRA, AWS (Amazon Web Services), EC2, RDS, DynamoDB, S3, Micro services, Swagger.\nUnion Pacific Railroad, Dallas, TX                       \t\t\t                Dec 2015 to Till Date                                       Senior Java Developer\t\nLocomotive Distribution and Assignment system has been primarily supported for strategic planning, Tactical planning, Assign Power and Fuel Plan.\nStrategic planning: The model decides how many locomotives to use of each type, and also chooses the starting location, so that the system does not require a locomotive file with starting locations.\nTactical planning: This version of the system requires a locomotive snapshot with starting locations. In a production setting, the tactical planning system is set up to run continuously during the day, updating each minute as changes are made in the train schedule or status of locomotives. The tactical system can help plan repositioning of power, as well as anticipate problems before they happen. The core engine is the same as that used for the strategic planning system.\nAssign Power: This Module is used for assign power to the existing plan.\nFuel Plan: This module is used for fuel filling terminals to the plan.\nResponsibilities: \nInvolved in developing the application using Java/J2EE platform. Implemented the Model View Control (MVC) structure using spring.\nExtensively used core java concepts like collection frame work, multi-threading, OOPS and Exception Handling.\nInvolved in Analysis, Design, Coding and testing phases of the project management.\nFollowed Agile Software Development with Scrum methodology.\nInvolved in writing Controller Classes, Manager Classes and DAO Classes using Spring MVC Framework.\nImplemented spring configuration files for the beans defined and properties to be injected into them using Spring Dependency Injection.\nExperience used Spring Boot which is radically faster in building Micro Services and develops spring based application with very less configuration.\nUsed Hibernate framework with Spring Framework for data persistence and transaction management.\nResponsible to enhance the web application UI using HTML, JavaScript, AngularJS, XML, JSP, CSS as per the requirements and providing the client side using java script validations.\nUsed Hibernate as persistence framework mapping the ORM objects to table using Hibernate Mapping Pojos.\nImplemented user interface guidelines and standards throughout the development and maintenance of the website using HTML, CSS, JavaScript, ReactJS and AngularJS.\nInvolved in using ReactJS components, Forms, Events, Keys, Router, Animations and Flux concepts.\nServer instances are created on AWS. Tomcat, Swagger and hawtio are installed and used for deploying Micro services.\nInvolved in the development of user interface applications and professional web applications using HTML5, CSS3, JavaScript, JQuery, Ajax, JSON, XML, NodeJS, Bootstrap and AngularJS.\nInvolved in the JDBC, Servlets and JSP technologies to write the UI and the business classes.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) architecture and Hibernate.\nExperienced with JMS and Tibco server for message queuing.\nDeveloped data loader using Spring Schedulers using Cron Expressions for train horse power details, details and train schedules.\nUsed WSDL, SOAP, JAX-WS, JAX-RS technologies to create web services, generate stubs and consuming the existing services.\nCreated RESTful APIs in Express and returned logic through AngularJS data binding.\nContinuous Deployment using Jenkins and CA Release automation tool.\nInvolved in writing JSP components. Used JSTL and developed Custom Tag Library to create standard dynamic web pages.\nWorked as part of Micro services team to develop and deliver Maven projects to deploy on tomcat.\nDemonstrated understanding of Core java concepts like OOPS, OOAD, ORM, and REST.\nBuilt NodeJS npm packages/libraries to support current and future Node Development.\nImplemented functionality like searching, filtering, sorting, validating using AngularJS and JavaScript.\nInvolved in writing JDBC code to get data base connectivity.\nLeveraging AWS SDKs to interact with AWS services from your application \nHelp migrate Web applications from the current on-premise environment into AWS.\nDeveloped test scripts in JUnit and involved in testing.\nImplemented the logging mechanism using Log4j framework.\nUsed SVN for version control of the application.\nWorking closely with the testing team in creating new test cases and use cases for the modules.\nAttending Sprint planning, Feature Refinement, Demo Session and Backlog grooming meetings.\nCoordinated with onsite team for requirement transition and providing the necessary inputs required for successful execution of the project.\nEnvironment: JDK 1.8, Spring Framework 3.x, Hibernate 3.x, JMS, Web Services, JSP, HTML, Node, AWS, OOPS, CSS, Java Script, JQuery, AngularJS, Junit, Jira, Maven, Ant, Jenkins, JBoss.       \nMisys Financial Services\t\t\t\t\t   Mar 2014 – Dec 2015                  \nSr Full Stack Java Developer\nIslamic banking is banking or banking activity that is consistent with the principles of sharia and its practical application through the development of Islamic economics. As such, a more correct term for Islamic banking is Sharia compliant finance. In this phase we have targeted for two products i.e. Murabahah, Ijarah.\nMurabahah transaction involves the sale of goods at a price which includes a profit margin agreed by both parties. However, in Murabahah, the seller must let the buyer know the actual cost for the asset and the profit margin at the time of the sale agreement.      \nIjarah is normally used in financing consumer goods especially motor vehicles. There are two separate contracts involved: Ijarah contract (leasing/renting) and contract.\nResponsibilities: \nAnalyzed user requirements and designed the user interfaces, object model, application server logic and schema.\nCreated web pages for each project using HTML5, CSS3 and Java Script. \nDeveloped Restful web services interface to Java-based runtime engine and account \nUsed Core Java & J2EE patterns for designing the applications. \nWorked with designers to get GUI mockups. \nDeveloped web UI screens using Spring MVC, AngularJS, HTML5, CSS3, JavaScript and CSS. \nResponsible for maintaining and expanding AWS (Cloud Services) infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2.\nInvolved in writing code for Form Beans, Java Actions, DTO and DAO for accessing business methods in the business layer.\nDeveloped UI using HTML5, CSS3, Ext JS, Bootstrap, JQuery and JSP for interactive cross browser functionality and complex user interface. \nUsed NoSQL DB like Cassandra for the proof of concept. \nUsed Struts2.0 and interacted with backend database using Hibernate framework\nExtensively used Hibernate in data access layer to access and update information from the Oracle database \nDeveloped presentation layer using HTML5, CSS3, ExtJS, Java script. \nUsed Stored Procedures to crunch data and creating view for fetching data from multiple tables on DB2. \nUsed JDBC, MQ Series and Web Services, and Hibernate Framework to access the data from back-end DB2 database server. \nImplemented Multithreading, Concurrency, Exception Handling, Generics and Collections whenever necessary. \nUsed Hibernate Query Language (HQL) for writing the queries \nCreated Hibernate mapping files, sessions, transactions, Query and Criteria's \nUsed Validator framework of the Struts2.0 for client side and server side validation \nImplemented and used Web Services with the help of WSDL and SOAP to get updates from the third parties \nCreated proof-of-concept using responsive web design, Node.js, ReactJS. \nDeployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing. \nDesigned, Developed & Deployed server-side common utilities for the application and the front-end dynamic web pages using Servlets, JSP, AngularJS, NodeJS, JavaScript, Bootstrap, HTML5/DHTML and CSS3. \nImplemented Fallout mechanism using Message Driven Beans, JMS. \nRefactored existing AngularJS application for code maintenance based on MVC pattern. \nUsed Dojo Toolkit provides an inheritance pattern using Dojo/declare to share modules of code between different projects. \nUsed DOJO aspects to trigger functions before or after executing a specific function \nWorked with QA team to validate the test cases whether the test cases meeting business requirements or not \nUsed SAML for SSO login to access the web service provided and OAuth2 for authorizing the user to the application. \nUsed SVN for version and source control.\nDeployed the applications into LIVE and QA Environment. \nIdentified check style, PMD and Find bugs and fixed them.\nReviewed the code developed by other developers.\nInvolved in creating JUNIT test cases and ran the TEST SUITE using EMMA tool. \nExtensively involved in unit testing, worked with user's team to fix the bugs identified in Systems testing.\nEnvironment: Java 1.7/1.6, J2EE, Servlets, JSP, HTML5, JS, CSS3, DOJO, AngularJS, Apache-Tomcat, Maven Repository, Jenkins, JMS, AWS, DOM/SAX, XML, XSD, XSLT, SQL, PL/SQL, Oracle 11g, JBoss, TOAD, SQL Developer, Eclipse, JUnit, CVS, Struts, MVC, EJB, Mongo DB, Oracle coherence, JSM, Web Services - WSDL, Node JS, JAX-WS, SOAP CXF, JAX-Restful Services, JAXP, React, JAXB, QC etc.\nVietnam Bank for Social Policies (VBSP)\t\t\t   Oct 2011 to Jan 2014\nJava / J2EE Developer\nIntellect is a banking product which is an integration of Core System, Lending System, Collateral and Brokerage. Lending is one of the main functionality involving Booking, Disbursal, Repayment schedule, payments, Excess Adjusting, Accrual calculation, Late Charges, Fees and Charges, Early settlement, Delinquency status.\nCollateral modules support the operations like collateral addition, modification, release execution and asset addition, asset modification linking the asset with Collateral, Delinking the asset, asset release.\nResponsibilities: \nInvolved in all the phases of the project development - requirements gathering, analysis, design, development, coding and testing\nWorked closely with front end team and developed single page dynamic web pages using web technologies - HTML5, CSS, Bootstrap, JQuery and AngularJS framework modules in conjunction with Bootstrap to render responsive web pages. \nImplemented SOAP based web services using Apache Axis with JAX-WS support. Used SoapUI to test the web services. \nUsed complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the spring bean profiling. \nDeveloped the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria. \nDeveloped entity classes and mapped to the relational tables in database using JPA and hibernate mapping files. Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects.  \nUsed Java Mailing or Messaging Service (JMS) for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems. \nImplemented features like - monthly statement availability notifications using Java Mail API through SMPT server of Gmail.\nConfigured WebLogic Application Server for deployments and participated in structured code reviews / walkthroughs. \nWrote unit test scripts using TestNG framework for testing functionalities in a Test-Driven Development (TDD) methodology. \nParticipated in daily meetings, sprint planning etc. as part of the Agile Project Methodology to deliver quality code in 2-week Sprints. \nUsed Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing. Used JIRA for tracking bugs. Used Maven script for building and deploying the application. \nUsed Jenkins for Continuous Integration Builds and deployments (CI/CD). \nParticipated in integration testing, bugs fixing, handling change requests and code reviews.\nEnvironment: HTML5, CSS, Bootstrap, JQuery, AngularJS, SOAP, Spring, Hibernate ORM, JMS, Oracle, WebLogic, TestNG, Subversion, JIRA, Maven, Selenium Web Driver, Jenkins, Agile, Eclipse\nBob Tech\t\t\t\t\t\t               Aug 2009 to Oct 2010 Software Engineer\nLearning Management System is the E-learning based product .The main aim of this product is learning the courses through offline or online .There are four roles in the projects. I.e. Content Admin, Content Author, Validator, Learner. In this product Content Admin Create the courses (course modules and Assessment modules), Content Validator validates the course Modules and assessment modules but he cannot edit the content of the modules. After validation content admin publish course .Author assign the courses to the learners. Learner login into the application, he can read the course module and assessment (Test) .After completion of assessment learner can understanding to his performance. There are forums to clarify the learner doubts. We can create these roles dynamically according to one particular organization.\nResponsibilities:\nInvolved in all the phases of the project development - requirements gathering, analysis, design and development, coding and testing.\nFollowed Agile Software Development with Scrum methodology.\nUsed and configured Struts Dynamic Action Forms, Message Resources, Action Messages, Action Errors, Validation.xml, Validator-rules.xml.\nDeveloped the data layer for the applications using Spring Jdbc.\nProvided connections using Spring JDBC to the database and developed SQL queries to manipulate the data.\nUsed Spring DAO concept in order to interact with database using JDBC Template.\nImplemented some applications by using Object Oriented Programming concepts, Multi-Threading, Exception Handling, and Collections while developing the project.\nDeveloped test scripts in JUnit and involved in testing.\nImplementing service classes for calling DAO methods.\nPerformed the CRUD operations on the existing and new database tables.\nUsed Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing. Used Jira for tracking bugs. Used Maven script for building and deploying the application. Used Jenkins for Continuous Integration Builds and deployments (CI/CD).\nDeveloped the ANT scripts for preparing WAR files used to deploy J2EE components.\nUsed Log4j to print the logging, debugging, warning info on the server console.\nDeployed the war files on the Tomcat Server.\nEnvironment: JDK1.5, Struts Framework 2.X, Spring Jdbc, SQL/PLSQL, Servlet, JSP, Bug Tracker, PMD, Tomcat, Mysql.\nEDUCATION AND CERTIFICATIONS\nBachelor of Computer Science in 2008. ",
  "cleaned_text": "Candidate SUMMARY years of experience as a Java Full stack developer and Java J EE Developer in full software development life cycle including requirement analysis, design, coding, testing, debugging and maintenance. Extensive experience in developing JAVA based applications using JAVA, JEE, JDBC, EJB, Servlets, JSP, JSF, JMS and Web services. Experienced with SDLC development involving requirements, analysis, design, implementation, maintenance, testing, and documentation of application software in Web and Enterprise based environment, and Distributed n-tier architecture. Extensive experience in developing Web interfaces using HTML , CSS , Bootstrap, JavaScript, JQuery and AngularJS. Experience in implementing Java J EE technologies for application development in various layers of projects i.e. requirement gathering, analysis, design, implementation, Unit testing and deployment from UAT to Prod. Proficient working on Java Frameworks like Struts .x .x, Hibernate .x, JSF, and Spring Framework .x. Experience in developing Full stack applications using AngularJS, NodeJS, HTML, CSS, JavaScript, Bootstrap, Java, EXTJS, JSF etc. Experience in designing and development enterprise applications using java, jsp, Servlets, JDBC, JNDI, RMI, EJB, JavaScript, XML, REST Web services, JMS, Java Mail, WSDL, SOAP . , Hibernate Hands on experience in various agile methodologies like Test Driven Development TDD , SCRUM, and Pair Programming. Experience in working with Web Application Servers like Web logic, JBoss and Tomcat Servers and databases such as Oracle g g, DB , MySql and SQL Server . . . Experienced in developing Microservices with Spring Boot, Spring REST, Spring Cloud, Eureka, API-Gateway etc. Experienced in other front-end technologies such as Typescript, BOOTSTRAP, Angular . , Angular , Ajax, JSON, NodeJS etc. Experience with Spring Boot and Micro services design and development. Hands on experience with Core Java with multithreading, Concurrency, Exception Handling, File handling, IO, Generics, Data structures and Collections, Garbage Collection Experience in working with J EE technologies such as Servlets, JSP, JDBC, EJB, JNDI, Java Beans, JMS, Object-Oriented OOP and Client & Server-side technologies. Expertise in developing GUI using Swing, HTML, DHTML, DOJO, Java Script, CSS, Angular JS, ReactJS, Bootstrap, Apache Cassandra, Full Stack JSF, XML, REST, JQuery and AJAX scripting. Experienced in Software Development Life Cycle SDLC implementing Waterfall, V-Model, & Agile methodologies. Good understanding of NoSQL Database and hands on work experience in writing application on NoSQL database which is Apache Cassandra. Experience in developing Stored Procedures, functions, triggers using Oracle and comfortable using databases SQL Server, DB , MySQL. Experience in working with Version Control Tools like Sareena PVCS, Clear case, SVN, and Git-hub. Extensive experience in design and development of J EE applications using Core Java, Java Collections, Data Structures, Multithreading, Transaction Management, JDBC, Servlets, JSP, XML, Web Services and other open source frameworks and APIs. Designed UI layout using HTML, CSS, JSP, AJAX, JavaScript, JQuery, and JSTL Taglibs. Worked on JavaScript to validate input, manipulated HTML elements using JavaScript, developed external JavaScript codes that can be used in several different web pages. Expertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD. Experience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers. Extensive use of Version Controls like SVN, CVS and GIT subversions. Experienced with Jenkins for build & deploy the applications. Extensive experience in usage of ORM Hibernate in Spring framework Extensive working experience with SOAP and Restful Web services. Worked with XML parsers like DOM, SAX and JAXB. Have good Working knowledge on ANT, MAVEN and Log J. Have good Working knowledge on Spring Boot, Micro Services. Good working knowledge on IDEs such as Eclipse and Intellij. Hands on experience with Web & Application Servers such as Apache Tomcat, JBoss, and Web Logic. Experienced in Unit Testing, Functional Testing, System Testing, Integration Testing, and Regression Testing. Involved in writing Junit test cases. Expertise in developing reference implementation Proof of concepts for key deliverables by evaluating and executing with latest and optimal technology stacks. Have Good experience in resolving production issues. Possess hands on experience on handling Responsibilities like, coordinating with offshore team, study and understand the business processes and functionality of the Application, Managing developing enhancement deliveries and new releases. Strong understanding of OOPS concepts and design patterns. Over one year of experience as Hadoop Developer with good knowledge in Hadoop Ecosystem technologies. Hands on experience in setting up databases in AWS using RDS, storage using S bucket and configuring instance backups to S bucket to ensure fault tolerance and high availability. Experience in developing Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement. Experience using Sqoop to import data into HDFS from RDBMS and vice-versa. Self-motivated Team Player with excellent Interpersonal and Communication Skills. TECHNICAL SKILLS Programming Languages JAVA, J EE, SQL, PL SQL, C, C J EE Technologies EJB, Servlets, JSP, JSTL, JDBC, JSF, RMI, JNDI, JMS Web Technologies HTML, DHTML, AngularJS, JQuery, XML, XSLT, CSS, JSON, JSON-DTD, AJAX, Bootstrap, NodeJS, ReactJS, IDE IBM RAD, RSA, Eclipse, My Eclipse, NetBeans, JBuilder, IntelliJ Application Web Server IBM WebSphere, Oracle WebLogic, JBOSS, Apache Tomcat and Glassfish Databases Oracle, MySQL, DB . XML Technologies XML, XSLT, XPATH, SAX, DOM, JAXB Web Services SOAP, REST, JAX-WS, JAX-RPC, JAX-RS Methodologies RUP Rational Unified Process , Agile, Waterfall, SCRUM, Rapid Application Development. Operating Systems Windows, Linux, UNIX Application Frameworks Struts .x .x, Spring Dependency Injection, Spring MVC, Factory Pattern, Spring Core, Spring Context, Spring DAO, Spring IOC, Spring JDBC, Spring Security, Spring Boot, Spring Batch, Spring with Hibernate ORM Frameworks JPA, Hibernate, Spring JPA, DAO OO Modeling Rational Rose, MS Visio Version Control Clear Case, SVN Apache Subversion , CVS, Git Other Tools ANT, Maven, Log j, Jenkins, Junit, JIRA, AWS Amazon Web Services , EC , RDS, DynamoDB, S , Micro services, Swagger. Union Pacific Railroad, Dallas, TX Dec to Till Date Senior Java Developer Locomotive Distribution and Assignment system has been primarily supported for strategic planning, Tactical planning, Assign Power and Fuel Plan. Strategic planning The model decides how many locomotives to use of each type, and also chooses the starting location, so that the system does not require a locomotive file with starting locations. Tactical planning This version of the system requires a locomotive snapshot with starting locations. In a production setting, the tactical planning system is set up to run continuously during the day, updating each minute as changes are made in the train schedule or status of locomotives. The tactical system can help plan repositioning of power, as well as anticipate problems before they happen. The core engine is the same as that used for the strategic planning system. Assign Power This Module is used for assign power to the existing plan. Fuel Plan This module is used for fuel filling terminals to the plan. Responsibilities Involved in developing the application using Java J EE platform. Implemented the Model View Control MVC structure using spring. Extensively used core java concepts like collection frame work, multi-threading, OOPS and Exception Handling. Involved in Analysis, Design, Coding and testing phases of the project management. Followed Agile Software Development with Scrum methodology. Involved in writing Controller Classes, Manager Classes and DAO Classes using Spring MVC Framework. Implemented spring configuration files for the beans defined and properties to be injected into them using Spring Dependency Injection. Experience used Spring Boot which is radically faster in building Micro Services and develops spring based application with very less configuration. Used Hibernate framework with Spring Framework for data persistence and transaction management. Responsible to enhance the web application UI using HTML, JavaScript, AngularJS, XML, JSP, CSS as per the requirements and providing the client side using java script validations. Used Hibernate as persistence framework mapping the ORM objects to table using Hibernate Mapping Pojos. Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML, CSS, JavaScript, ReactJS and AngularJS. Involved in using ReactJS components, Forms, Events, Keys, Router, Animations and Flux concepts. Server instances are created on AWS. Tomcat, Swagger and hawtio are installed and used for deploying Micro services. Involved in the development of user interface applications and professional web applications using HTML , CSS , JavaScript, JQuery, Ajax, JSON, XML, NodeJS, Bootstrap and AngularJS. Involved in the JDBC, Servlets and JSP technologies to write the UI and the business classes. Involved in multi-tiered J EE design utilizing Spring Inversion of Control IOC architecture and Hibernate. Experienced with JMS and Tibco server for message queuing. Developed data loader using Spring Schedulers using Cron Expressions for train horse power details, details and train schedules. Used WSDL, SOAP, JAX-WS, JAX-RS technologies to create web services, generate stubs and consuming the existing services. Created RESTful APIs in Express and returned logic through AngularJS data binding. Continuous Deployment using Jenkins and CA Release automation tool. Involved in writing JSP components. Used JSTL and developed Custom Tag Library to create standard dynamic web pages. Worked as part of Micro services team to develop and deliver Maven projects to deploy on tomcat. Demonstrated understanding of Core java concepts like OOPS, OOAD, ORM, and REST. Built NodeJS npm packages libraries to support current and future Node Development. Implemented functionality like searching, filtering, sorting, validating using AngularJS and JavaScript. Involved in writing JDBC code to get data base connectivity. Leveraging AWS SDKs to interact with AWS services from your application Help migrate Web applications from the current on-premise environment into AWS. Developed test scripts in JUnit and involved in testing. Implemented the logging mechanism using Log j framework. Used SVN for version control of the application. Working closely with the testing team in creating new test cases and use cases for the modules. Attending Sprint planning, Feature Refinement, Demo Session and Backlog grooming meetings. Coordinated with onsite team for requirement transition and providing the necessary inputs required for successful execution of the project. Environment JDK . , Spring Framework .x, Hibernate .x, JMS, Web Services, JSP, HTML, Node, AWS, OOPS, CSS, Java Script, JQuery, AngularJS, Junit, Jira, Maven, Ant, Jenkins, JBoss. Misys Financial Services Mar Dec Sr Full Stack Java Developer Islamic banking is banking or banking activity that is consistent with the principles of sharia and its practical application through the development of Islamic economics. As such, a more correct term for Islamic banking is Sharia compliant finance. In this phase we have targeted for two products i.e. Murabahah, Ijarah. Murabahah transaction involves the sale of goods at a price which includes a profit margin agreed by both parties. However, in Murabahah, the seller must let the buyer know the actual cost for the asset and the profit margin at the time of the sale agreement. Ijarah is normally used in financing consumer goods especially motor vehicles. There are two separate contracts involved Ijarah contract leasing renting and contract. Responsibilities Analyzed user requirements and designed the user interfaces, object model, application server logic and schema. Created web pages for each project using HTML , CSS and Java Script. Developed Restful web services interface to Java-based runtime engine and account Used Core Java & J EE patterns for designing the applications. Worked with designers to get GUI mockups. Developed web UI screens using Spring MVC, AngularJS, HTML , CSS , JavaScript and CSS. Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC . Involved in writing code for Form Beans, Java Actions, DTO and DAO for accessing business methods in the business layer. Developed UI using HTML , CSS , Ext JS, Bootstrap, JQuery and JSP for interactive cross browser functionality and complex user interface. Used NoSQL DB like Cassandra for the proof of concept. Used Struts . and interacted with backend database using Hibernate framework Extensively used Hibernate in data access layer to access and update information from the Oracle database Developed presentation layer using HTML , CSS , ExtJS, Java script. Used Stored Procedures to crunch data and creating view for fetching data from multiple tables on DB . Used JDBC, MQ Series and Web Services, and Hibernate Framework to access the data from back-end DB database server. Implemented Multithreading, Concurrency, Exception Handling, Generics and Collections whenever necessary. Used Hibernate Query Language HQL for writing the queries Created Hibernate mapping files, sessions, transactions, Query and Criteria s Used Validator framework of the Struts . for client side and server side validation Implemented and used Web Services with the help of WSDL and SOAP to get updates from the third parties Created proof-of-concept using responsive web design, Node.js, ReactJS. Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing. Designed, Developed & Deployed server-side common utilities for the application and the front-end dynamic web pages using Servlets, JSP, AngularJS, NodeJS, JavaScript, Bootstrap, HTML DHTML and CSS . Implemented Fallout mechanism using Message Driven Beans, JMS. Refactored existing AngularJS application for code maintenance based on MVC pattern. Used Dojo Toolkit provides an inheritance pattern using Dojo declare to share modules of code between different projects. Used DOJO aspects to trigger functions before or after executing a specific function Worked with QA team to validate the test cases whether the test cases meeting business requirements or not Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application. Used SVN for version and source control. Deployed the applications into LIVE and QA Environment. Identified check style, PMD and Find bugs and fixed them. Reviewed the code developed by other developers. Involved in creating JUNIT test cases and ran the TEST SUITE using EMMA tool. Extensively involved in unit testing, worked with user s team to fix the bugs identified in Systems testing. Environment Java . . , J EE, Servlets, JSP, HTML , JS, CSS , DOJO, AngularJS, Apache-Tomcat, Maven Repository, Jenkins, JMS, AWS, DOM SAX, XML, XSD, XSLT, SQL, PL SQL, Oracle g, JBoss, TOAD, SQL Developer, Eclipse, JUnit, CVS, Struts, MVC, EJB, Mongo DB, Oracle coherence, JSM, Web Services - WSDL, Node JS, JAX-WS, SOAP CXF, JAX-Restful Services, JAXP, React, JAXB, QC etc. Vietnam Bank for Social Policies VBSP Oct to Jan Java J EE Developer Intellect is a banking product which is an integration of Core System, Lending System, Collateral and Brokerage. Lending is one of the main functionality involving Booking, Disbursal, Repayment schedule, payments, Excess Adjusting, Accrual calculation, Late Charges, Fees and Charges, Early settlement, Delinquency status. Collateral modules support the operations like collateral addition, modification, release execution and asset addition, asset modification linking the asset with Collateral, Delinking the asset, asset release. Responsibilities Involved in all the phases of the project development - requirements gathering, analysis, design, development, coding and testing Worked closely with front end team and developed single page dynamic web pages using web technologies - HTML , CSS, Bootstrap, JQuery and AngularJS framework modules in conjunction with Bootstrap to render responsive web pages. Implemented SOAP based web services using Apache Axis with JAX-WS support. Used SoapUI to test the web services. Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the spring bean profiling. Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria. Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files. Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects. Used Java Mailing or Messaging Service JMS for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems. Implemented features like - monthly statement availability notifications using Java Mail API through SMPT server of Gmail. Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs. Wrote unit test scripts using TestNG framework for testing functionalities in a Test-Driven Development TDD methodology. Participated in daily meetings, sprint planning etc. as part of the Agile Project Methodology to deliver quality code in -week Sprints. Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing. Used JIRA for tracking bugs. Used Maven script for building and deploying the application. Used Jenkins for Continuous Integration Builds and deployments CI CD . Participated in integration testing, bugs fixing, handling change requests and code reviews. Environment HTML , CSS, Bootstrap, JQuery, AngularJS, SOAP, Spring, Hibernate ORM, JMS, Oracle, WebLogic, TestNG, Subversion, JIRA, Maven, Selenium Web Driver, Jenkins, Agile, Eclipse Bob Tech Aug to Oct Software Engineer Learning Management System is the E-learning based product .The main aim of this product is learning the courses through offline or online .There are four roles in the projects. I.e. Content Admin, Content Author, Validator, Learner. In this product Content Admin Create the courses course modules and Assessment modules , Content Validator validates the course Modules and assessment modules but he cannot edit the content of the modules. After validation content admin publish course .Author assign the courses to the learners. Learner login into the application, he can read the course module and assessment Test .After completion of assessment learner can understanding to his performance. There are forums to clarify the learner doubts. We can create these roles dynamically according to one particular organization. Responsibilities Involved in all the phases of the project development - requirements gathering, analysis, design and development, coding and testing. Followed Agile Software Development with Scrum methodology. Used and configured Struts Dynamic Action Forms, Message Resources, Action Messages, Action Errors, Validation.xml, Validator-rules.xml. Developed the data layer for the applications using Spring Jdbc. Provided connections using Spring JDBC to the database and developed SQL queries to manipulate the data. Used Spring DAO concept in order to interact with database using JDBC Template. Implemented some applications by using Object Oriented Programming concepts, Multi-Threading, Exception Handling, and Collections while developing the project. Developed test scripts in JUnit and involved in testing. Implementing service classes for calling DAO methods. Performed the CRUD operations on the existing and new database tables. Used Subversion for version control management and consistently produced high quality code through disciplined and rigorous unit testing. Used Jira for tracking bugs. Used Maven script for building and deploying the application. Used Jenkins for Continuous Integration Builds and deployments CI CD . Developed the ANT scripts for preparing WAR files used to deploy J EE components. Used Log j to print the logging, debugging, warning info on the server console. Deployed the war files on the Tomcat Server. Environment JDK . , Struts Framework .X, Spring Jdbc, SQL PLSQL, Servlet, JSP, Bug Tracker, PMD, Tomcat, Mysql. EDUCATION AND CERTIFICATIONS Bachelor of Computer Science in .",
  "preprocessed_text": "candidate summary year experience java full stack developer java ee developer full software development life cycle including requirement analysis design coding testing debugging maintenance extensive experience developing java based application using java jee jdbc ejb servlets jsp jsf jms web service experienced sdlc development involving requirement analysis design implementation maintenance testing documentation application software web enterprise based environment distributed n-tier architecture extensive experience developing web interface using html cs bootstrap javascript jquery angularjs experience implementing java ee technology application development various layer project i.e requirement gathering analysis design implementation unit testing deployment uat prod proficient working java framework like strut .x .x hibernate .x jsf spring framework .x experience developing full stack application using angularjs nodejs html cs javascript bootstrap java extjs jsf etc experience designing development enterprise application using java jsp servlets jdbc jndi rmi ejb javascript xml rest web service jms java mail wsdl soap hibernate hand experience various agile methodology like test driven development tdd scrum pair programming experience working web application server like web logic jboss tomcat server database oracle db mysql sql server experienced developing microservices spring boot spring rest spring cloud eureka api-gateway etc experienced front-end technology typescript bootstrap angular angular ajax json nodejs etc experience spring boot micro service design development hand experience core java multithreading concurrency exception handling file handling io generic data structure collection garbage collection experience working ee technology servlets jsp jdbc ejb jndi java bean jms object-oriented oop client server-side technology expertise developing gui using swing html dhtml dojo java script cs angular j reactjs bootstrap apache cassandra full stack jsf xml rest jquery ajax scripting experienced software development life cycle sdlc implementing waterfall v-model agile methodology good understanding nosql database hand work experience writing application nosql database apache cassandra experience developing stored procedure function trigger using oracle comfortable using database sql server db mysql experience working version control tool like sareena pvc clear case svn git-hub extensive experience design development ee application using core java java collection data structure multithreading transaction management jdbc servlets jsp xml web service open source framework apis designed ui layout using html cs jsp ajax javascript jquery jstl taglibs worked javascript validate input manipulated html element using javascript developed external javascript code used several different web page expertise ides software development like netbeans eclipse eclipse sts rad experience working various application server like ibm web sphere web logic jboss apache tomcat server extensive use version control like svn cv git subversion experienced jenkins build deploy application extensive experience usage orm hibernate spring framework extensive working experience soap restful web service worked xml parser like dom sax jaxb good working knowledge ant maven log j. good working knowledge spring boot micro service good working knowledge ides eclipse intellij hand experience web application server apache tomcat jboss web logic experienced unit testing functional testing system testing integration testing regression testing involved writing junit test case expertise developing reference implementation proof concept key deliverable evaluating executing latest optimal technology stack good experience resolving production issue possess hand experience handling responsibility like coordinating offshore team study understand business process functionality application managing developing enhancement delivery new release strong understanding oops concept design pattern one experience hadoop developer good knowledge hadoop ecosystem technology hand experience setting database aws using rds storage using bucket configuring instance backup bucket ensure fault tolerance high availability experience developing map reduce program using apache hadoop analyzing big data per requirement experience using sqoop import data hdfs rdbms vice-versa self-motivated team player excellent interpersonal communication skill technical skill programming language java ee sql pl sql ee technology ejb servlets jsp jstl jdbc jsf rmi jndi jms web technology html dhtml angularjs jquery xml xslt cs json json-dtd ajax bootstrap nodejs reactjs ide ibm rad rsa eclipse eclipse netbeans jbuilder intellij application web server ibm websphere oracle weblogic jboss apache tomcat glassfish database oracle mysql db xml technology xml xslt xpath sax dom jaxb web service soap rest jax-ws jax-rpc jax-rs methodology rup rational unified process agile waterfall scrum rapid application development operating system window linux unix application framework strut .x .x spring dependency injection spring mvc factory pattern spring core spring context spring dao spring ioc spring jdbc spring security spring boot spring batch spring hibernate orm framework jpa hibernate spring jpa dao oo modeling rational rose m visio version control clear case svn apache subversion cv git tool ant maven log jenkins junit jira aws amazon web service ec rds dynamodb micro service swagger union pacific railroad dallas tx dec till senior java developer locomotive distribution assignment system primarily supported strategic planning tactical planning assign power fuel plan strategic planning model decides many locomotive use type also chooses starting location system require locomotive file starting location tactical planning version system requires locomotive snapshot starting location production setting tactical planning system set run continuously day updating minute change made train schedule status locomotive tactical system help plan repositioning power well anticipate problem happen core engine used strategic planning system assign power module used assign power existing plan fuel plan module used fuel filling terminal plan responsibility involved developing application using java ee platform implemented model view control mvc structure using spring extensively used core java concept like collection frame work multi-threading oops exception handling involved analysis design coding testing phase project management followed agile software development scrum methodology involved writing controller class manager class dao class using spring mvc framework implemented spring configuration file bean defined property injected using spring dependency injection experience used spring boot radically faster building micro service develops spring based application less configuration used hibernate framework spring framework data persistence transaction management responsible enhance web application ui using html javascript angularjs xml jsp cs per requirement providing client side using java script validation used hibernate persistence framework mapping orm object table using hibernate mapping pojos implemented user interface guideline standard throughout development maintenance website using html cs javascript reactjs angularjs involved using reactjs component form event key router animation flux concept server instance created aws tomcat swagger hawtio installed used deploying micro service involved development user interface application professional web application using html cs javascript jquery ajax json xml nodejs bootstrap angularjs involved jdbc servlets jsp technology write ui business class involved multi-tiered ee design utilizing spring inversion control ioc architecture hibernate experienced jms tibco server message queuing developed data loader using spring scheduler using cron expression train horse power detail detail train schedule used wsdl soap jax-ws jax-rs technology create web service generate stub consuming existing service created restful apis express returned logic angularjs data binding continuous deployment using jenkins ca release automation tool involved writing jsp component used jstl developed custom tag library create standard dynamic web page worked part micro service team develop deliver maven project deploy tomcat demonstrated understanding core java concept like oops ooad orm rest built nodejs npm package library support current future node development implemented functionality like searching filtering sorting validating using angularjs javascript involved writing jdbc code get data base connectivity leveraging aws sdks interact aws service application help migrate web application current on-premise environment aws developed test script junit involved testing implemented logging mechanism using log framework used svn version control application working closely testing team creating new test case use case module attending sprint planning feature refinement demo session backlog grooming meeting coordinated onsite team requirement transition providing necessary input required successful execution project environment jdk spring framework .x hibernate .x jms web service jsp html node aws oops cs java script jquery angularjs junit jira maven ant jenkins jboss misys financial service mar dec sr full stack java developer islamic banking banking banking activity consistent principle sharia practical application development islamic economics correct term islamic banking sharia compliant finance phase targeted two product i.e murabahah ijarah murabahah transaction involves sale good price includes profit margin agreed party however murabahah seller must let buyer know actual cost asset profit margin time sale agreement ijarah normally used financing consumer good especially motor vehicle two separate contract involved ijarah contract leasing renting contract responsibility analyzed user requirement designed user interface object model application server logic schema created web page project using html cs java script developed restful web service interface java-based runtime engine account used core java ee pattern designing application worked designer get gui mockups developed web ui screen using spring mvc angularjs html cs javascript cs responsible maintaining expanding aws cloud service infrastructure using aws stack especially worked database setup maintenance aws ec involved writing code form bean java action dto dao accessing business method business layer developed ui using html cs ext j bootstrap jquery jsp interactive cross browser functionality complex user interface used nosql db like cassandra proof concept used strut interacted backend database using hibernate framework extensively used hibernate data access layer access update information oracle database developed presentation layer using html cs extjs java script used stored procedure crunch data creating view fetching data multiple table db used jdbc mq series web service hibernate framework access data back-end db database server implemented multithreading concurrency exception handling generic collection whenever necessary used hibernate query language hql writing query created hibernate mapping file session transaction query criterion used validator framework strut client side server side validation implemented used web service help wsdl soap get update third party created proof-of-concept using responsive web design node.js reactjs deployed application continuous integration environment like jenkins integrate deploy code ci environment development testing designed developed deployed server-side common utility application front-end dynamic web page using servlets jsp angularjs nodejs javascript bootstrap html dhtml cs implemented fallout mechanism using message driven bean jms refactored existing angularjs application code maintenance based mvc pattern used dojo toolkit provides inheritance pattern using dojo declare share module code different project used dojo aspect trigger function executing specific function worked qa team validate test case whether test case meeting business requirement used saml sso login access web service provided oauth authorizing user application used svn version source control deployed application live qa environment identified check style pmd find bug fixed reviewed code developed developer involved creating junit test case ran test suite using emma tool extensively involved unit testing worked user team fix bug identified system testing environment java ee servlets jsp html j cs dojo angularjs apache-tomcat maven repository jenkins jms aws dom sax xml xsd xslt sql pl sql oracle jboss toad sql developer eclipse junit cv strut mvc ejb mongo db oracle coherence jsm web service wsdl node j jax-ws soap cxf jax-restful service jaxp react jaxb qc etc vietnam bank social policy vbsp oct jan java ee developer intellect banking product integration core system lending system collateral brokerage lending one main functionality involving booking disbursal repayment schedule payment excess adjusting accrual calculation late charge fee charge early settlement delinquency status collateral module support operation like collateral addition modification release execution asset addition asset modification linking asset collateral delinking asset asset release responsibility involved phase project development requirement gathering analysis design development coding testing worked closely front end team developed single dynamic web page using web technology html cs bootstrap jquery angularjs framework module conjunction bootstrap render responsive web page implemented soap based web service using apache axis jax-ws support used soapui test web service used complete annotation driven approach develop application using spring boot framework also involved setting spring bean profiling developed layer application using spring hibernate orm developed various business logic service using hql hibernate criterion developed entity class mapped relational table database using jpa hibernate mapping file worked oracle backend database used hibernate automate mapping sql database java object used java mailing messaging service jms mailing detailed notification depending success failure backend process complete also mailing administrator system related problem implemented feature like monthly statement availability notification using java mail api smpt server gmail configured weblogic application server deployment participated structured code review walkthroughs wrote unit test script using testng framework testing functionality test-driven development tdd methodology participated daily meeting sprint planning etc part agile project methodology deliver quality code -week sprint used subversion version control management consistently produced high quality code disciplined rigorous unit testing used jira tracking bug used maven script building deploying application used jenkins continuous integration build deployment ci cd participated integration testing bug fixing handling change request code review environment html cs bootstrap jquery angularjs soap spring hibernate orm jms oracle weblogic testng subversion jira maven selenium web driver jenkins agile eclipse bob tech aug oct software engineer learning management system e-learning based product .the main aim product learning course offline online .there four role project i.e content admin content author validator learner product content admin create course course module assessment module content validator validates course module assessment module edit content module validation content admin publish course .author assign course learner learner login application read course module assessment test .after completion assessment learner understanding performance forum clarify learner doubt create role dynamically according one particular organization responsibility involved phase project development requirement gathering analysis design development coding testing followed agile software development scrum methodology used configured strut dynamic action form message resource action message action error validation.xml validator-rules.xml developed data layer application using spring jdbc provided connection using spring jdbc database developed sql query manipulate data used spring dao concept order interact database using jdbc template implemented application using object oriented programming concept multi-threading exception handling collection developing project developed test script junit involved testing implementing service class calling dao method performed crud operation existing new database table used subversion version control management consistently produced high quality code disciplined rigorous unit testing used jira tracking bug used maven script building deploying application used jenkins continuous integration build deployment ci cd developed ant script preparing war file used deploy ee component used log print logging debugging warning info server console deployed war file tomcat server environment jdk strut framework .x spring jdbc sql plsql servlet jsp bug tracker pmd tomcat mysql education certification bachelor computer science",
  "statistics": {
    "word_count": 3694,
    "unique_word_count": 1048,
    "avg_word_length": 4.893611261505144,
    "stopword_count": 728
  },
  "metadata": {
    "filename": "Candidate100.docx",
    "file_size": 36367,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:57.377988",
    "input_filename": "Candidate100.json"
  }
}