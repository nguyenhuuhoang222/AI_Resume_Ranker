{
  "id": "Candidate170",
  "raw_text": "Candidate 170\n+1(940)437-0150\nCandidate170atwork@gmail.com\nPROFESSIONAL SUMMARY:\nAround 8 years of experience in the requirement analysis, design, development, testing, implementation, and support using Object Oriented Methodologies and Java/J2EE technologies.\nActively involved in each phase of Software Development Life cycle (SDLC).\nExpertise in client scripting language and server scripting languages like HTML, CSS, JavaScript, Groovy, JQuery, Ajax, AngularJS, JSP, NodeJS, ExtJS, BackboneJS, ReactJS, JSON, Bootstrap.\nExtensive experience working in Spring framework, Struts framework, O/R Mapping Hibernate framework, Mybatis and web services.\nExperience using Spring MVC, Spring Boot, Spring Cloud, Spring DAO, Spring Data, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring Security.\nExperience in developing applications using Micro Services architecture.\nExpert in Core Java with strong understanding of Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nExpertise in developing reliable and scalable enterprise applications using Servlets, JSPs, Structs, JSTL, JDBC, AJAX, JSF, EJB and Web Services.\nStrong work experience in application integration and communicating using SOA, Web Services such as Simple Object Access Protocol(SOAP), Representational State Transfer (REST/ Restful), JAX-RPC, JAX-RS, JAX-WS, WSDL, UDDI, Apache CXF, JAXB, XSD, Axis 2.\nExcellent knowledge and experience in writing SQL queries, Stored Procedures, Triggers and views using various databases such as MS SQL Server, MySQL, IBM DB2, Oracle databases and NoSQL database systems like Mongo DB, Cassandra. \nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX, DOM.\nExperienced in JMS and Kafka over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel as JMS provider.\nExperience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server.    \nHands on experience in deploying application in Google App Engine.                      \nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nManaged Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration.\nHands on experience with amazon web services (AWS) and amazon cloud technologies such as Amazon EC2 (virtual servers) and Amazon Cloud Watch (monitoring).\nSkilled in programming scripting languages like Java \nDeploy application updates to AWS and monitored the load balancing of different instances.\nDeployed the Applications into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS, Netflix Eureka.\nExperience in developing logging and standard mechanism based on Log4j and SLF4j.\nExperience in working in agile practices like ATDD and TDD using Junit, and mocking libraries like Mockito, Jmock for Java applications and Karma JS, Jasmine, Mocha JS, cucumber JS and Selenium web driver for UI applications. \nWorked on implementing full life cycle of software development process (SDLC) in using version control tools like Git, Rational Clear Case, Tortoise SVN, CVS (Concurrent Version System).\nHands-on experience working with Continuous Integration (CI) build-automation tools such as Jenkins along with Build Plugins like Maven, Gradle and Apache Ant.\nExperienced in the formation and mentoring of project teams working on Agile methodologies to deliver business critical software applications using tools like Jira.\nSignificant experience in web development tools like NetBeans, Adobe Dreamweaver, Spring Tool Suite, Eclipse, intelliJ and RAD.\nHands on experience with Windows, UNIX and Linux Environments.\nHaving Experience on Shell Scripting and Deployment of Applications in Server.\nExperience in designing, developing, and deploying J2EE applications on IBM Web sphere, Web logic, Apache Tomcat, Glassfish, Redhat and JBOSS Servers.\nTECHNICAL SKILLS:\nPROFESSIONAL EXPERIENCE:\nClient: MasterCard \t\t\t\t\t\t\t\t\tFeb 2016 – Till Date\nLocation: St Louis, MO\nRole:  Full Stack Java Developer\nDescription: MasterCard Worldwide is an American multinational financial services corporation. Its principal business is to process payments between the banks of merchants and the card issuing banks or credit unions of the purchasers who use the MasterCard brand debit and credit cards to make purchases.\nResponsibilities:\nInvolved in the complete SDLC (software development life cycle) of the application from requirement analysis to testing. \nExtensively worked on Responsive Web Design (RWD) page development using HTML5, CSS3, JQuery, JavaScript, Backbone.js, Twitter Bootstrap, Ajax, Angular JS, JSON, JSF UI Components and JSP.\nDefined new validations through AngularJS for the form field validation implemented through HTML5.\nUsed NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server.\n Implemented new features in Groovy programming language as a part of Jenkins continuous delivery. \nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nDeveloped the application using J2EE Design Patterns like Business Delegate, Factory, Singleton, Session Facade, Service Locator and DAO. \n Used Java8 features in developing the code like Lambda expressions, creating resource classes, fetching documents from database. \nIntegrated Scala Web Service with Relational DB using Slick\nUsed JAX-Web services to interact with other applications using SOAP and WSDL file.\nDeveloped RESTful API for assessment indicators module and token based authentication for RESTful services using Spring Security.\nInvolved in building database Model, APIs and Views utilizing Python, to build an interactive web based solution. \nUsed Jersey to implement Restful Web Service and used XML form to transfer the data. \nExposed SOAP webservices as API's using Apigee Edge by implementing API Proxies \n Deployed and Monitored Micro Services Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry.\nFollowed Agile Methodology in analyze, define, and document the application, which will support functional and business requirements. Coordinate these efforts with Functional Architects. \nWorked and involved in deployment of core platform technologies, techniques, and web app frameworks such as spring, JBOSS, Tomcat, JSON, XML, HTML5, and Web Services.\nUsed Spring MVC module to develop MVC Architecture. \nDeveloped the Controller to handle the requests and responses.\nUsed Core Java to develop Business Logic as Spring Beans. \nConfigured Spring Container to implement IOC/DI of the Spring Beans, and to manage the beans life circle.\nWorked on Apache Camel, RabbitMQ for sending messages over queue. \nDeployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka\nUsed Spring Security and OAuth2.0 for Authentication and Authorization of the application.\nImplemented Spring AOP for declarative transaction management.\nCreated Stored Procedures, functions and Packages in Oracle 10g using SQL and PL/SQL for the Audit Trail using Oracle 10g as backend. \nWrote Microservices to export/import data and task scheduling and Spring boot, Spring and Hibernate in the Micro services and Swagger API for Microservices. \nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS\nDesigned, Configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nExperienced in setting up Amazon EC2 instances, virtual private cloud (VPCs), and security groups. Setting up databases in AWS using RDS, storage using S3 bucket and configuring instance backups to S3 bucket.\nDeveloped POJO objects and used Hibernate as the Object-Relational Mapping (ORM) tool to access the persistent data from SQL Server. \nManaged code versioning with GitHub and deployment to staging and production servers\nUsed Rest Controllers to replace the existing operations layer, which acts as bridge between business layer and the UI. \nWorked on Solr, Elastic Search, Kafka, Flume, MangoDB and Cassendra.\nUsed Jenkins as build management tool for continuous integration process.\nUsed Google App Engine cloud services to launch Linux and windows machines.\nDeveloped Unit Test Cases. Used Junit for unit testing, Selenium for the testing of the application.\nConfigured pom.xml to deploy the project using Maven.\nProvided Technical support for production environments resolving the issues, analyzing the defects, providing and implementing the solution defects. \nEnvironment: Java, Lambda, J2EE, HTML, CSS, JavaScript, JQuery, Apache Camel,  AJAX, AngularJS, Bootstrap, JSON, JSP, JNDI, Oracle, Apache Camel, RabbitMQ, Spring AOP, Hibernate, Springcloud, Google Cloud Platform Spring MVC, Spring JDBC, JDBC, Web-Services, SOA (Service-oriented) Architecture, AWS, Redis, REST, JAX-RS, Jersey, JUnit, JAX-B, WebSphere, JIRA, Maven, GIT, RAD, Jenkins, MongoDB, PostgreSQL, Cassendra, Agile Methodology.\nClient: BCBS\t\t\t\t\t\t\t\t\t\tDec 2014 – Jan 2016\nLocation: Chicago, IL\nRole: JAVA Full Stack Developer\nDescription:\n Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. “Find a plan” is a web based J2EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan that’s right for you.\nResponsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using AGILE methodology.\nCreated user-friendly GUI interface using HTML5, CSS3, JavaScript, JQuery, AngularJS, Node.js, ExpressJS, Backbone.js, AJAX, XML and JSON. \nInvolved in designing the client-side module architecture based on new Angular Framework.\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nImplemented persistence framework using Hibernate& Handled Transaction Management using the provided data source.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nDeveloped restful web service APIs using Spring Framework such as Spring Core, Spring MVC, Spring \nAOP and Java Persistence API with a backend PostgreSQL and Cassendra database.\nInvolved in developing Web Services to send XML request and reading the response SOAP UI from Java platform.\nInstalled and configured various components of Hadoop ecosystem and maintained their integrity. \n Involved in extracting customer's Big data from various data sources into Hadoop HDFS. This included data from mainframes, databases and logs data from servers.\nConsumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP.\n Used Apigee as a API gateway for APIs transformation, multiple authentication mechanisms \n Migrating application functionality in sending emails from MySQL to NoSQL database implemented by Google Cloud platform which handles BIG Data. \nExtensively used Google Cloud resources like Compute Engine, IAM, Google Container Registry, Container Builder and Cloud Storage buckets. \nMigrating servers, databases, and applications from AWS On-premises to  Google cloud platform\nCreated Restful Web services using Jersey API (JAX-RS) while data exchange was carried out between application and services using JSON. \n Used Apache Camel to implement Java Message Service (JMS) API for sending and receiving email notifications to the employee about notifications to their portal. \nCreating and supporting of JMS, MQ connection factory, topics, queues, channel, listeners. \nImplemented microservices using Spring boot, spring based microservices, and enabled discovery using Netflix eureka server.\nUsed Java-PHP bridge code to integrate Java with PHP. \nUsed Maven Deployment Descriptor Setting up build environment by writing Maven build.xml, taking build configuration and deployment of the application on JBoss Application Server.\nUsed Spring MVC, Ajax and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP.\nIntegrated Spring DAO for data access using Hibernate.\nUsed Apache Camel framework for connectivity to different APIs and transports.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nIntegrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring.\nExtensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nUsed Rest methodology for the service layer interface and used JSON for the data transformation.\nDeveloped various AJAX and JSON calls for the communication between the server and the UI.\nDeveloped web services for produce and consumed the services by making Web Service Calls to remote services in different applications.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using Hibernate O/R mapping with Spring ORM for MySQL Server. \nDeveloped the Mapping Resource Files for the database entities.\nPackaged and deployed the application in IBM Web sphere.\nUsed IntelliJ as IDE to develop the application and followed the standard features for debugging and running.\nWritten LINUX shell scripts to identify user login information.\nPlayback and technical presentations to the clients on acquired knowledge.\nGenerating reports in PDF using iText Open source and excel file formats.\nUsed log4J for application logging and notification tracing mechanisms.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nUsed Rational Clear Case for the version control\nUsed Maven as the build tool.\nUsed J-Unit Testing and Ant Scripts.\nUsed JIRA for tracking the Project Stories in AGILE Methodology.\nEnvironment: Java, JDK, J2EE (EJBs, JSP/Servlet, JDBC), Mongo DB, XML, HTML, CSS, Java Script, JQuery, Ajax, AngularJS, NodeJS, JSON, JMS,  Struts, Spring, Apache Camel, MVC design patterns, Spring MVC, Hibernate, Agile, Ant, Maven, Netflix, Rational Clear Case, Web sphere Server, IBM Web Sphere, Apache Camel, SOAP UI, JNDI, Log4J, PostgreSQL,  MySQL Server, Google cloud platform, JIRA , RMI, IntelliJ,  IDE, LINUX. \nClient: US Cellular\t\t\t\t\t\t\t\t\tNov 2013 – Nov 2014\nLocation: Knoxville, TN\nRole: Java Developer\nDescription:\nUs Cellular is a leading company in providing the wireless services to the mobile platform. One message is the system that Us Cellular uses to send communications to its customers. One message is the Enterprise Wide application for all transactional customer communications. The application supports all Email, SMS, EMS, and MMS communications for various organizations in Us Cellular One message stores customer notification Preferences in the preference center where customer can configure various notification types. \nResponsibilities:\nDesigned and developed the REST based Micro Services using the Spring Boot.\nWriting end-to-end flow i.e. controllers classes, service classes, DAOs classes as per the Spring MVC design and writing business logics using core java API and data structures\nDesign, develop & deliver the REST APIs that are necessary to support new feature development and enhancements in an agile environment. \nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUsed Spring JMS related MDB to receive the messages from other team with IBMMQ for queuing\nDeveloped presentation layer code, using JSP, HTML, AJAX and JQuery\nDeveloped the Business layer using spring (IOC, AOP), DTO, and JTA\nDeveloped the Persistence layer DAO using HIBERNATE\nWorked with Open symphony workflows and delivered work flow module to the client. \nDeveloped the project using industry standard design patterns like Singleton, Business Delegate Factory Pattern for better maintenance of code and re-usability\nDeveloping application module coded on Spring Batch and Apache Camel. \nWritten Jenkins pipeline template script in Groovy programming language for the automation of build and deployment process.\nCreated groovy scripts to extract transaction volume information and email to management on daily basis. \nInvolved in debugging and tuning the PL/SQL  code, tuning queries, optimization for the Oracle database using Explain Plan, hints and also worked on Partition tables using Range method. \nDeveloped unit test cases using Junit framework for testing accuracy of code and logging with SLF4j + Log4j\nWorked with defect tracking system Clear Quest\nWorked with IDE as Spring STS and deployed into spring tomcat server, WebSphere 6 & used Maven as build tool\nResponsible for code sanity in integration stream used Clear Case as version control tool.\nEnvironment: Java, J2EE, HTML, CSS, AJAX, JQuery, MongoDB,  Apache Camel, symphony, JavaScript, JSP, Spring, Spring Batch, Spring web services ,  XML, UML, JUNIT, IBM WebSphere, Maven, Clear Case, SoapUI, Oracle 11g, Spring JMS, IBM MQ.\nClient: FedEx\t\t\t\t\t\t\t\t\tJan 2012 – July 2013\nLocation: Memphis, TN\nRole: Java/J2EE Developer\nDescription:\nFedEx Corporation provides customers and businesses worldwide with a broad portfolio of transportation, e-commerce, and business services. The company offers integrated business applications through operating companies competing collectively and managed collaboratively, under the respected FedEx brand.\nResponsibilities:\nInvolved in all phases of the Software development life cycle (SDLC).\nDesigned project related documents which includes Use case, Class and Sequence diagrams.\nInvolved in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document.\nUsing Agile methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments.\nExtensive experience in developing PL/SQL Stored Procedures, Functions, Packages, Cursors, Collections (Nested tables and Varrays), Records, Object types and Database Triggers. \nCreated HTML Wireframes based in the Detailed System Specification document Developed the presentation layer of the application using MVC architecture of spring framework. \nCreated DAO classes to interact with DB2 database.\nUsed Spring ORM module to integrate with Hibernate.\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUsed JMS API for sending and receiving the messages on the queue.\nUsed the spring validation and Tiles Framework in the presentation layer.\nDeveloped user interface using JSP, Spring Tag Libraries to simplify the complexities of the application.\nDeveloped user interface with Java Server Pages, Ajax support to speed up the application form filling.\nUsed Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL.\nUsed Rally for tracking purpose.\nDesigned various tables required for the project using DB2 database. Used JBOSS server for deploying the application.\nUsed Ant for build, create JAR, WAR, EAR files and deploy the EAR files automatically. \nUsed Junit to test the application classes.\nUsed Log4J to capture the logging information.\nEnvironment: Java, J2EE, JavaScript, JSP, AJAX, XML, Agile, Spring, Eclipse IDE, DB2, Rational Rose, Log4j, Junit, Ant, JBOSS, Rally, Apache Axis, Web Service, SOAP, WSDL.\nClient: InfoTech\t\t\t\t\t\t\t\t\t\tSep 2010 – Dec 2011\nRole: Java Developer\nDescription:\nThe objective of Item Management is to set-up, maintain, and share Item information in a flexible system that easily supports Unilever’s growth, increases speed to market and improves data accuracy, while reducing user workload. Guided Setup is one module of the project which functions as a wizard to complete the configuration and creation of various types of items like Single Items, Multiple Items and Assortment Items.\nResponsibilities: \nInvolved in the design and development of an entire Module – Guided Set Up. Developed user interface through JSP and Servlets. \nDeveloped Action classes and Action Forms using the struts framework. \nDeveloped Customs tags to display dynamic contents and to avoid large amounts of java code in JSP pages\nConnected to database through JDBC. \nExtensive experience working with XML (DOM and SAX).\nUsed SQL-server to store the items in the database.\nUsed Session beans for navigation of steps.\nUsed Entity beans for storing the database in to database. Developed Session Beans as the clients of Entity Beans to maintain the Client state.\nDeveloped Ant Scripts to build and deploy EAR files on to Tomcat Server. Analyzed the EJB performance in terms of scalability by various Loads, Stress tests using Bean- test tool.\nExtensively used Eclipse while writing code as IDE. Written complex SQL queries, stored procedures, functions and triggers in PL/SQL. \nDeveloped test cases and used Junit for Unit Testing. \nUsed CVS for version controlling.\nEnvironment: Java, J2EE, Servlets, XML (DOM and SAX), JSP, EJB, JavaScript, CSS, JDBC, Struts, Ant, Web Logic Application Server, WSAD, Eclipse IDE, SQL-Server, Apache Tomcat, Oracle, PL/SQL, CVS, PVCS, Junit, Windows.\nClient: SLK Software\t\t\t\t\t\t\t\t\tJun 2009 - Aug 2010\nRole: Java Developer\nDescription:\nSLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level 4 Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products.\nResponsibilities:\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: Java, JDBC, Struts, JavaScript, HTML, CSS, JSP, Servlets, Tomcat, Oracle, Eclipse IDE, CVS, ANT, Log4J.",
  "cleaned_text": "Candidate PROFESSIONAL SUMMARY Around years of experience in the requirement analysis, design, development, testing, implementation, and support using Object Oriented Methodologies and Java J EE technologies. Actively involved in each phase of Software Development Life cycle SDLC . Expertise in client scripting language and server scripting languages like HTML, CSS, JavaScript, Groovy, JQuery, Ajax, AngularJS, JSP, NodeJS, ExtJS, BackboneJS, ReactJS, JSON, Bootstrap. Extensive experience working in Spring framework, Struts framework, O R Mapping Hibernate framework, Mybatis and web services. Experience using Spring MVC, Spring Boot, Spring Cloud, Spring DAO, Spring Data, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring Security. Experience in developing applications using Micro Services architecture. Expert in Core Java with strong understanding of Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics. Expertise in developing reliable and scalable enterprise applications using Servlets, JSPs, Structs, JSTL, JDBC, AJAX, JSF, EJB and Web Services. Strong work experience in application integration and communicating using SOA, Web Services such as Simple Object Access Protocol SOAP , Representational State Transfer REST Restful , JAX-RPC, JAX-RS, JAX-WS, WSDL, UDDI, Apache CXF, JAXB, XSD, Axis . Excellent knowledge and experience in writing SQL queries, Stored Procedures, Triggers and views using various databases such as MS SQL Server, MySQL, IBM DB , Oracle databases and NoSQL database systems like Mongo DB, Cassandra. Expertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX, DOM. Experienced in JMS and Kafka over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel as JMS provider. Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server. Hands on experience in deploying application in Google App Engine. Utilized Java . features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application. Managed Amazon Web Services like EC , S bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud VPC through AWS Console and API Integration. Hands on experience with amazon web services AWS and amazon cloud technologies such as Amazon EC virtual servers and Amazon Cloud Watch monitoring . Skilled in programming scripting languages like Java Deploy application updates to AWS and monitored the load balancing of different instances. Deployed the Applications into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS, Netflix Eureka. Experience in developing logging and standard mechanism based on Log j and SLF j. Experience in working in agile practices like ATDD and TDD using Junit, and mocking libraries like Mockito, Jmock for Java applications and Karma JS, Jasmine, Mocha JS, cucumber JS and Selenium web driver for UI applications. Worked on implementing full life cycle of software development process SDLC in using version control tools like Git, Rational Clear Case, Tortoise SVN, CVS Concurrent Version System . Hands-on experience working with Continuous Integration CI build-automation tools such as Jenkins along with Build Plugins like Maven, Gradle and Apache Ant. Experienced in the formation and mentoring of project teams working on Agile methodologies to deliver business critical software applications using tools like Jira. Significant experience in web development tools like NetBeans, Adobe Dreamweaver, Spring Tool Suite, Eclipse, intelliJ and RAD. Hands on experience with Windows, UNIX and Linux Environments. Having Experience on Shell Scripting and Deployment of Applications in Server. Experience in designing, developing, and deploying J EE applications on IBM Web sphere, Web logic, Apache Tomcat, Glassfish, Redhat and JBOSS Servers. TECHNICAL SKILLS PROFESSIONAL EXPERIENCE Client MasterCard Feb Till Date Location St Louis, MO Role Full Stack Java Developer Description MasterCard Worldwide is an American multinational financial services corporation. Its principal business is to process payments between the banks of merchants and the card issuing banks or credit unions of the purchasers who use the MasterCard brand debit and credit cards to make purchases. Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing. Extensively worked on Responsive Web Design RWD page development using HTML , CSS , JQuery, JavaScript, Backbone.js, Twitter Bootstrap, Ajax, Angular JS, JSON, JSF UI Components and JSP. Defined new validations through AngularJS for the form field validation implemented through HTML . Used NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server. Implemented new features in Groovy programming language as a part of Jenkins continuous delivery. Used Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics. Utilized Java . features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application. Developed the application using J EE Design Patterns like Business Delegate, Factory, Singleton, Session Facade, Service Locator and DAO. Used Java features in developing the code like Lambda expressions, creating resource classes, fetching documents from database. Integrated Scala Web Service with Relational DB using Slick Used JAX-Web services to interact with other applications using SOAP and WSDL file. Developed RESTful API for assessment indicators module and token based authentication for RESTful services using Spring Security. Involved in building database Model, APIs and Views utilizing Python, to build an interactive web based solution. Used Jersey to implement Restful Web Service and used XML form to transfer the data. Exposed SOAP webservices as API s using Apigee Edge by implementing API Proxies Deployed and Monitored Micro Services Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry. Followed Agile Methodology in analyze, define, and document the application, which will support functional and business requirements. Coordinate these efforts with Functional Architects. Worked and involved in deployment of core platform technologies, techniques, and web app frameworks such as spring, JBOSS, Tomcat, JSON, XML, HTML , and Web Services. Used Spring MVC module to develop MVC Architecture. Developed the Controller to handle the requests and responses. Used Core Java to develop Business Logic as Spring Beans. Configured Spring Container to implement IOC DI of the Spring Beans, and to manage the beans life circle. Worked on Apache Camel, RabbitMQ for sending messages over queue. Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka Used Spring Security and OAuth . for Authentication and Authorization of the application. Implemented Spring AOP for declarative transaction management. Created Stored Procedures, functions and Packages in Oracle g using SQL and PL SQL for the Audit Trail using Oracle g as backend. Wrote Microservices to export import data and task scheduling and Spring boot, Spring and Hibernate in the Micro services and Swagger API for Microservices. Developed API for using AWS Lambda to manage the servers and run the code in the AWS Designed, Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation. Experienced in setting up Amazon EC instances, virtual private cloud VPCs , and security groups. Setting up databases in AWS using RDS, storage using S bucket and configuring instance backups to S bucket. Developed POJO objects and used Hibernate as the Object-Relational Mapping ORM tool to access the persistent data from SQL Server. Managed code versioning with GitHub and deployment to staging and production servers Used Rest Controllers to replace the existing operations layer, which acts as bridge between business layer and the UI. Worked on Solr, Elastic Search, Kafka, Flume, MangoDB and Cassendra. Used Jenkins as build management tool for continuous integration process. Used Google App Engine cloud services to launch Linux and windows machines. Developed Unit Test Cases. Used Junit for unit testing, Selenium for the testing of the application. Configured pom.xml to deploy the project using Maven. Provided Technical support for production environments resolving the issues, analyzing the defects, providing and implementing the solution defects. Environment Java, Lambda, J EE, HTML, CSS, JavaScript, JQuery, Apache Camel, AJAX, AngularJS, Bootstrap, JSON, JSP, JNDI, Oracle, Apache Camel, RabbitMQ, Spring AOP, Hibernate, Springcloud, Google Cloud Platform Spring MVC, Spring JDBC, JDBC, Web-Services, SOA Service-oriented Architecture, AWS, Redis, REST, JAX-RS, Jersey, JUnit, JAX-B, WebSphere, JIRA, Maven, GIT, RAD, Jenkins, MongoDB, PostgreSQL, Cassendra, Agile Methodology. Client BCBS Dec Jan Location Chicago, IL Role JAVA Full Stack Developer Description Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. Find a plan is a web based J EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan thats right for you. Responsibilities Involved in SDLC requirements gathering, analysis, design, development and testing of application developed using AGILE methodology. Created user-friendly GUI interface using HTML , CSS , JavaScript, JQuery, AngularJS, Node.js, ExpressJS, Backbone.js, AJAX, XML and JSON. Involved in designing the client-side module architecture based on new Angular Framework. Used Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics. Implemented persistence framework using Hibernate& Handled Transaction Management using the provided data source. Responsible for designing Hibernate mapping files based on business logic and Object relationships. Developed restful web service APIs using Spring Framework such as Spring Core, Spring MVC, Spring AOP and Java Persistence API with a backend PostgreSQL and Cassendra database. Involved in developing Web Services to send XML request and reading the response SOAP UI from Java platform. Installed and configured various components of Hadoop ecosystem and maintained their integrity. Involved in extracting customer s Big data from various data sources into Hadoop HDFS. This included data from mainframes, databases and logs data from servers. Consumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP. Used Apigee as a API gateway for APIs transformation, multiple authentication mechanisms Migrating application functionality in sending emails from MySQL to NoSQL database implemented by Google Cloud platform which handles BIG Data. Extensively used Google Cloud resources like Compute Engine, IAM, Google Container Registry, Container Builder and Cloud Storage buckets. Migrating servers, databases, and applications from AWS On-premises to Google cloud platform Created Restful Web services using Jersey API JAX-RS while data exchange was carried out between application and services using JSON. Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal. Creating and supporting of JMS, MQ connection factory, topics, queues, channel, listeners. Implemented microservices using Spring boot, spring based microservices, and enabled discovery using Netflix eureka server. Used Java-PHP bridge code to integrate Java with PHP. Used Maven Deployment Descriptor Setting up build environment by writing Maven build.xml, taking build configuration and deployment of the application on JBoss Application Server. Used Spring MVC, Ajax and Dependency Injection for handling presentation and business logic. To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate. Used Apache Camel framework for connectivity to different APIs and transports. Created data model and generated Hibernate mappings and domain objects using Hibernate tools. Integrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring. Extensively used HQL and SQL for querying databases. Developed Message Driven Bean for asynchronous sending Messages using JMS. Used Rest methodology for the service layer interface and used JSON for the data transformation. Developed various AJAX and JSON calls for the communication between the server and the UI. Developed web services for produce and consumed the services by making Web Service Calls to remote services in different applications. Used Spring JMS module for lookup for the queues and MDBs for the listeners Established Database Connectivity using Hibernate O R mapping with Spring ORM for MySQL Server. Developed the Mapping Resource Files for the database entities. Packaged and deployed the application in IBM Web sphere. Used IntelliJ as IDE to develop the application and followed the standard features for debugging and running. Written LINUX shell scripts to identify user login information. Playback and technical presentations to the clients on acquired knowledge. Generating reports in PDF using iText Open source and excel file formats. Used log J for application logging and notification tracing mechanisms. Analysis and Bug fixing of the production problems and defects along with enhancements Used Rational Clear Case for the version control Used Maven as the build tool. Used J-Unit Testing and Ant Scripts. Used JIRA for tracking the Project Stories in AGILE Methodology. Environment Java, JDK, J EE EJBs, JSP Servlet, JDBC , Mongo DB, XML, HTML, CSS, Java Script, JQuery, Ajax, AngularJS, NodeJS, JSON, JMS, Struts, Spring, Apache Camel, MVC design patterns, Spring MVC, Hibernate, Agile, Ant, Maven, Netflix, Rational Clear Case, Web sphere Server, IBM Web Sphere, Apache Camel, SOAP UI, JNDI, Log J, PostgreSQL, MySQL Server, Google cloud platform, JIRA , RMI, IntelliJ, IDE, LINUX. Client US Cellular Nov Nov Location Knoxville, TN Role Java Developer Description Us Cellular is a leading company in providing the wireless services to the mobile platform. One message is the system that Us Cellular uses to send communications to its customers. One message is the Enterprise Wide application for all transactional customer communications. The application supports all Email, SMS, EMS, and MMS communications for various organizations in Us Cellular One message stores customer notification Preferences in the preference center where customer can configure various notification types. Responsibilities Designed and developed the REST based Micro Services using the Spring Boot. Writing end-to-end flow i.e. controllers classes, service classes, DAOs classes as per the Spring MVC design and writing business logics using core java API and data structures Design, develop & deliver the REST APIs that are necessary to support new feature development and enhancements in an agile environment. Used Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics. Used Spring JMS related MDB to receive the messages from other team with IBMMQ for queuing Developed presentation layer code, using JSP, HTML, AJAX and JQuery Developed the Business layer using spring IOC, AOP , DTO, and JTA Developed the Persistence layer DAO using HIBERNATE Worked with Open symphony workflows and delivered work flow module to the client. Developed the project using industry standard design patterns like Singleton, Business Delegate Factory Pattern for better maintenance of code and re-usability Developing application module coded on Spring Batch and Apache Camel. Written Jenkins pipeline template script in Groovy programming language for the automation of build and deployment process. Created groovy scripts to extract transaction volume information and email to management on daily basis. Involved in debugging and tuning the PL SQL code, tuning queries, optimization for the Oracle database using Explain Plan, hints and also worked on Partition tables using Range method. Developed unit test cases using Junit framework for testing accuracy of code and logging with SLF j Log j Worked with defect tracking system Clear Quest Worked with IDE as Spring STS and deployed into spring tomcat server, WebSphere & used Maven as build tool Responsible for code sanity in integration stream used Clear Case as version control tool. Environment Java, J EE, HTML, CSS, AJAX, JQuery, MongoDB, Apache Camel, symphony, JavaScript, JSP, Spring, Spring Batch, Spring web services , XML, UML, JUNIT, IBM WebSphere, Maven, Clear Case, SoapUI, Oracle g, Spring JMS, IBM MQ. Client FedEx Jan July Location Memphis, TN Role Java J EE Developer Description FedEx Corporation provides customers and businesses worldwide with a broad portfolio of transportation, e-commerce, and business services. The company offers integrated business applications through operating companies competing collectively and managed collaboratively, under the respected FedEx brand. Responsibilities Involved in all phases of the Software development life cycle SDLC . Designed project related documents which includes Use case, Class and Sequence diagrams. Involved in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document. Using Agile methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments. Extensive experience in developing PL SQL Stored Procedures, Functions, Packages, Cursors, Collections Nested tables and Varrays , Records, Object types and Database Triggers. Created HTML Wireframes based in the Detailed System Specification document Developed the presentation layer of the application using MVC architecture of spring framework. Created DAO classes to interact with DB database. Used Spring ORM module to integrate with Hibernate. Used Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics. Used JMS API for sending and receiving the messages on the queue. Used the spring validation and Tiles Framework in the presentation layer. Developed user interface using JSP, Spring Tag Libraries to simplify the complexities of the application. Developed user interface with Java Server Pages, Ajax support to speed up the application form filling. Used Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL. Used Rally for tracking purpose. Designed various tables required for the project using DB database. Used JBOSS server for deploying the application. Used Ant for build, create JAR, WAR, EAR files and deploy the EAR files automatically. Used Junit to test the application classes. Used Log J to capture the logging information. Environment Java, J EE, JavaScript, JSP, AJAX, XML, Agile, Spring, Eclipse IDE, DB , Rational Rose, Log j, Junit, Ant, JBOSS, Rally, Apache Axis, Web Service, SOAP, WSDL. Client InfoTech Sep Dec Role Java Developer Description The objective of Item Management is to set-up, maintain, and share Item information in a flexible system that easily supports Unilevers growth, increases speed to market and improves data accuracy, while reducing user workload. Guided Setup is one module of the project which functions as a wizard to complete the configuration and creation of various types of items like Single Items, Multiple Items and Assortment Items. Responsibilities Involved in the design and development of an entire Module Guided Set Up. Developed user interface through JSP and Servlets. Developed Action classes and Action Forms using the struts framework. Developed Customs tags to display dynamic contents and to avoid large amounts of java code in JSP pages Connected to database through JDBC. Extensive experience working with XML DOM and SAX . Used SQL-server to store the items in the database. Used Session beans for navigation of steps. Used Entity beans for storing the database in to database. Developed Session Beans as the clients of Entity Beans to maintain the Client state. Developed Ant Scripts to build and deploy EAR files on to Tomcat Server. Analyzed the EJB performance in terms of scalability by various Loads, Stress tests using Bean- test tool. Extensively used Eclipse while writing code as IDE. Written complex SQL queries, stored procedures, functions and triggers in PL SQL. Developed test cases and used Junit for Unit Testing. Used CVS for version controlling. Environment Java, J EE, Servlets, XML DOM and SAX , JSP, EJB, JavaScript, CSS, JDBC, Struts, Ant, Web Logic Application Server, WSAD, Eclipse IDE, SQL-Server, Apache Tomcat, Oracle, PL SQL, CVS, PVCS, Junit, Windows. Client SLK Software Jun - Aug Role Java Developer Description SLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products. Responsibilities Developed web application using Struts .X, JSP, Servlets, Java beans that uses MVC design pattern Created user-friendly GUI interface and Web pages using HTML, CSS and JSP Wrote JavaScript for client side validation. Used Eclipse as IDE tool for creating Servlets, JSP, and XML. Wrote SQL for JDBC prepared statements to retrieve the data from database. Monitored the logs using Log J and fixed the problem The application was deployed on the Tomcat. Involved in build and deploying the application using ANT Used CVS as version control system Worked on bug fixing and Production Support Environment Java, JDBC, Struts, JavaScript, HTML, CSS, JSP, Servlets, Tomcat, Oracle, Eclipse IDE, CVS, ANT, Log J.",
  "preprocessed_text": "candidate professional summary around year experience requirement analysis design development testing implementation support using object oriented methodology java ee technology actively involved phase software development life cycle sdlc expertise client scripting language server scripting language like html cs javascript groovy jquery ajax angularjs jsp nodejs extjs backbonejs reactjs json bootstrap extensive experience working spring framework strut framework mapping hibernate framework mybatis web service experience using spring mvc spring boot spring cloud spring dao spring data spring ioc spring annotation spring aop spring transaction spring security experience developing application using micro service architecture expert core java strong understanding swing socket programming collection multithreading event handling exception handling generic expertise developing reliable scalable enterprise application using servlets jsps structs jstl jdbc ajax jsf ejb web service strong work experience application integration communicating using soa web service simple object access protocol soap representational state transfer rest restful jax-rpc jax-rs jax-ws wsdl uddi apache cxf jaxb xsd axis excellent knowledge experience writing sql query stored procedure trigger view using various database m sql server mysql ibm db oracle database nosql database system like mongo db cassandra expertise xml technology xsl xslt xml schema xpath xforms xsl-fo parser like sax dom experienced jms kafka messaging exchange information reliable asynchronous way enterprise application used apache active mq apache camel jms provider experience creating configuring continuous delivery pipeline deploying micro service lambda function using jenkins ci server hand experience deploying application google app engine utilized java feature like lambda expression stream api bulk data operation collection would increase performance application managed amazon web service like ec bucket elb auto-scaling sn sqs ami iam dynamo db elastic search virtual private cloud vpc aws console api integration hand experience amazon web service aws amazon cloud technology amazon ec virtual server amazon cloud watch monitoring skilled programming scripting language like java deploy application update aws monitored load balancing different instance deployed application docker container made easily accessible runtime using pivotal cloud foundry cloud service like aws netflix eureka experience developing logging standard mechanism based log slf j. experience working agile practice like atdd tdd using junit mocking library like mockito jmock java application karma j jasmine mocha j cucumber j selenium web driver ui application worked implementing full life cycle software development process sdlc using version control tool like git rational clear case tortoise svn cv concurrent version system hands-on experience working continuous integration ci build-automation tool jenkins along build plugins like maven gradle apache ant experienced formation mentoring project team working agile methodology deliver business critical software application using tool like jira significant experience web development tool like netbeans adobe dreamweaver spring tool suite eclipse intellij rad hand experience window unix linux environment experience shell scripting deployment application server experience designing developing deploying ee application ibm web sphere web logic apache tomcat glassfish redhat jboss server technical skill professional experience client mastercard feb till location st louis mo role full stack java developer description mastercard worldwide american multinational financial service corporation principal business process payment bank merchant card issuing bank credit union purchaser use mastercard brand debit credit card make purchase responsibility involved complete sdlc software development life cycle application requirement analysis testing extensively worked responsive web design rwd development using html cs jquery javascript backbone.js twitter bootstrap ajax angular j json jsf ui component jsp defined new validation angularjs form field validation implemented html used nodejs run angularjs server mock json data completed ui development independent server implemented new feature groovy programming language part jenkins continuous delivery used core java concept like swing socket programming collection multithreading event handling exception handling generic utilized java feature like lambda expression stream api bulk data operation collection would increase performance application developed application using ee design pattern like business delegate factory singleton session facade service locator dao used java feature developing code like lambda expression creating resource class fetching document database integrated scala web service relational db using slick used jax-web service interact application using soap wsdl file developed restful api assessment indicator module token based authentication restful service using spring security involved building database model apis view utilizing python build interactive web based solution used jersey implement restful web service used xml form transfer data exposed soap webservices api using apigee edge implementing api proxy deployed monitored micro service using pivotal cloud foundry also managed domain route cloud foundry followed agile methodology analyze define document application support functional business requirement coordinate effort functional architect worked involved deployment core platform technology technique web app framework spring jboss tomcat json xml html web service used spring mvc module develop mvc architecture developed controller handle request response used core java develop business logic spring bean configured spring container implement ioc di spring bean manage bean life circle worked apache camel rabbitmq sending message queue deployed application docker container made easily accessible runtime using cloud foundry cloud service like aws netflix eureka used spring security oauth authentication authorization application implemented spring aop declarative transaction management created stored procedure function package oracle using sql pl sql audit trail using oracle backend wrote microservices export import data task scheduling spring boot spring hibernate micro service swagger api microservices developed api using aws lambda manage server run code aws designed configured deployed amazon web service aws multitude application utilizing amazon cloud formation experienced setting amazon ec instance virtual private cloud vpcs security group setting database aws using rds storage using bucket configuring instance backup bucket developed pojo object used hibernate object-relational mapping orm tool access persistent data sql server managed code versioning deployment staging production server used rest controller replace existing operation layer act bridge business layer ui worked solr elastic search kafka flume mangodb cassendra used jenkins build management tool continuous integration process used google app engine cloud service launch linux window machine developed unit test case used junit unit testing selenium testing application configured pom.xml deploy project using maven provided technical support production environment resolving issue analyzing defect providing implementing solution defect environment java lambda ee html cs javascript jquery apache camel ajax angularjs bootstrap json jsp jndi oracle apache camel rabbitmq spring aop hibernate springcloud google cloud platform spring mvc spring jdbc jdbc web-services soa service-oriented architecture aws redis rest jax-rs jersey junit jax-b websphere jira maven git rad jenkins mongodb postgresql cassendra agile methodology client bcbs dec jan location chicago il role java full stack developer description blue cross blue shield leading insurance company owned policyholder bcbs health insurance health care provider company find plan web based ee application created help individual family easily shop buy health insurance well mark offer variety insurance plan well tool help choose plan thats right responsibility involved sdlc requirement gathering analysis design development testing application developed using agile methodology created user-friendly gui interface using html cs javascript jquery angularjs node.js expressjs backbone.js ajax xml json involved designing client-side module architecture based new angular framework used core java concept like swing socket programming collection multithreading event handling exception handling generic implemented persistence framework using hibernate handled transaction management using provided data source responsible designing hibernate mapping file based business logic object relationship developed restful web service apis using spring framework spring core spring mvc spring aop java persistence api backend postgresql cassendra database involved developing web service send xml reading response soap ui java platform installed configured various component hadoop ecosystem maintained integrity involved extracting customer big data various data source hadoop hdfs included data mainframe database log data server consumed web service interact external interface exchange data form xml using soap used apigee api gateway apis transformation multiple authentication mechanism migrating application functionality sending email mysql nosql database implemented google cloud platform handle big data extensively used google cloud resource like compute engine iam google container registry container builder cloud storage bucket migrating server database application aws on-premises google cloud platform created restful web service using jersey api jax-rs data exchange carried application service using json used apache camel implement java message service jms api sending receiving notification employee notification portal creating supporting jms mq connection factory topic queue channel listener implemented microservices using spring boot spring based microservices enabled discovery using netflix eureka server used java-php bridge code integrate java php used maven deployment descriptor setting build environment writing maven build.xml taking build configuration deployment application jboss application server used spring mvc ajax dependency injection handling presentation business logic maintain loose coupling layer published business layer service injected necessary dependent component using spring ioc published cross cutting concern like logging user interface exception transaction using spring aop integrated spring dao data access using hibernate used apache camel framework connectivity different apis transport created data model generated hibernate mapping domain object using hibernate tool integrated spring hibernate together worked developing backend component service using hibernate spring extensively used hql sql querying database developed message driven bean asynchronous sending message using jms used rest methodology service layer interface used json data transformation developed various ajax json call communication server ui developed web service produce consumed service making web service call remote service different application used spring jms module lookup queue mdbs listener established database connectivity using hibernate mapping spring orm mysql server developed mapping resource file database entity packaged deployed application ibm web sphere used intellij ide develop application followed standard feature debugging running written linux shell script identify user login information playback technical presentation client acquired knowledge generating report pdf using itext open source excel file format used log application logging notification tracing mechanism analysis bug fixing production problem defect along enhancement used rational clear case version control used maven build tool used j-unit testing ant script used jira tracking project story agile methodology environment java jdk ee ejbs jsp servlet jdbc mongo db xml html cs java script jquery ajax angularjs nodejs json jms strut spring apache camel mvc design pattern spring mvc hibernate agile ant maven netflix rational clear case web sphere server ibm web sphere apache camel soap ui jndi log postgresql mysql server google cloud platform jira rmi intellij ide linux client u cellular nov nov location knoxville tn role java developer description u cellular leading company providing wireless service mobile platform one message system u cellular us send communication customer one message enterprise wide application transactional customer communication application support sm em mm communication various organization u cellular one message store customer notification preference preference center customer configure various notification type responsibility designed developed rest based micro service using spring boot writing end-to-end flow i.e controller class service class daos class per spring mvc design writing business logic using core java api data structure design develop deliver rest apis necessary support new feature development enhancement agile environment used core java concept like swing socket programming collection multithreading event handling exception handling generic used spring jms related mdb receive message team ibmmq queuing developed presentation layer code using jsp html ajax jquery developed business layer using spring ioc aop dto jta developed persistence layer dao using hibernate worked open symphony workflow delivered work flow module client developed project using industry standard design pattern like singleton business delegate factory pattern better maintenance code re-usability developing application module coded spring batch apache camel written jenkins pipeline template script groovy programming language automation build deployment process created groovy script extract transaction volume information management daily basis involved debugging tuning pl sql code tuning query optimization oracle database using explain plan hint also worked partition table using range method developed unit test case using junit framework testing accuracy code logging slf log worked defect tracking system clear quest worked ide spring sts deployed spring tomcat server websphere used maven build tool responsible code sanity integration stream used clear case version control tool environment java ee html cs ajax jquery mongodb apache camel symphony javascript jsp spring spring batch spring web service xml uml junit ibm websphere maven clear case soapui oracle spring jms ibm mq client fedex jan july location memphis tn role java ee developer description fedex corporation provides customer business worldwide broad portfolio transportation e-commerce business service company offer integrated business application operating company competing collectively managed collaboratively respected fedex brand responsibility involved phase software development life cycle sdlc designed project related document includes use case class sequence diagram involved design development testing implementation process system working iterative life cycle business requirement creating detail design document using agile methodology plan work every iteration used continuous integration tool make build pass deploying code environment extensive experience developing pl sql stored procedure function package cursor collection nested table varrays record object type database trigger created html wireframes based detailed system specification document developed presentation layer application using mvc architecture spring framework created dao class interact db database used spring orm module integrate hibernate used core java concept like swing socket programming collection multithreading event handling exception handling generic used jms api sending receiving message queue used spring validation tile framework presentation layer developed user interface using jsp spring tag library simplify complexity application developed user interface java server page ajax support speed application form filling used apache axis web service framework creating consuming web service client using soap wsdl used rally tracking purpose designed various table required project using db database used jboss server deploying application used ant build create jar war ear file deploy ear file automatically used junit test application class used log capture logging information environment java ee javascript jsp ajax xml agile spring eclipse ide db rational rose log junit ant jboss rally apache axis web service soap wsdl client infotech sep dec role java developer description objective item management set-up maintain share item information flexible system easily support unilevers growth increase speed market improves data accuracy reducing user workload guided setup one module project function wizard complete configuration creation various type item like single item multiple item assortment item responsibility involved design development entire module guided set developed user interface jsp servlets developed action class action form using strut framework developed custom tag display dynamic content avoid large amount java code jsp page connected database jdbc extensive experience working xml dom sax used sql-server store item database used session bean navigation step used entity bean storing database database developed session bean client entity bean maintain client state developed ant script build deploy ear file tomcat server analyzed ejb performance term scalability various load stress test using bean- test tool extensively used eclipse writing code ide written complex sql query stored procedure function trigger pl sql developed test case used junit unit testing used cv version controlling environment java ee servlets xml dom sax jsp ejb javascript cs jdbc strut ant web logic application server wsad eclipse ide sql-server apache tomcat oracle pl sql cv pvc junit window client slk software jun aug role java developer description slk software service offshore development company providing end-to-end solution using proven methodology based sei cmm level guideline slk billing care web-based front office application used customer service representative create maintain customer account manage service handle customer issue slk billing care designed front-end application customer related activity supported slk charging billing product responsibility developed web application using strut .x jsp servlets java bean us mvc design pattern created user-friendly gui interface web page using html cs jsp wrote javascript client side validation used eclipse ide tool creating servlets jsp xml wrote sql jdbc prepared statement retrieve data database monitored log using log fixed problem application deployed tomcat involved build deploying application using ant used cv version control system worked bug fixing production support environment java jdbc strut javascript html cs jsp servlets tomcat oracle eclipse ide cv ant log",
  "statistics": {
    "word_count": 3994,
    "unique_word_count": 1088,
    "avg_word_length": 4.969954932398598,
    "stopword_count": 791
  },
  "metadata": {
    "filename": "Candidate170.docx",
    "file_size": 53439,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:51.366566",
    "input_filename": "Candidate170.json"
  }
}