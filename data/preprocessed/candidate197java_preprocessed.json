{
  "id": "candidate197java",
  "raw_text": "Candidate197\nSr. Java/J2EE Developer\nEmail:                                                                                           Mobile: 773-688-9056 \nProfessional Summary:\nOver 8+ years of IT experience in Design, Development, Support and Implementation of Web based applications using JAVA/J2EE Technologies (Core Java, JDBC, Servlets, JSP, XML, spring, JUNIT, Hibernate, and Restful API). Worked in IDEs such as Eclipse, WSAD and Net Beans, spring tool suite.\nExperienced in implementing Enterprise Applications with each phase of Software Development Life Cycle (SDLC) including Requirements gathering, Analysis, Design, Reviews, Coding, Unit and Integration Testing.\nDesigned & developed several multi-tier Web based, Standalone, Distributed, Client-Server and Multithreaded applications using Object Oriented Analysis and Design (OOAD) concepts and Service Oriented Architecture (SOA) mostly in cross-platform environments. \nImplemented a Continuous Delivery pipeline with Docker, Jenkins and Git Hub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services. Migrated Spring based application to Cloud based Micro service API. \nExtensive experience with advanced Java and J2EE technologies like Servlets JSP, EJB, JDBC, Struts 1.2/2.x, JMS, JSF My Faces, JPA, JNDI, JSTL, JTA, JAX-WS, JAX_RS, Spring and Hibernate.\nExtensive knowledge of front end technologies like AJAX, JSP, JSPF, JavaScript, jQuery, Backbone.js, Underscore.js, YUI, HTML5, and CSS.  Expertise in using build/deploy tools such as Ant, Maven, JUnit and Jenkins. Used Spring Boot created REST API's per application business to perform search using elastic java sdk.\nDesigned the application by implementing JSF Framework based on MVC Architecture, simple Java Beans as a Model, JSP and JSF UI Components as View and Faces Servlet as a Controller. \nExtensive experience in working on projects with Waterfall and Agile methodologies such as Test-Driven Development (TDD) and SCRUM. Hands on experience with database tools like Toad for Oracle, DB2, SQL Server. Good Knowledge on Service Oriented, Microservices architectures and Enterprise Service Bus(ESB).\nHands on experience with various Application Servers and Web Servers including IBM Web Sphere 6.x/7.x, Oracle Web logic, JBOSS, Apache Tomcat server 6.x/7.x/8.x, XAMPP 1.7.x/1.8.x with wide variety of development environments such as Eclipse IntelliJ, WSAD 5.0, My Eclipse, IBM RAD 6/7/8, NetBeans, Notepad++, Sublime text, Dreamweaver and Brackets. Good working knowledge on business rules engine like Drools. Experience in developing of web applications using Google Web Toolkit (GWT), GXT, AngularJS, Vaadin.\nExpertise in Client Scripting language and server-side scripting languages like HTML, DHTML, CSS, JavaScript, JSTL, AJAX, jQuery, Ext-JS, JSON, Dojo, bootstrap, AngularJS and node.js. \nDeveloped web applications utilizing jQuery, HTML5, CSS3, Angular JS, Struts, Java/J2EE, JSP, Servlets, JAX-RS, RESTful Web Services, SOAP Web Services, Spring Framework, Hibernate Framework, XML, JSON, Oracle, MySQL, SQL Server, Tomcat, Maven, Jetty, Spring JMS, JBOSS, JDBC and WebLogic. \nExtensive experience with SOAP Web Services, RESTful Web Services, Spring AOP, Spring IOC, Spring WS-Security, Spring MVC, Spring Integration, Spring Security, Spring JDBC, Spring Boot, Hibernate Framework, Servlets, JSP, Struts, JDBC, Oracle. \nStrong working knowledge of RDBMS concepts having worked with MySQL, Sybase, Oracle 10g, MongoDB and DB2. Hands-on experience with IBM MQ Series and JMS communications between middleware components. \nManaged Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration. \nExcellent in deploying the applications in AWS as EC2 instances and create snapshots for the data that must be stored in AWS S3. Good understanding on NoSQL databases like Mongo DB and Cassandra.\nExperience in building web applications using Spring Framework features like MVC (Model View Controller), AOP (Aspect Oriented Programming), AspectJ, IOC (Inversion of Control), DAO (Data Access Object) and template classes. Good knowledge and experience in writing queries for SQL, Oracle 8i/ 9i/ 10g/11g.\nImplemented SOA architecture with web services using SOAP, WSDL, UDDI and XML. Worked on Web Services testing using Selenium IDE, and Selenium RC Server, Selenium Grid/Web Driver Testing, SOAPUI and Testing.\nTECHNICAL SKILLS: \nInternet Technologies: Core Java, J2EE (EJB, JMS), Struts, Spring, Hibernate, IBM MQ Series, log4j, XML, Dom, AJAX \nFrameworks: JSP/Servlet, Java Script, HTML, AngularJS Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, JSF, JUnit, Jasper reports, SOAP UI, Groovy \nTools: SVN, CVS, Perforce, Serena PVCS, GIT, Jira, Confluence, SOAP, RESTful, UDDI, WSDL, JAX-RPC, JAX-RS, JAX-WS, JAX-B, Axis2, CFX, AWS, Micro services \nMiddleware: J2EE (MDB, JMS). IBM MQ, SOA\nDesign Patterns: Java Design Pattern [Abstract Factory, Factory Method, Singleton, Builder, MVC, Front Controller, Singleton, Business Delegate and DAO patterns, Bridge, Decorator, Adapter, Chain of Responsibility, Command], J2EE Design Patterns [Front Controller, Business Delegate, Session Façade, Data Access Object and Value Object] \nWebservices: Spring based Restful, SOAP, WSDL, SoapUI \nApplication Servers: IBM WebSphere 8.5.5, Oracle WebLogic Server 11g, JBOSS Server 8.0.0 and Tomcat 8.0.9. \nDatabases: Oracle, Mongo DB 3.1, MySQL, DB2\nOperating Systems: Windows 2000 / NT 4.0 / 98 / XP/Vista/7/8/10, Mac, Sun Solaris, Red Hat Linux, Unix \nIDE: Eclipse Mars.2 Release (4.5.2), IBM Rational Software Architect and IBM Rational Application Developer, PL/SQL Developer \nOther Tools: IBM RAD, SQL*Plus, SQL Navigator, MS Office Suite, MS Project, Rational Paradigm, JUnit, TOAD, Soap UI, Putty, Rational Clear Quest, RTC, StarTeam, Mockito\nBuild Tools: Maven, ANT\nMark-up/XML: HTML, CSS, JavaScript, jQuery, AJAX, Bootstrap, AngularJS, XML, XSD, XSL/XSLT, SAX/DOM, JSON \nProfessional Experience:\nWalmart, Bentonville, AR                                                                                                               April 2017 to Present\nRole: Java fullstack Developer.\nProject Description: Walmart mainly focuses on developing a Retail application for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Walmart is to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge. \nResponsibilities: \nInvolved in Requirements gathering, Analysis, Design, Development and Testing of application using AGILE methodology (SCRUM). \nDeveloped and designed the web interface using HTML5, CSS3, React.JS, Node.JS, JavaScript, JQuery, Angular JS, Ext.JS and Bootstrap. \nUsed Pivotal Cloud Foundry, the connection/service binding details are injected from the deployed cloud platform itself. \nInvolved in build process, modifying the Gradle files, compiling the code building, packaging the WAR file and deploying onto various Tomcat servers in UNIX environments. \nDesigned Java Components and integrated using spring framework with Hibernate Object/Relational persistence mechanism. Worked on web application security enhancements using OWASP. \nInvolved in writing Spring Configuration XML, file that contains declarations and business classes are wired-up to the frontend managed beans using Spring IOC pattern. \nImplemented the application using Spring IOC, Spring MVC Framework, and Spring Batch and handled the security using Spring Security. Implemented service methods and SQL queries, SQL to interact with the forms. \nExperienced in React.js for creating interactive UI's using One-way data flow, Virtual DOM, JSX, React Native concepts. Involved in integrating JAX-RS into Spring Boot application. Application was deployed using JBOSS.\nImplemented Micro Services using Spring Boot, Spring Cloud, and Spring Micro Services and enabled discovery using Netflix Eureka Server. Created web services using Spring Rest Controller to return JSON to the frontend. \nDesigned and developed DAO layer with Hibernate standards, to access data from SQL Server. \nCreated SQL Server logins and assigning roles and Authentication models as a part of Security. \nUsed multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class. Development carried out under STS Integrated Development Environment (IDE). \nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management. \nInvolved in creating Mongo DB collections and documents and developed Mongoose Schema objects to perform CRUD operations. Performed deployment of applications on IBM WebSphere Application Server.\nResponsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs. \nUsed MAVEN to define the dependencies and build the application and used JUnit for suite execution and Assertions. Used JIRA for bug tracking, issue tracking and project management. \nUsed GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server. \nEnvironment: Java, Agile, HTML5, CSS3, Bootstrap, Angular JS, React.JS, JSTL, J Query, AJAX, AWS EC2, S3, Micro Services, Hibernate, Spring, Pivotal Cloud Foundry, RESTful API, SOA, JAX-RS, JSON, SQL, Node.JS, Oracle, CRUD, CI, CD, Jenkins, multithreading, JIRA, Rabbit MQ, React Native, Gradle, MAVEN, J Unit, UNIX, STS, IBM Web Sphere, Log4J, GIT\nWells Fargo, Charlotte, NC\t\t\t\t\t\t\t\tJune 2016 to March 2017\nRole: Java Full Stack Developer\nProject: Core Sales & Fulfillment Mortgage System \nProject Description: Core is an initiative to re-architect and redesign retail mortgage application management process by integrating both sales and fulfillment. This application manages a loan application from the initiation of a loan application till its funding, thereby reducing the logistics and manual process involved in the product sales and fulfillment process. Sales users gather all the required information from the applicants and submit the loan to the fulfillment process. Fulfillment processors will take up the loan after it is submitted and processes until the funds disbursed. It has major components like Loan Status, Application Management, Pricing, Closing/Funding, Decisioning, Document Generation, Vendors and Stipulations \nResponsibilities: \nWorked with Requirement leads, Architect and Project managers to translate business requirements into technical specifications. Developed rich user interface UI's using Bootstrap directives. \nInvolved in implementation of server layer services like business services, entity services and integration services. Developed WebPages using UI frameworks, Angular JS and Ext JS.\nWorked on business modules like Loan status, Application Management, Assets, Closing/Funding and Product Pricing. Utilized features of Spring Core layer and Spring DAO support layer to develop the application. \nBuilt an API facade layer using NodeJS (with express-JS). Developed reusable AngularJS directives. \nConverted UI screens from XMI (XML Metadata Interchange) framework to AngularJS framework which resulted in better performance and reduced code count. \nDeveloped AngularJS Controllers which isolates scope to perform operations in UI. Developed reusable code and libraries for future use by creating services/factories and injected them to controllers using Dependency Injection. Used NoSQL DB like Mongo DB for the proof of concept.\nConfigured Hibernate into a Spring application and used Spring's DAO support to build Hibernate DAO classes. \nUsed Object Oriented Design and Object-Oriented Programming concepts of Core JAVA like Polymorphism, Multithreading, Inheritance, Interfaces, Generics, Collections and Socket Programming.\nPersistence mechanism implemented using Hibernate framework utilizing table per subclass inheritance based mapping, component mapping and other association mapping strategies. \nDeveloped JAX-WS and JAX-RPC SOA service binding producers and client implementation from WSDL contracts. Involved in development of individual Sprints with the help of GitHub.\nWorked on variety of Frontend JavaScript frameworks like AngularJS, BackboneJS, ReactJS, JQuery, JQuery UI and good knowledge in EmberJS. Involved in fixing issues in IST, QA, UAT & Production environments. \nConsumed RESTful Web services provided by different vendors to submit/fetch the Appraisal/Valuation Orders, Tax/Flood Orders and their statuses, and fetch Employment/Income information. \nHQL and named queries are used throughout the application for consistency and maintainability. \nInvolved in the development of Job Scheduler software module using Apache open source Java based scheduler called as QUARTZ Scheduler and Spring HTTP INVOKER Webservice. \nDeveloped data access object (DAO) layer for Job Scheduler module using Spring JDBC API (Stored Procedures). \nInvolved in writing SQL queries & PL/SQL - Stored procedures, function, triggers, cursors, object types, Cursors, sequences, indexes etc. Integration of spring modules with AWS modules to consume third party services. \nDeveloped micro services as a strategy to gradually replace the fragile core monolithic Java application while still being able to add new business features. Used WordPress for managing. \nUsed ELK is stack of three, Elastic search - distributed restful search and analytics, Log stash - manage events and logs, Kibana - seamless integration with other technologies.\nUsed JBOSS application server for deploying the apps on different servers in different environments like Dev/QA/IST/Production. Used Splunk for server logs analysis and real-time defect tracking. \nExpertise in front ends technologies such HTML, CSS, LESS, SASS, Java Script, ReactJS, AngularJS, GWT and AJAX. Implemented JavaScript test cases using Jasmine/Karma. \nPerformed bug tracking using JIRA and maintained documentation for using Confluence. \nImplemented Unit Testing using JUnit, TestNG, Mockito/Power Mock and Selenium. \nInvolved in building the code & deploying on the server using tools Maven and Jenkins \nUsed Grunt-JS to test the JavaScript with Sonar Qube (with JS Hint, HTML Hint, etc. plugins), concatenate, minify and Gzip the source code as well as pass it through templates to create the Jasmine test codebase and made custom configurations for testing and deployment. \nUsed advanced java features like Lambda expressions for array operations, collections.\nEnhanced Following Coding guide lines & maintain quality of code by checking with Sonar Qube /Sonar Lint \nProviding On call support for Production and Integration environments. \nEnvironment: Java 1.8, Spring 4.3.2, Hibernate 4.2, Web Services, REST, WSDL, SOAP, XML, XSD, AJAX, AngularJS, Bootstrap, NodeJS, HTML, CSS, Java Script, JSON, Oracle 11g, Oracle SQL developer, JBOSS Application server, Eclipse, Maven, TestNG, Camel, WordPress, Mockito, Jasmine/Karma, Power Mock, Selenium, Tortoise SVN, JIRA, Fish Eye, Confluence, Web Builder, Splunk, Sonar Qube/Sonar Lint, Windows 7, Linux, AWS, Docker.\nSource Link, Kansas City, MO\t\t\t\t\t\t\t\tJuly 2015 to May 2016\nRole: Senior Java Developer\nDescription: Source Link which helps entrepreneur to start up his business. Source Link provide the full-service direct marketing agency that specializes in identifying, about what kind of costumers are best for their brand, what are the resources we can find to help improve your business and how can you get the funding for the growth of the business. \nResponsibilities: \nAnalysis and understanding of business requirements and was one of the members in the architecture team for designing and implementing the system. \nParticipated in Design, Development and Support phases of Software Development Life Cycle (SDLC).\nImplemented the process using Agile (Scrum) methodology and Test-Driven Model. \nContributes and establishes the strategy / approach, Best Practices and methodology to PMO on how to Plan, manage, execute and report projects under Agile / Scrum Framework. \nInvolved in converting the application from Spring3.0 to Spring4.3 along with conversion to Standard Spring MVC, security features and integrated with the Hibernate framework. \nUsed Spring IOC for dependency Injection, Spring AOP for controlling the execution process of beans life cycle, Spring Batch to process the CSV files. \nSpring framework and DAO classes using JPA framework for persistence management and involved in integrating the frameworks for the project. Developed Stored Procedures and Triggers on Oracle Database.\nUsed Hibernate 3.0 as ORM tool for data related functionalities, persistence layer and implemented transactions. \nImplemented the DAO and Business Delegate design patterns. Used hibernate DAO objects for retrieving data from database (MYSQL) which were used in Hibernate mapping. \nDeveloped front end user interface using HTML5, XML, CSS3, Bootstrap, JavaScript, JQuery, AJAX, AngularJS, JQuery and JSP2.0. Implemented a Continuous Delivery Pipeline with Jenkins and GitHub. \nUsing AngularJS created few HTTP Requests to few application related web API's got the results and stored them. Experience working with Cassandra. Developing RESTFUL web services using JPA, Cloud Foundry. \nDesigned the UX for the front-end using Twitter Bootstrap. \nDeveloped Graphical User Interface (GUI) to display report data using JQuery in Cross-browser compatibility and Web Application Scaling. Used JSF expressions in rendering content and validation. \nBuilt JavaScript functions to generate dynamic HTML components like table list, calendar, and spreadsheets and drop-down menus. Extensively used the Java collection Framework Classes for Holding the Application objects. \nExperience in implementation of business applications using Web logic, WebSphere, IBM WebSphere Application and Portal Server (WAS/WPS), JBOSS and Tomcat. \nDeveloped web application using JSF (Java Server Faces) framework backing classes and utility classes. \nImplemented Web services using apache API and tested them using SOAP UI. Integrated the SOAP Web services to RESTful Web Services. JSF navigation configured in JSF configuration file and its backing beans. \nWorked with DBA to understand the current data model and integrate new Tables within the existing Data Model. Used GIT version control system on the server side to maintain the latest snapshot of data. \nUsed Maven for integration and building of the project and used SOAP UI for testing the Web Services calls (Request and response formats and data). \nExtensively involved in developing and writing Maven built scripts for automated build and deployment processes. Implemented Java security manager to access EJB (Elastic Java Beans) with Java security API. \nUtilize Camel to integrate micro services with other microservices and RabbitMQ messaging exchanges.\nDesign and develop Microservices platform to support a multitude of enterprise level applications. Mentor to developers on JS best practices and server-side development.\nUsed JMS for communication between the applications and MQ for communicating with the third-party applications. Implemented EJB3 Annotations for Entities, Relations and Transactions. \nUsed Eclipse IDE for coding, developing applications and deployed to local WebSphere Application Server. \nWorked closely with QA for fixing the bugs. Tested the whole application for errors line by line and used Log4J for logging all the application exceptions and debugging statements. \nUsed Jenkins and made the deployment automated and deployed the project on Amazon AWS. \nEnvironment: Java 1.8, J2EE, JSP 2.0, JavaScript, AngularJS, Node.js, Servlets 3.0, Hibernate 5.0.X, MAVEN, Spring 4.3, WebSphere Application Server, Eclipse Mars, REST and SOAP Web services, MYSQL, mango DB 3.2.9, UML, Visio, Log4J, UNIX, Soap UI, jQuery, HTML/HTML5, AJAX, Bootstrap, XML, GIT, JMS, JSF, EJB3, Jenkins, AWS, JUNIT, GIT.\nOptima Health, WI\t\t\t\t\t\t     \t           \t\tAugust 2014 to June 2015\nRole: Java Developer\nDescription: Developed web application for brokers of small market health insurance for group or individual customers. Basic functionality was to get customer physical address, marital status, family health and their individual health information. After all the required information provided by customer application would figure out the best available health plan in small market and output to customers for their selection. \nResponsibilities: \nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. Worked with core Java technologies like Multi-Threading and synchronization. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. \nDesigned and coded controller classes using J2SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI. \nAnalyzing business requirements and generate technical specifications to design software components and applications for middleware. Wrote scripts in UNIX to process the Batch Jobs on a scheduled basis.\nUsed HTML5, CSS, jQuery, AngularJS and JavaScript to construct the dynamic web pages (presentation Layer) for the application. Used AngularJS and Backbone JS for client-side validation. \nCreated Single page application using Backbone JS and NodeJS to handle data flow. \nUsed JavaScript latest version of libraries based on running in the NodeJS environment. \nAchieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes. Developed internal coding using J2EE technologies based on the MVC Architecture. \nImplemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements. \nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP and Spring Annotations. Implemented Business Logic using Java, Spring MVC and Hibernate. \nUsed Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. \nDeveloped messaging module using Spring JMS, Apache Camel and Active MQ, RabbitMQ. \nHad experience in working with Messaging technologies like Apache Kafka. Used Cassandra for proof of concept. \nWorked with Apache Kafka as a messaging service for activity tracking of an application. \nDeveloped MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic. Implemented PL/SQL procedures and views in My SQL Database. \nImplemented RESTful Web services to retrieve data from client side and made REST API calls from AngularJS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. \nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality. Written LINUX shell scripts to identify user login information. \nExperienced with RAD development methodologies and Rational Clear case for version control. \nUsed JIRA ticketing system to keep track of issues and tasks on individuals. \nUsed Maven to build the application and deployed on IBM WebSphere Application Server. \nEnvironment: JAVA, J2SE, HTML, CSS, jQuery, Ajax, AngularJS, Bootstrap, JSON, J2EE, Spring Framework, Spring MVC, Spring Security, Spring Boot, Unix, Spring Data (Spring JDBC, Spring ORM), JSP, Hibernate, Web services, RESTful, RAD, WebSphere, Sonar Qube, Agile/Scrum Methodology, Maven, JIRA, JBOSS, Junit, TDD, MY SQL, LINUX GITHUB, Cassandra.\nMacy’s, Atlanta, GA.   \t\t\t\t\t\t\t\t\tOctober 2013 to July 2014\nRole: Java Developer\t\nProject Description: Macy's, is a premier chain of department stores owned by American multinational corporation Macy's, Inc. The IT department has successfully automated the Sales and marketing operations for the last seven years. My project tasks included marketing new costumes and cosmetics through web, mail and SMS media. \nAchievement: Successfully developed and released two major back-end subsystems to support sales promotions and customized offers to Macys Star and Plenti reward card members. \nResponsibilities: \nDesigned Prototype and project layout skeletons using ReactJS, jQuery, CSS3 and HTML5. \nInvolved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. \nUsed various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nUsed Apache Cordova to build native mobile applications using HTML5, CSS3 and JavaScript. \nUsed Adobe Experience manager(AEM) to manage and deliver digital experiences across websites. \nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management. \nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring DI, annotations, and MVC to implement business layer and navigation part of application. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments. \nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console. \nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice. \nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging. \nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda Functions Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling. \nDatabase required for creation of new tables, PL/SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application. \nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems. \nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Redis as in memory database, for storing and fetching data in memory to increase the performance. \nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster. \nWorked on Drools Rule Engines with corresponding to validate the business User Roles. \nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP. \nUsed Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base. \nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects. \nDeveloped codes in an immutable manner using Scala to apply concurrency and parallelism. \nDeveloped Unit test cases using Junit, Mockito and Jenkins for continuous integration. \nUsed Kubernetes for automating deployment, scaling and management of containerized applications. \nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server. \nDeveloped Maven scripts and builds using Maven and continuous integration servers like Jenkins. \nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver). \nDeveloped, Tested and Debugged the Java, JSP using Eclipse RCP. \nDeployed the application on WebSphere 8.5 application server. \nEnvironment: Java 1.8, HTML5, CSS3, jQuery, Bootstrap, AngularJS, Swing, Threading, AWS cloud, Spring MVC, \nSpring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, PL/SQL, Oracle DB, Cassandra, JBOSS Drools 4.x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA.\nCSC\t\t\t\t\t\tJanuary 2012 to September 2013\nRole: Java/ J2EE Developer \nProject Description: The Objective of this project was to develop and enhance Warehouse Management system to facilitate information tracking for various warehouse products shipped from the dispatch centers to the locations where it should be placed according to the License Plate number. The application is developed in J2EE architecture using EJB’s, JSP and Servlets. \nResponsibilities: \nPrepared Analysis document and followed AGILE software development with Scrum methodology. \nDeveloped the application on NodeJS platform using JavaScript programming. \nUsed JavaScript and jQuery for validating the input given to the user interface. \nApplied data transformation rules to transform code from one format to another format using NodeJS. \nCreated the Nodejs express server to build MVC framework from front-end side AngularJS to back-end. \nDeveloped front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in back-end RESTful Server. Developed API using Hibernate to interact with the Oracle database. \nExtensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate. \nWorked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. \nInvolved in the development of backend Logics or data access logic using Oracle DB & JDBC. \nExpertise in Multithreading, Remote Method Invocation (RMI), EJB, Serialization, and Java Beans. \nWorked extensively on SPRING MVC framework to develop new internal web application. \nUsed Spring AOP components for the Logging, Exception handling and Transactional Models. \nEnforce compliance with dynamic processing and security policies by using Mule ESB. \nDeveloped Spring boot application with microservice and deployed it into AWS using EC2 instances. \nDeveloped stored procedures, triggers, and functions with PL/SQL for Oracle database. \nUses the DAO pattern for data access layer and JMS API for the messaging requirement. \nDesign PL/SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling. \nTest API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data. \nDeveloped test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs. \nDeveloped and executed SQL queries for testing database integrity and for data analysis using Selenium. \nDeveloped automated regression test cases in Selenium WebDriver using Java programming language. \nUsed Maven to build and generate code analysis reports and JENKINS for continuous integration. \nUsed WebLogic for design, development, and deployment of applications. \nEnvironment: Java, J2EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL/SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe (CQ5), Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium.\nDynamo IT Solutions                                                    \tAugust 2009 to December 2011\nRole: Java Developer\nDescription: The objective of this project is to implement a web based front end system which can be used by the employees, managers and higher level management having specific role permissions for effective processing of day to day business activities in the company like leave management, project management and resource management etc. \nResponsibilities: \nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture. \nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL Tag lib. \nDeveloped various java business classes for handling different functions. \nDeveloped controller classes using Struts and tiles API. \nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use case Transaction diagrams. \nParticipated in design and code reviews \nDeveloped User Interface using AJAX in JSP and also performed client-side validation \nDeveloped JUnit test cases for all the developed modules. Used SVN as version control \nEnvironment: Java, J2EE, JSP, Struts 1.x, JNDI, DB2, HTML, XML, DOM, SAX, ANT, AJAX, Rational Rose, Eclipse Indigo 3.5, SOAP, Apache Tomcat, Oracle 10g, LOG4J, SVN.",
  "cleaned_text": "Candidate Sr. Java J EE Developer Email Mobile Professional Summary Over years of IT experience in Design, Development, Support and Implementation of Web based applications using JAVA J EE Technologies Core Java, JDBC, Servlets, JSP, XML, spring, JUNIT, Hibernate, and Restful API . Worked in IDEs such as Eclipse, WSAD and Net Beans, spring tool suite. Experienced in implementing Enterprise Applications with each phase of Software Development Life Cycle SDLC including Requirements gathering, Analysis, Design, Reviews, Coding, Unit and Integration Testing. Designed & developed several multi-tier Web based, Standalone, Distributed, Client-Server and Multithreaded applications using Object Oriented Analysis and Design OOAD concepts and Service Oriented Architecture SOA mostly in cross-platform environments. Implemented a Continuous Delivery pipeline with Docker, Jenkins and Git Hub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services. Migrated Spring based application to Cloud based Micro service API. Extensive experience with advanced Java and J EE technologies like Servlets JSP, EJB, JDBC, Struts . .x, JMS, JSF My Faces, JPA, JNDI, JSTL, JTA, JAX-WS, JAX RS, Spring and Hibernate. Extensive knowledge of front end technologies like AJAX, JSP, JSPF, JavaScript, jQuery, Backbone.js, Underscore.js, YUI, HTML , and CSS. Expertise in using build deploy tools such as Ant, Maven, JUnit and Jenkins. Used Spring Boot created REST API s per application business to perform search using elastic java sdk. Designed the application by implementing JSF Framework based on MVC Architecture, simple Java Beans as a Model, JSP and JSF UI Components as View and Faces Servlet as a Controller. Extensive experience in working on projects with Waterfall and Agile methodologies such as Test-Driven Development TDD and SCRUM. Hands on experience with database tools like Toad for Oracle, DB , SQL Server. Good Knowledge on Service Oriented, Microservices architectures and Enterprise Service Bus ESB . Hands on experience with various Application Servers and Web Servers including IBM Web Sphere .x .x, Oracle Web logic, JBOSS, Apache Tomcat server .x .x .x, XAMPP . .x . .x with wide variety of development environments such as Eclipse IntelliJ, WSAD . , My Eclipse, IBM RAD , NetBeans, Notepad , Sublime text, Dreamweaver and Brackets. Good working knowledge on business rules engine like Drools. Experience in developing of web applications using Google Web Toolkit GWT , GXT, AngularJS, Vaadin. Expertise in Client Scripting language and server-side scripting languages like HTML, DHTML, CSS, JavaScript, JSTL, AJAX, jQuery, Ext-JS, JSON, Dojo, bootstrap, AngularJS and node.js. Developed web applications utilizing jQuery, HTML , CSS , Angular JS, Struts, Java J EE, JSP, Servlets, JAX-RS, RESTful Web Services, SOAP Web Services, Spring Framework, Hibernate Framework, XML, JSON, Oracle, MySQL, SQL Server, Tomcat, Maven, Jetty, Spring JMS, JBOSS, JDBC and WebLogic. Extensive experience with SOAP Web Services, RESTful Web Services, Spring AOP, Spring IOC, Spring WS-Security, Spring MVC, Spring Integration, Spring Security, Spring JDBC, Spring Boot, Hibernate Framework, Servlets, JSP, Struts, JDBC, Oracle. Strong working knowledge of RDBMS concepts having worked with MySQL, Sybase, Oracle g, MongoDB and DB . Hands-on experience with IBM MQ Series and JMS communications between middleware components. Managed Amazon Web Services like EC , S bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud VPC through AWS Console and API Integration. Excellent in deploying the applications in AWS as EC instances and create snapshots for the data that must be stored in AWS S . Good understanding on NoSQL databases like Mongo DB and Cassandra. Experience in building web applications using Spring Framework features like MVC Model View Controller , AOP Aspect Oriented Programming , AspectJ, IOC Inversion of Control , DAO Data Access Object and template classes. Good knowledge and experience in writing queries for SQL, Oracle i i g g. Implemented SOA architecture with web services using SOAP, WSDL, UDDI and XML. Worked on Web Services testing using Selenium IDE, and Selenium RC Server, Selenium Grid Web Driver Testing, SOAPUI and Testing. TECHNICAL SKILLS Internet Technologies Core Java, J EE EJB, JMS , Struts, Spring, Hibernate, IBM MQ Series, log j, XML, Dom, AJAX Frameworks JSP Servlet, Java Script, HTML, AngularJS Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, JSF, JUnit, Jasper reports, SOAP UI, Groovy Tools SVN, CVS, Perforce, Serena PVCS, GIT, Jira, Confluence, SOAP, RESTful, UDDI, WSDL, JAX-RPC, JAX-RS, JAX-WS, JAX-B, Axis , CFX, AWS, Micro services Middleware J EE MDB, JMS . IBM MQ, SOA Design Patterns Java Design Pattern Abstract Factory, Factory Method, Singleton, Builder, MVC, Front Controller, Singleton, Business Delegate and DAO patterns, Bridge, Decorator, Adapter, Chain of Responsibility, Command , J EE Design Patterns Front Controller, Business Delegate, Session Facade, Data Access Object and Value Object Webservices Spring based Restful, SOAP, WSDL, SoapUI Application Servers IBM WebSphere . . , Oracle WebLogic Server g, JBOSS Server . . and Tomcat . . . Databases Oracle, Mongo DB . , MySQL, DB Operating Systems Windows NT . XP Vista , Mac, Sun Solaris, Red Hat Linux, Unix IDE Eclipse Mars. Release . . , IBM Rational Software Architect and IBM Rational Application Developer, PL SQL Developer Other Tools IBM RAD, SQL Plus, SQL Navigator, MS Office Suite, MS Project, Rational Paradigm, JUnit, TOAD, Soap UI, Putty, Rational Clear Quest, RTC, StarTeam, Mockito Build Tools Maven, ANT Mark-up XML HTML, CSS, JavaScript, jQuery, AJAX, Bootstrap, AngularJS, XML, XSD, XSL XSLT, SAX DOM, JSON Professional Experience Walmart, Bentonville, AR April to Present Role Java fullstack Developer. Project Description Walmart mainly focuses on developing a Retail application for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Walmart is to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge. Responsibilities Involved in Requirements gathering, Analysis, Design, Development and Testing of application using AGILE methodology SCRUM . Developed and designed the web interface using HTML , CSS , React.JS, Node.JS, JavaScript, JQuery, Angular JS, Ext.JS and Bootstrap. Used Pivotal Cloud Foundry, the connection service binding details are injected from the deployed cloud platform itself. Involved in build process, modifying the Gradle files, compiling the code building, packaging the WAR file and deploying onto various Tomcat servers in UNIX environments. Designed Java Components and integrated using spring framework with Hibernate Object Relational persistence mechanism. Worked on web application security enhancements using OWASP. Involved in writing Spring Configuration XML, file that contains declarations and business classes are wired-up to the frontend managed beans using Spring IOC pattern. Implemented the application using Spring IOC, Spring MVC Framework, and Spring Batch and handled the security using Spring Security. Implemented service methods and SQL queries, SQL to interact with the forms. Experienced in React.js for creating interactive UI s using One-way data flow, Virtual DOM, JSX, React Native concepts. Involved in integrating JAX-RS into Spring Boot application. Application was deployed using JBOSS. Implemented Micro Services using Spring Boot, Spring Cloud, and Spring Micro Services and enabled discovery using Netflix Eureka Server. Created web services using Spring Rest Controller to return JSON to the frontend. Designed and developed DAO layer with Hibernate standards, to access data from SQL Server. Created SQL Server logins and assigning roles and Authentication models as a part of Security. Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class. Development carried out under STS Integrated Development Environment IDE . Developed the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management. Involved in creating Mongo DB collections and documents and developed Mongoose Schema objects to perform CRUD operations. Performed deployment of applications on IBM WebSphere Application Server. Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs. Used MAVEN to define the dependencies and build the application and used JUnit for suite execution and Assertions. Used JIRA for bug tracking, issue tracking and project management. Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server. Environment Java, Agile, HTML , CSS , Bootstrap, Angular JS, React.JS, JSTL, J Query, AJAX, AWS EC , S , Micro Services, Hibernate, Spring, Pivotal Cloud Foundry, RESTful API, SOA, JAX-RS, JSON, SQL, Node.JS, Oracle, CRUD, CI, CD, Jenkins, multithreading, JIRA, Rabbit MQ, React Native, Gradle, MAVEN, J Unit, UNIX, STS, IBM Web Sphere, Log J, GIT Wells Fargo, Charlotte, NC June to March Role Java Full Stack Developer Project Core Sales & Fulfillment Mortgage System Project Description Core is an initiative to re-architect and redesign retail mortgage application management process by integrating both sales and fulfillment. This application manages a loan application from the initiation of a loan application till its funding, thereby reducing the logistics and manual process involved in the product sales and fulfillment process. Sales users gather all the required information from the applicants and submit the loan to the fulfillment process. Fulfillment processors will take up the loan after it is submitted and processes until the funds disbursed. It has major components like Loan Status, Application Management, Pricing, Closing Funding, Decisioning, Document Generation, Vendors and Stipulations Responsibilities Worked with Requirement leads, Architect and Project managers to translate business requirements into technical specifications. Developed rich user interface UI s using Bootstrap directives. Involved in implementation of server layer services like business services, entity services and integration services. Developed WebPages using UI frameworks, Angular JS and Ext JS. Worked on business modules like Loan status, Application Management, Assets, Closing Funding and Product Pricing. Utilized features of Spring Core layer and Spring DAO support layer to develop the application. Built an API facade layer using NodeJS with express-JS . Developed reusable AngularJS directives. Converted UI screens from XMI XML Metadata Interchange framework to AngularJS framework which resulted in better performance and reduced code count. Developed AngularJS Controllers which isolates scope to perform operations in UI. Developed reusable code and libraries for future use by creating services factories and injected them to controllers using Dependency Injection. Used NoSQL DB like Mongo DB for the proof of concept. Configured Hibernate into a Spring application and used Spring s DAO support to build Hibernate DAO classes. Used Object Oriented Design and Object-Oriented Programming concepts of Core JAVA like Polymorphism, Multithreading, Inheritance, Interfaces, Generics, Collections and Socket Programming. Persistence mechanism implemented using Hibernate framework utilizing table per subclass inheritance based mapping, component mapping and other association mapping strategies. Developed JAX-WS and JAX-RPC SOA service binding producers and client implementation from WSDL contracts. Involved in development of individual Sprints with the help of GitHub. Worked on variety of Frontend JavaScript frameworks like AngularJS, BackboneJS, ReactJS, JQuery, JQuery UI and good knowledge in EmberJS. Involved in fixing issues in IST, QA, UAT & Production environments. Consumed RESTful Web services provided by different vendors to submit fetch the Appraisal Valuation Orders, Tax Flood Orders and their statuses, and fetch Employment Income information. HQL and named queries are used throughout the application for consistency and maintainability. Involved in the development of Job Scheduler software module using Apache open source Java based scheduler called as QUARTZ Scheduler and Spring HTTP INVOKER Webservice. Developed data access object DAO layer for Job Scheduler module using Spring JDBC API Stored Procedures . Involved in writing SQL queries & PL SQL - Stored procedures, function, triggers, cursors, object types, Cursors, sequences, indexes etc. Integration of spring modules with AWS modules to consume third party services. Developed micro services as a strategy to gradually replace the fragile core monolithic Java application while still being able to add new business features. Used WordPress for managing. Used ELK is stack of three, Elastic search - distributed restful search and analytics, Log stash - manage events and logs, Kibana - seamless integration with other technologies. Used JBOSS application server for deploying the apps on different servers in different environments like Dev QA IST Production. Used Splunk for server logs analysis and real-time defect tracking. Expertise in front ends technologies such HTML, CSS, LESS, SASS, Java Script, ReactJS, AngularJS, GWT and AJAX. Implemented JavaScript test cases using Jasmine Karma. Performed bug tracking using JIRA and maintained documentation for using Confluence. Implemented Unit Testing using JUnit, TestNG, Mockito Power Mock and Selenium. Involved in building the code & deploying on the server using tools Maven and Jenkins Used Grunt-JS to test the JavaScript with Sonar Qube with JS Hint, HTML Hint, etc. plugins , concatenate, minify and Gzip the source code as well as pass it through templates to create the Jasmine test codebase and made custom configurations for testing and deployment. Used advanced java features like Lambda expressions for array operations, collections. Enhanced Following Coding guide lines & maintain quality of code by checking with Sonar Qube Sonar Lint Providing On call support for Production and Integration environments. Environment Java . , Spring . . , Hibernate . , Web Services, REST, WSDL, SOAP, XML, XSD, AJAX, AngularJS, Bootstrap, NodeJS, HTML, CSS, Java Script, JSON, Oracle g, Oracle SQL developer, JBOSS Application server, Eclipse, Maven, TestNG, Camel, WordPress, Mockito, Jasmine Karma, Power Mock, Selenium, Tortoise SVN, JIRA, Fish Eye, Confluence, Web Builder, Splunk, Sonar Qube Sonar Lint, Windows , Linux, AWS, Docker. Source Link, Kansas City, MO July to May Role Senior Java Developer Description Source Link which helps entrepreneur to start up his business. Source Link provide the full-service direct marketing agency that specializes in identifying, about what kind of costumers are best for their brand, what are the resources we can find to help improve your business and how can you get the funding for the growth of the business. Responsibilities Analysis and understanding of business requirements and was one of the members in the architecture team for designing and implementing the system. Participated in Design, Development and Support phases of Software Development Life Cycle SDLC . Implemented the process using Agile Scrum methodology and Test-Driven Model. Contributes and establishes the strategy approach, Best Practices and methodology to PMO on how to Plan, manage, execute and report projects under Agile Scrum Framework. Involved in converting the application from Spring . to Spring . along with conversion to Standard Spring MVC, security features and integrated with the Hibernate framework. Used Spring IOC for dependency Injection, Spring AOP for controlling the execution process of beans life cycle, Spring Batch to process the CSV files. Spring framework and DAO classes using JPA framework for persistence management and involved in integrating the frameworks for the project. Developed Stored Procedures and Triggers on Oracle Database. Used Hibernate . as ORM tool for data related functionalities, persistence layer and implemented transactions. Implemented the DAO and Business Delegate design patterns. Used hibernate DAO objects for retrieving data from database MYSQL which were used in Hibernate mapping. Developed front end user interface using HTML , XML, CSS , Bootstrap, JavaScript, JQuery, AJAX, AngularJS, JQuery and JSP . . Implemented a Continuous Delivery Pipeline with Jenkins and GitHub. Using AngularJS created few HTTP Requests to few application related web API s got the results and stored them. Experience working with Cassandra. Developing RESTFUL web services using JPA, Cloud Foundry. Designed the UX for the front-end using Twitter Bootstrap. Developed Graphical User Interface GUI to display report data using JQuery in Cross-browser compatibility and Web Application Scaling. Used JSF expressions in rendering content and validation. Built JavaScript functions to generate dynamic HTML components like table list, calendar, and spreadsheets and drop-down menus. Extensively used the Java collection Framework Classes for Holding the Application objects. Experience in implementation of business applications using Web logic, WebSphere, IBM WebSphere Application and Portal Server WAS WPS , JBOSS and Tomcat. Developed web application using JSF Java Server Faces framework backing classes and utility classes. Implemented Web services using apache API and tested them using SOAP UI. Integrated the SOAP Web services to RESTful Web Services. JSF navigation configured in JSF configuration file and its backing beans. Worked with DBA to understand the current data model and integrate new Tables within the existing Data Model. Used GIT version control system on the server side to maintain the latest snapshot of data. Used Maven for integration and building of the project and used SOAP UI for testing the Web Services calls Request and response formats and data . Extensively involved in developing and writing Maven built scripts for automated build and deployment processes. Implemented Java security manager to access EJB Elastic Java Beans with Java security API. Utilize Camel to integrate micro services with other microservices and RabbitMQ messaging exchanges. Design and develop Microservices platform to support a multitude of enterprise level applications. Mentor to developers on JS best practices and server-side development. Used JMS for communication between the applications and MQ for communicating with the third-party applications. Implemented EJB Annotations for Entities, Relations and Transactions. Used Eclipse IDE for coding, developing applications and deployed to local WebSphere Application Server. Worked closely with QA for fixing the bugs. Tested the whole application for errors line by line and used Log J for logging all the application exceptions and debugging statements. Used Jenkins and made the deployment automated and deployed the project on Amazon AWS. Environment Java . , J EE, JSP . , JavaScript, AngularJS, Node.js, Servlets . , Hibernate . .X, MAVEN, Spring . , WebSphere Application Server, Eclipse Mars, REST and SOAP Web services, MYSQL, mango DB . . , UML, Visio, Log J, UNIX, Soap UI, jQuery, HTML HTML , AJAX, Bootstrap, XML, GIT, JMS, JSF, EJB , Jenkins, AWS, JUNIT, GIT. Optima Health, WI August to June Role Java Developer Description Developed web application for brokers of small market health insurance for group or individual customers. Basic functionality was to get customer physical address, marital status, family health and their individual health information. After all the required information provided by customer application would figure out the best available health plan in small market and output to customers for their selection. Responsibilities Involved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. Worked with core Java technologies like Multi-Threading and synchronization. Involved in Daily Scrum Agile meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. Designed and coded controller classes using J SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI. Analyzing business requirements and generate technical specifications to design software components and applications for middleware. Wrote scripts in UNIX to process the Batch Jobs on a scheduled basis. Used HTML , CSS, jQuery, AngularJS and JavaScript to construct the dynamic web pages presentation Layer for the application. Used AngularJS and Backbone JS for client-side validation. Created Single page application using Backbone JS and NodeJS to handle data flow. Used JavaScript latest version of libraries based on running in the NodeJS environment. Achieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes. Developed internal coding using J EE technologies based on the MVC Architecture. Implemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements. Designed and developed business components using Spring Boot, Spring Dependency Injection Core , Spring AOP and Spring Annotations. Implemented Business Logic using Java, Spring MVC and Hibernate. Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. Developed messaging module using Spring JMS, Apache Camel and Active MQ, RabbitMQ. Had experience in working with Messaging technologies like Apache Kafka. Used Cassandra for proof of concept. Worked with Apache Kafka as a messaging service for activity tracking of an application. Developed MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic. Implemented PL SQL procedures and views in My SQL Database. Implemented RESTful Web services to retrieve data from client side and made REST API calls from AngularJS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality. Written LINUX shell scripts to identify user login information. Experienced with RAD development methodologies and Rational Clear case for version control. Used JIRA ticketing system to keep track of issues and tasks on individuals. Used Maven to build the application and deployed on IBM WebSphere Application Server. Environment JAVA, J SE, HTML, CSS, jQuery, Ajax, AngularJS, Bootstrap, JSON, J EE, Spring Framework, Spring MVC, Spring Security, Spring Boot, Unix, Spring Data Spring JDBC, Spring ORM , JSP, Hibernate, Web services, RESTful, RAD, WebSphere, Sonar Qube, Agile Scrum Methodology, Maven, JIRA, JBOSS, Junit, TDD, MY SQL, LINUX GITHUB, Cassandra. Macys, Atlanta, GA. October to July Role Java Developer Project Description Macy s, is a premier chain of department stores owned by American multinational corporation Macy s, Inc. The IT department has successfully automated the Sales and marketing operations for the last seven years. My project tasks included marketing new costumes and cosmetics through web, mail and SMS media. Achievement Successfully developed and released two major back-end subsystems to support sales promotions and customized offers to Macys Star and Plenti reward card members. Responsibilities Designed Prototype and project layout skeletons using ReactJS, jQuery, CSS and HTML . Involved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. Used various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. Used Apache Cordova to build native mobile applications using HTML , CSS and JavaScript. Used Adobe Experience manager AEM to manage and deliver digital experiences across websites. Developed classes using core java concepts like Multithreading, Concurrency, Memory Management. Used Multithreading to develop various helper classes in programming to improve overall performance. Used Spring DI, annotations, and MVC to implement business layer and navigation part of application. Used Spring Boot Actuator to externalize application s configuration properties for various environments. Configured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console. Defined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice. Microservice have been built using Spring Boot, Spring security and deployed to AWS cloud. Used Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging. Utilized AWS Lambda platform to upload data into AWS S buckets and to trigger other Lambda Functions Including EC , MongoDB focusing on high-availability, fault tolerance, and auto-scaling. Database required for creation of new tables, PL SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application. Developed several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. Exposed and consumed SOAP based Webservice to communicate between systems. Developed several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. Used Redis as in memory database, for storing and fetching data in memory to increase the performance. Used Apache Kafka for building real time data pipelines and for storing data in a distributed cluster. Worked on Drools Rule Engines with corresponding to validate the business User Roles. Used SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP. Used Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base. Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects. Developed codes in an immutable manner using Scala to apply concurrency and parallelism. Developed Unit test cases using Junit, Mockito and Jenkins for continuous integration. Used Kubernetes for automating deployment, scaling and management of containerized applications. Used Docker to collaborate code, run and deliver more securely for both Linux, Windows Server. Developed Maven scripts and builds using Maven and continuous integration servers like Jenkins. Used log j for logging and GIT, SVN for project management and version management. Functional testing of the front-end applications is done using Selenium IDE and Web Driver . Developed, Tested and Debugged the Java, JSP using Eclipse RCP. Deployed the application on WebSphere . application server. Environment Java . , HTML , CSS , jQuery, Bootstrap, AngularJS, Swing, Threading, AWS cloud, Spring MVC, Spring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, PL SQL, Oracle DB, Cassandra, JBOSS Drools .x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA. CSC January to September Role Java J EE Developer Project Description The Objective of this project was to develop and enhance Warehouse Management system to facilitate information tracking for various warehouse products shipped from the dispatch centers to the locations where it should be placed according to the License Plate number. The application is developed in J EE architecture using EJBs, JSP and Servlets. Responsibilities Prepared Analysis document and followed AGILE software development with Scrum methodology. Developed the application on NodeJS platform using JavaScript programming. Used JavaScript and jQuery for validating the input given to the user interface. Applied data transformation rules to transform code from one format to another format using NodeJS. Created the Nodejs express server to build MVC framework from front-end side AngularJS to back-end. Developed front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in back-end RESTful Server. Developed API using Hibernate to interact with the Oracle database. Extensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate. Worked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. Involved in the development of backend Logics or data access logic using Oracle DB & JDBC. Expertise in Multithreading, Remote Method Invocation RMI , EJB, Serialization, and Java Beans. Worked extensively on SPRING MVC framework to develop new internal web application. Used Spring AOP components for the Logging, Exception handling and Transactional Models. Enforce compliance with dynamic processing and security policies by using Mule ESB. Developed Spring boot application with microservice and deployed it into AWS using EC instances. Developed stored procedures, triggers, and functions with PL SQL for Oracle database. Uses the DAO pattern for data access layer and JMS API for the messaging requirement. Design PL SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling. Test API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data. Developed test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs. Developed and executed SQL queries for testing database integrity and for data analysis using Selenium. Developed automated regression test cases in Selenium WebDriver using Java programming language. Used Maven to build and generate code analysis reports and JENKINS for continuous integration. Used WebLogic for design, development, and deployment of applications. Environment Java, J EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe CQ , Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium. Dynamo IT Solutions August to December Role Java Developer Description The objective of this project is to implement a web based front end system which can be used by the employees, managers and higher level management having specific role permissions for effective processing of day to day business activities in the company like leave management, project management and resource management etc. Responsibilities Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture. Designed the user interfaces using JSPs, developed custom tags, and used JSTL Tag lib. Developed various java business classes for handling different functions. Developed controller classes using Struts and tiles API. Involved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use case Transaction diagrams. Participated in design and code reviews Developed User Interface using AJAX in JSP and also performed client-side validation Developed JUnit test cases for all the developed modules. Used SVN as version control Environment Java, J EE, JSP, Struts .x, JNDI, DB , HTML, XML, DOM, SAX, ANT, AJAX, Rational Rose, Eclipse Indigo . , SOAP, Apache Tomcat, Oracle g, LOG J, SVN.",
  "preprocessed_text": "candidate sr. java ee developer mobile professional summary year experience design development support implementation web based application using java ee technology core java jdbc servlets jsp xml spring junit hibernate restful api worked ides eclipse wsad bean spring tool suite experienced implementing enterprise application phase software development life cycle sdlc including requirement gathering analysis design review coding unit integration testing designed developed several multi-tier web based standalone distributed client-server multithreaded application using object oriented analysis design ooad concept service oriented architecture soa mostly cross-platform environment implemented continuous delivery pipeline docker jenkins git hub aws amis run war ami deploy job jenkins brew master instance reduces time deployment micro service migrated spring based application cloud based micro service api extensive experience advanced java ee technology like servlets jsp ejb jdbc strut .x jms jsf face jpa jndi jstl jta jax-ws jax r spring hibernate extensive knowledge front end technology like ajax jsp jspf javascript jquery backbone.js underscore.js yui html cs expertise using build deploy tool ant maven junit jenkins used spring boot created rest api per application business perform search using elastic java sdk designed application implementing jsf framework based mvc architecture simple java bean model jsp jsf ui component view face servlet controller extensive experience working project waterfall agile methodology test-driven development tdd scrum hand experience database tool like toad oracle db sql server good knowledge service oriented microservices architecture enterprise service bus esb hand experience various application server web server including ibm web sphere .x .x oracle web logic jboss apache tomcat server .x .x .x xampp .x .x wide variety development environment eclipse intellij wsad eclipse ibm rad netbeans notepad sublime text dreamweaver bracket good working knowledge business rule engine like drool experience developing web application using google web toolkit gwt gxt angularjs vaadin expertise client scripting language server-side scripting language like html dhtml cs javascript jstl ajax jquery ext-js json dojo bootstrap angularjs node.js developed web application utilizing jquery html cs angular j strut java ee jsp servlets jax-rs restful web service soap web service spring framework hibernate framework xml json oracle mysql sql server tomcat maven jetty spring jms jboss jdbc weblogic extensive experience soap web service restful web service spring aop spring ioc spring ws-security spring mvc spring integration spring security spring jdbc spring boot hibernate framework servlets jsp strut jdbc oracle strong working knowledge rdbms concept worked mysql sybase oracle mongodb db hands-on experience ibm mq series jms communication middleware component managed amazon web service like ec bucket elb auto-scaling sn sqs ami iam dynamo db elastic search virtual private cloud vpc aws console api integration excellent deploying application aws ec instance create snapshot data must stored aws good understanding nosql database like mongo db cassandra experience building web application using spring framework feature like mvc model view controller aop aspect oriented programming aspectj ioc inversion control dao data access object template class good knowledge experience writing query sql oracle g. implemented soa architecture web service using soap wsdl uddi xml worked web service testing using selenium ide selenium rc server selenium grid web driver testing soapui testing technical skill internet technology core java ee ejb jms strut spring hibernate ibm mq series log xml dom ajax framework jsp servlet java script html angularjs strut spring hibernate spring mvc spring web flow spring ioc spring aop jsf junit jasper report soap ui groovy tool svn cv perforce serena pvc git jira confluence soap restful uddi wsdl jax-rpc jax-rs jax-ws jax-b axis cfx aws micro service middleware ee mdb jms ibm mq soa design pattern java design pattern abstract factory factory method singleton builder mvc front controller singleton business delegate dao pattern bridge decorator adapter chain responsibility command ee design pattern front controller business delegate session facade data access object value object webservices spring based restful soap wsdl soapui application server ibm websphere oracle weblogic server jboss server tomcat database oracle mongo db mysql db operating system window nt xp vista mac sun solaris red hat linux unix ide eclipse mar release ibm rational software architect ibm rational application developer pl sql developer tool ibm rad sql plus sql navigator m office suite m project rational paradigm junit toad soap ui putty rational clear quest rtc starteam mockito build tool maven ant mark-up xml html cs javascript jquery ajax bootstrap angularjs xml xsd xsl xslt sax dom json professional experience walmart bentonville ar april present role java fullstack developer project description walmart mainly focus developing retail application selling product printer scanner floppy office accessory sheet etc motive walmart provide quick service consumer need quick purchase office accessory lesser bulk quantity generation internal feed like coupon rebate campaign additional challenge requires technical expertise well domain knowledge responsibility involved requirement gathering analysis design development testing application using agile methodology scrum developed designed web interface using html cs react.js node.js javascript jquery angular j ext.js bootstrap used pivotal cloud foundry connection service binding detail injected deployed cloud platform involved build process modifying gradle file compiling code building packaging war file deploying onto various tomcat server unix environment designed java component integrated using spring framework hibernate object relational persistence mechanism worked web application security enhancement using owasp involved writing spring configuration xml file contains declaration business class wired-up frontend managed bean using spring ioc pattern implemented application using spring ioc spring mvc framework spring batch handled security using spring security implemented service method sql query sql interact form experienced react.js creating interactive ui using one-way data flow virtual dom jsx react native concept involved integrating jax-rs spring boot application application deployed using jboss implemented micro service using spring boot spring cloud spring micro service enabled discovery using netflix eureka server created web service using spring rest controller return json frontend designed developed dao layer hibernate standard access data sql server created sql server logins assigning role authentication model part security used multithreading programming improve overall performance using singleton design pattern hibernate utility class development carried sts integrated development environment ide developed persistence layer using hibernate framework created pojo object mapped using hibernate annotation transaction management involved creating mongo db collection document developed mongoose schema object perform crud operation performed deployment application ibm websphere application server responsible continuous integration ci continuous delivery cd process implementation using jenkins along linux shell script automate routine job used maven define dependency build application used junit suite execution assertion used jira bug tracking issue tracking project management used git source control management giving huge speed advantage centralized system must communicate server environment java agile html cs bootstrap angular j react.js jstl query ajax aws ec micro service hibernate spring pivotal cloud foundry restful api soa jax-rs json sql node.js oracle crud ci cd jenkins multithreading jira rabbit mq react native gradle maven unit unix sts ibm web sphere log git well fargo charlotte nc june march role java full stack developer project core sale fulfillment mortgage system project description core initiative re-architect redesign retail mortgage application management process integrating sale fulfillment application manages loan application initiation loan application till funding thereby reducing logistics manual process involved product sale fulfillment process sale user gather required information applicant submit loan fulfillment process fulfillment processor take loan submitted process fund disbursed major component like loan status application management pricing closing funding decisioning document generation vendor stipulation responsibility worked requirement lead architect project manager translate business requirement technical specification developed rich user interface ui using bootstrap directive involved implementation server layer service like business service entity service integration service developed webpage using ui framework angular j ext j worked business module like loan status application management asset closing funding product pricing utilized feature spring core layer spring dao support layer develop application built api facade layer using nodejs express-js developed reusable angularjs directive converted ui screen xmi xml metadata interchange framework angularjs framework resulted better performance reduced code count developed angularjs controller isolates scope perform operation ui developed reusable code library future use creating service factory injected controller using dependency injection used nosql db like mongo db proof concept configured hibernate spring application used spring dao support build hibernate dao class used object oriented design object-oriented programming concept core java like polymorphism multithreading inheritance interface generic collection socket programming persistence mechanism implemented using hibernate framework utilizing table per subclass inheritance based mapping component mapping association mapping strategy developed jax-ws jax-rpc soa service binding producer client implementation wsdl contract involved development individual sprint help worked variety frontend javascript framework like angularjs backbonejs reactjs jquery jquery ui good knowledge emberjs involved fixing issue ist qa uat production environment consumed restful web service provided different vendor submit fetch appraisal valuation order tax flood order status fetch employment income information hql named query used throughout application consistency maintainability involved development job scheduler software module using apache open source java based scheduler called quartz scheduler spring invoker webservice developed data access object dao layer job scheduler module using spring jdbc api stored procedure involved writing sql query pl sql stored procedure function trigger cursor object type cursor sequence index etc integration spring module aws module consume third party service developed micro service strategy gradually replace fragile core monolithic java application still able add new business feature used wordpress managing used elk stack three elastic search distributed restful search analytics log stash manage event log kibana seamless integration technology used jboss application server deploying apps different server different environment like dev qa ist production used splunk server log analysis real-time defect tracking expertise front end technology html cs less sas java script reactjs angularjs gwt ajax implemented javascript test case using jasmine karma performed bug tracking using jira maintained documentation using confluence implemented unit testing using junit testng mockito power mock selenium involved building code deploying server using tool maven jenkins used grunt-js test javascript sonar qube j hint html hint etc plugins concatenate minify gzip source code well pas template create jasmine test codebase made custom configuration testing deployment used advanced java feature like lambda expression array operation collection enhanced following coding guide line maintain quality code checking sonar qube sonar lint providing call support production integration environment environment java spring hibernate web service rest wsdl soap xml xsd ajax angularjs bootstrap nodejs html cs java script json oracle oracle sql developer jboss application server eclipse maven testng camel wordpress mockito jasmine karma power mock selenium tortoise svn jira fish eye confluence web builder splunk sonar qube sonar lint window linux aws docker source link kansa city mo july may role senior java developer description source link help entrepreneur start business source link provide full-service direct marketing agency specializes identifying kind costumer best brand resource find help improve business get funding growth business responsibility analysis understanding business requirement one member architecture team designing implementing system participated design development support phase software development life cycle sdlc implemented process using agile scrum methodology test-driven model contributes establishes strategy approach best practice methodology pmo plan manage execute report project agile scrum framework involved converting application spring spring along conversion standard spring mvc security feature integrated hibernate framework used spring ioc dependency injection spring aop controlling execution process bean life cycle spring batch process csv file spring framework dao class using jpa framework persistence management involved integrating framework project developed stored procedure trigger oracle database used hibernate orm tool data related functionality persistence layer implemented transaction implemented dao business delegate design pattern used hibernate dao object retrieving data database mysql used hibernate mapping developed front end user interface using html xml cs bootstrap javascript jquery ajax angularjs jquery jsp implemented continuous delivery pipeline jenkins using angularjs created request application related web api got result stored experience working cassandra developing restful web service using jpa cloud foundry designed ux front-end using twitter bootstrap developed graphical user interface gui display report data using jquery cross-browser compatibility web application scaling used jsf expression rendering content validation built javascript function generate dynamic html component like table list calendar spreadsheet drop-down menu extensively used java collection framework class holding application object experience implementation business application using web logic websphere ibm websphere application portal server wps jboss tomcat developed web application using jsf java server face framework backing class utility class implemented web service using apache api tested using soap ui integrated soap web service restful web service jsf navigation configured jsf configuration file backing bean worked dba understand current data model integrate new table within existing data model used git version control system server side maintain latest snapshot data used maven integration building project used soap ui testing web service call response format data extensively involved developing writing maven built script automated build deployment process implemented java security manager access ejb elastic java bean java security api utilize camel integrate micro service microservices rabbitmq messaging exchange design develop microservices platform support multitude enterprise level application mentor developer j best practice server-side development used jms communication application mq communicating third-party application implemented ejb annotation entity relation transaction used eclipse ide coding developing application deployed local websphere application server worked closely qa fixing bug tested whole application error line line used log logging application exception debugging statement used jenkins made deployment automated deployed project amazon aws environment java ee jsp javascript angularjs node.js servlets hibernate .x maven spring websphere application server eclipse mar rest soap web service mysql mango db uml visio log unix soap ui jquery html html ajax bootstrap xml git jms jsf ejb jenkins aws junit git optimum health wi august june role java developer description developed web application broker small market health insurance group individual customer basic functionality get customer physical marital status family health individual health information required information provided customer application would figure best health plan small market output customer selection responsibility involved complete sdlc including design system architecture development system use case based functional requirement worked core java technology like multi-threading synchronization involved daily scrum agile meeting sprint planning estimation task user story participated retrospective presenting demo end sprint designed coded controller class using se would talk real hardware controller access state gave user control hardware multithreaded ui analyzing business requirement generate technical specification design software component application middleware wrote script unix process batch job scheduled basis used html cs jquery angularjs javascript construct dynamic web page presentation layer application used angularjs backbone j client-side validation created single application using backbone j nodejs handle data flow used javascript latest version library based running nodejs environment achieved dependency injection creating spring service spring controller daos wire object business class developed internal coding using ee technology based mvc architecture implemented dao pattern fetch data database using hibernate carry various database operation avoid redundant database access statement designed developed business component using spring boot spring dependency injection core spring aop spring annotation implemented business logic using java spring mvc hibernate used spring data framework use feature spring jdbc spring orm class like jdbc template hibernate template perform database operation connecting data source developed messaging module using spring jms apache camel active mq rabbitmq experience working messaging technology like apache kafka used cassandra proof concept worked apache kafka messaging service activity tracking application developed mysql stored procedure trigger using sql calculate update table implement business logic implemented pl sql procedure view sql database implemented restful web service retrieve data client side made rest api call angularjs parsed data project client handled security authorization using spring security oauth focused test driven development thereby creating detailed junit test every single piece functionality writing functionality written linux shell script identify user login information experienced rad development methodology rational clear case version control used jira ticketing system keep track issue task individual used maven build application deployed ibm websphere application server environment java se html cs jquery ajax angularjs bootstrap json ee spring framework spring mvc spring security spring boot unix spring data spring jdbc spring orm jsp hibernate web service restful rad websphere sonar qube agile scrum methodology maven jira jboss junit tdd sql linux cassandra macys atlanta ga. october july role java developer project description macy premier chain department store owned american multinational corporation macy inc. department successfully automated sale marketing operation last seven year project task included marketing new costume cosmetic web mail sm medium achievement successfully developed released two major back-end subsystem support sale promotion customized offer macys star plenti reward card member responsibility designed prototype project layout skeleton using reactjs jquery cs html involved designing developed presentation layer using ajax jquery third-party library used various jquery bootstrap plug-in like picker bootstrap selector used apache cordova build native mobile application using html cs javascript used adobe experience manager aem manage deliver digital experience across website developed class using core java concept like multithreading concurrency memory management used multithreading develop various helper class programming improve overall performance used spring di annotation mvc implement business layer navigation part application used spring boot actuator externalize application configuration property various environment configured swagger-ui registered microservice eureka monitor service spring boot console defined hibernate named query batch operation defined criterion query microservice microservice built using spring boot spring security deployed aws cloud used spring cloud aws core spring cloud aws context spring cloud aws messaging utilized aws lambda platform upload data aws bucket trigger lambda function including ec mongodb focusing high-availability fault tolerance auto-scaling database required creation new table pl sql stored procedure function view index constraint trigger required sql tuning reduce response time application developed several rest webservice produce xml json perform task leveraged web mobile application restful webservice using jersey jax-rs implementation exposed consumed soap based webservice communicate system developed several soap based jax-ws webservice interface integrating multiple system code re-usability jmeter test performance soap protocol used redis memory database storing fetching data memory increase performance used apache kafka building real time data pipeline storing data distributed cluster worked drool rule engine corresponding validate business user role used soap ui functional testing performance testing regression testing test rest soap used apigee web-scale enterprise flexibility premise hybrid deployment single code base created configured new jira project worked department maintain existing jira project developed code immutable manner using scala apply concurrency parallelism developed unit test case using junit mockito jenkins continuous integration used kubernetes automating deployment scaling management containerized application used docker collaborate code run deliver securely linux window server developed maven script build using maven continuous integration server like jenkins used log logging git svn project management version management functional testing front-end application done using selenium ide web driver developed tested debugged java jsp using eclipse rcp deployed application websphere application server environment java html cs jquery bootstrap angularjs swing threading aws cloud spring mvc spring boot spring quartz hibernate framework hibernate transaction management hibernate batch transaction jax-ws pl sql oracle db cassandra jboss drool .x docker jms maven jenkins apache camel svn jira csc january september role java ee developer project description objective project develop enhance warehouse management system facilitate information tracking various warehouse product shipped dispatch center location placed according license plate number application developed ee architecture using ejbs jsp servlets responsibility prepared analysis document followed agile software development scrum methodology developed application nodejs platform using javascript programming used javascript jquery validating input given user interface applied data transformation rule transform code one format another format using nodejs created nodejs express server build mvc framework front-end side angularjs back-end developed front-end code ajax call angularjs jquery retrieve data json object controller back-end restful server developed api using hibernate interact oracle database extensive experience using framework apis like strut spring ibatis hibernate worked spring framework like spring ioc spring dao spring orm spring integration involved development backend logic data access logic using oracle db jdbc expertise multithreading remote method invocation rmi ejb serialization java bean worked extensively spring mvc framework develop new internal web application used spring aop component logging exception handling transactional model enforce compliance dynamic processing security policy using mule esb developed spring boot application microservice deployed aws using ec instance developed stored procedure trigger function pl sql oracle database us dao pattern data access layer jms api messaging requirement design pl sql batch using core java connectivity oracle data maintenance handling test api response wcs change deployed continuous basis validate green box mongodb data developed test case performed unit test using junit framework used jira tracking bug developed executed sql query testing database integrity data analysis using selenium developed automated regression test case selenium webdriver using java programming language used maven build generate code analysis report jenkins continuous integration used weblogic design development deployment application environment java ee spring hibernate strut weblogic restful jquery ajax ext j javascript jsp jstl servlet microservice oracle crud pl sql jira angular gwt jdbc aws mongodb nodejs adobe cq bootstrap core java jbpm nosql uml eclipse junit maven agile soa jira jenkins selenium dynamo solution august december role java developer description objective project implement web based front end system used employee manager higher level management specific role permission effective processing day day business activity company like leave management project management resource management etc responsibility developed application using strut framework leverage classical model view controller mvc architecture designed user interface using jsps developed custom tag used jstl tag lib developed various java business class handling different function developed controller class using strut tile api involved documentation use case design using uml modeling include development class diagram sequence diagram use case transaction diagram participated design code review developed user interface using ajax jsp also performed client-side validation developed junit test case developed module used svn version control environment java ee jsp strut .x jndi db html xml dom sax ant ajax rational rose eclipse indigo soap apache tomcat oracle log svn",
  "statistics": {
    "word_count": 5600,
    "unique_word_count": 1424,
    "avg_word_length": 4.928928571428571,
    "stopword_count": 1041
  },
  "metadata": {
    "filename": "candidate197java.docx",
    "file_size": 68346,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:00.312935",
    "input_filename": "candidate197java.json"
  }
}