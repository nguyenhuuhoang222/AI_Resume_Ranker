{
  "id": "Candidate134",
  "raw_text": "                                                                              RESUME\n                                                             Candidate134\n                                                                MOBILE NO: (414)-858-6880\n                                          EMAIL-ID: \nPROFESSIONAL SUMMARY\nOverall 8+ years of experience in Software design and development activities including requirement analysis, design, implementations and testing of various client server based applications using Java and J2EE technologies. \nExtensive experience in Core Java, Servlets, JSP, JavaScript, JDBC, JSTL, Struts, JSF, EJB, AJAX and Custom Tag Libraries. \nExtensive experience in working with different MVC Frameworks like Spring, Struts and ORM (Object Relational mapping tools) like Hibernate. \nExperienced working with databases like DB2, MY SQL, Oracle, MS SQL Server and Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat.\nExpertise in developing critical & responsive GUI / front-end components using HTML, XHTML, DHTML, JavaScript, CSS2/CSS3, JSON, JSP, Servlets, Ajax, JQuery, EXT.JS, JSTL and JavaScript using frameworks like Bootstrap, AngularJS, Ext JS. \nExperience in application of MVC and MVVM client-side JavaScript frameworks such as Angular 2.0, Angular.JS, Back Bone.JS, Ember.JS, Handlebar.JS.\nExperienced on Server-side JavaScript structures like NodeJS, Hapi.JS, Express.JS.\nExperience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools. \nWorked on NoSQL databases like MongoDB and Apache Cassandra.\nSwagger usage and testing structures like Mock MVC, Mock Rest MVC.\nExperience in Integration of Amazon Web Services AWS application like Amazon EC2, Amazon S3, Amazon Simple DB, Amazon Elastic Load Balancing, Amazon SQS, Amazon EBS and Amazon Cloud Front. \nExperience in conveying and arranging application servers, for example, IBM WebSphere, Oracle WebLogic, Jboss and Apache Tomcat.\nExpertise in Database Drivers Like JDBC, Spring JSBC to summon DB stores strategies. \nExperience in ORM systems like Hibernate, Spring information, IBatis and JPA. \nExtensive experience with Frameworks in ORM (Hibernate) and Spring (Spring MVC, Spring Context, Spring DAO, Spring AOP, Spring Batch Spring Security).\nExperience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing.\nSound learning on bundle directors, for example, NPM, Bower, Web pack.\nExtensive working background with different J2EE Frameworks like Spring MVC, Struts, JSF and master level aptitudes in spring system modules like Spring Batch, Spring Security, Spring Boot, Spring Cloud, Spring JTA, Spring AOP. \nProfound learning on Maven, Gradle, ANT as fabricate content for application assemble and arrangement. \nWorked under a business rule management system (BRMS) like Drools.\nWorked on utilizing Rabbit MQ, IBM MQ, Apache Kafka as a Message Oriented Middleware for coordinating applications.\nStrong learning in SOAP, WSDL, and RESTful for trading organized data in the usage of web administrations. \nDeveloped small scale administrations like RESTful web benefit JaxRS with Jersey, Apache CXF.\nExtensive experience using Spring Framework in business layer for Dependency Injection, AOP, Spring MVC, transaction management and using Hibernate as a persistence layer. \nExperienced in utilizing source code variant administration apparatuses like SVN, GIT and undertaking sprinters like Grunt, Gulp and Web pack.  \nDesigned and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications.\nWorked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. \nImplemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other.\nImplemented Spring Circuit Breaker pattern, integrated Hystrix Dashboard to monitor Spring micro services.\nWorked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nExcellent working knowledge on popular frameworks like Struts, Spring, Hibernate.\nSound learning on consistent mix and persistent improvement devices like Jenkins, Hudson, Puppet and Bamboo. Strong involvement in UNIX and Shell Scripting.\nExtensive experience in SQL, Stored Procedures, Functions and Triggers with databases such as Oracle, IBM DB2 and MS SQL Server.\nWorked under the latest standardized version of JavaScript like ECMAScript 6.\nExperienced in using WSDL, SOAP, and Apache AXIS for Web Services. \nExcellent communication, interpersonal and analytical skills and a highly motivated team player with the ability to work independently.\nTECHNICAL SKILLS\nEDUCATION\nBachelor of Technology in Computer Science from Bonam Venkata Chalamayya Engineering  college.\n                                                        PROFESSIONAL EXPERIENCE\nClient6                                                                                                                  Sep 2016 – Till Date\nFidelity National Information Services Inc.(FIS)\nMilwaukee, Wisconsin\nFull Stack Java Developer\nProject Description: FIS company delivers an innovation Consumer eBanking product that provides on-line banking solutions for over 2 million customers of over 200 financial institutions nationwide. This Project involved in developing a Web-based application. I worked with technical services team to build applications which are easily interact with users and full fill their needs.\nResponsibilities: \nDeveloped the login portal using framework AngularJS 2.0 along with HTML5, CSS3 and Type Script. \nWorked with Angular CLI and Typescript in Angular 2.0 to create Controllers and Angular components for the Web Pages.\n Implemented form validation on HTML forms using the built-in validation properties and methods in Angular 2.0.\nImplemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.\nWorked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nWorked under the latest standardized version of JavaScript like ECMAScript 6.\nWorked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. \nImplemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other.\nImplemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services.\nWorked under a business rule management system (BRMS) like Drools.\nInvolved in working with web-based apps use Site Minder for security and authentication purposes. \nCreated is a new cluster and container management tool using Kubernetes \nCreated a display framework that reads the Open API specification document and generates an interactive documentation website using Swagger UI.\nWorked under Scripting languages like Type Scripting. \nAuthenticating Users and to provide the security to RestFull web services using OAUTH 2.0.\nWriting server-side request handling and automated functional test cases to validate UI functionality using Node.js.\nUsed Angular JS -1.x to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications.\nDesigned and built a Web socket server in Node.js to process JSON requests and synchronize events within distributed groups.\nInvolved in various single page applications(SPA) using REACT JS and used various components in the REDUX library.\nWorked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser.\nDeveloping stand-alone, and production-grade Spring based Applications using Spring Boot.\nUsing Spring Boot to provide 'starter' POMs to simplify the Maven configuration\nImplemented Virtual Dom for Client-Side view rendering services using REACT JS.\nREACT JS Virtual DOM used for client-side view rendering services, React-Redux for state management and React-Router for programmatic navigation. \nEnvironment: AWS, Swagger, Node-JS, Angular2, Type script, Web pack, ECMA6, Karma and jasmine, Spring Boot, Spring cloud like Ribbon, Hystix, Netflix ZUL, Angular2 Injection annotations, Angular2 Shadow Dom, Micro services architecture, Docker, Cassandra DB, OAUTH, Site Minder, Java8 \nClient5                                                                                                                             Aug 2015-Sep 2016\nViva Health care, Birmingham, Alabama \nFull Stack Java Developer\nProject Description: VIVA Health, Inc. is an Alabama based HMO insurance company that is a part of the UAB Health System. As part of an innovative network of services we develop Web-based Java application which provides premiums based on customer information. I worked in Creating Responsive User Interface website for Online Payment of Payroll and Health Care benefit.\nResponsibilities:\nWorked in Developing stand-alone, and production-grade Spring based Applications using Spring Boot.\nExtensively used NoSQL technologies provided by SPRING BOOT like Cassandra which is used as an Database for this project.\nWorked under implementing JSX in React JS with react tools to compile JSX code to JavaScript\nDeveloped various single page applications(SPA) using REACT JS and used various components in the REDUX library.\nWriting server-side request handling and automated functional test cases to validate UI functionality using Node.js.\nExperience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application.\nImplemented Virtual Dom for Client-Side view rendering services using REACT JS.\nExtensively worked in writing minimal code in building re-usable forms with their validations using REACT with Redux Architecture.\nAlso, Extensively ES6 To Create Components in REACT using BABEL because it is not supported in all Bowsers.  \nWorked with Jenkins Continuous Integration and Continuous Deployment(CI/CD).\nImplemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services.\nCreated is a new cluster and container management tool using Kubernetes \nUsed Maven and Jenkins to automate the construct and convey process and SVN was utilized for project administration and version management. \nExperience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application.\nInstalled Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nExperience in using NoSQL (MongoDB) data models document, key-value & wide column, or graph model.\nWorked with mongoose connector for database persistence using Node.js to interact with MongoDB\nUsed Express JS which is fast, assertive, essential and moderate web framework of Node.js that helps manage a sever and routes.\nImplemented various Business rules in the drools file using Drools rule engine.\nImplemented where Mocha are used to test React Js components and Chai for Node.js for testing endpoints.\nDeployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform.\nEnvironment: Java/J2EE 1.6, JSP, Spring boot, AngularJS, Node-JS, CSS3 and JavaScript, XML, Eclipse IDE, Maven, Jenkins, React js, Redux, Spring boot, Node Js, Express js, NPM, Web pack, Docker, Kubernetes, Cloud foundry, Jenkins, ECMS 6, JSX-react, AXIOS, React life cycle, MONGO DB, Mongoose connection, NODE JS service, OPEN ID CONNECTION, OAUTH, HTML, CSS3.\nClient4                                                                                                                         Nov 2014 - Aug 2015\nFifth Third Bank, Atlanta, Geogria.                                                                                         \nFull Stack Java Developer\nProject Description: Business Foundation System (BFS) is an insurance policy underwriting system under the Commercial Small Insurance vertical. This application provides quotes for customers and enables agents to issue and renew insurance. The underwriters can update with the new rates and edits. Property and liability, auto insurance, worker's compensation are the three lines of busiesses supported by this application. It also interacts with some third party applications and has the facility of accepting quote requests from other vendors. I worked under Cash Management and Financial Admin under this project.\nResponsibilities:\nImplemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.\nDesigned, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack (Including EC2, S3), focusing on high-availability, fault tolerance, and auto-scaling.\nWorked in various Business rules in the drools file using Drools rule engine.\nConfigured AWS EC2 instances, domain mapping via Route53.\nExtensively used CSS and Bootstrap for styling the HTML elements. \n Developing Rest Services using Rest Template with SpringBoot and gradle. \n Containerized the SpringBoot microservice using Docker. \n Participated in front end development using JSF 2.0, JavaScript, HTML 5, CSS 3.0. \nDesigned Frontend with in object oriented JavaScript Framework with Angular.js.\nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS.\nDeveloped dynamic web pages using HTML5, CSS3, jQuery, Bootstrap, Less, CSS3(SASS) and AJAX.\nTested JavaScript using Jasmine frameworks. \nConfiguring and managed public/private cloud infrastructure utilizing Amazon Web Services like Amazon Ec2, Amazon S3.\nImplemented ODBC which is used for connecting to the database Oracle.\nIntegrated testing methods implemented by using Karma and Jasmine\nDeveloped application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC.\nApache CXF helps you build and develop services using frontend programming APIs, like JAX-WS and JAX-RS.\nDeveloped RESTful Services and Web Service Clients (JAX-RS or JAX-WS) with data representation in different formats such as XML and JSON.\nEnvironment: JAVA, J2EE, Core Java, Spring Boot, Spring Frame work, JSF, EJB, JMS, AJAX, JavaScript, Spring MVC, Spring Batch, spring security, Spring IOC, Apache CXF, Rest Service, Jax RS, BROOLS, Angular JS, Angular controllers, Angular customs directions, digestive cycle, Karma and jasmine, Multi Threading, AWS, Jquery, HTML5, CSS3, Ajax, ORACLE, Rabbit MQ.\nClient3                                                                                                                        Dec 2013 – Nov 2014\nConnexions Loyalty Group, Richmond, Virginia.                                                                        \nFull Stack Java Developer\nProject Description: The objective of Company is to have a framework in place for the organization, which allows the business users to add new customer configurations, customer product catalog, excluded product details list etc without depending on the development team. \nResponsibilities: \nUsed Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server.\nDeveloped application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC\nThese applications need to maintain privacy and restrict illegal users. To achieve the functionality, we used Spring Security.\nWe kept up bean life cycle by utilizing Spring IOC which keep up session information of beans.\n Implemented Spring AOP for cross cutting concerns.\nHibernate ORM framework used to interact with database through Hibernate query language(HQL).\nUsed ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX. Tested the application after making the necessary configuration.\nProvided daily support for production, stage and testing environments for WebSphere MQ operations and problem determination.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) architecture and Spring JPA.\nWorked with Ember JS to code some new functionality and developed application front end using HTML, CSS, Ajax.\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs). \nUsed SOA, UDDI lookups and Web Services Description Language(WSDL) using SOAP protocol.\nUsed JaxWS framework to create SOAP web services.\nUsed Web services for sending and getting data from different applications using SOAP messages\nInvolved in development of SOAP Webservices using Apache Axis to extract client related data from databases.\nInvolved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript.\nImplemented SOAP Services (JAX-WS) to interact with external systems. Involved in writing client code for invoking SOAP based web services.\nDeveloped HTML prototypes and ready XHTML documents with CSS style sheets.\nEnvironment: Java/J2ee, SQL, PL/SQL, XML, Maven, JUnit, Spring MVC, Spring IOC, spring Security, JSP, Spring Batch, Java script, JQUERY, Backbone JS, Handle bar JS, Core Java, Hibernates, Unix script, Shell Scripts, Jax WS, Soap Services, Jax WS security, wsdl-2,HTML,CSS,AJAX, IBM MQ, IBM Websphere. \nClient2                                                                                                                             July2011 – Aug 2013\nVirtusa Consulting Services                                                                  \nJava/J2EE Developer\nProject Description:  \nThe system provides online access to Members, Employers and Brokers regarding Patient Administration, Billing and Pharmacy Management functions for the hospital. The major functions are Member registration and Medical Record information, Pharmacy Information, Appointments, Handling Hospital Admissions, and Assigning Insurance Details for Billing, Recording Transfers within the hospital and Creation of Discharge Summary and Details. The system is developed using J2EE Technologies with Spring Frame Work and Hibernate Technologies.\nResponsibilities:\nUsed Spring AOP module to handle transaction management, logging and profiling.\nImplemented various Business rules in the drl (drools file) using Drools rule engine.\nInvolved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript.\nCreated Stored Procedure, Trigger for database access and events.\nWe kept up bean life cycle by utilizing Spring IOC which keep up session information of beans.\nDeveloped HTML prototypes and ready XHTML documents with CSS style sheets.\nImplemented Multithreading feature for processing the multiple requests to achieve high performance. \nUsed SQL which is JavaScript database which is a lightweight client-side in-memory SQL database designed to work in browser.\nUsed JaxWS framework to create SOAP web services.\nUsed Web services for sending and getting data from different applications using SOAP messages. \nInvolved in development of SOAP Webservices using Apache Axis to extract client related data from databases.\nImplemented SOAP Services (JAX-WS) to interact with external systems. Involved in writing client code for invoking SOAP based web services.\nEnvironment:  J2EE, JSF, XHTML, Bootstrap, JSON, JavaScript, Oracle, Spring framework, Spring IOC, java multithreading, Prime faces, Spring Batch, jax WS, soap services, stored procedures in sql server, Drools, Spring AOP, IBATIS, Hibernate, MySQL , PL/SQL, XML, WSDL, SOAP, SOAP UI, IBM WebSphere JUnit, Web sphere Application Server, Tomcat. \nClient1                                                                                                                            July 2009 - Aug 2011\nGlobal Tele Systems\nJava Developer\nProject Description: Global Insurance System is software designed for a group of insurance agents, which supports the maintenance activities of Insurance Policies and their associated company details, their procedures in maintaining various types of policies, with the corresponding details of Policy holders, associated agents involved in the policy maintenance and etc. \nResponsibilities: \nImplemented Multithreading feature for processing the multiple requests to achieve high performance.\nUsed various Core Java concepts such as Exception Handling, Collections.\nDeveloped the modules using Servlets, Java2EE and JDBC for connecting with MySQL.\nDeveloped stored procedures, triggers in MySQL for lowering traffic between servers & clients.\nPerformance tuning of JVM heap size, Garbage collections, java stack and Native thread & production performance.\nDeveloped and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB.\nDeployed Application using Oracle Web logic Server.\n Expert in Core Java with strong understanding of Garbage Collector, SWING, Collections, Multithreading, Event handling, Exception handling and Generics.\nDeveloped and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB.\nUsed Structs Framework in the application, which is based on MVC design pattern.\nEnvironment: JAVA, J2EE, JSP, JSTL, Swing, JSP, HTML, CSS, servlets, Struts, EJB, Web Logic, XML, JavaScript, java core like multithreading, collections, Interface and abstract classes, strings.",
  "cleaned_text": "RESUME Candidate MOBILE NO EMAIL-ID PROFESSIONAL SUMMARY Overall years of experience in Software design and development activities including requirement analysis, design, implementations and testing of various client server based applications using Java and J EE technologies. Extensive experience in Core Java, Servlets, JSP, JavaScript, JDBC, JSTL, Struts, JSF, EJB, AJAX and Custom Tag Libraries. Extensive experience in working with different MVC Frameworks like Spring, Struts and ORM Object Relational mapping tools like Hibernate. Experienced working with databases like DB , MY SQL, Oracle, MS SQL Server and Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat. Expertise in developing critical & responsive GUI front-end components using HTML, XHTML, DHTML, JavaScript, CSS CSS , JSON, JSP, Servlets, Ajax, JQuery, EXT.JS, JSTL and JavaScript using frameworks like Bootstrap, AngularJS, Ext JS. Experience in application of MVC and MVVM client-side JavaScript frameworks such as Angular . , Angular.JS, Back Bone.JS, Ember.JS, Handlebar.JS. Experienced on Server-side JavaScript structures like NodeJS, Hapi.JS, Express.JS. Experience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools. Worked on NoSQL databases like MongoDB and Apache Cassandra. Swagger usage and testing structures like Mock MVC, Mock Rest MVC. Experience in Integration of Amazon Web Services AWS application like Amazon EC , Amazon S , Amazon Simple DB, Amazon Elastic Load Balancing, Amazon SQS, Amazon EBS and Amazon Cloud Front. Experience in conveying and arranging application servers, for example, IBM WebSphere, Oracle WebLogic, Jboss and Apache Tomcat. Expertise in Database Drivers Like JDBC, Spring JSBC to summon DB stores strategies. Experience in ORM systems like Hibernate, Spring information, IBatis and JPA. Extensive experience with Frameworks in ORM Hibernate and Spring Spring MVC, Spring Context, Spring DAO, Spring AOP, Spring Batch Spring Security . Experience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing. Sound learning on bundle directors, for example, NPM, Bower, Web pack. Extensive working background with different J EE Frameworks like Spring MVC, Struts, JSF and master level aptitudes in spring system modules like Spring Batch, Spring Security, Spring Boot, Spring Cloud, Spring JTA, Spring AOP. Profound learning on Maven, Gradle, ANT as fabricate content for application assemble and arrangement. Worked under a business rule management system BRMS like Drools. Worked on utilizing Rabbit MQ, IBM MQ, Apache Kafka as a Message Oriented Middleware for coordinating applications. Strong learning in SOAP, WSDL, and RESTful for trading organized data in the usage of web administrations. Developed small scale administrations like RESTful web benefit JaxRS with Jersey, Apache CXF. Extensive experience using Spring Framework in business layer for Dependency Injection, AOP, Spring MVC, transaction management and using Hibernate as a persistence layer. Experienced in utilizing source code variant administration apparatuses like SVN, GIT and undertaking sprinters like Grunt, Gulp and Web pack. Designed and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications. Worked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. Implemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other. Implemented Spring Circuit Breaker pattern, integrated Hystrix Dashboard to monitor Spring micro services. Worked on Microservices using Docker container using Amazon EC container service and using AWS admin console. Excellent working knowledge on popular frameworks like Struts, Spring, Hibernate. Sound learning on consistent mix and persistent improvement devices like Jenkins, Hudson, Puppet and Bamboo. Strong involvement in UNIX and Shell Scripting. Extensive experience in SQL, Stored Procedures, Functions and Triggers with databases such as Oracle, IBM DB and MS SQL Server. Worked under the latest standardized version of JavaScript like ECMAScript . Experienced in using WSDL, SOAP, and Apache AXIS for Web Services. Excellent communication, interpersonal and analytical skills and a highly motivated team player with the ability to work independently. TECHNICAL SKILLS EDUCATION Bachelor of Technology in Computer Science from Bonam Venkata Chalamayya Engineering college. PROFESSIONAL EXPERIENCE Client Sep Till Date Fidelity National Information Services Inc. FIS Milwaukee, Wisconsin Full Stack Java Developer Project Description FIS company delivers an innovation Consumer eBanking product that provides on-line banking solutions for over million customers of over financial institutions nationwide. This Project involved in developing a Web-based application. I worked with technical services team to build applications which are easily interact with users and full fill their needs. Responsibilities Developed the login portal using framework AngularJS . along with HTML , CSS and Type Script. Worked with Angular CLI and Typescript in Angular . to create Controllers and Angular components for the Web Pages. Implemented form validation on HTML forms using the built-in validation properties and methods in Angular . . Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events. Worked on Microservices using Docker container using Amazon EC container service and using AWS admin console. Worked under the latest standardized version of JavaScript like ECMAScript . Worked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. Implemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other. Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services. Worked under a business rule management system BRMS like Drools. Involved in working with web-based apps use Site Minder for security and authentication purposes. Created is a new cluster and container management tool using Kubernetes Created a display framework that reads the Open API specification document and generates an interactive documentation website using Swagger UI. Worked under Scripting languages like Type Scripting. Authenticating Users and to provide the security to RestFull web services using OAUTH . . Writing server-side request handling and automated functional test cases to validate UI functionality using Node.js. Used Angular JS - .x to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications. Designed and built a Web socket server in Node.js to process JSON requests and synchronize events within distributed groups. Involved in various single page applications SPA using REACT JS and used various components in the REDUX library. Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser. Developing stand-alone, and production-grade Spring based Applications using Spring Boot. Using Spring Boot to provide starter POMs to simplify the Maven configuration Implemented Virtual Dom for Client-Side view rendering services using REACT JS. REACT JS Virtual DOM used for client-side view rendering services, React-Redux for state management and React-Router for programmatic navigation. Environment AWS, Swagger, Node-JS, Angular , Type script, Web pack, ECMA , Karma and jasmine, Spring Boot, Spring cloud like Ribbon, Hystix, Netflix ZUL, Angular Injection annotations, Angular Shadow Dom, Micro services architecture, Docker, Cassandra DB, OAUTH, Site Minder, Java Client Aug -Sep Viva Health care, Birmingham, Alabama Full Stack Java Developer Project Description VIVA Health, Inc. is an Alabama based HMO insurance company that is a part of the UAB Health System. As part of an innovative network of services we develop Web-based Java application which provides premiums based on customer information. I worked in Creating Responsive User Interface website for Online Payment of Payroll and Health Care benefit. Responsibilities Worked in Developing stand-alone, and production-grade Spring based Applications using Spring Boot. Extensively used NoSQL technologies provided by SPRING BOOT like Cassandra which is used as an Database for this project. Worked under implementing JSX in React JS with react tools to compile JSX code to JavaScript Developed various single page applications SPA using REACT JS and used various components in the REDUX library. Writing server-side request handling and automated functional test cases to validate UI functionality using Node.js. Experience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application. Implemented Virtual Dom for Client-Side view rendering services using REACT JS. Extensively worked in writing minimal code in building re-usable forms with their validations using REACT with Redux Architecture. Also, Extensively ES To Create Components in REACT using BABEL because it is not supported in all Bowsers. Worked with Jenkins Continuous Integration and Continuous Deployment CI CD . Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services. Created is a new cluster and container management tool using Kubernetes Used Maven and Jenkins to automate the construct and convey process and SVN was utilized for project administration and version management. Experience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application. Installed Microservices using Docker container using Amazon EC container service and using AWS admin console. Experience in using NoSQL MongoDB data models document, key-value & wide column, or graph model. Worked with mongoose connector for database persistence using Node.js to interact with MongoDB Used Express JS which is fast, assertive, essential and moderate web framework of Node.js that helps manage a sever and routes. Implemented various Business rules in the drools file using Drools rule engine. Implemented where Mocha are used to test React Js components and Chai for Node.js for testing endpoints. Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform. Environment Java J EE . , JSP, Spring boot, AngularJS, Node-JS, CSS and JavaScript, XML, Eclipse IDE, Maven, Jenkins, React js, Redux, Spring boot, Node Js, Express js, NPM, Web pack, Docker, Kubernetes, Cloud foundry, Jenkins, ECMS , JSX-react, AXIOS, React life cycle, MONGO DB, Mongoose connection, NODE JS service, OPEN ID CONNECTION, OAUTH, HTML, CSS . Client Nov - Aug Fifth Third Bank, Atlanta, Geogria. Full Stack Java Developer Project Description Business Foundation System BFS is an insurance policy underwriting system under the Commercial Small Insurance vertical. This application provides quotes for customers and enables agents to issue and renew insurance. The underwriters can update with the new rates and edits. Property and liability, auto insurance, worker s compensation are the three lines of busiesses supported by this application. It also interacts with some third party applications and has the facility of accepting quote requests from other vendors. I worked under Cash Management and Financial Admin under this project. Responsibilities Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events. Designed, configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC , S , focusing on high-availability, fault tolerance, and auto-scaling. Worked in various Business rules in the drools file using Drools rule engine. Configured AWS EC instances, domain mapping via Route . Extensively used CSS and Bootstrap for styling the HTML elements. Developing Rest Services using Rest Template with SpringBoot and gradle. Containerized the SpringBoot microservice using Docker. Participated in front end development using JSF . , JavaScript, HTML , CSS . . Designed Frontend with in object oriented JavaScript Framework with Angular.js. Developed API for using AWS Lambda to manage the servers and run the code in the AWS. Developed dynamic web pages using HTML , CSS , jQuery, Bootstrap, Less, CSS SASS and AJAX. Tested JavaScript using Jasmine frameworks. Configuring and managed public private cloud infrastructure utilizing Amazon Web Services like Amazon Ec , Amazon S . Implemented ODBC which is used for connecting to the database Oracle. Integrated testing methods implemented by using Karma and Jasmine Developed application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC. Apache CXF helps you build and develop services using frontend programming APIs, like JAX-WS and JAX-RS. Developed RESTful Services and Web Service Clients JAX-RS or JAX-WS with data representation in different formats such as XML and JSON. Environment JAVA, J EE, Core Java, Spring Boot, Spring Frame work, JSF, EJB, JMS, AJAX, JavaScript, Spring MVC, Spring Batch, spring security, Spring IOC, Apache CXF, Rest Service, Jax RS, BROOLS, Angular JS, Angular controllers, Angular customs directions, digestive cycle, Karma and jasmine, Multi Threading, AWS, Jquery, HTML , CSS , Ajax, ORACLE, Rabbit MQ. Client Dec Nov Connexions Loyalty Group, Richmond, Virginia. Full Stack Java Developer Project Description The objective of Company is to have a framework in place for the organization, which allows the business users to add new customer configurations, customer product catalog, excluded product details list etc without depending on the development team. Responsibilities Used Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server. Developed application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC These applications need to maintain privacy and restrict illegal users. To achieve the functionality, we used Spring Security. We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans. Implemented Spring AOP for cross cutting concerns. Hibernate ORM framework used to interact with database through Hibernate query language HQL . Used ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX. Tested the application after making the necessary configuration. Provided daily support for production, stage and testing environments for WebSphere MQ operations and problem determination. Involved in multi-tiered J EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA. Worked with Ember JS to code some new functionality and developed application front end using HTML, CSS, Ajax. Worked on Hibernate persistence tier. This involves developing mapping files and Hibernate POJOs DAOs . Used SOA, UDDI lookups and Web Services Description Language WSDL using SOAP protocol. Used JaxWS framework to create SOAP web services. Used Web services for sending and getting data from different applications using SOAP messages Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases. Involved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript. Implemented SOAP Services JAX-WS to interact with external systems. Involved in writing client code for invoking SOAP based web services. Developed HTML prototypes and ready XHTML documents with CSS style sheets. Environment Java J ee, SQL, PL SQL, XML, Maven, JUnit, Spring MVC, Spring IOC, spring Security, JSP, Spring Batch, Java script, JQUERY, Backbone JS, Handle bar JS, Core Java, Hibernates, Unix script, Shell Scripts, Jax WS, Soap Services, Jax WS security, wsdl- ,HTML,CSS,AJAX, IBM MQ, IBM Websphere. Client July Aug Virtusa Consulting Services Java J EE Developer Project Description The system provides online access to Members, Employers and Brokers regarding Patient Administration, Billing and Pharmacy Management functions for the hospital. The major functions are Member registration and Medical Record information, Pharmacy Information, Appointments, Handling Hospital Admissions, and Assigning Insurance Details for Billing, Recording Transfers within the hospital and Creation of Discharge Summary and Details. The system is developed using J EE Technologies with Spring Frame Work and Hibernate Technologies. Responsibilities Used Spring AOP module to handle transaction management, logging and profiling. Implemented various Business rules in the drl drools file using Drools rule engine. Involved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript. Created Stored Procedure, Trigger for database access and events. We kept up bean life cycle by utilizing Spring IOC which keep up session information of beans. Developed HTML prototypes and ready XHTML documents with CSS style sheets. Implemented Multithreading feature for processing the multiple requests to achieve high performance. Used SQL which is JavaScript database which is a lightweight client-side in-memory SQL database designed to work in browser. Used JaxWS framework to create SOAP web services. Used Web services for sending and getting data from different applications using SOAP messages. Involved in development of SOAP Webservices using Apache Axis to extract client related data from databases. Implemented SOAP Services JAX-WS to interact with external systems. Involved in writing client code for invoking SOAP based web services. Environment J EE, JSF, XHTML, Bootstrap, JSON, JavaScript, Oracle, Spring framework, Spring IOC, java multithreading, Prime faces, Spring Batch, jax WS, soap services, stored procedures in sql server, Drools, Spring AOP, IBATIS, Hibernate, MySQL , PL SQL, XML, WSDL, SOAP, SOAP UI, IBM WebSphere JUnit, Web sphere Application Server, Tomcat. Client July - Aug Global Tele Systems Java Developer Project Description Global Insurance System is software designed for a group of insurance agents, which supports the maintenance activities of Insurance Policies and their associated company details, their procedures in maintaining various types of policies, with the corresponding details of Policy holders, associated agents involved in the policy maintenance and etc. Responsibilities Implemented Multithreading feature for processing the multiple requests to achieve high performance. Used various Core Java concepts such as Exception Handling, Collections. Developed the modules using Servlets, Java EE and JDBC for connecting with MySQL. Developed stored procedures, triggers in MySQL for lowering traffic between servers & clients. Performance tuning of JVM heap size, Garbage collections, java stack and Native thread & production performance. Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB. Deployed Application using Oracle Web logic Server. Expert in Core Java with strong understanding of Garbage Collector, SWING, Collections, Multithreading, Event handling, Exception handling and Generics. Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB. Used Structs Framework in the application, which is based on MVC design pattern. Environment JAVA, J EE, JSP, JSTL, Swing, JSP, HTML, CSS, servlets, Struts, EJB, Web Logic, XML, JavaScript, java core like multithreading, collections, Interface and abstract classes, strings.",
  "preprocessed_text": "candidate mobile email-id professional summary overall year experience software design development activity including requirement analysis design implementation testing various client server based application using java ee technology extensive experience core java servlets jsp javascript jdbc jstl strut jsf ejb ajax custom tag library extensive experience working different mvc framework like spring strut orm object relational mapping tool like hibernate experienced working database like db sql oracle m sql server application server like bea weblogic ibm websphere apache tomcat expertise developing critical responsive gui front-end component using html xhtml dhtml javascript cs cs json jsp servlets ajax jquery ext.js jstl javascript using framework like bootstrap angularjs ext j experience application mvc mvvm client-side javascript framework angular angular.js back bone.js ember.js handlebar.js experienced server-side javascript structure like nodejs hapi.js express.js experience performing unit testing using junit ridiculing system like jmock mockito integration development application done using ant maven tool worked nosql database like mongodb apache cassandra swagger usage testing structure like mock mvc mock rest mvc experience integration amazon web service aws application like amazon ec amazon amazon simple db amazon elastic load balancing amazon sqs amazon eb amazon cloud front experience conveying arranging application server example ibm websphere oracle weblogic jboss apache tomcat expertise database driver like jdbc spring jsbc summon db store strategy experience orm system like hibernate spring information ibatis jpa extensive experience framework orm hibernate spring spring mvc spring context spring dao spring aop spring batch spring security experience using test tool like selenium unit integration testing used cucumber acceptance testing sound learning bundle director example npm bower web pack extensive working background different ee framework like spring mvc strut jsf master level aptitude spring system module like spring batch spring security spring boot spring cloud spring jta spring aop profound learning maven gradle ant fabricate content application assemble arrangement worked business rule management system brms like drool worked utilizing rabbit mq ibm mq apache kafka message oriented middleware coordinating application strong learning soap wsdl restful trading organized data usage web administration developed small scale administration like restful web benefit jaxrs jersey apache cxf extensive experience using spring framework business layer dependency injection aop spring mvc transaction management using hibernate persistence layer experienced utilizing source code variant administration apparatus like svn git undertaking sprinter like grunt gulp web pack designed developed spring soap restful web service spring jms module interact enterprise legacy application worked developing web application mvc based framework like spring spring ioc spring security spring boot spring cloud spring mvc implemented spring cloud- netflix zul building microservices communicate implemented spring circuit breaker pattern integrated hystrix dashboard monitor spring micro service worked microservices using docker container using amazon ec container service using aws admin console excellent working knowledge popular framework like strut spring hibernate sound learning consistent mix persistent improvement device like jenkins hudson puppet bamboo strong involvement unix shell scripting extensive experience sql stored procedure function trigger database oracle ibm db m sql server worked latest standardized version javascript like ecmascript experienced using wsdl soap apache axis web service excellent communication interpersonal analytical skill highly motivated team player ability work independently technical skill education bachelor technology computer science bonam venkata chalamayya engineering college professional experience client sep till fidelity national information service inc. fis milwaukee wisconsin full stack java developer project description fis company delivers innovation consumer ebanking product provides on-line banking solution million customer financial institution nationwide project involved developing web-based application worked technical service team build application easily interact user full fill need responsibility developed login portal using framework angularjs along html cs type script worked angular cli typescript angular create controller angular component web page implemented form validation html form using built-in validation property method angular implemented metric collection mechanism server utilizing apache kafka stream server-side event worked microservices using docker container using amazon ec container service using aws admin console worked latest standardized version javascript like ecmascript worked developing web application mvc based framework like spring spring ioc spring security spring boot spring cloud spring mvc implemented spring cloud- netflix zul building microservices communicate implemented spring circuit breaker pattern integrated hystrix dashboard monitor spring micro service worked business rule management system brms like drool involved working web-based apps use site minder security authentication purpose created new cluster container management tool using kubernetes created display framework read open api specification document generates interactive documentation website using swagger ui worked scripting language like type scripting authenticating user provide security restfull web service using oauth writing server-side handling automated functional test case validate ui functionality using node.js used angular j .x create view hook model dom synchronize data server single application designed built web socket server node.js process json request synchronize event within distributed group involved various single application spa using react j used various component redux library worked web pack bundling application source code convenient chunk loading code server browser developing stand-alone production-grade spring based application using spring boot using spring boot provide starter pom simplify maven configuration implemented virtual dom client-side view rendering service using react j react j virtual dom used client-side view rendering service react-redux state management react-router programmatic navigation environment aws swagger node-js angular type script web pack ecma karma jasmine spring boot spring cloud like ribbon hystix netflix zul angular injection annotation angular shadow dom micro service architecture docker cassandra db oauth site minder java client aug -sep viva health care birmingham alabama full stack java developer project description viva health inc. alabama based hmo insurance company part uab health system part innovative network service develop web-based java application provides premium based customer information worked creating responsive user interface website online payment payroll health care benefit responsibility worked developing stand-alone production-grade spring based application using spring boot extensively used nosql technology provided spring boot like cassandra used database project worked implementing jsx react j react tool compile jsx code javascript developed various single application spa using react j used various component redux library writing server-side handling automated functional test case validate ui functionality using node.js experience docker engine docker machine environment deploy micro services-oriented environment scalable application implemented virtual dom client-side view rendering service using react j extensively worked writing minimal code building re-usable form validation using react redux architecture also extensively e create component react using babel supported bowsers worked jenkins continuous integration continuous deployment ci cd implemented spring circuit breaker pattern integrated hystrix dashboard monitor spring micro service created new cluster container management tool using kubernetes used maven jenkins automate construct convey process svn utilized project administration version management experience docker engine docker machine environment deploy micro services-oriented environment scalable application installed microservices using docker container using amazon ec container service using aws admin console experience using nosql mongodb data model document key-value wide column graph model worked mongoose connector database persistence using node.js interact mongodb used express j fast assertive essential moderate web framework node.js help manage sever route implemented various business rule drool file using drool rule engine implemented mocha used test react j component chai node.js testing endpoint deployed application pivotal cloud foundry used reduce development overhead providing ready use platform environment java ee jsp spring boot angularjs node-js cs javascript xml eclipse ide maven jenkins react j redux spring boot node j express j npm web pack docker kubernetes cloud foundry jenkins ecm jsx-react axios react life cycle mongo db mongoose connection node j service open id connection oauth html cs client nov aug fifth third bank atlanta geogria full stack java developer project description business foundation system bfs insurance policy underwriting system commercial small insurance vertical application provides quote customer enables agent issue renew insurance underwriter update new rate edits property liability auto insurance worker compensation three line busiesses supported application also interacts third party application facility accepting quote request vendor worked cash management financial admin project responsibility implemented metric collection mechanism server utilizing apache kafka stream server-side event designed configured deployed amazon web service aws multitude application utilizing aws stack including ec focusing high-availability fault tolerance auto-scaling worked various business rule drool file using drool rule engine configured aws ec instance domain mapping via route extensively used cs bootstrap styling html element developing rest service using rest template springboot gradle containerized springboot microservice using docker participated front end development using jsf javascript html cs designed frontend object oriented javascript framework angular.js developed api using aws lambda manage server run code aws developed dynamic web page using html cs jquery bootstrap less cs sas ajax tested javascript using jasmine framework configuring managed public private cloud infrastructure utilizing amazon web service like amazon ec amazon implemented odbc used connecting database oracle integrated testing method implemented using karma jasmine developed application spring framework utilizing feature like spring boot spring dependency injection spring bean spring security spring jpa spring web flow using mvc apache cxf help build develop service using frontend programming apis like jax-ws jax-rs developed restful service web service client jax-rs jax-ws data representation different format xml json environment java ee core java spring boot spring frame work jsf ejb jms ajax javascript spring mvc spring batch spring security spring ioc apache cxf rest service jax r brools angular j angular controller angular custom direction digestive cycle karma jasmine multi threading aws jquery html cs ajax oracle rabbit mq client dec nov connexion loyalty group richmond virginia full stack java developer project description objective company framework place organization allows business user add new customer configuration customer product catalog excluded product detail list etc without depending development team responsibility used backbone j utilize rendering function create controller handle event triggered client send server developed application spring framework utilizing feature like spring boot spring dependency injection spring bean spring security spring jpa spring web flow using mvc application need maintain privacy restrict illegal user achieve functionality used spring security kept bean life cycle utilizing spring ioc keep session information bean implemented spring aop cross cutting concern hibernate orm framework used interact database hibernate query language hql used ant deploy application ibm websphere unix environment ibm aix tested application making necessary configuration provided daily support production stage testing environment websphere mq operation problem determination involved multi-tiered ee design utilizing spring inversion control ioc architecture spring jpa worked ember j code new functionality developed application front end using html cs ajax worked hibernate persistence tier involves developing mapping file hibernate pojos daos used soa uddi lookup web service description language wsdl using soap protocol used jaxws framework create soap web service used web service sending getting data different application using soap message involved development soap webservices using apache axis extract client related data database involved design ui screen created several mock using html cs javascript implemented soap service jax-ws interact external system involved writing client code invoking soap based web service developed html prototype ready xhtml document cs style sheet environment java ee sql pl sql xml maven junit spring mvc spring ioc spring security jsp spring batch java script jquery backbone j handle bar j core java hibernates unix script shell script jax w soap service jax w security wsdl- html cs ajax ibm mq ibm websphere client july aug virtusa consulting service java ee developer project description system provides online access member employer broker regarding patient administration billing pharmacy management function hospital major function member registration medical record information pharmacy information appointment handling hospital admission assigning insurance detail billing recording transfer within hospital creation discharge summary detail system developed using ee technology spring frame work hibernate technology responsibility used spring aop module handle transaction management logging profiling implemented various business rule drl drool file using drool rule engine involved design ui screen created several mock using html cs javascript created stored procedure trigger database access event kept bean life cycle utilizing spring ioc keep session information bean developed html prototype ready xhtml document cs style sheet implemented multithreading feature processing multiple request achieve high performance used sql javascript database lightweight client-side in-memory sql database designed work browser used jaxws framework create soap web service used web service sending getting data different application using soap message involved development soap webservices using apache axis extract client related data database implemented soap service jax-ws interact external system involved writing client code invoking soap based web service environment ee jsf xhtml bootstrap json javascript oracle spring framework spring ioc java multithreading prime face spring batch jax w soap service stored procedure sql server drool spring aop ibatis hibernate mysql pl sql xml wsdl soap soap ui ibm websphere junit web sphere application server tomcat client july aug global tele system java developer project description global insurance system software designed group insurance agent support maintenance activity insurance policy associated company detail procedure maintaining various type policy corresponding detail policy holder associated agent involved policy maintenance etc responsibility implemented multithreading feature processing multiple request achieve high performance used various core java concept exception handling collection developed module using servlets java ee jdbc connecting mysql developed stored procedure trigger mysql lowering traffic server client performance tuning jvm heap size garbage collection java stack native thread production performance developed implemented mvc architectural pattern using strut framework including jsp servlets ejb deployed application using oracle web logic server expert core java strong understanding garbage collector swing collection multithreading event handling exception handling generic developed implemented mvc architectural pattern using strut framework including jsp servlets ejb used structs framework application based mvc design pattern environment java ee jsp jstl swing jsp html cs servlets strut ejb web logic xml javascript java core like multithreading collection interface abstract class string",
  "statistics": {
    "word_count": 3396,
    "unique_word_count": 980,
    "avg_word_length": 5.073321554770318,
    "stopword_count": 628
  },
  "metadata": {
    "filename": "Candidate134.docx",
    "file_size": 49176,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:58.888620",
    "input_filename": "Candidate134.json"
  }
}