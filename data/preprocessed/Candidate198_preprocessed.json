{
  "id": "Candidate198",
  "raw_text": "Candidate198\nEmail: \nContact: (913)890-3489   \nSummary:\nOver 8+ years of IT experience in Analysis, Design, Development, implementation and execution of test cases of software application using Java/J2EE technologies.\nExperienced in Java Application Development, Object Oriented Concepts, Object Oriented Design (OOD), Object Oriented Analysis (OOA), Object Oriented Programming (OOP) and its implementation.\nExperienced with developing rich user interface applications using HTML5, CSS3 and JavaScript, JQuery, Angular 4.0,2.0,JS, Node JS, React JS, Backbone JS, Twitter Bootstrap, JQuery Mobile, XML, JSON that follows W3C Web Standards and are browser compatible\nExperience working with various SDLC methodologies like Agile Scrum, RUP and Waterfall Model. \nExperienced in developing front end applications using HTML, HTML5, XML, XHTML, DHTML, CSS, CSS3, Bootstrap, SAAS, LESS, JavaScript, DOM, jQuery, Ajax, JSON, and JSP.\nExpertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate, iBATIS.\nGood Understanding of Document Object Model (DOM) and DOM Functions. \nDesign and implement a Web based content management utilizing XML, JAXB, DOM, XSLT, XPath and JavaScript for data generation and presentation with JSF.\nStrong Experience in JavaScript MVC design pattern such as Angular JS, Backbone JS and Ember JS.\nExperience in server side scripting with Node JS, Express JS.\nGood Knowledge in JavaScript library used for building reusable UI components like React JS.\nWorked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js.\nStrong experience in working on JavaScript environment like MEAN (Mongo, Express, Angular, Node)\nStrong knowledge on OOPs concepts, Core Java, Multithreading, Exception handling, and Collection Framework.\nStrong programming skills towards developing and implementing complete n-tier web based application systems using Java/J2EE technologies- JDBC, JSP, Servlets, Enterprise Java Beans, Struts, JSF, Spring, SOA implementation, JAX-RS, JAX-WS, JNDI, XML, JAXB, JSON, WSDL.\nHave considerable knowledge in developing UNIX shell scripts and pearl scripts.\nStrong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework.\nGood knowledge on the Spring Modules like Spring IOC, Spring MVC, Spring DAO, Spring Batch, Spring Web Flow,  Spring Security and Spring Boot.\nHaving Handful experience in using OAuth 2 for Microservices security.\nHaving knowledge on (JMS) MQ's like Apache Kafka, Rabbit MQ, IBM MQ and Active MQ.\nExperience with Web/Application servers (Tomcat, Web Logic and JBOSS)\nGood knowledge in using Restful framework like JAX-RS Framework, SOAP Web services using JAX-WS, Apache CXF, Jersey.\nGood knowledge in using Amazon Web Services (Amazon EC2, Amazon Simple DB, Amazon RDS, Amazon Elastic Load Balancing, Amazon SQS, and AWS Identity), Pivotal Cloud and IBM Web Sphere.\nDefined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances.\nKnowledge on various Docker components like Docker Engine, Hub, Machine, Compose and Dockers Registry.\nExtensively worked on beginner patches for Docker Engine.\nExperience in using Drools rules engine for defining business rules and Validations.\nExperience in using different version controlling/tracking systems GIT, CVS, Subversion, and Rational Clear Case.\nExperienced in working with multiple databases like Oracle 10/11g, SQL Server, NoSQL (Mongo DB, Cassandra), PostgreSQL, MySQL and DB2. \nExperience using JIRA and Bugzilla5.0.x /4.4.x as issue and bug tracking tools. \nExperienced with J-Unit Framework4.x, Jasmine and Mockito for developing test cases using Test driven development (TDD) approach and log4j for logging. \nExpertise in using NoSQL databases like Mongo DB, Apache Cassandra 2.0.12 as a distributed database management system and writing queries to it using CQL 3.0.\nExperienced in performing unit testing using JUnit, Mockito integration and deployment of applications using tools such as ANT, Jenkins and Maven & debugging through log4j. \nExperience in Backing up databases using Mongo DB backup facility in OPS manager\nExperience in using Ant1.x and Maven3.x for build automation. \nIn-depth knowledge of PL/SQL with the experience in constructing the triggers, tables, functions, user defined data type, procedures etc\nGood knowledge in JavaScript Task Runner like Gulp, Grunt for magnification, compilation, unit testing.\nStrong knowledge on JavaScript Unit testing with Jasmine, Karma, Protractor, Mocha and Chai\nExcellent verbal, written communication and presentation skills, problem solving and conflict resolution skills.\nTechnical Skills:\nWORK EXPERIENCE:\nSr Java Fullstack Developer           \t\t\t\t\t\t\t\t  \t June 2016 to Present\nPG & E Corporation-Dinuba, CA\t\nRoles & Responsibilities:\nInvolved in the complete SDLC (software development life cycle) of the application from requirement analysis to testing. \nInvolved in Analysis, design and coding on Java and J2EE Environment.\nImplemented Spring Framework for the project.\nBuild and Release Management Built application logic using Python 2.7\nResponsible for Creating custom, general use modules and components which extend the elements and modules of core Angular 4, Polymer JS.\nCreated and maintain web pages using HTML5, CSS3, JavaScript, JQUERY, Java, J2EE and also responsible for Designing of Web pages including Ajax controls and XML.\nCreated and managed microservices. Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features\nApplied advanced HTML5, JavaScript, and CSS3 to deliver cutting-edge user interfaces using material design components in Polymer JS.\nAll the functionality is implemented using Spring IO / Spring Boot, Microservices and Hibernate ORM.\nCreated and injected Spring Services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nFollowed agile methodology for developing the application.\nCreated continuous integration builds using Jenkins and deployed on app server.\nExtensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development\nSpring MVC Framework IOC (Inversion of Control) design pattern is used to have relationships between application components.\nApplication is Open Source on GitHub and developed using Eclipse, GWT and GAE for cloud based backend data.\nProgrammed the Event handling for DOJO Widgets to accept user inputs and validate it.\nResponsible for validating user actions on the client side and provided responsive feedback using Polymer JS, Angular 4, and predix components.\nImplementing Webservices using JSON.\nDeveloped various generic JavaScript functions used for validations.\nDesigned and developed UI capabilities and J2EE server based services.\nUsing GIT for Source Control and Version Management.\nFocused on Test Driven Development (TDD) thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nUsed JavaScript testing frameworks, Jasmine, Karma.\nCommunicated updates in daily scrum meetings using Rally software.\nUsed AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly.\nExtensively used Ajax calls to send parameters and fetch data based on the user-triggered events.\nManipulated data to both send and fetch data from the server through GET, DELETE and POST requests.\nRegularly worked with the MEAN stacks and used GIT daily on a Mac OS.\nUsed SOCOCO for the daily standups, power programming, and team communication.\nHandled response data from Restful WebServices using XML, JSON and JQuery to update UI Interacted with java controllers (JQuery, Ajax, and JSON to write/read data from back end systems).\nInvolved in writing test plans, Test Cases and Test Scripts using selenium\nDesigned and developed Test Scenario/Test Cases/Test steps for various Business Services/methods covering both positive and negative testing. \nUsed SOAPUI for testing Web Services, inspection of WSDL files, generation of SOA envelopes, and acceleration of many other common XML tasks encountered during development of Web-Service enabled applications. \nConfigured Selenium WebDriver, TestNG, and Maven created Selenium automation scripts in java using JUnit. \nEnvironment: Java jdk, JEE, Java 8, JSP, Python, WebLogic Application Server 11g/10.3, IBM RAD, HTML5, CSS3, Angular 4, polymer JS,  AJAX, JSON, Node JS, React JS, Microservices, Multithreading, Servlets, JMS, JVM, XML, Restful WebServices, JQuery UI, Maven, Selenium, Apache CXF, Spring MVC, JavaScript, GIT, SOAP, Mongo DB, J2EE, AWS, JSP, Oracle 11g, Eclipse 3.5, JUnit 4.4, Agile methodology, AWS, Git, JSP, Apache Tomcat, Jasmine, Karma.\nJAVA FULL STACK DEVELOPER \t\t\t\t\t\t\t\t          August 2014 to May 2016\nCerner corporation-Kansas city, MO   \t\t                       \t\t                  \nRoles & Responsibilities:\nInvolved in Requirements and Analysis Understanding the requirements of the client and the flow of the application as well as the application Framework.\nDeveloped Front End pages of the application using HTML5, CSS3 (using LESS), Angular 2.0.\nUsed Less.js pre-processor to create importable and reusable style sheets, processed on server-side.\nCreated controllers and view pages along with Bootstrap and HTML5 for dynamic web application.\nDesigned and developed the original prototype for a highly-complex, interactive, graphical, web user-interface using standards-compliant JavaScript (ECMA SCRIPT 6)\nUsed AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application\nDocument Object Model (DOM) manipulation performed using JavaScript and Angular Js.\nInvolved in developing the Angular JS MVC framework for the Single Page Application development.\nWeb application development for backend system using Angular 2.0 with cutting edge HTML5 and CSS3 techniques.\nUsed features in Angular 2.0 such as data binding, ng-route for routing, custom filters, and custom directives to meet business requirements.\nUsed Bootstrap components of Angular-UI like carousel, collapse, dropdown, and tabs to develop dynamic responsive Web Application.\nUsed spring boot properties like actuators and health checkers to enhance micro service implementations.\nDeployed Spring Boot based microservices Dockers container using Amazon EC2 container services and using AWS admin console.\nDeveloped Restful service interface using Spring Boot to the underlying Agent Services API and Implemented Restful web services.\nUsed JSON response modulation in rest services using JAX-RS to make it more generic for our team to consume the services.\nDesigning and developed Microservices using (MEAN Stack) Node.js, Mongo DB, Angular JS Elastic search on Private Cloud Open Stack Platform using Express.js.\nBuild prototype for various required services such as Scheduling, Logging and Notification Service using third party Node JS based JavaScript library.\nUsed Express JS which is fast, assertive, essential and moderate web framework of Node JS that helps manage a server and routes.\nUsed Ajax Express for automatically AJAX requests handling middleware for Express framework.\nConfiguration file and Node JS is used at back end to interact with Mongo DB using Mongoose connector.\nUsed Socket.IO for the Node server to auto-reconnection and disconnection support.\nImplemented MySQL Database as the storage system for the Restful Webservices.\nUsed Hibernate mappings, relationships between tables and entity classes to access and update information in the database.\nHibernate Query Language (HQL) was used to perform various queries in the database.\nUsed Hibernate Core Interfaces configuration, transactional, session and criteria.\nDeveloped data models using Hibernate POJO's and configuring Hibernate persistence layer.\nWorked with NoSQL database Mongo DB and developed custom Mongo DB applications specific to client needs.\nUsed AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly.\nUsed Jenkins for continuous deployment and integration of the build and release process\nDealt with Gulp to perform magnification, compilation and Bower to maintain package dependencies.\nPerforms UNIT testing with JASMINE and KARMA, and develops web services using RESTful API.\nWorked on creation of custom Docker container images, tagging and pushing the images.\nInvolved in running Selenium automation scripts and updating the scripts according to enhanced requirements using Selenium WebDriver.\nDone unit testing using JUnit.\nDesigned and implemented scalable, secure cloud architecture based on Amazon Web Services (AWS)\nConfigured AWS EC2 instances, S3 Buckets and Cloud Formation Services based on the business requirements for different applications.\nInvolved in behavior driven development using SCRUM framework under Agile Methodology.\nUsed MAVEN tool for building the project and managing the dependencies in it.\nDeveloped and maintained automated regression test cases in Selenium using Java programming language.  \nImplemented test automation for web applications from front to backend using Selenium. \nResponsible for creating requests and building test scenarios for the web services project. \nTested WebServices /XML /SOAP and RestFul services using SoapUI 2.5.\nEnvironment: Java 1.7/J2EE, Spring MVC, HTML5, XML, CSS3, LESS, JSON, JavaScript, Angular 2.0, Oracle 11g, Tomcat 5x/6x, Bootstrap, Maven, Hibernate, MySQL, Multithreading, Eclipse, AWS SDK, RESTful, Backbone JS, DB2, Cassandra, AJAX, JSON, Node JS, Express JS, AWS, Microservices, Restful API, JAX-RS, React JS, Node Js, Gulp, NPM, AWS, Apache Kafka, GitHub, NoSQL, Mongo DB, Jasmine, karma, Selenium, Soap UI 2.5.\nSr. Java/J2EE Developer                                                                                                                 \t                         October 2012 to July 2014                                      \nFedEx Corporation-Memphis, TN\t\t      \nRoles & Responsibilities:\nImplemented SOA architecture using Enterprise Service Bus (ESB).\nConfigured business applications in XML bean definition files using SPRING.\nWorked on Hibernate ORM. Created Hibernate XML files and Java class files to map the object relation Mappings. Used Hibernate query language.\nProvided data persistence by object/relational mapping solution via Hibernate for application save, update, delete operations.\nImplement single sign on and LDAP for login authentication.\nDeveloped the application using Spring MVC framework and IOC for dependency injection\nUsed Hibernate ORM framework with spring framework for data persistence and transaction management.\nWorked on presentation layers using Angular JS, AJAX, Backbone JS, HTML, JSP, java script and XML.\nCreated UI mock up screens and developed screens with JSP, CSS and custom tag libraries\nCreated custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS\nUsed REST Controllers to replace the existing operations layer which acts as bridge between business layer and the UI.\nDeveloped Web API using NodeJS and hosted on multiple load balanced API instances.\nDeveloped a framework to consume REST Webservices using Spring Rest libraries\nUsed JUnit framework to write test cases for unit testing, Used Power mock & Mockito libraries to create mock objects to verify the service logic\nDeveloped Copy Tool - a standalone application using javaFx to copy data from one environment to another environment.\nUsed Spring core annotations for Dependency injection and Spring MVC for REST API s and Spring Boot for micro services.\nUsed Apache Camel and CXF in the JBoss Fuse ESB as the integration platform for SOA Services.\nUsed Angular JS for data-binding, and Node JS for back-end support with APIs.\nWorked on JPA for persisting the objects into the system.\nInvolved in finding the Memory Leaks and adjusting the JVM Heap Sizes and GC Parameters using JProfiler 5.1.\nWorked on Axis implementation and used SOAPUI to test the SOAP.\nWorked on XML, XSD and XSLT to parse the request and create the new one based on the specification.\nDeveloped generic Java packages to produce and consume JMS messages through topics and queues in asynchronous message processing with guaranteed delivery.\nUsed IBM MQ Series as the JMS provider.\nUtilized Core J2EE design patterns such as Singleton and Data Access Object (DAO) in the implementation of the services.\nResponsible for writing SQL Queries and Procedures using DB2.\nInvolved in writing test plans, Test Cases and Test Scripts using quality center. \nResponsible for writing JUnit test cases and Peer level testing.\nImproved database performance by recognizing and rewriting slow queries.\nBuild & Deployment in Websphere Application Server.\nSolid deployment experience on the UNIX platform.\nCreated UML diagrams such as Class Diagrams and Sequence Diagrams using IBM Rational Rose.\nEnvironment: Java1.7, J2EE, JavaFx, JSP, Servlets, Spring 1.2, WebSphere Application Server 7.0, Oracle 9x, SOA, JMS, JMX, IBM MQ Series 5.3, SOAPUI, Hibernate, XML, XSD,  Spring, JUnit, Backbone JS, MS SQL Server 2008, JPA, JTA, JDBC 2.0, Maven, PL/SQL Developer,DB2, UNIX, Log4J, UML and Agile, Web Logic 9.0, Angular JS. \nJAVA/J2EE DEVELOPER \t\t\t\t\t\t\t\t          October 2010 to September 2012\nBank of New York Mellon Jersey City, NJ\t\t                                                  \nResponsibilities: \nDesigned and developed UML Diagrams, Use cases, Class, Sequence and activity Diagrams. \nWorked in Agile methodology environment and participated in Scrum sessions in designing, developing, implementing and testing the distributed applications. \nDeveloped detailed design documents for all the functional modules of the application to be used by the testing team to setup test cases. \nMigration of Web Sphere application server to Tomcat application and used Eclipse IDE and deployed the application on TOMCAT server. \nDeveloped dynamic and interactive we based applications using HTML, CSS and JavaScript languages. \nImplemented Persistence layer using Hibernate to interact with the MySQL database and performed CRUD operations. \nUsed web logic as the app server for deploying the applications and Used JDBC as the data access layer connecting to Oracle DB. \nDesigned and Developed Web Services using technologies UDDI, WSDL, SOAP to communicate to the other modules. \nUsed Maven automated build scripts to compile and package the application and implemented Log4j for the project. \nConfigured the XML file for spring security injection to ensure the back-end security by discriminating the role of users as well as access authority for the URIs and server-side assets. \nImplemented Spring MVC, which includes writing Controller classes for handling requests, processing form submissions and performed validations using Commons validator. \nInvolved in developing interface for web pages like user registration, login, and registered access control for users depending on logins using HTML and JavaScript. \nIntegrated Spring DAO for data access using Hibernate, used HQL and SQL for querying databases. \nInvolved in Group presentations, Poster presentations and involved in bugs fixing and used Log4j for writing int application and error logs. \nUsed JDBC API to connect to the database and performed create, Read, Update and Delete operations to insert, retrieve drop and delete the data as per the requirement. \nInvolved in project migration from Swing application to web integration using Struts web framework based on MVC architecture. \nDebugging for Stored Procedures in the application and using SQL queries to access Oracle, DB2 and SQL Server 2008 R2. \nWritten test cases using JUnit as a testing framework and responsible for preparing test scripts for system. \nDeveloped the code for asynchronous update to web page using JavaScript and Ajax. \nCreated and consumed SOAP based Web services and used SOAPUI to send and receive XML data and Worked with JMS Queues for sending messages in point-to-point mode. \nEnvironment: Java 1.6, C, C++, servlets, JSP, JMS, Struts, HTML5, CSS, JavaScript, Oracle 10g, JUnit 3.x, SOAP, XML, weblogic Server 9x/10x, SQL, Tomcat 6x, Hibernate, Angular JS, Node JS, Spring, GIT, DB2, SOAP, JUnit, PL/SQL, MS SQL Server2008, Structs, Spring, DA0, XML, Log4j, Websphere Application  Server 7.0, SQL.\nJAVA/J2EE DEVELOPER \t\t\t\t\t\t\t\t\tMarch 2009 to August 2010\nProd apt Solutions \t\t                                                       \nResponsibilities:\nInvolved in creating Use cases, Class Diagrams and Interaction Diagrams.\nDesigned the UML diagrams based on the OOAD principles.\nDeveloped EJB's and deployed them on IBM WebSphere Application server.\nDeveloped the Action classes, Action forms and Action Servlet for web tier.\nDeveloped the Business logic on the web tier using EJB Stateless Session beans.\nDeveloped business layer components using enterprise java beans (EJB)\nDeveloped the modules using Servlets, Java2EE and JDBC for connecting with DB2 Database\nImplemented Multithreading feature for processing the multiple requests to achieve high performance.\nImplemented Web Services to integrate between different applications using REST services using JAX-WS.\nImplemented Singleton Design Pattern for database connectivity.\nImplemented c3po connection properties for maintaining database connections.\nHands-on writing Stored Procedures, functions, triggers, DDL, DML SQL queries.\nCreated custom PL/SQL procedures to read data from flat files to dump to DB2 database using SQL loader.\nCreated tables, views, Types, triggers, complex join queries, stored procedures, and functions and modifications to existing database structure as required for addition of new features.\nInvolved in Designing the Database Schema and writing the complex SQL queries.\nAccessed stored procedures and functions using JDBC Callable statements.\nWorked on IBM MQ to simplify integration and accelerate application deployment.\nWorked on web-based reporting system with HTML, JavaScript and JSP.\nDeployed the project in Linux environment.\nUsed ANT build tool for compilation and generation of war file.\nEnvironment: Java, J2EE, HTML, PL/SQL, Webservices, Multithreading, Hibernate, spring, JSPs, Eclipse, IBM WebSphere 6.1, AXIS, Java Script, Subversion, IBM DB2, Clarity, Maven, Rational Rose, Windows XP.",
  "cleaned_text": "Candidate Email Contact Summary Over years of IT experience in Analysis, Design, Development, implementation and execution of test cases of software application using Java J EE technologies. Experienced in Java Application Development, Object Oriented Concepts, Object Oriented Design OOD , Object Oriented Analysis OOA , Object Oriented Programming OOP and its implementation. Experienced with developing rich user interface applications using HTML , CSS and JavaScript, JQuery, Angular . , . ,JS, Node JS, React JS, Backbone JS, Twitter Bootstrap, JQuery Mobile, XML, JSON that follows W C Web Standards and are browser compatible Experience working with various SDLC methodologies like Agile Scrum, RUP and Waterfall Model. Experienced in developing front end applications using HTML, HTML , XML, XHTML, DHTML, CSS, CSS , Bootstrap, SAAS, LESS, JavaScript, DOM, jQuery, Ajax, JSON, and JSP. Expertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate, iBATIS. Good Understanding of Document Object Model DOM and DOM Functions. Design and implement a Web based content management utilizing XML, JAXB, DOM, XSLT, XPath and JavaScript for data generation and presentation with JSF. Strong Experience in JavaScript MVC design pattern such as Angular JS, Backbone JS and Ember JS. Experience in server side scripting with Node JS, Express JS. Good Knowledge in JavaScript library used for building reusable UI components like React JS. Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js. Strong experience in working on JavaScript environment like MEAN Mongo, Express, Angular, Node Strong knowledge on OOPs concepts, Core Java, Multithreading, Exception handling, and Collection Framework. Strong programming skills towards developing and implementing complete n-tier web based application systems using Java J EE technologies- JDBC, JSP, Servlets, Enterprise Java Beans, Struts, JSF, Spring, SOA implementation, JAX-RS, JAX-WS, JNDI, XML, JAXB, JSON, WSDL. Have considerable knowledge in developing UNIX shell scripts and pearl scripts. Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework. Good knowledge on the Spring Modules like Spring IOC, Spring MVC, Spring DAO, Spring Batch, Spring Web Flow, Spring Security and Spring Boot. Having Handful experience in using OAuth for Microservices security. Having knowledge on JMS MQ s like Apache Kafka, Rabbit MQ, IBM MQ and Active MQ. Experience with Web Application servers Tomcat, Web Logic and JBOSS Good knowledge in using Restful framework like JAX-RS Framework, SOAP Web services using JAX-WS, Apache CXF, Jersey. Good knowledge in using Amazon Web Services Amazon EC , Amazon Simple DB, Amazon RDS, Amazon Elastic Load Balancing, Amazon SQS, and AWS Identity , Pivotal Cloud and IBM Web Sphere. Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC instances. Knowledge on various Docker components like Docker Engine, Hub, Machine, Compose and Dockers Registry. Extensively worked on beginner patches for Docker Engine. Experience in using Drools rules engine for defining business rules and Validations. Experience in using different version controlling tracking systems GIT, CVS, Subversion, and Rational Clear Case. Experienced in working with multiple databases like Oracle g, SQL Server, NoSQL Mongo DB, Cassandra , PostgreSQL, MySQL and DB . Experience using JIRA and Bugzilla . .x . .x as issue and bug tracking tools. Experienced with J-Unit Framework .x, Jasmine and Mockito for developing test cases using Test driven development TDD approach and log j for logging. Expertise in using NoSQL databases like Mongo DB, Apache Cassandra . . as a distributed database management system and writing queries to it using CQL . . Experienced in performing unit testing using JUnit, Mockito integration and deployment of applications using tools such as ANT, Jenkins and Maven & debugging through log j. Experience in Backing up databases using Mongo DB backup facility in OPS manager Experience in using Ant .x and Maven .x for build automation. In-depth knowledge of PL SQL with the experience in constructing the triggers, tables, functions, user defined data type, procedures etc Good knowledge in JavaScript Task Runner like Gulp, Grunt for magnification, compilation, unit testing. Strong knowledge on JavaScript Unit testing with Jasmine, Karma, Protractor, Mocha and Chai Excellent verbal, written communication and presentation skills, problem solving and conflict resolution skills. Technical Skills WORK EXPERIENCE Sr Java Fullstack Developer June to Present PG & E Corporation-Dinuba, CA Roles & Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing. Involved in Analysis, design and coding on Java and J EE Environment. Implemented Spring Framework for the project. Build and Release Management Built application logic using Python . Responsible for Creating custom, general use modules and components which extend the elements and modules of core Angular , Polymer JS. Created and maintain web pages using HTML , CSS , JavaScript, JQUERY, Java, J EE and also responsible for Designing of Web pages including Ajax controls and XML. Created and managed microservices. Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Applied advanced HTML , JavaScript, and CSS to deliver cutting-edge user interfaces using material design components in Polymer JS. All the functionality is implemented using Spring IO Spring Boot, Microservices and Hibernate ORM. Created and injected Spring Services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes. Followed agile methodology for developing the application. Created continuous integration builds using Jenkins and deployed on app server. Extensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components. Application is Open Source on GitHub and developed using Eclipse, GWT and GAE for cloud based backend data. Programmed the Event handling for DOJO Widgets to accept user inputs and validate it. Responsible for validating user actions on the client side and provided responsive feedback using Polymer JS, Angular , and predix components. Implementing Webservices using JSON. Developed various generic JavaScript functions used for validations. Designed and developed UI capabilities and J EE server based services. Using GIT for Source Control and Version Management. Focused on Test Driven Development TDD thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. Used JavaScript testing frameworks, Jasmine, Karma. Communicated updates in daily scrum meetings using Rally software. Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly. Extensively used Ajax calls to send parameters and fetch data based on the user-triggered events. Manipulated data to both send and fetch data from the server through GET, DELETE and POST requests. Regularly worked with the MEAN stacks and used GIT daily on a Mac OS. Used SOCOCO for the daily standups, power programming, and team communication. Handled response data from Restful WebServices using XML, JSON and JQuery to update UI Interacted with java controllers JQuery, Ajax, and JSON to write read data from back end systems . Involved in writing test plans, Test Cases and Test Scripts using selenium Designed and developed Test Scenario Test Cases Test steps for various Business Services methods covering both positive and negative testing. Used SOAPUI for testing Web Services, inspection of WSDL files, generation of SOA envelopes, and acceleration of many other common XML tasks encountered during development of Web-Service enabled applications. Configured Selenium WebDriver, TestNG, and Maven created Selenium automation scripts in java using JUnit. Environment Java jdk, JEE, Java , JSP, Python, WebLogic Application Server g . , IBM RAD, HTML , CSS , Angular , polymer JS, AJAX, JSON, Node JS, React JS, Microservices, Multithreading, Servlets, JMS, JVM, XML, Restful WebServices, JQuery UI, Maven, Selenium, Apache CXF, Spring MVC, JavaScript, GIT, SOAP, Mongo DB, J EE, AWS, JSP, Oracle g, Eclipse . , JUnit . , Agile methodology, AWS, Git, JSP, Apache Tomcat, Jasmine, Karma. JAVA FULL STACK DEVELOPER August to May Cerner corporation-Kansas city, MO Roles & Responsibilities Involved in Requirements and Analysis Understanding the requirements of the client and the flow of the application as well as the application Framework. Developed Front End pages of the application using HTML , CSS using LESS , Angular . . Used Less.js pre-processor to create importable and reusable style sheets, processed on server-side. Created controllers and view pages along with Bootstrap and HTML for dynamic web application. Designed and developed the original prototype for a highly-complex, interactive, graphical, web user-interface using standards-compliant JavaScript ECMA SCRIPT Used AWS SDK for connection to Amazon S buckets as it is used as the object storage service to store and retrieve the media files related to the application Document Object Model DOM manipulation performed using JavaScript and Angular Js. Involved in developing the Angular JS MVC framework for the Single Page Application development. Web application development for backend system using Angular . with cutting edge HTML and CSS techniques. Used features in Angular . such as data binding, ng-route for routing, custom filters, and custom directives to meet business requirements. Used Bootstrap components of Angular-UI like carousel, collapse, dropdown, and tabs to develop dynamic responsive Web Application. Used spring boot properties like actuators and health checkers to enhance micro service implementations. Deployed Spring Boot based microservices Dockers container using Amazon EC container services and using AWS admin console. Developed Restful service interface using Spring Boot to the underlying Agent Services API and Implemented Restful web services. Used JSON response modulation in rest services using JAX-RS to make it more generic for our team to consume the services. Designing and developed Microservices using MEAN Stack Node.js, Mongo DB, Angular JS Elastic search on Private Cloud Open Stack Platform using Express.js. Build prototype for various required services such as Scheduling, Logging and Notification Service using third party Node JS based JavaScript library. Used Express JS which is fast, assertive, essential and moderate web framework of Node JS that helps manage a server and routes. Used Ajax Express for automatically AJAX requests handling middleware for Express framework. Configuration file and Node JS is used at back end to interact with Mongo DB using Mongoose connector. Used Socket.IO for the Node server to auto-reconnection and disconnection support. Implemented MySQL Database as the storage system for the Restful Webservices. Used Hibernate mappings, relationships between tables and entity classes to access and update information in the database. Hibernate Query Language HQL was used to perform various queries in the database. Used Hibernate Core Interfaces configuration, transactional, session and criteria. Developed data models using Hibernate POJO s and configuring Hibernate persistence layer. Worked with NoSQL database Mongo DB and developed custom Mongo DB applications specific to client needs. Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly. Used Jenkins for continuous deployment and integration of the build and release process Dealt with Gulp to perform magnification, compilation and Bower to maintain package dependencies. Performs UNIT testing with JASMINE and KARMA, and develops web services using RESTful API. Worked on creation of custom Docker container images, tagging and pushing the images. Involved in running Selenium automation scripts and updating the scripts according to enhanced requirements using Selenium WebDriver. Done unit testing using JUnit. Designed and implemented scalable, secure cloud architecture based on Amazon Web Services AWS Configured AWS EC instances, S Buckets and Cloud Formation Services based on the business requirements for different applications. Involved in behavior driven development using SCRUM framework under Agile Methodology. Used MAVEN tool for building the project and managing the dependencies in it. Developed and maintained automated regression test cases in Selenium using Java programming language. Implemented test automation for web applications from front to backend using Selenium. Responsible for creating requests and building test scenarios for the web services project. Tested WebServices XML SOAP and RestFul services using SoapUI . . Environment Java . J EE, Spring MVC, HTML , XML, CSS , LESS, JSON, JavaScript, Angular . , Oracle g, Tomcat x x, Bootstrap, Maven, Hibernate, MySQL, Multithreading, Eclipse, AWS SDK, RESTful, Backbone JS, DB , Cassandra, AJAX, JSON, Node JS, Express JS, AWS, Microservices, Restful API, JAX-RS, React JS, Node Js, Gulp, NPM, AWS, Apache Kafka, GitHub, NoSQL, Mongo DB, Jasmine, karma, Selenium, Soap UI . . Sr. Java J EE Developer October to July FedEx Corporation-Memphis, TN Roles & Responsibilities Implemented SOA architecture using Enterprise Service Bus ESB . Configured business applications in XML bean definition files using SPRING. Worked on Hibernate ORM. Created Hibernate XML files and Java class files to map the object relation Mappings. Used Hibernate query language. Provided data persistence by object relational mapping solution via Hibernate for application save, update, delete operations. Implement single sign on and LDAP for login authentication. Developed the application using Spring MVC framework and IOC for dependency injection Used Hibernate ORM framework with spring framework for data persistence and transaction management. Worked on presentation layers using Angular JS, AJAX, Backbone JS, HTML, JSP, java script and XML. Created UI mock up screens and developed screens with JSP, CSS and custom tag libraries Created custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS Used REST Controllers to replace the existing operations layer which acts as bridge between business layer and the UI. Developed Web API using NodeJS and hosted on multiple load balanced API instances. Developed a framework to consume REST Webservices using Spring Rest libraries Used JUnit framework to write test cases for unit testing, Used Power mock & Mockito libraries to create mock objects to verify the service logic Developed Copy Tool - a standalone application using javaFx to copy data from one environment to another environment. Used Spring core annotations for Dependency injection and Spring MVC for REST API s and Spring Boot for micro services. Used Apache Camel and CXF in the JBoss Fuse ESB as the integration platform for SOA Services. Used Angular JS for data-binding, and Node JS for back-end support with APIs. Worked on JPA for persisting the objects into the system. Involved in finding the Memory Leaks and adjusting the JVM Heap Sizes and GC Parameters using JProfiler . . Worked on Axis implementation and used SOAPUI to test the SOAP. Worked on XML, XSD and XSLT to parse the request and create the new one based on the specification. Developed generic Java packages to produce and consume JMS messages through topics and queues in asynchronous message processing with guaranteed delivery. Used IBM MQ Series as the JMS provider. Utilized Core J EE design patterns such as Singleton and Data Access Object DAO in the implementation of the services. Responsible for writing SQL Queries and Procedures using DB . Involved in writing test plans, Test Cases and Test Scripts using quality center. Responsible for writing JUnit test cases and Peer level testing. Improved database performance by recognizing and rewriting slow queries. Build & Deployment in Websphere Application Server. Solid deployment experience on the UNIX platform. Created UML diagrams such as Class Diagrams and Sequence Diagrams using IBM Rational Rose. Environment Java . , J EE, JavaFx, JSP, Servlets, Spring . , WebSphere Application Server . , Oracle x, SOA, JMS, JMX, IBM MQ Series . , SOAPUI, Hibernate, XML, XSD, Spring, JUnit, Backbone JS, MS SQL Server , JPA, JTA, JDBC . , Maven, PL SQL Developer,DB , UNIX, Log J, UML and Agile, Web Logic . , Angular JS. JAVA J EE DEVELOPER October to September Bank of New York Mellon Jersey City, NJ Responsibilities Designed and developed UML Diagrams, Use cases, Class, Sequence and activity Diagrams. Worked in Agile methodology environment and participated in Scrum sessions in designing, developing, implementing and testing the distributed applications. Developed detailed design documents for all the functional modules of the application to be used by the testing team to setup test cases. Migration of Web Sphere application server to Tomcat application and used Eclipse IDE and deployed the application on TOMCAT server. Developed dynamic and interactive we based applications using HTML, CSS and JavaScript languages. Implemented Persistence layer using Hibernate to interact with the MySQL database and performed CRUD operations. Used web logic as the app server for deploying the applications and Used JDBC as the data access layer connecting to Oracle DB. Designed and Developed Web Services using technologies UDDI, WSDL, SOAP to communicate to the other modules. Used Maven automated build scripts to compile and package the application and implemented Log j for the project. Configured the XML file for spring security injection to ensure the back-end security by discriminating the role of users as well as access authority for the URIs and server-side assets. Implemented Spring MVC, which includes writing Controller classes for handling requests, processing form submissions and performed validations using Commons validator. Involved in developing interface for web pages like user registration, login, and registered access control for users depending on logins using HTML and JavaScript. Integrated Spring DAO for data access using Hibernate, used HQL and SQL for querying databases. Involved in Group presentations, Poster presentations and involved in bugs fixing and used Log j for writing int application and error logs. Used JDBC API to connect to the database and performed create, Read, Update and Delete operations to insert, retrieve drop and delete the data as per the requirement. Involved in project migration from Swing application to web integration using Struts web framework based on MVC architecture. Debugging for Stored Procedures in the application and using SQL queries to access Oracle, DB and SQL Server R . Written test cases using JUnit as a testing framework and responsible for preparing test scripts for system. Developed the code for asynchronous update to web page using JavaScript and Ajax. Created and consumed SOAP based Web services and used SOAPUI to send and receive XML data and Worked with JMS Queues for sending messages in point-to-point mode. Environment Java . , C, C , servlets, JSP, JMS, Struts, HTML , CSS, JavaScript, Oracle g, JUnit .x, SOAP, XML, weblogic Server x x, SQL, Tomcat x, Hibernate, Angular JS, Node JS, Spring, GIT, DB , SOAP, JUnit, PL SQL, MS SQL Server , Structs, Spring, DA , XML, Log j, Websphere Application Server . , SQL. JAVA J EE DEVELOPER March to August Prod apt Solutions Responsibilities Involved in creating Use cases, Class Diagrams and Interaction Diagrams. Designed the UML diagrams based on the OOAD principles. Developed EJB s and deployed them on IBM WebSphere Application server. Developed the Action classes, Action forms and Action Servlet for web tier. Developed the Business logic on the web tier using EJB Stateless Session beans. Developed business layer components using enterprise java beans EJB Developed the modules using Servlets, Java EE and JDBC for connecting with DB Database Implemented Multithreading feature for processing the multiple requests to achieve high performance. Implemented Web Services to integrate between different applications using REST services using JAX-WS. Implemented Singleton Design Pattern for database connectivity. Implemented c po connection properties for maintaining database connections. Hands-on writing Stored Procedures, functions, triggers, DDL, DML SQL queries. Created custom PL SQL procedures to read data from flat files to dump to DB database using SQL loader. Created tables, views, Types, triggers, complex join queries, stored procedures, and functions and modifications to existing database structure as required for addition of new features. Involved in Designing the Database Schema and writing the complex SQL queries. Accessed stored procedures and functions using JDBC Callable statements. Worked on IBM MQ to simplify integration and accelerate application deployment. Worked on web-based reporting system with HTML, JavaScript and JSP. Deployed the project in Linux environment. Used ANT build tool for compilation and generation of war file. Environment Java, J EE, HTML, PL SQL, Webservices, Multithreading, Hibernate, spring, JSPs, Eclipse, IBM WebSphere . , AXIS, Java Script, Subversion, IBM DB , Clarity, Maven, Rational Rose, Windows XP.",
  "preprocessed_text": "candidate contact summary year experience analysis design development implementation execution test case software application using java ee technology experienced java application development object oriented concept object oriented design ood object oriented analysis ooa object oriented programming oop implementation experienced developing rich user interface application using html cs javascript jquery angular j node j react j backbone j twitter bootstrap jquery mobile xml json follows web standard browser compatible experience working various sdlc methodology like agile scrum rup waterfall model experienced developing front end application using html html xml xhtml dhtml cs cs bootstrap saas less javascript dom jquery ajax json jsp expertise implementing persistence logic using jdbc jpa spring jdbc hibernate ibatis good understanding document object model dom dom function design implement web based content management utilizing xml jaxb dom xslt xpath javascript data generation presentation jsf strong experience javascript mvc design pattern angular j backbone j ember j experience server side scripting node j express j good knowledge javascript library used building reusable ui component like react j worked responsive design developed single isomorphic responsive website could served desktop tablet mobile user using react.js strong experience working javascript environment like mean mongo express angular node strong knowledge oops concept core java multithreading exception handling collection framework strong programming skill towards developing implementing complete n-tier web based application system using java ee technologies- jdbc jsp servlets enterprise java bean strut jsf spring soa implementation jax-rs jax-ws jndi xml jaxb json wsdl considerable knowledge developing unix shell script pearl script strong knowledge implementing ioc dependency injection feature various aspect spring framework good knowledge spring module like spring ioc spring mvc spring dao spring batch spring web flow spring security spring boot handful experience using oauth microservices security knowledge jms mq like apache kafka rabbit mq ibm mq active mq experience web application server tomcat web logic jboss good knowledge using restful framework like jax-rs framework soap web service using jax-ws apache cxf jersey good knowledge using amazon web service amazon ec amazon simple db amazon rds amazon elastic load balancing amazon sqs aws identity pivotal cloud ibm web sphere defined aws security group acted virtual firewall controlled traffic allowed reach one aws ec instance knowledge various docker component like docker engine hub machine compose docker registry extensively worked beginner patch docker engine experience using drool rule engine defining business rule validation experience using different version controlling tracking system git cv subversion rational clear case experienced working multiple database like oracle sql server nosql mongo db cassandra postgresql mysql db experience using jira bugzilla .x .x issue bug tracking tool experienced j-unit framework .x jasmine mockito developing test case using test driven development tdd approach log logging expertise using nosql database like mongo db apache cassandra distributed database management system writing query using cql experienced performing unit testing using junit mockito integration deployment application using tool ant jenkins maven debugging log j. experience backing database using mongo db backup facility ops manager experience using ant .x maven .x build automation in-depth knowledge pl sql experience constructing trigger table function user defined data type procedure etc good knowledge javascript task runner like gulp grunt magnification compilation unit testing strong knowledge javascript unit testing jasmine karma protractor mocha chai excellent verbal written communication presentation skill problem solving conflict resolution skill technical skill work experience sr java fullstack developer june present pg corporation-dinuba ca role responsibility involved complete sdlc software development life cycle application requirement analysis testing involved analysis design coding java ee environment implemented spring framework project build release management built application logic using python responsible creating custom general use module component extend element module core angular polymer j created maintain web page using html cs javascript jquery java ee also responsible designing web page including ajax control xml created managed microservices microservices used strategy gradually replace core monolithic application still adding business feature applied advanced html javascript cs deliver cutting-edge user interface using material design component polymer j functionality implemented using spring io spring boot microservices hibernate orm created injected spring service spring controller daos achieve dependency injection wire object business class followed agile methodology developing application created continuous integration build using jenkins deployed app server extensively used spring framework apache cxf producing soap rest web service part project development spring mvc framework ioc inversion control design pattern used relationship application component application open source developed using eclipse gwt gae cloud based backend data programmed event handling dojo widget accept user input validate responsible validating user action client side provided responsive feedback using polymer j angular predix component implementing webservices using json developed various generic javascript function used validation designed developed ui capability ee server based service using git source control version management focused test driven development tdd thereby creating detailed junit test every single piece functionality actually writing functionality used javascript testing framework jasmine karma communicated update daily scrum meeting using rally software used ajax json make asynchronous call project server fetch data fly extensively used ajax call send parameter fetch data based user-triggered event manipulated data send fetch data server get delete post request regularly worked mean stack used git daily mac o used sococo daily standups power programming team communication handled response data restful webservices using xml json jquery update ui interacted java controller jquery ajax json write read data back end system involved writing test plan test case test script using selenium designed developed test scenario test case test step various business service method covering positive negative testing used soapui testing web service inspection wsdl file generation soa envelope acceleration many common xml task encountered development web-service enabled application configured selenium webdriver testng maven created selenium automation script java using junit environment java jdk jee java jsp python weblogic application server ibm rad html cs angular polymer j ajax json node j react j microservices multithreading servlets jms jvm xml restful webservices jquery ui maven selenium apache cxf spring mvc javascript git soap mongo db ee aws jsp oracle eclipse junit agile methodology aws git jsp apache tomcat jasmine karma java full stack developer august may cerner corporation-kansas city mo role responsibility involved requirement analysis understanding requirement client flow application well application framework developed front end page application using html cs using less angular used less.js pre-processor create importable reusable style sheet processed server-side created controller view page along bootstrap html dynamic web application designed developed original prototype highly-complex interactive graphical web user-interface using standards-compliant javascript ecma script used aws sdk connection amazon bucket used object storage service store retrieve medium file related application document object model dom manipulation performed using javascript angular j involved developing angular j mvc framework single application development web application development backend system using angular cutting edge html cs technique used feature angular data binding ng-route routing custom filter custom directive meet business requirement used bootstrap component angular-ui like carousel collapse dropdown tab develop dynamic responsive web application used spring boot property like actuator health checker enhance micro service implementation deployed spring boot based microservices docker container using amazon ec container service using aws admin console developed restful service interface using spring boot underlying agent service api implemented restful web service used json response modulation rest service using jax-rs make generic team consume service designing developed microservices using mean stack node.js mongo db angular j elastic search private cloud open stack platform using express.js build prototype various required service scheduling logging notification service using third party node j based javascript library used express j fast assertive essential moderate web framework node j help manage server route used ajax express automatically ajax request handling middleware express framework configuration file node j used back end interact mongo db using mongoose connector used socket.io node server auto-reconnection disconnection support implemented mysql database storage system restful webservices used hibernate mapping relationship table entity class access update information database hibernate query language hql used perform various query database used hibernate core interface configuration transactional session criterion developed data model using hibernate pojo configuring hibernate persistence layer worked nosql database mongo db developed custom mongo db application specific client need used ajax json make asynchronous call project server fetch data fly used jenkins continuous deployment integration build release process dealt gulp perform magnification compilation bower maintain package dependency performs unit testing jasmine karma develops web service using restful api worked creation custom docker container image tagging pushing image involved running selenium automation script updating script according enhanced requirement using selenium webdriver done unit testing using junit designed implemented scalable secure cloud architecture based amazon web service aws configured aws ec instance bucket cloud formation service based business requirement different application involved behavior driven development using scrum framework agile methodology used maven tool building project managing dependency developed maintained automated regression test case selenium using java programming language implemented test automation web application front backend using selenium responsible creating request building test scenario web service project tested webservices xml soap restful service using soapui environment java ee spring mvc html xml cs less json javascript angular oracle tomcat bootstrap maven hibernate mysql multithreading eclipse aws sdk restful backbone j db cassandra ajax json node j express j aws microservices restful api jax-rs react j node j gulp npm aws apache kafka nosql mongo db jasmine karma selenium soap ui sr. java ee developer october july fedex corporation-memphis tn role responsibility implemented soa architecture using enterprise service bus esb configured business application xml bean definition file using spring worked hibernate orm created hibernate xml file java class file map object relation mapping used hibernate query language provided data persistence object relational mapping solution via hibernate application save update delete operation implement single sign ldap login authentication developed application using spring mvc framework ioc dependency injection used hibernate orm framework spring framework data persistence transaction management worked presentation layer using angular j ajax backbone j html jsp java script xml created ui mock screen developed screen jsp cs custom tag library created custom component using jquery javascript used maintenance application ms used rest controller replace existing operation layer act bridge business layer ui developed web api using nodejs hosted multiple load balanced api instance developed framework consume rest webservices using spring rest library used junit framework write test case unit testing used power mock mockito library create mock object verify service logic developed copy tool standalone application using javafx copy data one environment another environment used spring core annotation dependency injection spring mvc rest api spring boot micro service used apache camel cxf jboss fuse esb integration platform soa service used angular j data-binding node j back-end support apis worked jpa persisting object system involved finding memory leak adjusting jvm heap size gc parameter using jprofiler worked axis implementation used soapui test soap worked xml xsd xslt parse create new one based specification developed generic java package produce consume jms message topic queue asynchronous message processing guaranteed delivery used ibm mq series jms provider utilized core ee design pattern singleton data access object dao implementation service responsible writing sql query procedure using db involved writing test plan test case test script using quality center responsible writing junit test case peer level testing improved database performance recognizing rewriting slow query build deployment websphere application server solid deployment experience unix platform created uml diagram class diagram sequence diagram using ibm rational rose environment java ee javafx jsp servlets spring websphere application server oracle soa jms jmx ibm mq series soapui hibernate xml xsd spring junit backbone j m sql server jpa jta jdbc maven pl sql developer db unix log uml agile web logic angular j java ee developer october september bank new york mellon jersey city nj responsibility designed developed uml diagram use case class sequence activity diagram worked agile methodology environment participated scrum session designing developing implementing testing distributed application developed detailed design document functional module application used testing team setup test case migration web sphere application server tomcat application used eclipse ide deployed application tomcat server developed dynamic interactive based application using html cs javascript language implemented persistence layer using hibernate interact mysql database performed crud operation used web logic app server deploying application used jdbc data access layer connecting oracle db designed developed web service using technology uddi wsdl soap communicate module used maven automated build script compile package application implemented log project configured xml file spring security injection ensure back-end security discriminating role user well access authority uris server-side asset implemented spring mvc includes writing controller class handling request processing form submission performed validation using common validator involved developing interface web page like user registration login registered access control user depending logins using html javascript integrated spring dao data access using hibernate used hql sql querying database involved group presentation poster presentation involved bug fixing used log writing int application error log used jdbc api connect database performed create read update delete operation insert retrieve drop delete data per requirement involved project migration swing application web integration using strut web framework based mvc architecture debugging stored procedure application using sql query access oracle db sql server written test case using junit testing framework responsible preparing test script system developed code asynchronous update web using javascript ajax created consumed soap based web service used soapui send receive xml data worked jms queue sending message point-to-point mode environment java servlets jsp jms strut html cs javascript oracle junit .x soap xml weblogic server sql tomcat hibernate angular j node j spring git db soap junit pl sql m sql server structs spring da xml log websphere application server sql java ee developer march august prod apt solution responsibility involved creating use case class diagram interaction diagram designed uml diagram based ooad principle developed ejb deployed ibm websphere application server developed action class action form action servlet web tier developed business logic web tier using ejb stateless session bean developed business layer component using enterprise java bean ejb developed module using servlets java ee jdbc connecting db database implemented multithreading feature processing multiple request achieve high performance implemented web service integrate different application using rest service using jax-ws implemented singleton design pattern database connectivity implemented po connection property maintaining database connection hands-on writing stored procedure function trigger ddl dml sql query created custom pl sql procedure read data flat file dump db database using sql loader created table view type trigger complex join query stored procedure function modification existing database structure required addition new feature involved designing database schema writing complex sql query accessed stored procedure function using jdbc callable statement worked ibm mq simplify integration accelerate application deployment worked web-based reporting system html javascript jsp deployed project linux environment used ant build tool compilation generation war file environment java ee html pl sql webservices multithreading hibernate spring jsps eclipse ibm websphere axis java script subversion ibm db clarity maven rational rose window xp",
  "statistics": {
    "word_count": 3816,
    "unique_word_count": 1019,
    "avg_word_length": 4.883123689727463,
    "stopword_count": 730
  },
  "metadata": {
    "filename": "Candidate198.docx",
    "file_size": 50045,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:56.270947",
    "input_filename": "Candidate198.json"
  }
}