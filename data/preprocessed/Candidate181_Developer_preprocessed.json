{
  "id": "Candidate181_Developer",
  "raw_text": "Candidate 181\n502-378-5940 \nObjective\nAccomplished Java Developer and talented Software Engineer with demonstrated success in developing and maintaining business functionality, is seeking work in a challenging environment to promote individual as well as organizational growth. Proven expertise in maintenance of Web Based, Client-Server Architectures in areas like Telecom, Financial, Insurance etc. A self-starter and fit for working freely to accomplish points of reference and due dates. Proficient at organizing, following and finishing undertakings to achieve venture objectives.\nProfessional Summary\nAround 8 years of IT involvement in all phases of Software Development Life Cycle (SDLC), such as Planning, Analysis, Design, Implementation, Testing and Maintenance of various Client/Server Applications, Web Based applications using JAVA/J2EE technologies.\nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like Agile Methodology (Scrum, XP), Waterfall and followed Test Driven Development (TDD).\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC). \nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, JQuery, Ajax, Angular1.x, 2 and ReactJS\nExperience with Java 1.8 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. \nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, Spring Data and Spring Boot.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture.\nExpertise in working with the JavaScript, Ext JS, prototype JS and various MVC JavaScript frameworks AngularJS, Angular 2, Angular 4, BackboneJS, ReactJS, NodeJS, Hudson, Bamboo, Canvas and Jenkins.\nCreated and Configure Micro Service architecture for CDT Directory project and integrated with AngularJS application.\nHands-on experience on various AWS Cloud services like EC2, Route53, EBS, Auto Scaling, VPC, Cloud Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling. \nWorked with Java 1.8 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment. \nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nProficient in implementing various Java design patterns like MVC, Session Facade, Data Access Object (DAO), Factory, Singleton, Data Transfer Object and Front Controller.\nKnowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Apache Solr, Elastic Search, Oracle SQL PL/SQL, Teradata, SQL Server (MS SQL), DB2, MongoDB, Dynamo DB and Cassandra. Postgre-SQL and NoSQL DBMS and Oracle Performance Tuning.\nExpertise in designing POJO classes using Hibernate Annotations using EJB/JPA API.\nExperience in working with DevOps/Continuous integration tools like GITHUB, Jenkins, Nexus, Jira and SonarQube.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache ActiveMQ and Apache Camel as JMS provider. \nCore development experience for Groovy Grails restful web services.\nUsed Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExperience in developing core infrastructure in Python on Google App Engine.\nGood experience with Cassandra NoSQL Database.\nGood understanding of Openshift platform in managing Docker containers Kubernetes Clusters, Mesos.\nImplemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ, RabbitMQ and Kafka as a message queue. \nGood Skills in using Dojo Components and integrating back-end applications with AJAX driven web 2.0 front-end using OO JavaScript Framework.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExperience DOJO DOM manipulation, Event Handlers, Events.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nUnit testing with mocha, chai.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with Selenium, JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, secure FTP, SCP client for Microsoft Windows.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nGood experience with JIRA in issue tracking.\nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\nTechnical Skills\nProfessional Experience\nT-Mobile, Seattle, WA       \t\t\t \t\t\t                                               Mar’17 – Till Date\nRole: Full Stack Developer\nDescription: The project was to develop T-Mobile platform for web services that acts as a common gateway for APIs from different existing systems like Product and Offer Management, Billing, Sales, etc. The Java web services act as a one stop shop APIs for different T-Mobile Emerging Business Market Resellers, Clients and Partners looking to access T-Mobile APIs from their own systems. \nRoles & Responsibilities:\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.\nApplication is implemented using Agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues.\nInvolved in the development of user interface using HTML5, CSS3, JSP, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS and NodeJS. \nUtilized Java 1.8 features like Lambda expressions for collection, evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment. \nDesigned and developed application using various Spring framework modules like Spring IOC, Developed Controller Classes using Spring MVC, Spring AOP, Spring Boot, Spring Batch, Spring Data modules and handled security using Spring Security.\nExperience with the features of Angular 2 such as directives, modules and routing. Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals.\nDeveloped user interface using JSP, AJAX, Java, Saas, big data, cloud, POC, RBDMS, JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application.\nWorked on high level design / architecture, developed initial prototype demonstrating Google App Engine utilization and proof of concept which helped us in understand GAE and related technologies and how to use them efficiently.\nDeveloped RESTful web services to retrieve JSON documents related to customer and consumed SOAP based Web Services.\nImplemented Micro Services Architecture to divide the application into various sub modules.\nImplemented Restful Services with JAX-RS using Spring Boot and Micro Service Architecture.\nImplemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously.\nDesigned and Developed the UI Framework built using JSF with Prime Faces. Creating custom JSF Facelet tags for error handling, data tables, true/false markers etc. \nResponsible for maintaining and expanding AWS (Cloud Services) infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances.\nDesigned services to store and retrieve user data using Mongo DB database and communicated with remote servers using REST enabled Web Services on Jersey framework.\nExperience in Implementing API's in Java Multi-Threaded Environment\nDeveloped integration modules for disparate clients using Apache Camel. \nUsed Spring JDBC API to talk MySQL Database for Read and Write operations.\nDeveloped SOAP web services using JAX-WS API and REST web services using JAX-RS API.\nRan ad-hoc queries against Cassandra using CQL scripts.\nWorking experience with GAE's Google App Engine as PaaS involving App Engine APIs: Datastore, Cloud Storage, Bigtable, Blob-store, asynchronous services using Backend, Task Queues and Modules, and scheduled tasks using App Engine Cron Service and exposure to Amazon Web Services AWS.\nWorked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking.\nWrote scripts in JMeter to test the performance of the API's\nExperience in making the Devops pipelines using Openshift and Kubernetes for the Microservices Architecture.\nMaintained SVN repositories for DevOps environment: automation code and configuration.\nResponsible for writing the Design Specifications for the generic and application specific web services in Groovy n Grails.\nImplemented service layer on top of Cassandra using core Java, Datastax Java API and Restful API\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework.\nDeveloped BASH scripts to redact sensitive data from Apache access and error logs using a sed expression, deploy WAR files to environments in parallel.\nWorked with DROOLS engine for Spring Integration and validate business rule before executing in runtime.\nWeb application development using Groovy Grails JQuery AJAX and D3.js. \nUsed Hibernate API to talk MySQL Database for Read and Write operations\nEnsured idempotentcy of KRFS DevOps BASH scripts.\nExperience with NodeJS modules including Events, http, file system, MySQL. Wrote restful services on the server in NodeJS to listen to requests from devices. \nUsed PowerShell for DevOps in Windows-based systems.\nUnderstanding the role of Filenet and CSIF framework in the project. \nDeveloped Dash-Board to monitor and report Cache Coherence Servers. \nImplemented the validation, error handling, and caching framework with Oracle Coherence cache.\nCreated views using components of Prime Faces in XHTML files and configured JSF framework. \nDeveloped test scripts using JSF with Spring MVC to evaluate the performance of different modules of the application. \nImplemented persistence layer using Hibernate, created POJOs and mapped to databases Annotations.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB. \nUtilized kubernetes and docker for the runtime environment of the CI/CD system to build, test deploy.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ as a message queue.\nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nExperience in Test Driven Development (TDD) by identifying test case scenarios and unit testing the code using JUnit framework.\nUsed Gradle as build tool and deploying the application on WebSphere Application Server. Used Jenkins to schedule the tests based on the carrier and priority of the test case.\nUsed Docker in Container Management. Used GIT for version control across common source code used by developers.\nMonitored the error logs using log4j and fixed the problems. Wrote unit tests using mocha, chai.\nUsed JIRA tool for Issue/bug tracking, monitoring of work assignment in the system.\nUsed Intellij as an IDE for the Application development.\nEnvironment: Agile Methodology, Java 1.8, J2EE, JSP, XML, HTML5, CSS3, JavaScript, JSP, Bootstrap, JQuery, AJAX, AngularJS, ReactJS, NodeJS, Hibernate, Spring, Spring IOC, Spring AOP, Spring Batch, Spring Boot, Spring Security, Spring MVC, Oracle, MongoDB, Mockito, Gradle, WebSphere, Restful, Log4J, SOA, Amazon Web Services (AWS), Docker, Micro Services, Unix Shell Scripting, GIT, JIRA, Jenkins and Intellij.\nWells Fargo, Des Moines, IA\t\t\t\t\t                                                                 Aug’15 – Mar’17\nRole: Full Stack Developer\t\t\t\t\t\t\nDescription: Wells Fargo is a financial service provider dedicated to providing mortgage, financial, investments and insurance products to its customers. The HMC Website is designed and developed for Wells Fargo customers and Home Mortgage Consultants to access their functionality through online. Customers use HMC Websites to apply for mortgages and obtain home buying information through online. Each branch and individual HMC has opportunity to subscribe or modify to their own HMC Website to support their sales efforts through Site Admin and Wizard.\nRoles & Responsibilities:\nInvolved in all phases of the Software Development Life Cycle (SDLC) using Agile methodology.\nDeveloped the view-controller components using HTML5, CSS3, JavaScript, JQuery and Angular JS.\nCreated distributed Oracle coherence domains, configuration and system design based on oracle coherence.\nExperience in building end to end web applications using MEAN stack with Angular1.X, 2\nDeveloped user-friendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap.\nDeveloped HTML5 Mobile application with HTML5, Java, Jenkins, IIS, Java, Saas, big data, cloud, POC, RBDMS, Java Script, jQuery, JSON and RESTful web service.\nUsed Angular JS to create maintainable and testable single page application and Implemented two-way data binding and used ng-filters across the applications.\nDeveloped reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services. \nExpertise in using FIX Protocol API. Testing admin and application FIX messages like heartbeat, logon, logout, resend request, reject, sequence, pre-trade, trade and post-trade messages\nDeveloped the service layer, a layer that acts a bridge between the presentation layer and data access layer, with Spring Framework features like Spring JDBC and Spring ORM.\nUsed Apache camel integration for routing and transforming the data between two Applications using HTTP protocol.\nUsed Spring MVC Design Pattern to hold the UI data and serve the request and to send the response.\nImplemented Dependency Injection (IOC) feature of Spring Framework to inject beans into User Interface and AOP for Logging.\nConfigured and developed the web application using JSF and Hibernate to get the data from external clients on the status of technical support tickets. Used MySQL as the database.\nDeveloped Oracle PL/SQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms.\nMigrated legacy databases by using ETL tools. Developed custom PL/SQL packages for gaps found in the ETL tools.\nDeveloped web service API methods using PL/SQL, SQL/XML and XML to enable conferencing resellers to write their own clients to interface with our web conferencing platform.\nInvolved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications.\nDeveloped persistence Layer using Hibernate to persist the data and to manage the data.\nWorked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data, insert and update the data from the database. \nDeveloped Hibernate configuration files and queries and Implemented DAO classes.\nWeb Services were called using SOAP protocol, WSDL descriptor file, Universal Description, Discovery and Integration Registry (UDDI).\nCreated Stored Procedures, functions, views, indexes and constraints, triggers required SQL tuning to reduce the response time in the application.\nDeveloped the JSON structure for the data transfer in between the Goggle Web Toolkit (UI) and business tier.\nDeveloped Graphical User Interface (GUI) to display report data using JQuery in Cross-browser compatibility and Web Application Scaling.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nConfigured development environment using WebSphere application server for developer’s integration testing.\nExperience with integration frameworks like Apache Camel for enterprise integration.\nDeveloped test cases for Unit testing using JUnit.\nUsed Jenkins and Maven for automated builds and deployments.\nTo keep track of issues and tasks on individuals used JIRA ticketing system.\nUsed Spring Tool Suite (STS) for application development.\nEnvironment: Java, J2EE, HTML, CSS, JQuery, AngularJS, Spring IOC, Spring MVC, Spring AOP, Spring Security, Hibernate, REST, SOAP, JAX-RS, JAX-WS, WSDL, Pivotal Cloud Foundry(PCF), Oracle, JUnit, Maven, Jenkins, JIRA, Apache Camel, WebSphere Application Server and STS IDE.\nClient: Allstate Insurance, Chicago, IL\t\t                                                                                               Oct’13 – Jun’15\nRole: JAVA Developer\nDescription: The Allstate Corporation is the largest publicly held personal lines property and casualty insurer in America. The project involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim.\nRoles & Responsibilities:\nWorked on design and implementation of Market Place application and involved in various phases of SDLC.\nWorked in Agile development environment and participated in SCRUM meetings throughout the life cycle of project.\nRole based application monitoring and recording audit history, activity of different roles accessing the site\nDeliver technical solutions utilizing defined technology stack.\nImplemented the front end using HTML, CSS, JavaScript and AngularJS was used to develop declarative User Interface.\nUsed JQuery, AJAX to interact with Java Servlet.\nIntegration of SEARS Product Management REST API's\nUsed Struts, and AJAX for highly interactive and graphic user interface.\nImplement JUnit test cases for Struts/Spring components\nDeveloped Action classes, Action Forms and Struts Configuration file to handle required UI actions, JSPs for Views and used HTML in web page component development.\nDeveloped Server-side presentation layer using Struts MVC Framework and designed and developed Application based on Spring framework using MVC design patterns.\nUsed Spring IOC for Dependency Injection and used Spring JDBC for interacting with database.\nUsed various design patterns like Business delegate, Singleton, Factory and DAO.\nPerformed Inheritance based Hibernate mappings in tables to simplify the data in Hibernate.\nInvolved in implementation of web services (top-down and bottom-up) using SOAP services.\nInteract with offshore team to coordinate and guide for the development happening in offshore.\nJUnit is used to perform the Unit Test Cases.\nUsed Oracle database for SQL, PL/SQL scripts, stored procedures, functions, triggers, Oracle forms/Reports.\nPerformance Tuning and Optimization with Java Performance Analysis Tool using Load Runner.\nWorked on Installing and configured WebLogic Application Server and Maven Build Tool. \nMade use of CVS for checkout and check in operations. \nEnvironment: Java, J2EE, Struts, Hibernate, JSP, Angular JS, HTML, XML, XSL/XSLT, JavaScript, AJAX, Spring MVC, SOAP, Oracle, CVS, J Profiler, Java Performance Analysis Tool, Eclipse, Maven, WebLogic.\nClient: Target, Minneapolis, MN                                                          \t\t                                      Sep’12 – July’13\nRole:  Java Developer\t\t\t\t\t\nDescription: This is an application developed with multiple web services, used for tracking the status of a purchase order by accessing three different databases. Order will be collected/placed through another web-based application. The OMS assign the order to the department. Once order is placed in the web-based application, from that moment user will be able to track the status using a track tool application. In each step of the process, different departments involved are using different tools and different database. This track tool is designed and developed in such a way that, it has robustness and flexibility to access all different DB used for tracking the status.\nResponsibilities:\nInvolved in various stages of Software Development Life Cycle (SDLC) deliverables of the project using the Agile methodology.\nDeveloped International Error Correction Screens using custom front-end forms using HTML, CSS, JavaScript, JQuery and AJAX.\nGathered and clarified requirements with business analyst to feed into high-level customization design, development and installation phases.\nUsed Spring Framework for dependency injection for Action classes using Application Context XML file.\nInvolved in implementation of MVC pattern using JSP and Spring Controller.\nDeveloped business objects using Spring IOC, Spring MVC and Spring AOP.\nImplemented MVC architecture using JSP Spring, Hibernate and used Spring Framework to initialize managed beans and services.\nImplemented SOA architecture with Web Services using SOAP, JAX-WS, WSDL, UDDI and XML.\nUsed Struts Framework, Tag Libraries to implement J2EE design patterns (MVC).\nDeveloped user interface using JSP, Struts published validation framework to support client side and Server-side validation.\nUsed Collections for Model classes in the DAO layer (Data Access Object) Involved in modifying some changes in DAO layer using Hibernate.\nCreated mappings among the relations and written SQL queries using Hibernate.\nImplemented Concurrency, Exception Handling and Collections whenever necessary.\nUsed Entity Beans to persist the data into IBM DB2 database like database access components, Creating Schemas and Tables.\nUsed SQL to perform data mapping and backend testing, also documented all the SQL queries for future testing purpose.\nCreated process flow for deploying application in Web Sphere application server.\nManaged build, reporting and documentation from the project information using Maven Tool and SVN for version control.\nUsed Jenkins for Continuous Integration.\nUsed JUnit for testing and used JIRA for tracking bugs.\nResponsible for the dealing with the problem, bug fixing and troubleshooting.\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, Ajax, Spring, Spring IOC, Spring AOP, Spring MVC, Hibernate, REST, SOAP, XML, XSLT, Eclipse, PL/SQL, JUnit, Maven Build Tool, IBM DB2, JIRA, Jenkins, SVN and IBM Web Sphere.\nClient: Radiant Technologies              \t                      \t                                                                   Jan’11 – Aug’12\nRole: Java/J2EE Developer\t\t\t\t\nDescription: The application is an enhancement of our Internet Financial Application Framework to provide the Internet financial facility for customers. Using this system retail and corporate customers can do Web transactions securely, process customer requests like claim a reporting, view all insurance policies, insurance payments etc. The application also facilitates second level authentication for paying the utility bills through web. \nRoles & Responsibilities:\nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use Case Transaction diagrams.\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nCreated user-friendly interface using HTML, CSS, JSP and JavaScript for client-side validation.\nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL.\nImplemented Multithreading and Collections in java code.\nUsed AJAX for dynamically updating the content\nUsed Eclipse as IDE tool for creating Servlet, JSP, and XML.\nDeveloped various java business classes for handling different functions.\nImplemented Business processes such as user authentication, Transfer of Service using Session EJBs\nThe application was deployed on the JBoss.\nInvolved in build and deploying the application using ANT.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nDeveloped PL/SQL queries, Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries.\nDeveloped JUnit test cases for all the developed modules. Used SVN as version control\nMonitored the logs using Log4j and fixed the problem\nEnvironment: Java, J2EE, JSP, Struts, JNDI, DB2, HTML, CSS, EJB, XML, DOM, ANT, AJAX, JUnit, Eclipse, JBoss, MYSQL, LOG4J, SVN.\nClient: Verizon              \t                      \t          \t\t\t\t\t\t         Jun’09 – Dec’10\nRole: Trainee Software Engineer \t\t\t\t\nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using the Internet to interact with the system from any part and allow the customers to buy insurance online. Also, used by the HR department to manage the vast information generated due to massive business operations. The main objective is to help in tracking HR related issues, optimize and increase the productivity.\nRoles & Responsibilities:\nTechnical responsibilities included high level architecture and rapid development \nDesign architecture following J2EE MVC framework \nDeveloped interfaces using HTML, JSP pages and Struts -Presentation View \nDeveloped and implemented Servlets running under JBoss\nUsed J2EE design patterns and Data Access Object (DAO) for the business tier and integration Tier layer of the project \nUsed Java Message Service (JMS) for reliable and asynchronous exchange of important information, such as loan status report, between the clients and the bank\nDesigned and developed Message driven beans that consumed the messages from the Java message queue\nImplemented CMP entity beans for persistence of business logic implementation\nDevelopment of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement\nInspection/Review of quality deliverables such as Design Documents.\nWrote SQL Scripts, Stored procedures and SQL Loader to load reference data.   \nEnvironment: J2EE (Java Servlets, JSP, Struts), MVC Framework, Apache Tomcat, Oracle, JMS, SQL, HTML, JDBC, EJB",
  "cleaned_text": "Candidate Objective Accomplished Java Developer and talented Software Engineer with demonstrated success in developing and maintaining business functionality, is seeking work in a challenging environment to promote individual as well as organizational growth. Proven expertise in maintenance of Web Based, Client-Server Architectures in areas like Telecom, Financial, Insurance etc. A self-starter and fit for working freely to accomplish points of reference and due dates. Proficient at organizing, following and finishing undertakings to achieve venture objectives. Professional Summary Around years of IT involvement in all phases of Software Development Life Cycle SDLC , such as Planning, Analysis, Design, Implementation, Testing and Maintenance of various Client Server Applications, Web Based applications using JAVA J EE technologies. Well versed with complete Software Development Life Cycle SDLC using various methodologies like Agile Methodology Scrum, XP , Waterfall and followed Test Driven Development TDD . Developed Web-based enterprise applications using Java J EE, Core Java, Servlets, JDBC, Hibernate, Web Services SOAP and REST and MVC Framework Struts, Spring MVC . Expertise in developing UI using JSP, HTML , CSS , Java Script, Bootstrap, JQuery, Ajax, Angular .x, and ReactJS Experience with Java . features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. Hands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, Spring Data and Spring Boot. Experience in developing XML based Web Services SOAP UDDI WSDL using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration. Experience in developing the application with Service Oriented Architecture SOA and Micro Services Architecture. Expertise in working with the JavaScript, Ext JS, prototype JS and various MVC JavaScript frameworks AngularJS, Angular , Angular , BackboneJS, ReactJS, NodeJS, Hudson, Bamboo, Canvas and Jenkins. Created and Configure Micro Service architecture for CDT Directory project and integrated with AngularJS application. Hands-on experience on various AWS Cloud services like EC , Route , EBS, Auto Scaling, VPC, Cloud Formation, S , RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling. Worked with Java . Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment. Expert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics. Proficient in implementing various Java design patterns like MVC, Session Facade, Data Access Object DAO , Factory, Singleton, Data Transfer Object and Front Controller. Knowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Apache Solr, Elastic Search, Oracle SQL PL SQL, Teradata, SQL Server MS SQL , DB , MongoDB, Dynamo DB and Cassandra. Postgre-SQL and NoSQL DBMS and Oracle Performance Tuning. Expertise in designing POJO classes using Hibernate Annotations using EJB JPA API. Experience in working with DevOps Continuous integration tools like GITHUB, Jenkins, Nexus, Jira and SonarQube. Experience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere. Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache ActiveMQ and Apache Camel as JMS provider. Core development experience for Groovy Grails restful web services. Used Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services. Experience in developing core infrastructure in Python on Google App Engine. Good experience with Cassandra NoSQL Database. Good understanding of Openshift platform in managing Docker containers Kubernetes Clusters, Mesos. Implemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services. Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ, RabbitMQ and Kafka as a message queue. Good Skills in using Dojo Components and integrating back-end applications with AJAX driven web . front-end using OO JavaScript Framework. Experienced in using Eureka Servers while deploying in EC . Hands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon. Experience DOJO DOM manipulation, Event Handlers, Events. Strong experience in database design using PL SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data. Unit testing with mocha, chai. Expertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ. Proficient in Continuous Integration and Continuous Deployment tools like Jenkins. Experience with Selenium, JUnit and Mockito in developing test cases and Log J in determining application functionality. Having Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server. Experience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, secure FTP, SCP client for Microsoft Windows. Experience working with version control tools like Git Hub, Subversion SVN and CVS. Good experience with JIRA in issue tracking. Experience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments. Technical Skills Professional Experience T-Mobile, Seattle, WA Mar Till Date Role Full Stack Developer Description The project was to develop T-Mobile platform for web services that acts as a common gateway for APIs from different existing systems like Product and Offer Management, Billing, Sales, etc. The Java web services act as a one stop shop APIs for different T-Mobile Emerging Business Market Resellers, Clients and Partners looking to access T-Mobile APIs from their own systems. Roles & Responsibilities Involved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application. Application is implemented using Agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues. Involved in the development of user interface using HTML , CSS , JSP, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS and NodeJS. Utilized Java . features like Lambda expressions for collection, evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment. Designed and developed application using various Spring framework modules like Spring IOC, Developed Controller Classes using Spring MVC, Spring AOP, Spring Boot, Spring Batch, Spring Data modules and handled security using Spring Security. Experience with the features of Angular such as directives, modules and routing. Highly used Angular router to build single page application for navigate through the different status and multiple modals. Developed user interface using JSP, AJAX, Java, Saas, big data, cloud, POC, RBDMS, JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application. Worked on high level design architecture, developed initial prototype demonstrating Google App Engine utilization and proof of concept which helped us in understand GAE and related technologies and how to use them efficiently. Developed RESTful web services to retrieve JSON documents related to customer and consumed SOAP based Web Services. Implemented Micro Services Architecture to divide the application into various sub modules. Implemented Restful Services with JAX-RS using Spring Boot and Micro Service Architecture. Implemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously. Designed and Developed the UI Framework built using JSF with Prime Faces. Creating custom JSF Facelet tags for error handling, data tables, true false markers etc. Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC instances. Designed services to store and retrieve user data using Mongo DB database and communicated with remote servers using REST enabled Web Services on Jersey framework. Experience in Implementing API s in Java Multi-Threaded Environment Developed integration modules for disparate clients using Apache Camel. Used Spring JDBC API to talk MySQL Database for Read and Write operations. Developed SOAP web services using JAX-WS API and REST web services using JAX-RS API. Ran ad-hoc queries against Cassandra using CQL scripts. Working experience with GAE s Google App Engine as PaaS involving App Engine APIs Datastore, Cloud Storage, Bigtable, Blob-store, asynchronous services using Backend, Task Queues and Modules, and scheduled tasks using App Engine Cron Service and exposure to Amazon Web Services AWS. Worked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking. Wrote scripts in JMeter to test the performance of the API s Experience in making the Devops pipelines using Openshift and Kubernetes for the Microservices Architecture. Maintained SVN repositories for DevOps environment automation code and configuration. Responsible for writing the Design Specifications for the generic and application specific web services in Groovy n Grails. Implemented service layer on top of Cassandra using core Java, Datastax Java API and Restful API Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework. Developed BASH scripts to redact sensitive data from Apache access and error logs using a sed expression, deploy WAR files to environments in parallel. Worked with DROOLS engine for Spring Integration and validate business rule before executing in runtime. Web application development using Groovy Grails JQuery AJAX and D .js. Used Hibernate API to talk MySQL Database for Read and Write operations Ensured idempotentcy of KRFS DevOps BASH scripts. Experience with NodeJS modules including Events, file system, MySQL. Wrote restful services on the server in NodeJS to listen to requests from devices. Used PowerShell for DevOps in Windows-based systems. Understanding the role of Filenet and CSIF framework in the project. Developed Dash-Board to monitor and report Cache Coherence Servers. Implemented the validation, error handling, and caching framework with Oracle Coherence cache. Created views using components of Prime Faces in XHTML files and configured JSF framework. Developed test scripts using JSF with Spring MVC to evaluate the performance of different modules of the application. Implemented persistence layer using Hibernate, created POJOs and mapped to databases Annotations. Experience in writing complex PL SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB. Utilized kubernetes and docker for the runtime environment of the CI CD system to build, test deploy. Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ as a message queue. Developed test cases for unit testing in the integration layer using Mockito framework. Experience in Test Driven Development TDD by identifying test case scenarios and unit testing the code using JUnit framework. Used Gradle as build tool and deploying the application on WebSphere Application Server. Used Jenkins to schedule the tests based on the carrier and priority of the test case. Used Docker in Container Management. Used GIT for version control across common source code used by developers. Monitored the error logs using log j and fixed the problems. Wrote unit tests using mocha, chai. Used JIRA tool for Issue bug tracking, monitoring of work assignment in the system. Used Intellij as an IDE for the Application development. Environment Agile Methodology, Java . , J EE, JSP, XML, HTML , CSS , JavaScript, JSP, Bootstrap, JQuery, AJAX, AngularJS, ReactJS, NodeJS, Hibernate, Spring, Spring IOC, Spring AOP, Spring Batch, Spring Boot, Spring Security, Spring MVC, Oracle, MongoDB, Mockito, Gradle, WebSphere, Restful, Log J, SOA, Amazon Web Services AWS , Docker, Micro Services, Unix Shell Scripting, GIT, JIRA, Jenkins and Intellij. Wells Fargo, Des Moines, IA Aug Mar Role Full Stack Developer Description Wells Fargo is a financial service provider dedicated to providing mortgage, financial, investments and insurance products to its customers. The HMC Website is designed and developed for Wells Fargo customers and Home Mortgage Consultants to access their functionality through online. Customers use HMC Websites to apply for mortgages and obtain home buying information through online. Each branch and individual HMC has opportunity to subscribe or modify to their own HMC Website to support their sales efforts through Site Admin and Wizard. Roles & Responsibilities Involved in all phases of the Software Development Life Cycle SDLC using Agile methodology. Developed the view-controller components using HTML , CSS , JavaScript, JQuery and Angular JS. Created distributed Oracle coherence domains, configuration and system design based on oracle coherence. Experience in building end to end web applications using MEAN stack with Angular .X, Developed user-friendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap. Developed HTML Mobile application with HTML , Java, Jenkins, IIS, Java, Saas, big data, cloud, POC, RBDMS, Java Script, jQuery, JSON and RESTful web service. Used Angular JS to create maintainable and testable single page application and Implemented two-way data binding and used ng-filters across the applications. Developed reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services. Expertise in using FIX Protocol API. Testing admin and application FIX messages like heartbeat, logon, logout, resend request, reject, sequence, pre-trade, trade and post-trade messages Developed the service layer, a layer that acts a bridge between the presentation layer and data access layer, with Spring Framework features like Spring JDBC and Spring ORM. Used Apache camel integration for routing and transforming the data between two Applications using HTTP protocol. Used Spring MVC Design Pattern to hold the UI data and serve the request and to send the response. Implemented Dependency Injection IOC feature of Spring Framework to inject beans into User Interface and AOP for Logging. Configured and developed the web application using JSF and Hibernate to get the data from external clients on the status of technical support tickets. Used MySQL as the database. Developed Oracle PL SQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms. Migrated legacy databases by using ETL tools. Developed custom PL SQL packages for gaps found in the ETL tools. Developed web service API methods using PL SQL, SQL XML and XML to enable conferencing resellers to write their own clients to interface with our web conferencing platform. Involved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services. Developed applications using Application Lifecycle Management to deliver reliable applications. Developed persistence Layer using Hibernate to persist the data and to manage the data. Worked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data, insert and update the data from the database. Developed Hibernate configuration files and queries and Implemented DAO classes. Web Services were called using SOAP protocol, WSDL descriptor file, Universal Description, Discovery and Integration Registry UDDI . Created Stored Procedures, functions, views, indexes and constraints, triggers required SQL tuning to reduce the response time in the application. Developed the JSON structure for the data transfer in between the Goggle Web Toolkit UI and business tier. Developed Graphical User Interface GUI to display report data using JQuery in Cross-browser compatibility and Web Application Scaling. GUI design and development using Java Swing, JFC Used for open source web testing. Configured development environment using WebSphere application server for developers integration testing. Experience with integration frameworks like Apache Camel for enterprise integration. Developed test cases for Unit testing using JUnit. Used Jenkins and Maven for automated builds and deployments. To keep track of issues and tasks on individuals used JIRA ticketing system. Used Spring Tool Suite STS for application development. Environment Java, J EE, HTML, CSS, JQuery, AngularJS, Spring IOC, Spring MVC, Spring AOP, Spring Security, Hibernate, REST, SOAP, JAX-RS, JAX-WS, WSDL, Pivotal Cloud Foundry PCF , Oracle, JUnit, Maven, Jenkins, JIRA, Apache Camel, WebSphere Application Server and STS IDE. Client Allstate Insurance, Chicago, IL Oct Jun Role JAVA Developer Description The Allstate Corporation is the largest publicly held personal lines property and casualty insurer in America. The project involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim. Roles & Responsibilities Worked on design and implementation of Market Place application and involved in various phases of SDLC. Worked in Agile development environment and participated in SCRUM meetings throughout the life cycle of project. Role based application monitoring and recording audit history, activity of different roles accessing the site Deliver technical solutions utilizing defined technology stack. Implemented the front end using HTML, CSS, JavaScript and AngularJS was used to develop declarative User Interface. Used JQuery, AJAX to interact with Java Servlet. Integration of SEARS Product Management REST API s Used Struts, and AJAX for highly interactive and graphic user interface. Implement JUnit test cases for Struts Spring components Developed Action classes, Action Forms and Struts Configuration file to handle required UI actions, JSPs for Views and used HTML in web page component development. Developed Server-side presentation layer using Struts MVC Framework and designed and developed Application based on Spring framework using MVC design patterns. Used Spring IOC for Dependency Injection and used Spring JDBC for interacting with database. Used various design patterns like Business delegate, Singleton, Factory and DAO. Performed Inheritance based Hibernate mappings in tables to simplify the data in Hibernate. Involved in implementation of web services top-down and bottom-up using SOAP services. Interact with offshore team to coordinate and guide for the development happening in offshore. JUnit is used to perform the Unit Test Cases. Used Oracle database for SQL, PL SQL scripts, stored procedures, functions, triggers, Oracle forms Reports. Performance Tuning and Optimization with Java Performance Analysis Tool using Load Runner. Worked on Installing and configured WebLogic Application Server and Maven Build Tool. Made use of CVS for checkout and check in operations. Environment Java, J EE, Struts, Hibernate, JSP, Angular JS, HTML, XML, XSL XSLT, JavaScript, AJAX, Spring MVC, SOAP, Oracle, CVS, J Profiler, Java Performance Analysis Tool, Eclipse, Maven, WebLogic. Client Target, Minneapolis, MN Sep July Role Java Developer Description This is an application developed with multiple web services, used for tracking the status of a purchase order by accessing three different databases. Order will be collected placed through another web-based application. The OMS assign the order to the department. Once order is placed in the web-based application, from that moment user will be able to track the status using a track tool application. In each step of the process, different departments involved are using different tools and different database. This track tool is designed and developed in such a way that, it has robustness and flexibility to access all different DB used for tracking the status. Responsibilities Involved in various stages of Software Development Life Cycle SDLC deliverables of the project using the Agile methodology. Developed International Error Correction Screens using custom front-end forms using HTML, CSS, JavaScript, JQuery and AJAX. Gathered and clarified requirements with business analyst to feed into high-level customization design, development and installation phases. Used Spring Framework for dependency injection for Action classes using Application Context XML file. Involved in implementation of MVC pattern using JSP and Spring Controller. Developed business objects using Spring IOC, Spring MVC and Spring AOP. Implemented MVC architecture using JSP Spring, Hibernate and used Spring Framework to initialize managed beans and services. Implemented SOA architecture with Web Services using SOAP, JAX-WS, WSDL, UDDI and XML. Used Struts Framework, Tag Libraries to implement J EE design patterns MVC . Developed user interface using JSP, Struts published validation framework to support client side and Server-side validation. Used Collections for Model classes in the DAO layer Data Access Object Involved in modifying some changes in DAO layer using Hibernate. Created mappings among the relations and written SQL queries using Hibernate. Implemented Concurrency, Exception Handling and Collections whenever necessary. Used Entity Beans to persist the data into IBM DB database like database access components, Creating Schemas and Tables. Used SQL to perform data mapping and backend testing, also documented all the SQL queries for future testing purpose. Created process flow for deploying application in Web Sphere application server. Managed build, reporting and documentation from the project information using Maven Tool and SVN for version control. Used Jenkins for Continuous Integration. Used JUnit for testing and used JIRA for tracking bugs. Responsible for the dealing with the problem, bug fixing and troubleshooting. Environment Java, J EE, HTML, CSS, JavaScript, JQuery, Ajax, Spring, Spring IOC, Spring AOP, Spring MVC, Hibernate, REST, SOAP, XML, XSLT, Eclipse, PL SQL, JUnit, Maven Build Tool, IBM DB , JIRA, Jenkins, SVN and IBM Web Sphere. Client Radiant Technologies Jan Aug Role Java J EE Developer Description The application is an enhancement of our Internet Financial Application Framework to provide the Internet financial facility for customers. Using this system retail and corporate customers can do Web transactions securely, process customer requests like claim a reporting, view all insurance policies, insurance payments etc. The application also facilitates second level authentication for paying the utility bills through web. Roles & Responsibilities Involved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use Case Transaction diagrams. Developed the application using Struts Framework that leverages classical Model View Controller MVC architecture. Created user-friendly interface using HTML, CSS, JSP and JavaScript for client-side validation. Designed the user interfaces using JSPs, developed custom tags, and used JSTL. Implemented Multithreading and Collections in java code. Used AJAX for dynamically updating the content Used Eclipse as IDE tool for creating Servlet, JSP, and XML. Developed various java business classes for handling different functions. Implemented Business processes such as user authentication, Transfer of Service using Session EJBs The application was deployed on the JBoss. Involved in build and deploying the application using ANT. Wrote SQL for JDBC prepared statements to retrieve the data from database. Developed PL SQL queries, Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries. Developed JUnit test cases for all the developed modules. Used SVN as version control Monitored the logs using Log j and fixed the problem Environment Java, J EE, JSP, Struts, JNDI, DB , HTML, CSS, EJB, XML, DOM, ANT, AJAX, JUnit, Eclipse, JBoss, MYSQL, LOG J, SVN. Client Verizon Jun Dec Role Trainee Software Engineer Description This project was designed to build a Common Access Platform for customers and insurance agents using the Internet to interact with the system from any part and allow the customers to buy insurance online. Also, used by the HR department to manage the vast information generated due to massive business operations. The main objective is to help in tracking HR related issues, optimize and increase the productivity. Roles & Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J EE MVC framework Developed interfaces using HTML, JSP pages and Struts -Presentation View Developed and implemented Servlets running under JBoss Used J EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Used Java Message Service JMS for reliable and asynchronous exchange of important information, such as loan status report, between the clients and the bank Designed and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement Inspection Review of quality deliverables such as Design Documents. Wrote SQL Scripts, Stored procedures and SQL Loader to load reference data. Environment J EE Java Servlets, JSP, Struts , MVC Framework, Apache Tomcat, Oracle, JMS, SQL, HTML, JDBC, EJB",
  "preprocessed_text": "candidate objective accomplished java developer talented software engineer demonstrated success developing maintaining business functionality seeking work challenging environment promote individual well organizational growth proven expertise maintenance web based client-server architecture area like telecom financial insurance etc self-starter fit working freely accomplish point reference due date proficient organizing following finishing undertaking achieve venture objective professional summary around year involvement phase software development life cycle sdlc planning analysis design implementation testing maintenance various client server application web based application using java ee technology well versed complete software development life cycle sdlc using various methodology like agile methodology scrum xp waterfall followed test driven development tdd developed web-based enterprise application using java ee core java servlets jdbc hibernate web service soap rest mvc framework strut spring mvc expertise developing ui using jsp html cs java script bootstrap jquery ajax angular .x reactjs experience java feature lambda expression making anonymous inline function call using functional interface make code readable concise hand experience different spring framework module like spring core spring aop spring mvc spring batch spring security spring data spring boot experience developing xml based web service soap uddi wsdl using top bottom approach rest based service jax-rs jersey spring integration experience developing application service oriented architecture soa micro service architecture expertise working javascript ext j prototype j various mvc javascript framework angularjs angular angular backbonejs reactjs nodejs hudson bamboo canvas jenkins created configure micro service architecture cdt directory project integrated angularjs application hands-on experience various aws cloud service like ec route eb auto scaling vpc cloud formation rds amazon elastic load balancing iam cloud watch service aws infrastructure like dynamo db sqs emr focusing high-availability fault tolerance auto-scaling worked java stream api parallel stream api enabling parallel processing collection distributed environment expert core java strong understanding garbage collector collection multithreading event handling exception handling generic proficient implementing various java design pattern like mvc session facade data access object dao factory singleton data transfer object front controller knowledgeable rdbms concept like writing sql query working experience relational dbms like mysql apache solr elastic search oracle sql pl sql teradata sql server m sql db mongodb dynamo db cassandra postgre-sql nosql dbms oracle performance tuning expertise designing pojo class using hibernate annotation using ejb jpa api experience working devops continuous integration tool like jenkins nexus jira sonarqube experience application server like web logic jboss apache tomcat ibm web sphere experienced jms messaging exchange information reliable asynchronous way enterprise application used apache activemq apache camel jms provider core development experience groovy grail restful web service used apache kafka integration data processing spring multi-threaded message consumption worked zookeeper maintain service experience developing core infrastructure python google app engine good experience cassandra nosql database good understanding openshift platform managing docker container kubernetes cluster mesos implemented continuous delivery pipeline docker jenkins aws amis run war ami deploy job jenkins brew master instance reduces time deployment micro service experienced implementation jms exchange information reliable channel asynchronous way using activemq rabbitmq kafka message queue good skill using dojo component integrating back-end application ajax driven web front-end using oo javascript framework experienced using eureka server deploying ec hand experience netflix cloud fall-back technology like eureka hystrix ribbon experience dojo dom manipulation event handler event strong experience database design using pl sql write table stored procedure function trigger indexer proficiency writing complex query retrieve data unit testing mocha chai expertise using various ide tool like spring tool suite rad eclipse intellij proficient continuous integration continuous deployment tool like jenkins experience selenium junit mockito developing test case log determining application functionality experience unix linux python shell scripting deployment application server experience writing shell scripting deployment process expertise sharing file linux box window using winscp secure ftp scp client microsoft window experience working version control tool like git hub subversion svn cv good experience jira issue tracking experience build automation tool like gradle ant maven build deployment different environment technical skill professional experience t-mobile seattle wa mar till role full stack developer description project develop t-mobile platform web service act common gateway apis different existing system like product offer management billing sale etc java web service act one stop shop apis different t-mobile emerging business market resellers client partner looking access t-mobile apis system role responsibility involved analysis specification design implementation testing phase software development life cycle sdlc used agile methodology scrum developing application application implemented using agile methodology daily scrum meeting understand status resolve issue involved development user interface using html cs jsp javascript bootstrap jquery angular j reactjs nodejs utilized java feature like lambda expression collection evaluation comparing data stream api bulk data operation collection would increase performance application parallel operation collection effective sorting mechanism change sequential stream flow thread session establishment designed developed application using various spring framework module like spring ioc developed controller class using spring mvc spring aop spring boot spring batch spring data module handled security using spring security experience feature angular directive module routing highly used angular router build single application navigate different status multiple modal developed user interface using jsp ajax java saas big data cloud poc rbdms jsp tag library strut tag library simplify complexity application worked high level design architecture developed initial prototype demonstrating google app engine utilization proof concept helped u understand gae related technology use efficiently developed restful web service retrieve json document related customer consumed soap based web service implemented micro service architecture divide application various sub module implemented restful service jax-rs using spring boot micro service architecture implemented batch job deal large number chunk using spring batch framework execute similar job simultaneously designed developed ui framework built using jsf prime face creating custom jsf facelet tag error handling data table true false marker etc responsible maintaining expanding aws cloud service infrastructure using aws stack especially worked database setup maintenance created aws ec instance designed service store retrieve user data using mongo db database communicated remote server using rest enabled web service jersey framework experience implementing api java multi-threaded environment developed integration module disparate client using apache camel used spring jdbc api talk mysql database read write operation developed soap web service using jax-ws api rest web service using jax-rs api ran ad-hoc query cassandra using cql script working experience gae google app engine paas involving app engine apis datastore cloud storage bigtable blob-store asynchronous service using backend task queue module scheduled task using app engine cron service exposure amazon web service aws worked nosql cassandra store retrieve update manage detail ethernet provisioning customer order tracking wrote script jmeter test performance api experience making devops pipeline using openshift kubernetes microservices architecture maintained svn repository devops environment automation code configuration responsible writing design specification generic application specific web service groovy grail implemented service layer top cassandra using core java datastax java api restful api used spring core annotation dependency injection used apache camel integrate spring framework developed bash script redact sensitive data apache access error log using sed expression deploy war file environment parallel worked drool engine spring integration validate business rule executing runtime web application development using groovy grail jquery ajax .js used hibernate api talk mysql database read write operation ensured idempotentcy krfs devops bash script experience nodejs module including event file system mysql wrote restful service server nodejs listen request device used powershell devops windows-based system understanding role filenet csif framework project developed dash-board monitor report cache coherence server implemented validation error handling caching framework oracle coherence cache created view using component prime face xhtml file configured jsf framework developed test script using jsf spring mvc evaluate performance different module application implemented persistence layer using hibernate created pojos mapped database annotation experience writing complex pl sql query using join stored procedure function trigger cursor index oracle db utilized kubernetes docker runtime environment ci cd system build test deploy experienced implementation jms exchange information reliable channel asynchronous way using activemq message queue developed test case unit testing integration layer using mockito framework experience test driven development tdd identifying test case scenario unit testing code using junit framework used gradle build tool deploying application websphere application server used jenkins schedule test based carrier priority test case used docker container management used git version control across common source code used developer monitored error log using log fixed problem wrote unit test using mocha chai used jira tool issue bug tracking monitoring work assignment system used intellij ide application development environment agile methodology java ee jsp xml html cs javascript jsp bootstrap jquery ajax angularjs reactjs nodejs hibernate spring spring ioc spring aop spring batch spring boot spring security spring mvc oracle mongodb mockito gradle websphere restful log soa amazon web service aws docker micro service unix shell scripting git jira jenkins intellij well fargo de moines ia aug mar role full stack developer description well fargo financial service provider dedicated providing mortgage financial investment insurance product customer hmc website designed developed well fargo customer home mortgage consultant access functionality online customer use hmc website apply mortgage obtain home buying information online branch individual hmc opportunity subscribe modify hmc website support sale effort site admin wizard role responsibility involved phase software development life cycle sdlc using agile methodology developed view-controller component using html cs javascript jquery angular j created distributed oracle coherence domain configuration system design based oracle coherence experience building end end web application using mean stack angular .x developed user-friendly interface seamlessly combine new module existing login system using angular j bootstrap developed html mobile application html java jenkins ii java saas big data cloud poc rbdms java script jquery json restful web service used angular j create maintainable testable single application implemented two-way data binding used ng-filters across application developed reusable interoperable web service module based soa architecture using soap restful service expertise using fix protocol api testing admin application fix message like heartbeat logon logout resend reject sequence pre-trade trade post-trade message developed service layer layer act bridge presentation layer data access layer spring framework feature like spring jdbc spring orm used apache camel integration routing transforming data two application using protocol used spring mvc design pattern hold ui data serve send response implemented dependency injection ioc feature spring framework inject bean user interface aop logging configured developed web application using jsf hibernate get data external client status technical support ticket used mysql database developed oracle pl sql package stored procedure data warehouse consolidated loan information disparate system platform migrated legacy database using etl tool developed custom pl sql package gap found etl tool developed web service api method using pl sql sql xml xml enable conferencing resellers write client interface web conferencing platform involved migrating monolithic application micro service architecture developed micro service using pivotal cloud foundry platform build spring boot service developed application using application lifecycle management deliver reliable application developed persistence layer using hibernate persist data manage data worked hibernate mapping java object relational database sql query fetch data insert update data database developed hibernate configuration file query implemented dao class web service called using soap protocol wsdl descriptor file universal description discovery integration registry uddi created stored procedure function view index constraint trigger required sql tuning reduce response time application developed json structure data transfer goggle web toolkit ui business tier developed graphical user interface gui display report data using jquery cross-browser compatibility web application scaling gui design development using java swing jfc used open source web testing configured development environment using websphere application server developer integration testing experience integration framework like apache camel enterprise integration developed test case unit testing using junit used jenkins maven automated build deployment keep track issue task individual used jira ticketing system used spring tool suite sts application development environment java ee html cs jquery angularjs spring ioc spring mvc spring aop spring security hibernate rest soap jax-rs jax-ws wsdl pivotal cloud foundry pcf oracle junit maven jenkins jira apache camel websphere application server sts ide client allstate insurance chicago il oct jun role java developer description allstate corporation largest publicly held personal line property casualty insurer america project involves design development web based internet application provide online insurance service web application provides functionality policy management profile management claim reporting customer access complete account information policy information receive instant auto insurance quote report claim role responsibility worked design implementation market place application involved various phase sdlc worked agile development environment participated scrum meeting throughout life cycle project role based application monitoring recording audit history activity different role accessing site deliver technical solution utilizing defined technology stack implemented front end using html cs javascript angularjs used develop declarative user interface used jquery ajax interact java servlet integration sears product management rest api used strut ajax highly interactive graphic user interface implement junit test case strut spring component developed action class action form strut configuration file handle required ui action jsps view used html web component development developed server-side presentation layer using strut mvc framework designed developed application based spring framework using mvc design pattern used spring ioc dependency injection used spring jdbc interacting database used various design pattern like business delegate singleton factory dao performed inheritance based hibernate mapping table simplify data hibernate involved implementation web service top-down bottom-up using soap service interact offshore team coordinate guide development happening offshore junit used perform unit test case used oracle database sql pl sql script stored procedure function trigger oracle form report performance tuning optimization java performance analysis tool using load runner worked installing configured weblogic application server maven build tool made use cv checkout check operation environment java ee strut hibernate jsp angular j html xml xsl xslt javascript ajax spring mvc soap oracle cv profiler java performance analysis tool eclipse maven weblogic client target minneapolis mn sep july role java developer description application developed multiple web service used tracking status purchase order accessing three different database order collected placed another web-based application oms assign order department order placed web-based application moment user able track status using track tool application step process different department involved using different tool different database track tool designed developed way robustness flexibility access different db used tracking status responsibility involved various stage software development life cycle sdlc deliverable project using agile methodology developed international error correction screen using custom front-end form using html cs javascript jquery ajax gathered clarified requirement business analyst feed high-level customization design development installation phase used spring framework dependency injection action class using application context xml file involved implementation mvc pattern using jsp spring controller developed business object using spring ioc spring mvc spring aop implemented mvc architecture using jsp spring hibernate used spring framework initialize managed bean service implemented soa architecture web service using soap jax-ws wsdl uddi xml used strut framework tag library implement ee design pattern mvc developed user interface using jsp strut published validation framework support client side server-side validation used collection model class dao layer data access object involved modifying change dao layer using hibernate created mapping among relation written sql query using hibernate implemented concurrency exception handling collection whenever necessary used entity bean persist data ibm db database like database access component creating schema table used sql perform data mapping backend testing also documented sql query future testing purpose created process flow deploying application web sphere application server managed build reporting documentation project information using maven tool svn version control used jenkins continuous integration used junit testing used jira tracking bug responsible dealing problem bug fixing troubleshooting environment java ee html cs javascript jquery ajax spring spring ioc spring aop spring mvc hibernate rest soap xml xslt eclipse pl sql junit maven build tool ibm db jira jenkins svn ibm web sphere client radiant technology jan aug role java ee developer description application enhancement internet financial application framework provide internet financial facility customer using system retail corporate customer web transaction securely process customer request like claim reporting view insurance policy insurance payment etc application also facilitates second level authentication paying utility bill web role responsibility involved documentation use case design using uml modeling include development class diagram sequence diagram use case transaction diagram developed application using strut framework leverage classical model view controller mvc architecture created user-friendly interface using html cs jsp javascript client-side validation designed user interface using jsps developed custom tag used jstl implemented multithreading collection java code used ajax dynamically updating content used eclipse ide tool creating servlet jsp xml developed various java business class handling different function implemented business process user authentication transfer service using session ejbs application deployed jboss involved build deploying application using ant wrote sql jdbc prepared statement retrieve data database developed pl sql query trigger stored procedure check integrity data actively involved tuning sql query developed junit test case developed module used svn version control monitored log using log fixed problem environment java ee jsp strut jndi db html cs ejb xml dom ant ajax junit eclipse jboss mysql log svn client verizon jun dec role trainee software engineer description project designed build common access platform customer insurance agent using internet interact system part allow customer buy insurance online also used hr department manage vast information generated due massive business operation main objective help tracking hr related issue optimize increase productivity role responsibility technical responsibility included high level architecture rapid development design architecture following ee mvc framework developed interface using html jsp page strut -presentation view developed implemented servlets running jboss used ee design pattern data access object dao business tier integration tier layer project used java message service jms reliable asynchronous exchange important information loan status report client bank designed developed message driven bean consumed message java message queue implemented cmp entity bean persistence business logic implementation development database interaction code jdbc api making extensive use sql query statement advanced prepared statement inspection review quality deliverable design document wrote sql script stored procedure sql loader load reference data environment ee java servlets jsp strut mvc framework apache tomcat oracle jms sql html jdbc ejb",
  "statistics": {
    "word_count": 4535,
    "unique_word_count": 1209,
    "avg_word_length": 5.091289966923925,
    "stopword_count": 941
  },
  "metadata": {
    "filename": "Candidate181_Developer.docx",
    "file_size": 47749,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:51.227569",
    "input_filename": "Candidate181_Developer.json"
  }
}