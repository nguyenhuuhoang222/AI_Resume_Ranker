{
  "id": "Candidate204",
  "raw_text": "Candidate204\nOBJECTIVE:  \t\nSeeking a position at your Company where I can maximize my 8+years experience. I believe in hard work that uplifts my spirit and dedication enabling me as a catalyst for any company’s growth I work for.\nPROFILE SYNOPSIS:\nExperienced in all the phases of software development life cycle with Analysis, Design, Development, Integration, Implementation and Testing of various client/server, N-tier and Web Applications.\nStrong programming skills in Java and J2EE with extensive ability to develop scalable applications.\nProficient inJava and J2EE technologies including JSP, JDBC, JPA and JMS.\nExperienced inHTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets.\nExperienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX.\nWorked in MVC architecture with Magento, Angular JS and SPRING and Spring AOP.\nExpertise to make SPA’s betterusing AngularJS directives and filtersand integratedwithSpring forms.\nExperienced with Front-End frameworks like AJAX, JavaScript, ReactJS, BackboneJS and Angular JS.\nExperienced in web Application servers like Web Logic,JBoss, WebSphere andTomcat.\nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWorked on Service OrientedArchitecture (SOA) such as Apache Axis web services which useSOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nExpertise in design and development of enterprise level spring based web applications using Spring REST,Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications.\nProficient inSpring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\nDeveloped and implemented stand-alone applications with Spring Micro services and their patterns.\nWorked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix/Dashboard on designing and implementing Micro service applications.\nUsed Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeperto maintain services.\nBuild hypermedia-driven and implemented connectors between Hateoas and Spring REST services.\nExperienced with distributed transaction management with isolation/propagation levels with Spring JTA.\nProficiency in developing/maintaining using Oracle, MySQL and SQL Server.\nExperienced in AWSDynamoDB to capture the any modification on DB. \nAdding permissions to AWSSQS to interact with the Queue and involved in writing custom policies.\nProficient in SQL, PL/SQL, Stored Procedures and Triggers while dealing with automation on DB.\nExperienced with NoSQL databases like MongoDB, Couch DB and Cassandra on large data platforms.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nGood knowledge on hosting Python applications using WWGI module.\nExperience in using Jenkins for Continuous Integration and Sonar jobs for java code quality.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nProficient on Automation tools like SeleniumWebDriver and SeleniumGRID using Java for developing automation scripts in Eclipse IDE with TestNG, Maven and Jenkins for testing Web Based Applications.\nExperience with the Integrated Development Environments like Eclipse, NetBeansand IntelliJ.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/HUDSON/CVS/GIT/GITHUB.\nTECHNICAL SKILLS: \nPROJECTS:\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDeveloped an attractive GUI using Angular JS that users can interact dynamically at runtime.\nDeveloped custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nDeveloped an application were involved in design changes using HTML5, CSS3 and fraction of JavaScript.\nWorked extensively to achieve DOM Show, hide elements and Event Handlingusing Angular JS.\nExtensively worked in front end JavaScript frameworks like AngularJS, BackboneJS and ReactJS etc.\nWorked on server-side validations, handle actions,events and Encapsulationbyimplementing React JS.\nInvolved in the design, development and implementation of a Client front end using JavaSwing.\nDeveloped Swing Suite for look and feel as well as binding data to the GUI. \nDesigned multiple screens using various Swing Components and layouts.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nWorked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. \nExperienced on spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot anddid integration to Micro services into existing system architecture.\nCreating REST based Web Services by establishing links using Hateoas from spring based Applications.\nExperienced in implementing Micro services, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach. \nInvolved in writing application level code to interact with APIs, Web Services using JSON.\nExperience in creating RESTful web services using Jersey, spring framework and JAX-RS.\nJava Beans are used as container of business logic and supporting the services or applications.\nWorkedwith Docker to deployMicro-services in modern containers to increase Isolation.\nWorked on integrated Hystrix dashboard to monitor springmicro-services using CircuitBreaker.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nInvolved in developing API’s and REST\t API proxy using APIGEE edge and for sending mobile notifications.\nExperienced with cloud services like Cloud Foundry and AWS.\nDesigned and implemented intranet applications using RubyonRails and PostgreSQL on AWS Cloud managed code versioning with GitHub and deployment to staging and production servers. \nWorked with DROOLS engineforspring integration and validate business rule before executing in runtime.\nDeveloped the Web Services Client using REST, RSDLfor verifying the new customer history to a connection. \nWorked on XML parsers (JAXB) for data retrieval and JAXB parser for marshalling and unmarshalling. \nTo establish a connection to server,SQL statements that were passed through hibernate.\nWriting Queries to get the information from MongoDB for adjusting the data in DB. \nWorked withCURL to move data from a server using http and https protocols.\nExperienced with event-driven and scheduled AWSLambda functions to trigger various AWS resources.\nWorked with AWScloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nPerformed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB.\nInvolved in AWSSQS to interact with queue and giving roles to it and involved in writing Custompolicies.\nCreated instances on AWSEC2 and configure using CMSAnsible and Automation installation using CMS.\nParticipated in troubleshooting issues on AWS, Netflix Eurekaand Cloud environments.\nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nMentoring Development on integrating Xstore POS \\ Xoffice products with Retailers.\nWorked on POC for multiple international Xstore POS implementations, including designing the test lab and test strategy for new implementations, maintenance releases.\nWorked system logging using Elastic search, KibanaLog stashtocreate dashboards in Splunk and Kibana. \nDeveloped Pythonscripts and shell scripts for datamaintenance and unittesting and created UNIXSHELL scripting and Python scripting for automate process.\nConstructed web pages for application using MVC&JavaScript, jQuery, NodeJS.\nUsed Node.js to develop the relevant back end RESTful API.\nDeveloped crypto rest services using Nodejs and integrated services with HSM(Hardware Security Module).\nImplemented modules into NodeJS to integrate with designs and requirements and used NodeJS Express Framework. \nInvolved in the development of distributed server-side components and deployed the various Session and Entity Bean Components in the IBMWebSphere Application Server.\nPerformed different types of testing on various test scripts on Selenium WebDriver and TestNG.\nUsed MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nUsed SeleniumGrid to execute Selenium automation suites on different platform; performed browser combinations in parallel and for cloud execution used SAUCELABS. Used GIT as a version Control.\nWorked with Appium for mobile testing for Android and IOS. \nUsing JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nInvolved in System Testing, Integration Testing, and Production Testing on WebLogic Server.\nEnvironment: Java/JDK,J2EE, Swing, Log4j, AngularJS,Web Services, Hystrix Dashboard, Spring Kafka, AWS, Netflix Eureka,Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN build tool, JUnit, Ruby on Rails, Kibana, Splunk,Apigee, Hateoas, Drools, Jenkins Continuous integration tool, WebLogic Application Server,MongoDB,Linux OS, Agile Methodology, Curl, GIT, PL/SQL, Docker.\n Responsibilities: \nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDeveloped and implemented Swing, spring and J2EE based MVC framework for the application. \nUsed multithreading in programming to improve overall performance.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Angular JS and AJAX, for developing presentation layer.\nInvolved in payment status report for asynchronous exchange of information using JMS. \nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating TwitterBootstrap with Angular JS and media queries.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation. \nUsed JSP to dynamically generate web pages based on HTML and XML Document types. Use JSF (Java Server Faces) to implement component based User Interface Applications.\nJSON used as the main data-interchange format in place of XML.\nUsed Sonar to analyze and measure source code quality.\nCRUD was used as part of servlets where DML operations were required on RDBMS like SQL DB’s.\nInvolved in developing UI pages using AngularJS and calling the Rest API's from backend. \nCreated RFP microservice to provide RESTful API utilizing Spring Boot with Microservices.\nDeveloped SOAP based JAX-WSWeb Service interfaces for integrating multiple systems, code re-usability.\nUsed Dependency Injection feature for wiring and defined dependencies using constructor arguments.\nImplementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code.\nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Added WS-Security using XWSS to secure the Web services.\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nUsed Tomcat Serveras the chief enterprise level server while dealing the database activities with hibernates.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUtilized spring core, AOP and security to build robust business operations with transactional support. \nDefined several UML diagrams; Activity diagrams, Sequence and Object diagrams.\nDeveloped unit and integration tests for existing microservices using JUnit, Mockito and Docker environments.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nCreated Hibernate persistent and configuration files for ORM implementation.\nUsed Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol.\nUsed spring framework including spring core/IoC, Spring Web, Spring Security. \nWorked with and implemented on developing and maintaining robust and effective PageObjectModel Design Pattern and Created Keyword-Driven and Data-Driven Framework using SeleniumWebDriver configured under TestNG environment and used MAVEN for adding dependencies.\nParticipated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nDeveloped AWS LambdaFunctions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS.\nEnvironment: Java, J2EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, OWASP, JMS, Oracle, Angular JS, NodeJS, Tomcat, Spring,Spring Boot, Spring Batch, AJAX, Apache JMeter, jQuery, JUnit, Maven.\nResponsibilities:\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nResponsible for JAVA, J2EE, JSF, JBPM, EL and Java FX coding / development.\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate,IBM Web Sphere.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nUsed multithreading to improve performance in generating the reports in Java.\nExtensively developed User defined Custom JSP tags to separate presentation from application logic.\nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate JavaBean classes using Apache Axis.\nInstallation, Configuration & administration of WebLogic application Server.\nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nUsed ANT for compilation and building JAR, WAR and EAR files.\nUsed Log4J, Splunk for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysingBusiness Requirements and handling it as per Requirements.\nProject coordination with other Development teams, System managers and web master and developed good working environment.\nEnvironment: Java, JSP, Servlets, JSF, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, Web Logic Application Server, Junit, Maven, Log4J, SVN, Oracle, UNIX.\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalityInvolved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs).\nUsed Hibernate in persistence layer and developed POJO's,Data Access Object to handle database operations.\nWorked on System security with the use of SSL (Secure socket layer), encryption and used role-based security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTfulandPreparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JUnit Test Cases and Ant Build Script. \nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nWSDL has been used to expose the Web Services. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nDeveloped client request validations and processing using JavaScript and HTML.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nHands-on Experience onSelenium Web Driver to write user stories. \nUsed MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern.\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, WebSphere Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern.\nWrote JavaScript for client-side validation.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nConfigured Bean mappings within the framework and Hibernate persistence.\nMonitored the logs using Log4j and fixed the problem.\nThe application was deployed on the Tomcat.\nUsed CVS as version control system. \nKnowledge on bug fixing and ProductionSupport.\nEnvironment:J2EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, EclipseIDE, CVS,Log4j.\nResponsibilities:\nDesign and Development of the Object-Oriented applications using OOA and OOD techniques in all Business\nAreas using CVS.\nDesigned and developed web pages using HTML, CSS and JSP.\nWrote Client-side validation scripts using JavaScript.\nStored data in Oracle database and accessed using Oracle JDBC drivers.\nImported Client data into the database from XML file by using the XML Parser.\nWorked on bug fixing and ProductionSupport.\nEnvironment: JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.",
  "cleaned_text": "Candidate OBJECTIVE Seeking a position at your Company where I can maximize my years experience. I believe in hard work that uplifts my spirit and dedication enabling me as a catalyst for any companys growth I work for. PROFILE SYNOPSIS Experienced in all the phases of software development life cycle with Analysis, Design, Development, Integration, Implementation and Testing of various client server, N-tier and Web Applications. Strong programming skills in Java and J EE with extensive ability to develop scalable applications. Proficient inJava and J EE technologies including JSP, JDBC, JPA and JMS. Experienced inHTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets. Experienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX. Worked in MVC architecture with Magento, Angular JS and SPRING and Spring AOP. Expertise to make SPAs betterusing AngularJS directives and filtersand integratedwithSpring forms. Experienced with Front-End frameworks like AJAX, JavaScript, ReactJS, BackboneJS and Angular JS. Experienced in web Application servers like Web Logic,JBoss, WebSphere andTomcat. Experienced with web services SOAP RESTful and used to scale the applications for better BOA. Worked on Service OrientedArchitecture SOA such as Apache Axis web services which useSOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS. Expertise in design and development of enterprise level spring based web applications using Spring REST,Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications. Proficient inSpring AOP, Security, Event Handling, Spring MVC, Spring IOC Container. Developed and implemented stand-alone applications with Spring Micro services and their patterns. Worked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix Dashboard on designing and implementing Micro service applications. Used Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeperto maintain services. Build hypermedia-driven and implemented connectors between Hateoas and Spring REST services. Experienced with distributed transaction management with isolation propagation levels with Spring JTA. Proficiency in developing maintaining using Oracle, MySQL and SQL Server. Experienced in AWSDynamoDB to capture the any modification on DB. Adding permissions to AWSSQS to interact with the Queue and involved in writing custom policies. Proficient in SQL, PL SQL, Stored Procedures and Triggers while dealing with automation on DB. Experienced with NoSQL databases like MongoDB, Couch DB and Cassandra on large data platforms. Experience with Docker images, Containers, push pull with Spring Boot, used Jenkins for CICD and AI. Good knowledge on hosting Python applications using WWGI module. Experience in using Jenkins for Continuous Integration and Sonar jobs for java code quality. Experienced in using Eureka Servers while deploying in EC . Hands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon. Extensive working with Amazon web Services like using Elastic Beanstalk, EC and AMI with Linux. Strongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing. Proficient on Automation tools like SeleniumWebDriver and SeleniumGRID using Java for developing automation scripts in Eclipse IDE with TestNG, Maven and Jenkins for testing Web Based Applications. Experience with the Integrated Development Environments like Eclipse, NetBeansand IntelliJ. Experienced with CICD - ANT MAVEN GRADLE JENKINS HUDSON CVS GIT GITHUB. TECHNICAL SKILLS PROJECTS Responsibilities Worked in a highly dynamic AGILE environment and participated in scrum and sprint meetings. Developed an attractive GUI using Angular JS that users can interact dynamically at runtime. Developed custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. Developed an application were involved in design changes using HTML , CSS and fraction of JavaScript. Worked extensively to achieve DOM Show, hide elements and Event Handlingusing Angular JS. Extensively worked in front end JavaScript frameworks like AngularJS, BackboneJS and ReactJS etc. Worked on server-side validations, handle actions,events and Encapsulationbyimplementing React JS. Involved in the design, development and implementation of a Client front end using JavaSwing. Developed Swing Suite for look and feel as well as binding data to the GUI. Designed multiple screens using various Swing Components and layouts. Worked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. Worked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. Experienced on spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot anddid integration to Micro services into existing system architecture. Creating REST based Web Services by establishing links using Hateoas from spring based Applications. Experienced in implementing Micro services, Service Oriented Architecture SOA with XML based Web Services SOAP UDDI WSDL using Top Down and Bottom Up approach. Involved in writing application level code to interact with APIs, Web Services using JSON. Experience in creating RESTful web services using Jersey, spring framework and JAX-RS. Java Beans are used as container of business logic and supporting the services or applications. Workedwith Docker to deployMicro-services in modern containers to increase Isolation. Worked on integrated Hystrix dashboard to monitor springmicro-services using CircuitBreaker. Worked with Spring Ribbon and Kafka broker service to handle heavy traffic. Involved in developing APIs and REST API proxy using APIGEE edge and for sending mobile notifications. Experienced with cloud services like Cloud Foundry and AWS. Designed and implemented intranet applications using RubyonRails and PostgreSQL on AWS Cloud managed code versioning with GitHub and deployment to staging and production servers. Worked with DROOLS engineforspring integration and validate business rule before executing in runtime. Developed the Web Services Client using REST, RSDLfor verifying the new customer history to a connection. Worked on XML parsers JAXB for data retrieval and JAXB parser for marshalling and unmarshalling. To establish a connection to server,SQL statements that were passed through hibernate. Writing Queries to get the information from MongoDB for adjusting the data in DB. Worked withCURL to move data from a server using http and protocols. Experienced with event-driven and scheduled AWSLambda functions to trigger various AWS resources. Worked with AWScloud service in creating EC instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC . Performed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB. Involved in AWSSQS to interact with queue and giving roles to it and involved in writing Custompolicies. Created instances on AWSEC and configure using CMSAnsible and Automation installation using CMS. Participated in troubleshooting issues on AWS, Netflix Eurekaand Cloud environments. Involved in writing Java API for Amazon Lambda to manage some of the AWS services. Mentoring Development on integrating Xstore POS Xoffice products with Retailers. Worked on POC for multiple international Xstore POS implementations, including designing the test lab and test strategy for new implementations, maintenance releases. Worked system logging using Elastic search, KibanaLog stashtocreate dashboards in Splunk and Kibana. Developed Pythonscripts and shell scripts for datamaintenance and unittesting and created UNIXSHELL scripting and Python scripting for automate process. Constructed web pages for application using MVC&JavaScript, jQuery, NodeJS. Used Node.js to develop the relevant back end RESTful API. Developed crypto rest services using Nodejs and integrated services with HSM Hardware Security Module . Implemented modules into NodeJS to integrate with designs and requirements and used NodeJS Express Framework. Involved in the development of distributed server-side components and deployed the various Session and Entity Bean Components in the IBMWebSphere Application Server. Performed different types of testing on various test scripts on Selenium WebDriver and TestNG. Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies. Used SeleniumGrid to execute Selenium automation suites on different platform performed browser combinations in parallel and for cloud execution used SAUCELABS. Used GIT as a version Control. Worked with Appium for mobile testing for Android and IOS. Using JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test. Used Jenkins as the integration tool and improved scalability of applications on cross-platforms. Involved in System Testing, Integration Testing, and Production Testing on WebLogic Server. Environment Java JDK,J EE, Swing, Log j, AngularJS,Web Services, Hystrix Dashboard, Spring Kafka, AWS, Netflix Eureka,Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN build tool, JUnit, Ruby on Rails, Kibana, Splunk,Apigee, Hateoas, Drools, Jenkins Continuous integration tool, WebLogic Application Server,MongoDB,Linux OS, Agile Methodology, Curl, GIT, PL SQL, Docker. Responsibilities Responsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development. Defined and constructed layers, server-side objects and client-side interfaces based on J EE design patterns. Developed and implemented Swing, spring and J EE based MVC framework for the application. Used multithreading in programming to improve overall performance. Designed, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML , CSS , Angular JS and AJAX, for developing presentation layer. Involved in payment status report for asynchronous exchange of information using JMS. Participated in creation of Spring Configurations using Java features, Lambda expressions, Streams, filters. Used JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating TwitterBootstrap with Angular JS and media queries. Created the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model. Actively involved in using MVC, HTML to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation. Used JSP to dynamically generate web pages based on HTML and XML Document types. Use JSF Java Server Faces to implement component based User Interface Applications. JSON used as the main data-interchange format in place of XML. Used Sonar to analyze and measure source code quality. CRUD was used as part of servlets where DML operations were required on RDBMS like SQL DBs. Involved in developing UI pages using AngularJS and calling the Rest API s from backend. Created RFP microservice to provide RESTful API utilizing Spring Boot with Microservices. Developed SOAP based JAX-WSWeb Service interfaces for integrating multiple systems, code re-usability. Used Dependency Injection feature for wiring and defined dependencies using constructor arguments. Implementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code. Used Micro-services to ensure the scalability of application on cloud infrastructure. Developed Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth- . . Added WS-Security using XWSS to secure the Web services. Configured hibernate with Spring ORM as part of spring and Hibernate Integration for best results. Used Tomcat Serveras the chief enterprise level server while dealing the database activities with hibernates. Used Spring MVC components to implement business layer and Spring Boot for Micro-services. Utilized spring core, AOP and security to build robust business operations with transactional support. Defined several UML diagrams Activity diagrams, Sequence and Object diagrams. Developed unit and integration tests for existing microservices using JUnit, Mockito and Docker environments. Developed the data access classes using JDBC and SQLquerylog j for logging and SVN for version control. Worked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. Created Hibernate persistent and configuration files for ORM implementation. Used Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol. Used spring framework including spring core IoC, Spring Web, Spring Security. Worked with and implemented on developing and maintaining robust and effective PageObjectModel Design Pattern and Created Keyword-Driven and Data-Driven Framework using SeleniumWebDriver configured under TestNG environment and used MAVEN for adding dependencies. Participated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status. GUI design and development using Java Swing, JFC Used for open source web testing. Developed AWS LambdaFunctions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS. Environment Java, J EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP Rest, Web Services, JavaScript, UML, Bower, HTML, CSS, SASS, Sonar, WAS WSDL, JIRA, JAX-WS, JAX-RS, OWASP, JMS, Oracle, Angular JS, NodeJS, Tomcat, Spring,Spring Boot, Spring Batch, AJAX, Apache JMeter, jQuery, JUnit, Maven. Responsibilities Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements. Involved in Java Multithreading to cascade multiple changes on multiple records in only one transaction Responsible for JAVA, J EE, JSF, JBPM, EL and Java FX coding development. Using Struts Framework developed and implemented the web-based application following the MVC. Used Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables. Implemented J EE patterns, Data Access Object DAO , Session facade, Business Delegate and Value Object. Implemented the service layer using Spring with transaction and logging interceptors. Fixing the bugs and developing new enhancements using JAVA J EE, spring, Hibernate,IBM Web Sphere. Used spring framework for middle tier and Spring-hibernate for data access. Used Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes. Implemented SOA to develop REST Based Web services using Apache Axis. Used multithreading to improve performance in generating the reports in Java. Extensively developed User defined Custom JSP tags to separate presentation from application logic. Designed and developed Web Services SOAP, WSDL . Created and compiled XML Schema to generate JavaBean classes using Apache Axis. Installation, Configuration & administration of WebLogic application Server. Used AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA. Developed HTML and JavaScript. Developed Scripts for UNIX platform deployment. Used ANT for compilation and building JAR, WAR and EAR files. Used Log J, Splunk for logging and tracing the messages. Implemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysingBusiness Requirements and handling it as per Requirements. Project coordination with other Development teams, System managers and web master and developed good working environment. Environment Java, JSP, Servlets, JSF, Spring AOP IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services SOAP WSDL and REST , Multithreading, Web Logic Application Server, Junit, Maven, Log J, SVN, Oracle, UNIX. Responsibilities Involved in the analysis, design, and development and testing phases of Software Development Life Cycle. Developed N-tier client-server business application software using Model View Controller MVC Architecture. Extensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalityInvolved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects DTOs and Data Access Objects DAOs . Used Hibernate in persistence layer and developed POJO s,Data Access Object to handle database operations. Worked on System security with the use of SSL Secure socket layer , encryption and used role-based security. JSON being light in nature was used as the chief source of communication between the server and application. Expertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTfulandPreparation of Java and JSP coding standard checklist. Involved in the development of Servlet, Struts Action classes, Business Objects, Web Services. Involved in writing JUnit Test Cases and Ant Build Script. Involved in writing JSP using Bean, Logic, HTML, and Iterate Tags. WSDL has been used to expose the Web Services. SOAP has been used as a protocol to Communicate in the form of XML messages. Developed client request validations and processing using JavaScript and HTML. Used Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts. Implementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC. Developed Struts Action Forms, Action classes and performed action mapping using Struts. Hands-on Experience onSelenium Web Driver to write user stories. Used MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern. Environment Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL SQL, WebSphere Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven. Responsibilities Created user-friendly GUI interface and Web pages using HTML, CSS and JSP. Developed web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern. Wrote JavaScript for client-side validation. Wrote SQL for JDBC prepared statements to retrieve the data from database. Configured Bean mappings within the framework and Hibernate persistence. Monitored the logs using Log j and fixed the problem. The application was deployed on the Tomcat. Used CVS as version control system. Knowledge on bug fixing and ProductionSupport. Environment J EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, EclipseIDE, CVS,Log j. Responsibilities Design and Development of the Object-Oriented applications using OOA and OOD techniques in all Business Areas using CVS. Designed and developed web pages using HTML, CSS and JSP. Wrote Client-side validation scripts using JavaScript. Stored data in Oracle database and accessed using Oracle JDBC drivers. Imported Client data into the database from XML file by using the XML Parser. Worked on bug fixing and ProductionSupport. Environment JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.",
  "preprocessed_text": "candidate objective seeking position company maximize year experience believe hard work uplift spirit dedication enabling catalyst company growth work profile synopsis experienced phase software development life cycle analysis design development integration implementation testing various client server n-tier web application strong programming skill java ee extensive ability develop scalable application proficient injava ee technology including jsp jdbc jpa jms experienced inhtml xhtml dhtml xml cs angular javascript jquery jsp servlets experienced developing web application using java servlets jsp jdbc jndi ajax worked mvc architecture magento angular j spring spring aop expertise make spa betterusing angularjs directive filtersand integratedwithspring form experienced front-end framework like ajax javascript reactjs backbonejs angular j experienced web application server like web logic jboss websphere andtomcat experienced web service soap restful used scale application better boa worked service orientedarchitecture soa apache axis web service usesoap rest wsdl exposure jaxb jax-rpc jax-rs jax-ws expertise design development enterprise level spring based web application using spring rest hibernate ejb strut servlets jsp jsf user interface application proficient inspring aop security event handling spring mvc spring ioc container developed implemented stand-alone application spring micro service pattern worked spring ribbon load balancing used fail safe methodology using circuit breaker pattern hystrix dashboard designing implementing micro service application used apache kafka integration data processing spring multi-threaded message consumption worked zookeeperto maintain service build hypermedia-driven implemented connector hateoas spring rest service experienced distributed transaction management isolation propagation level spring jta proficiency developing maintaining using oracle mysql sql server experienced awsdynamodb capture modification db adding permission awssqs interact queue involved writing custom policy proficient sql pl sql stored procedure trigger dealing automation db experienced nosql database like mongodb couch db cassandra large data platform experience docker image container push pull spring boot used jenkins cicd ai good knowledge hosting python application using wwgi module experience using jenkins continuous integration sonar job java code quality experienced using eureka server deploying ec hand experience netflix cloud fall-back technology like eureka hystrix ribbon extensive working amazon web service like using elastic beanstalk ec ami linux strongly associated usage selenium jenkins junit curl unit system testing proficient automation tool like seleniumwebdriver seleniumgrid using java developing automation script eclipse ide testng maven jenkins testing web based application experience integrated development environment like eclipse netbeansand intellij experienced cicd ant maven gradle jenkins hudson cv git technical skill project responsibility worked highly dynamic agile environment participated scrum sprint meeting developed attractive gui using angular j user interact dynamically runtime developed custom directive factory service angularjs implemented code according coding standard created angularjs controller isolate scope perform operation extensively used core java exception collection developed application involved design change using html cs fraction javascript worked extensively achieve dom show hide element event handlingusing angular j extensively worked front end javascript framework like angularjs backbonejs reactjs etc worked server-side validation handle action event encapsulationbyimplementing react j involved design development implementation client front end using javaswing developed swing suite look feel well binding data gui designed multiple screen using various swing component layout worked thread handling maintain continuity execution extensively implemented multithreading concept handle transaction management isolation propagation level worked business logic calculation performs analysis handle data transfer generates xsl presentation layer sql command database layer experienced spring framework application like spring core spring aop spring mvc spring batch spring security spring boot anddid integration micro service existing system architecture creating rest based web service establishing link using hateoas spring based application experienced implementing micro service service oriented architecture soa xml based web service soap uddi wsdl using top bottom approach involved writing application level code interact apis web service using json experience creating restful web service using jersey spring framework jax-rs java bean used container business logic supporting service application workedwith docker deploymicro-services modern container increase isolation worked integrated hystrix dashboard monitor springmicro-services using circuitbreaker worked spring ribbon kafka broker service handle heavy traffic involved developing apis rest api proxy using apigee edge sending mobile notification experienced cloud service like cloud foundry aws designed implemented intranet application using rubyonrails postgresql aws cloud managed code versioning deployment staging production server worked drool engineforspring integration validate business rule executing runtime developed web service client using rest rsdlfor verifying new customer history connection worked xml parser jaxb data retrieval jaxb parser marshalling unmarshalling establish connection server sql statement passed hibernate writing query get information mongodb adjusting data db worked withcurl move data server using protocol experienced event-driven scheduled awslambda function trigger various aws resource worked awscloud service creating ec instance providing role sometimes participated writing custom policy deployed application elastic bean stalk ec performed query operation aws dynamo db captured modification data dynamo db involved awssqs interact queue giving role involved writing custompolicies created instance awsec configure using cmsansible automation installation using cm participated troubleshooting issue aws netflix eurekaand cloud environment involved writing java api amazon lambda manage aws service mentoring development integrating xstore po xoffice product retailer worked poc multiple international xstore po implementation including designing test lab test strategy new implementation maintenance release worked system logging using elastic search kibanalog stashtocreate dashboard splunk kibana developed pythonscripts shell script datamaintenance unittesting created unixshell scripting python scripting automate process constructed web page application using mvc javascript jquery nodejs used node.js develop relevant back end restful api developed crypto rest service using nodejs integrated service hsm hardware security module implemented module nodejs integrate design requirement used nodejs express framework involved development distributed server-side component deployed various session entity bean component ibmwebsphere application server performed different type testing various test script selenium webdriver testng used maven build process used generating documentation reporting adding dependency used seleniumgrid execute selenium automation suite different platform performed browser combination parallel cloud execution used saucelabs used git version control worked appium mobile testing android io using junit test eclipse developed unit test case test suite curl also implemented test used jenkins integration tool improved scalability application cross-platforms involved system testing integration testing production testing weblogic server environment java jdk ee swing log angularjs web service hystrix dashboard spring kafka aws netflix eureka netflix ribbon hibernate rest json restful eclipse maven build tool junit ruby rail kibana splunk apigee hateoas drool jenkins continuous integration tool weblogic application server mongodb linux o agile methodology curl git pl sql docker responsibility responsible stage design development deployment application active role test driven development termed tdd apart agile software development defined constructed layer server-side object client-side interface based ee design pattern developed implemented swing spring ee based mvc framework application used multithreading programming improve overall performance designed analyzed developed front-end back-end servlets bootstrap designing html cs angular j ajax developing presentation layer involved payment status report asynchronous exchange information using jms participated creation spring configuration using java feature lambda expression stream filter used javascript jquery user interaction page creating responsive web application integrating twitterbootstrap angular j medium query created angularjs app using yeoman grunt bower used angular ui component model actively involved using mvc html enable client-side meet specific criterion applying various validation variable used cs class provide visual feedback validation used jsp dynamically generate web page based html xml document type use jsf java server face implement component based user interface application json used main data-interchange format place xml used sonar analyze measure source code quality crud used part servlets dml operation required rdbms like sql db involved developing ui page using angularjs calling rest api backend created rfp microservice provide restful api utilizing spring boot microservices developed soap based jax-wsweb service interface integrating multiple system code re-usability used dependency injection feature wiring defined dependency using constructor argument implementation data access layer cumbersome greatly resolved using spring jpa implementation data access layer reducing boiler-plate-code used micro-services ensure scalability application cloud infrastructure developed restful web service system interact system secured service spring-security oauth- added ws-security using xwss secure web service configured hibernate spring orm part spring hibernate integration best result used tomcat serveras chief enterprise level server dealing database activity hibernates used spring mvc component implement business layer spring boot micro-services utilized spring core aop security build robust business operation transactional support defined several uml diagram activity diagram sequence object diagram developed unit integration test existing microservices using junit mockito docker environment developed data access class using jdbc sqlquerylog logging svn version control worked rest web service backend service used oracle database service restful web service using jersey jax-rs implementation created hibernate persistent configuration file orm implementation used git version control system application used jmeter test performance soap protocol used spring framework including spring core ioc spring web spring security worked implemented developing maintaining robust effective pageobjectmodel design pattern created keyword-driven data-driven framework using seleniumwebdriver configured testng environment used maven adding dependency participated defect tracking team using alm quality center defect tracking defect priority status gui design development using java swing jfc used open source web testing developed aws lambdafunctions stateless style ensure affinity compute infrastructure manage server run code aws environment java ee jdk rcp aws sdk git swing jfc spring hibernate core java soap rest web service javascript uml bower html cs sas sonar wsdl jira jax-ws jax-rs owasp jms oracle angular j nodejs tomcat spring spring boot spring batch ajax apache jmeter jquery junit maven responsibility involved system analysis design methodology well object oriented design development using ooad methodology capture model business requirement involved java multithreading cascade multiple change multiple record one transaction responsible java ee jsf jbpm el java fx coding development using strut framework developed implemented web-based application following mvc used spring mvc web module involved design development new action class interact business logic used hibernate orm map java class data base table implemented ee pattern data access object dao session facade business delegate value object implemented service layer using spring transaction logging interceptor fixing bug developing new enhancement using java ee spring hibernate ibm web sphere used spring framework middle tier spring-hibernate data access used twitter bootstrap create responsive web page displayed properly different screen size implemented soa develop rest based web service using apache axis used multithreading improve performance generating report java extensively developed user defined custom jsp tag separate presentation application logic designed developed web service soap wsdl created compiled xml schema generate javabean class using apache axis installation configuration administration weblogic application server used angularjs create view hook model dom synchronize data server spa developed html javascript developed script unix platform deployment used ant compilation building jar war ear file used log splunk logging tracing message implemented test script based user requirement specified business side requirement document analysingbusiness requirement handling per requirement project coordination development team system manager web master developed good working environment environment java jsp servlets jsf spring aop ioc spring mvc hibernate xml jbpm html jdbc web service web service soap wsdl rest multithreading web logic application server junit maven log svn oracle unix responsibility involved analysis design development testing phase software development life cycle developed n-tier client-server business application software using model view controller mvc architecture extensive use core java collection generic exception handling design pattern functionalityinvolved writing different design pattern like filter action business delegate service locater data transfer object dtos data access object daos used hibernate persistence layer developed pojo data access object handle database operation worked system security use ssl secure socket layer encryption used role-based security json light nature used chief source communication server application expertise developing reusable interoperable web service module based microservices soa architecture using soap restfulandpreparation java jsp coding standard checklist involved development servlet strut action class business object web service involved writing junit test case ant build script involved writing jsp using bean logic html iterate tag wsdl used expose web service soap used protocol communicate form xml message developed client validation processing using javascript html used hibernate transaction management hibernate batch transaction hibernate cache concept implementing exposing micro service base restful api utilizing spring boot spring mvc developed strut action form action class performed action mapping using strut hands-on experience onselenium web driver write user story used maven build tool adding dependence object model design pattern environment java jsp html cs servlets xml soap wsdl oracle eclipse jax-r jax-ws pl sql websphere server strut dao aop spring mvc spring hibernate junit maven responsibility created user-friendly gui interface web page using html cs jsp developed web application using strut jsp servlet java bean us mvc design pattern wrote javascript client-side validation wrote sql jdbc prepared statement retrieve data database configured bean mapping within framework hibernate persistence monitored log using log fixed problem application deployed tomcat used cv version control system knowledge bug fixing productionsupport environment ee jdbc strut hibernate javascript html cs jsp servlet tomcat oracle eclipseide cv log j. responsibility design development object-oriented application using ooa ood technique business area using cv designed developed web page using html cs jsp wrote client-side validation script using javascript stored data oracle database accessed using oracle jdbc driver imported client data database xml file using xml parser worked bug fixing productionsupport environment jdk servlets jsp jdbc sql html javascript eclipse xml cv",
  "statistics": {
    "word_count": 3369,
    "unique_word_count": 983,
    "avg_word_length": 5.1308993766696345,
    "stopword_count": 727
  },
  "metadata": {
    "filename": "Candidate204.docx",
    "file_size": 48319,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:55.089093",
    "input_filename": "Candidate204.json"
  }
}