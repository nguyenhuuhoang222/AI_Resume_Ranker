{
  "id": "Candidate152_Java Fullstack Developer",
  "raw_text": "\tCandidate 152\t\t\t\t\t515 635 4931\nPROFESSIONAL SUMMARY:\nOver 8+ years of professional experience in designing, developing and testing internet/intranet Web-based applications, Enterprise applications using J2EE Architecture, Core Java concepts.\nExperience working with Software Development Life Cycle (SDLC) methodologies-Agile,Waterfall Model.\nExpertise in using Object Oriented Programming(OOPS) Principles and Design patterns like  Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern. .\nExtensive experience in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, EnterpriseJava Beans.\nExpertise in development of web and enterprise-level applications using Spring, Hibernate, Struts framework, EJB, Servlets.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database using HQL.\nImplemented based on corresponding view components with view components HTML5, CSS3, XSD, XSTL.\nExperienced in Front End frameworks such as jQuery, Ajax, JavaScript, Node.js, ReactJS, AngularJS, Angular2,ExtJs.\nProficient in Client Side Validations, Client-server data Interaction with Ajax in Node.js, Back bone.JS.\n Hands on experience in developing and solid understanding of Micro-Services Architecture, Service Oriented Architecture(SOA) and Test-Driven Development.\nExtensively used different Tag Libraries likeStruts Tags, JSTL, Spring Tags, Display Tag, XML/XSD.\nExperienced in frameworks: Spring MVC, Jakarta Struts framework, JSF, Spring and Hibernate.\nExperience with Spring MVC, IOC, AOP, Spring JDBC, Spring JTA, Spring IO, Spring Security, Spring Boot, Spring Microservices, Spring Ribbon, Spring Netflix, Spring Zuul, Spring Eureka withThymeleaf,Pivotal Cloud Foundry.\nExperience in Spring Security for User Access Management and LDAP configuration for authentication, authorization.\nDeveloped applications using latest technologies like EJB3.0, Spring2.x/3.x/4.x, Hibernate3.2/4.x, and REST based Web services (axis2.0, JAX WS2.0), Rules Engines (Drools4.1, ILOG), XML API and tools. \nExperienced in Distributed Transaction Management system with Spring JTA based on Atomikos.\nExperience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic, and JBoss Servers.\nExperienced in developing UNIXshell scripts for batch processing.\nGood Knowledge on Apache Storm which is used for real-time Stream processing and end-to-end delivery response.\nDeveloped SQL queries, procedures, Triggers and Stored Procedures in databases such as Oracle, DB2 and MySQL. \nExperienced in working on modern MEAN Stack- MongoDB, Express.JS, AngularJSand NodeJS.\nExperienced in working with multiple databases like Oracle 10/11g, SQL Server, MySQL, DB2, NOSQL DB (mongo Cassandra and Cache database), involved in converting Cassandra/SQL queries to Spark transformations using Spark RDDs.\nDeveloped multiple POCs using Scalaand deployed on the Yarn cluster, performance of Spark, with Cassandra and SQL.\nHands on experience with Play Framework MVC model, Object relational mapping tools like slick.\nGood experience in using Amazon Web Services (AWS) and AWS SNS/SQS for delivering messages.\nExperienced in AWS, (EC2 Container Services/Docker, VPC with Security Groups, S3, IAM, SNS, Lambda, Route53, CloudWatchetc Services).\nExperience in on AWS Cloud/DevOps, Continuous Integration and Continuous Delivery (CI/CD pipeline), Build and Release management, Linux/Windows administration and support.  \nDeveloped microservices using Spring MVC, Spring Boot, Spring Cloud, Spring AOP, Dependency Injection and JPA\nExperience in upgrading and migrating various versions of Mongo DB on different platforms. \nExperienced in performing unit testing using JUnit, integration and deployment of applications using tools such as ANT and Maven& debugging through log4j. \nExperience in JUnit frame work with Mockito and Easy mock, SpringJunitRunner. \nExperienced in Development, testing and deployment of enterprise applications on Windows&UNIX platforms using IDE's such as Eclipse, Rational Application Developer (RAD), Netbeans, intellij 14.x/15.x \nExperience in using different version controlling/tracking systems SVN, CVS, GIT, and Rational Clear Case.\nGood Knowledge in Apache Active MQ Series with Camel most widely used as service bus.\nExperience with Streaming platforms like Apache Kafka. \nGood Understandingon Azure which is mostly used as Service bus and used Azure tobuild, deploy and manage the application through the global network through the datacenters.\nExperienced in Full stack front end technologies using Grunt js, Glup Server, Yoman generator for Angular, Vue JS.\nExpertise in Selenium automation using Selenium WebDriver, Selenium Grid, JAVA, JUnit&PowerMonk.\nPerformed Integration and deployment of applications done using tools such as ANT, Maven and Gradle.\nMaintained the Selenium & JAVA automation code and resources in source controls like CVS, SVN over the time for improvements and new features.\nTECHNICAL SKILLS:\nPROFESSIONAL EXPERIENCE:\nResponsibilities:\nActively involved in mock screens development and project start-up phase.\nEfficiently managed the tasks and working and delivering features in a fast-paced scrum environment\nExperience working in Agile development following SCRUM process, Sprint and daily stand-up meetings.\nInvolved in developing the UI, layout and front-end programming for web application that matches requirements of the client.\nDeveloped UI Layer for the application using HTML5, CSS3, Angular 2 and Bootstrap.\nWritten code on Typescript and ES6 to implement Angular 2 Components and worked on different changed procedures of AngularJS to Angular 2.0.\nFollowed Java & J2EE design patterns and the coding guidelines to design and develop the application.\nWorked with advanced MVC framework such as Spring-IOC, AOP, MVC, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Eureka, Spring Netflixand Batch which is used for implementing backend functionality.\nExtensively used various Spring Framework modules like MVC, Auto Wiring, Spring Security, and AOP.\nCreated and injected spring services, spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nParticipated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many requests.\nUsed advanced java 8 features like Lambda expressions for array operations, collections and Enhanced concurrency methods etc. throughout the application for well-defined programming.\nWorked with Java 8 Lambda for adding functionality processing capability and Stream API to facilitate pipeline processing and used Filter method to eliminate elements based on the criteria.\nUsed Hibernate, object/relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nInvolved in development of new functionality of WebSphere commerce, Java, J2EE and WebSphere MQ.\nWrote SQL queries, stored procedures and enhanced performance by running explain plans.\nDesigned and developed Microservices using REST framework.\nDeveloped Microservices using Spring MVC, Spring Boot, Spring Cloud, Spring AOP, Dependency Injection.\nDeveloped Microservices to communicate using synchronous protocols HTTP and REST for implementingSOA.\nDeployed Spring Boot MicroservicesDocker container using Amazon EC2 container services and AWS admin console.\nUtilized AWS Lambda platform to upload data into AWS S3 bucket and to trigger other Lambda functions.\nUsed a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers.\nImplemented Authentication & Authorization with Site Minder and spring security.\nAnalysed current legacy infrastructure, established business case, and built consensus for virtualized IaaS / PaaS near term strategy with SaaSmobile cloud services end state.\nWorked on creation of custom Docker container images, pushing images, integration ofSpring boot.\nUpgraded the swagger to new version while maintaining the look and functionality of the UI. \nHands on experience with MongoDB Installation, Configuring, Monitoring and Designing Shared Environment.\nDeveloped Kafkaconsumers to consume data from Kafkatopics.\nProduced as well as consumed RESTfulweb services using Jersey API's.\nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.\nFixed defects identified during QA, UAT and Production.\nWritten highly referenced blog posts on Error Handling in Scala and Problems Scala Fixes.\nDone with Web logic application server set up & deployed the application on it.\nInvolved in CI/CD process using GIT, Jenkins job creation, Maven build and publish, and Fabric implementation \nInvolved in deploying the application in UNIX and to connect to see logs for fixing UAT/Production defects.\nDeveloped, executed and maintained Selenium automation scripts for web application.\nHands on experience JBOSS DROOLS, Guvnor, writing Business rules, Decision Tables, Agenda Filter, Knowledge Base, and JBPM. \nDevelop custom app configurations (deployment-apps) within SPLUNK to Parse, Index multiple types of log format across all application environment.\nCreated continuous integration builds using AntJenkins and deployed on WebSphere app server.\nWorked on automation platforms like Ansible. Deployed Application instance on JBoss Server.\nEnvironment:Web Services, Spring 4.x, Hibernate 4.x, HTML5, JSP,JavaScript, JQuery, AJAX, GWT,CSS3, Angular 2,RESTful,XML, WSDL, Java1.8, J2EE,Scala, Kafka, Agile Methodology, JIRA processes,GIT,Design Patterns, PL/SQL, Junit, WebSphere MQ, Amazon Elastic Beanstalk, S3,Maven, Eclipse IDE,, Apache Kafka, MongoDB, Docker, CVS.\nResponsibilities:\nDesigned and developed code for Exchange project using the Java EE platform.\nActively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model.\nUsed Java-J2EE patterns like Model View Controller (MVC), Business Delegate, Data Transfer Objects, Data Access Objects, factory patterns.\nDesigned and developed the End Points (Controllers), Business Layer, DAO Layer using Hibernate and Spring IOC (Dependency Injection).\nExtensively used MVC, Factory, Delegate and Singleton design patterns.\nImplemented SOA to develop REST Based Web services using Apache Axis.\nDeveloped REST Web Services clients to consume those Web Services as well other enterprise wide Web Services.\nDesigned and Developed Presentation Tier using Spring MVC and JSP integrating Custom Tags, JSTL, JSP Expression Language and AJAX.\nUsed Hibernate framework for back end development and Spring dependency injection for middle layer development\nUsed Spring MVC Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts. \nModified the Spring Controllers and Services classes so as to support the introduction of spring framework.\nUsed Spring Framework AOP Module to implement logging in the application to know the application status.\nWorked on Spring Quartz, form based authentication with Cross-Site Request Forgery CSRF token and secured REST endpoints with HTTP Basic authentication\nWorked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies.\nDeployed Spring Boot based micro services Docker container using Amazon EC2 container services and using AWS admin console.\nUsed DAO pattern to fetch data from database using Hibernate to carry out various database.\nDeveloped various generic JavaScript functions used for validations. \nDeveloped Application to asses JSON and XMl from Restful web service from consumer side using AngularJS.\nUsed Spring Inheritance to develop beans from already developed parent beans.\nDesigned and Implemented REST web services using JAX-RS, Spring REST. \nUsed Java Message Service (JMS) for reliable and asynchronous exchange of important information for status report. \nWrote AngularJS services to consume Restful web service to load data.\nIntegrated the Java code (API) in JSP pages and responsible for setting upAngularJS framework for UI development. \nWorked with Swing and RCP using Oracle ADF to develop a search application which is a migration project. \nWrote Scala classes to interact with the database. \nUsed Source Tree for Git (Subversion tool).\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nDefined MultiAction, AbstractWizardForm and SimpleForm Controllers using Spring MVC framework providing very clean division between controllers, flexibility with the use of interfaces and providing thin web layer over business layer.\nDeveloped screens using JSP, JavaScript, AJAX and Ext JS.\nDeveloped entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids.\nUsed JENKINS to build and deploy the code in Dev and SIT environments. \nDeployed the application Code to various Remediation engines using JENKINS. \nUsed AJAX extensively to implement front end /user interface features in the application.\nImplemented SOA to develop Web services using Apache Axis. \nDeveloped Web Services clients to consume those Web Services as well other enterprise wide Web Services.\nExposed the Web Services to the client applications by sharing the WSDL’s.\nDeveloped unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF4j + Log4j.\nManaged and maintained NoSQL (MongoDB) databases in production domain.\nFocused on Test Driven Development (TDD) thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nExtensively worked on TOAD for interacting with data base, developing the stored procedures and promoting SQL changes to QA and Production Environments. \nUsed Apache Maven for project management and building the application\nEnvironment: Java/J2EE, Spring 3.x, Hibernate 4.x, Angular JS, HTML, XML, AJAX, CSS, JavaScript,Restful, GIT, MAVEN, Mongo DB, Application Server 7.0, WID 6.1.2, Rational Application Developer 7.5, Web Services, Apache Axis, Scala, Agile Methodology, JAXB, JSP, RAD.\nResponsibilities:\nInvolved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project\nwas developed using Agile based SCRUM Methodology. \nImplemented Struts Framework and Hibernate in the new version of the Application. \nInvolved in coding for the presentation layer using Struts and JavaScript. \nUsed JSP, Struts and Java script libraries like Backbone and Jquery to develop the User Interface.  \nDeveloped Action classes, Dyna Action Forms and used Validation framework. \nDeveloped XML application using XSLT transformations. \nInvolved in developing the User interfaces using HTML, CSS3, JSP and java script.\nCreated the view pages (UI) using JSP and JavaScript/ JQuery.\nImplemented Marionette which is a composite application library for Backbone.js in order to simplify the large scale\nJavaScriptapplications. \nExtensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing. \nInvolved in development/ maintenance of various web services using IBM Websphere to interact with other applications. \nImplemented the XSLT templates to apply the access to the tabs (modules) based on the logged in user role.\nDeveloped multiple tools including Site Scanning tool, Report Analyzer tool used for site scanning and report generating.\nWrote various select/update/insertSQL queries and stored procedures for Sql Server. \nSuccessfully executing offshore modeling by effective and on time knowledge sharing with offshore projectgroups through\nweekly team meetings and daily status update calls.\nUsed collections interface to provide a dynamic user interface.\nHandled Java multi threading part in back-end component, one thread will be running for each user, which servesthat user.\nGained hand-on development experience with Linux environment and Tomcat server\nBuilt single page application using Angular JS.\nWorked on EXT JS for Rich Web Application.\nInvolved in unit testing, troubleshooting and debugging. Modifying programs with enhancements.\nInvolved in fixing bugs the bugs or defects in the application. \nDeveloped the UNIX shell scripts to automate jobs.\nUsed JMS for asynchronous communication between different modules.\nInvolved in consuming, producing SOAP based web services using JAX-WS.\nImplemented SOAP over HTTP and SOAP over JMS communication.\nWorked as the part of a core team to monitor and enhance the performance of the application. \nProvide guidance and direction to team members in their day-to-day activities. \nEnvironment: Jakarta Struts Framework 2.0, Core Java, Hibernate 3.0, Web Services, CSS, eclipse Helios, CVS, Web Sphere Application Server 7.0, Unix/Linux, AWS, JUnit, HTML 4, CSS,  Angular JS, BackBone JS, JSON, UNIX, JavaScript, Servlets, Ext JS,JSP, SOAP, JDBC, JQuery, PL/SQL.\nResponsibilities:\nInvolved in Object analysis, design and documentation (OOAD) of the application model using UML.\nInvolved in development of the application using Spring Web MVC and other components of the Spring Framework, the controller being Spring Core. Also implemented Dependency Injection using the Spring IOC framework.\nDesigned and developed User Interface, application modules using Wicket pages, Spring, JavaBeans, HTML, CSS, JavaScript and AJAX.\nDesigned and developed interactive static HTML screens as screen level prototype, JavaScript for client side validation.\nDesigned Service Adapter using Adapter Service Interface (ASI) framework to interact with mobile devices.\nDeveloped Action controller, Action Forms, Tiles Structure, Validation Form Beans, AJAX code, JavaScript and worked on integration.\nUsed Cascading Style Sheet (CSS) for designing the web pages.\nImplementation and maintenance of a Java GUI application using JSF components.\nExtensive use of JSF Framework for Controller components and View components.\nInvolved in transforming service response to JSON Response for the use of mobile device Apps.\nUsed Spring Web component for support of web utilities.\nUsed JSON Lint to validate JSON request and response parameters.\nUsed XPath for selecting nodes from an XML document.\nDesigned and built new SOAP web service interface implemented in Java using Apache SOAP\nUsed AJAX to support dynamic page element rendering to enhance user experience.\nUsed SVN as Version Control to check-in and checkout Data.\nImplemented Design Patterns like MVC, Session Facade, Factory, and DAO.\nInvolved in component development and used design patterns such as Singleton, Factory and Data Access Object (DAO) in the implementation of the application. \nUsed Spring Context for EJB Support and Spring DAO for enhanced JDBC and DAO support.\nCreated Stored procedures using PL/SQL for data modification (Using DML insert, update, delete) in Oracle.\nUsed Spring ORM component for Hibernate support for manipulating data for Oracle 10g.\nEnvironment: Java 1.6, J2EE 5, EJB 3.0, Spring Framework, Apache Wicket, Adapter Service Interface(ASI) framework, HTML, JavaScript, JSF, XHTML, DHTML, JSON, JSON Lint, UML, IBM WebSphere 6.5 application server, Rational Rose, IBM Rational Software Architect, SVN, ANT and Oracle.\nResponsibilities:\nDesigned Use Case and Sequence Diagrams according to UML standard using Rational Rose. \nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the \nentire application using Struts Framework. \nPerformed client side validations using JavaScript and server side validations using in built Struts Validation \nFramework. \nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to \nthe relational database. \nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from \nHibernate DAO layer. \nUsed HQL statements and procedures to fetch the data from the database. \nTransformed, Navigated and Formatted XML documents using XSL, XSLT. \nUsed JMS for asynchronous exchange of message by applications on different platforms. \nDeveloped the view components using JSP, HTML, StrutsLogictags and Strutstaglibraries. \nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to \ndelegate request to appropriate resources. \nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL. \nWorked on Linux environment for jobs scheduling forInbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing. \nDeployed application in WebSphereApplication Server and developed using Rational Application Developer RAD. \nEnvironment: Struts 2.0, Hibernate 3.0, JSP, RAD, JMS, CVS, JavaScript,, XSL, XSLT, Servlets 2.5, Websphere Application Server 6.1, Oracle 10g.\nResponsibilities:  \nWeb based search console for all products\nAttractive common look & feel, components on IE, Firefox browsers\nSingle query initiates search across all products. Searching is done very fast (in milliseconds). \nCombines all results from all terminals and presented to user.\nDeveloped presentation screens by using JSP, HTML and JavaScript. \nDeveloped Session beans for functionality as per the requirement. \nPrepared Unit test cases for existing functionality as per the requirement and execute the same. \nCreated dynamic XSL to transform XML to target platform language, HTML.\nInvolved in the Integration testing support and involved in bug fixing. \nResponsible for writing detail design documents and class diagrams and sequence diagrams. \nUsed different Design patterns like MVC pattern, DAO pattern, and singleton to achieve clean separation of layers. \nInvolved in Core Java coding by using Java APIs such as Collections, Multithreading, Exception Handling, Generics, Enumeration, and Java I/O to fulfill the implementation of business logic.\nDeveloped Custom tag libraries to separate presentation and processing logic. \nDeployment of .ear files in Tomcat server.\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs) \nUsed Lo4j debugging tool to monitor the Error Logs. \nInvolved in developing SQL queries, stored procedures, and functions. \nInvolved in tracking and resolving Production issues. \nEnvironment:Servlets 2.5, JSP 2.1, Eclipse, JDBC, JavaScript, HTML, Oracle, PL/SQL, SVN, Hibernate 3.0 and Apache Tomcat\nEDUCATION:\nBachelor’s in Computer Science’09",
  "cleaned_text": "Candidate PROFESSIONAL SUMMARY Over years of professional experience in designing, developing and testing internet intranet Web-based applications, Enterprise applications using J EE Architecture, Core Java concepts. Experience working with Software Development Life Cycle SDLC methodologies-Agile,Waterfall Model. Expertise in using Object Oriented Programming OOPS Principles and Design patterns like Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern. . Extensive experience in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, EnterpriseJava Beans. Expertise in development of web and enterprise-level applications using Spring, Hibernate, Struts framework, EJB, Servlets. Experienced in Middleware persistence framework like Hibernate JPA for mapping Java classes with database using HQL. Implemented based on corresponding view components with view components HTML , CSS , XSD, XSTL. Experienced in Front End frameworks such as jQuery, Ajax, JavaScript, Node.js, ReactJS, AngularJS, Angular ,ExtJs. Proficient in Client Side Validations, Client-server data Interaction with Ajax in Node.js, Back bone.JS. Hands on experience in developing and solid understanding of Micro-Services Architecture, Service Oriented Architecture SOA and Test-Driven Development. Extensively used different Tag Libraries likeStruts Tags, JSTL, Spring Tags, Display Tag, XML XSD. Experienced in frameworks Spring MVC, Jakarta Struts framework, JSF, Spring and Hibernate. Experience with Spring MVC, IOC, AOP, Spring JDBC, Spring JTA, Spring IO, Spring Security, Spring Boot, Spring Microservices, Spring Ribbon, Spring Netflix, Spring Zuul, Spring Eureka withThymeleaf,Pivotal Cloud Foundry. Experience in Spring Security for User Access Management and LDAP configuration for authentication, authorization. Developed applications using latest technologies like EJB . , Spring .x .x .x, Hibernate . .x, and REST based Web services axis . , JAX WS . , Rules Engines Drools . , ILOG , XML API and tools. Experienced in Distributed Transaction Management system with Spring JTA based on Atomikos. Experience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic, and JBoss Servers. Experienced in developing UNIXshell scripts for batch processing. Good Knowledge on Apache Storm which is used for real-time Stream processing and end-to-end delivery response. Developed SQL queries, procedures, Triggers and Stored Procedures in databases such as Oracle, DB and MySQL. Experienced in working on modern MEAN Stack- MongoDB, Express.JS, AngularJSand NodeJS. Experienced in working with multiple databases like Oracle g, SQL Server, MySQL, DB , NOSQL DB mongo Cassandra and Cache database , involved in converting Cassandra SQL queries to Spark transformations using Spark RDDs. Developed multiple POCs using Scalaand deployed on the Yarn cluster, performance of Spark, with Cassandra and SQL. Hands on experience with Play Framework MVC model, Object relational mapping tools like slick. Good experience in using Amazon Web Services AWS and AWS SNS SQS for delivering messages. Experienced in AWS, EC Container Services Docker, VPC with Security Groups, S , IAM, SNS, Lambda, Route , CloudWatchetc Services . Experience in on AWS Cloud DevOps, Continuous Integration and Continuous Delivery CI CD pipeline , Build and Release management, Linux Windows administration and support. Developed microservices using Spring MVC, Spring Boot, Spring Cloud, Spring AOP, Dependency Injection and JPA Experience in upgrading and migrating various versions of Mongo DB on different platforms. Experienced in performing unit testing using JUnit, integration and deployment of applications using tools such as ANT and Maven& debugging through log j. Experience in JUnit frame work with Mockito and Easy mock, SpringJunitRunner. Experienced in Development, testing and deployment of enterprise applications on Windows&UNIX platforms using IDE s such as Eclipse, Rational Application Developer RAD , Netbeans, intellij .x .x Experience in using different version controlling tracking systems SVN, CVS, GIT, and Rational Clear Case. Good Knowledge in Apache Active MQ Series with Camel most widely used as service bus. Experience with Streaming platforms like Apache Kafka. Good Understandingon Azure which is mostly used as Service bus and used Azure tobuild, deploy and manage the application through the global network through the datacenters. Experienced in Full stack front end technologies using Grunt js, Glup Server, Yoman generator for Angular, Vue JS. Expertise in Selenium automation using Selenium WebDriver, Selenium Grid, JAVA, JUnit&PowerMonk. Performed Integration and deployment of applications done using tools such as ANT, Maven and Gradle. Maintained the Selenium & JAVA automation code and resources in source controls like CVS, SVN over the time for improvements and new features. TECHNICAL SKILLS PROFESSIONAL EXPERIENCE Responsibilities Actively involved in mock screens development and project start-up phase. Efficiently managed the tasks and working and delivering features in a fast-paced scrum environment Experience working in Agile development following SCRUM process, Sprint and daily stand-up meetings. Involved in developing the UI, layout and front-end programming for web application that matches requirements of the client. Developed UI Layer for the application using HTML , CSS , Angular and Bootstrap. Written code on Typescript and ES to implement Angular Components and worked on different changed procedures of AngularJS to Angular . . Followed Java & J EE design patterns and the coding guidelines to design and develop the application. Worked with advanced MVC framework such as Spring-IOC, AOP, MVC, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Eureka, Spring Netflixand Batch which is used for implementing backend functionality. Extensively used various Spring Framework modules like MVC, Auto Wiring, Spring Security, and AOP. Created and injected spring services, spring controllers and DAOs to achieve dependency injection and to wire objects of business classes. Participated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many requests. Used advanced java features like Lambda expressions for array operations, collections and Enhanced concurrency methods etc. throughout the application for well-defined programming. Worked with Java Lambda for adding functionality processing capability and Stream API to facilitate pipeline processing and used Filter method to eliminate elements based on the criteria. Used Hibernate, object relational-mapping ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema. Used Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts. Involved in development of new functionality of WebSphere commerce, Java, J EE and WebSphere MQ. Wrote SQL queries, stored procedures and enhanced performance by running explain plans. Designed and developed Microservices using REST framework. Developed Microservices using Spring MVC, Spring Boot, Spring Cloud, Spring AOP, Dependency Injection. Developed Microservices to communicate using synchronous protocols HTTP and REST for implementingSOA. Deployed Spring Boot MicroservicesDocker container using Amazon EC container services and AWS admin console. Utilized AWS Lambda platform to upload data into AWS S bucket and to trigger other Lambda functions. Used a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers. Implemented Authentication & Authorization with Site Minder and spring security. Analysed current legacy infrastructure, established business case, and built consensus for virtualized IaaS PaaS near term strategy with SaaSmobile cloud services end state. Worked on creation of custom Docker container images, pushing images, integration ofSpring boot. Upgraded the swagger to new version while maintaining the look and functionality of the UI. Hands on experience with MongoDB Installation, Configuring, Monitoring and Designing Shared Environment. Developed Kafkaconsumers to consume data from Kafkatopics. Produced as well as consumed RESTfulweb services using Jersey API s. Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins. Fixed defects identified during QA, UAT and Production. Written highly referenced blog posts on Error Handling in Scala and Problems Scala Fixes. Done with Web logic application server set up & deployed the application on it. Involved in CI CD process using GIT, Jenkins job creation, Maven build and publish, and Fabric implementation Involved in deploying the application in UNIX and to connect to see logs for fixing UAT Production defects. Developed, executed and maintained Selenium automation scripts for web application. Hands on experience JBOSS DROOLS, Guvnor, writing Business rules, Decision Tables, Agenda Filter, Knowledge Base, and JBPM. Develop custom app configurations deployment-apps within SPLUNK to Parse, Index multiple types of log format across all application environment. Created continuous integration builds using AntJenkins and deployed on WebSphere app server. Worked on automation platforms like Ansible. Deployed Application instance on JBoss Server. Environment Web Services, Spring .x, Hibernate .x, HTML , JSP,JavaScript, JQuery, AJAX, GWT,CSS , Angular ,RESTful,XML, WSDL, Java . , J EE,Scala, Kafka, Agile Methodology, JIRA processes,GIT,Design Patterns, PL SQL, Junit, WebSphere MQ, Amazon Elastic Beanstalk, S ,Maven, Eclipse IDE,, Apache Kafka, MongoDB, Docker, CVS. Responsibilities Designed and developed code for Exchange project using the Java EE platform. Actively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model. Used Java-J EE patterns like Model View Controller MVC , Business Delegate, Data Transfer Objects, Data Access Objects, factory patterns. Designed and developed the End Points Controllers , Business Layer, DAO Layer using Hibernate and Spring IOC Dependency Injection . Extensively used MVC, Factory, Delegate and Singleton design patterns. Implemented SOA to develop REST Based Web services using Apache Axis. Developed REST Web Services clients to consume those Web Services as well other enterprise wide Web Services. Designed and Developed Presentation Tier using Spring MVC and JSP integrating Custom Tags, JSTL, JSP Expression Language and AJAX. Used Hibernate framework for back end development and Spring dependency injection for middle layer development Used Spring MVC Transaction Management, Spring Hibernate Batch Transactions and Hibernate cache concepts. Modified the Spring Controllers and Services classes so as to support the introduction of spring framework. Used Spring Framework AOP Module to implement logging in the application to know the application status. Worked on Spring Quartz, form based authentication with Cross-Site Request Forgery CSRF token and secured REST endpoints with HTTP Basic authentication Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies. Deployed Spring Boot based micro services Docker container using Amazon EC container services and using AWS admin console. Used DAO pattern to fetch data from database using Hibernate to carry out various database. Developed various generic JavaScript functions used for validations. Developed Application to asses JSON and XMl from Restful web service from consumer side using AngularJS. Used Spring Inheritance to develop beans from already developed parent beans. Designed and Implemented REST web services using JAX-RS, Spring REST. Used Java Message Service JMS for reliable and asynchronous exchange of important information for status report. Wrote AngularJS services to consume Restful web service to load data. Integrated the Java code API in JSP pages and responsible for setting upAngularJS framework for UI development. Worked with Swing and RCP using Oracle ADF to develop a search application which is a migration project. Wrote Scala classes to interact with the database. Used Source Tree for Git Subversion tool . Used Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts. Defined MultiAction, AbstractWizardForm and SimpleForm Controllers using Spring MVC framework providing very clean division between controllers, flexibility with the use of interfaces and providing thin web layer over business layer. Developed screens using JSP, JavaScript, AJAX and Ext JS. Developed entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids. Used JENKINS to build and deploy the code in Dev and SIT environments. Deployed the application Code to various Remediation engines using JENKINS. Used AJAX extensively to implement front end user interface features in the application. Implemented SOA to develop Web services using Apache Axis. Developed Web Services clients to consume those Web Services as well other enterprise wide Web Services. Exposed the Web Services to the client applications by sharing the WSDLs. Developed unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF j Log j. Managed and maintained NoSQL MongoDB databases in production domain. Focused on Test Driven Development TDD thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. Extensively worked on TOAD for interacting with data base, developing the stored procedures and promoting SQL changes to QA and Production Environments. Used Apache Maven for project management and building the application Environment Java J EE, Spring .x, Hibernate .x, Angular JS, HTML, XML, AJAX, CSS, JavaScript,Restful, GIT, MAVEN, Mongo DB, Application Server . , WID . . , Rational Application Developer . , Web Services, Apache Axis, Scala, Agile Methodology, JAXB, JSP, RAD. Responsibilities Involved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project was developed using Agile based SCRUM Methodology. Implemented Struts Framework and Hibernate in the new version of the Application. Involved in coding for the presentation layer using Struts and JavaScript. Used JSP, Struts and Java script libraries like Backbone and Jquery to develop the User Interface. Developed Action classes, Dyna Action Forms and used Validation framework. Developed XML application using XSLT transformations. Involved in developing the User interfaces using HTML, CSS , JSP and java script. Created the view pages UI using JSP and JavaScript JQuery. Implemented Marionette which is a composite application library for Backbone.js in order to simplify the large scale JavaScriptapplications. Extensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing. Involved in development maintenance of various web services using IBM Websphere to interact with other applications. Implemented the XSLT templates to apply the access to the tabs modules based on the logged in user role. Developed multiple tools including Site Scanning tool, Report Analyzer tool used for site scanning and report generating. Wrote various select update insertSQL queries and stored procedures for Sql Server. Successfully executing offshore modeling by effective and on time knowledge sharing with offshore projectgroups through weekly team meetings and daily status update calls. Used collections interface to provide a dynamic user interface. Handled Java multi threading part in back-end component, one thread will be running for each user, which servesthat user. Gained hand-on development experience with Linux environment and Tomcat server Built single page application using Angular JS. Worked on EXT JS for Rich Web Application. Involved in unit testing, troubleshooting and debugging. Modifying programs with enhancements. Involved in fixing bugs the bugs or defects in the application. Developed the UNIX shell scripts to automate jobs. Used JMS for asynchronous communication between different modules. Involved in consuming, producing SOAP based web services using JAX-WS. Implemented SOAP over HTTP and SOAP over JMS communication. Worked as the part of a core team to monitor and enhance the performance of the application. Provide guidance and direction to team members in their day-to-day activities. Environment Jakarta Struts Framework . , Core Java, Hibernate . , Web Services, CSS, eclipse Helios, CVS, Web Sphere Application Server . , Unix Linux, AWS, JUnit, HTML , CSS, Angular JS, BackBone JS, JSON, UNIX, JavaScript, Servlets, Ext JS,JSP, SOAP, JDBC, JQuery, PL SQL. Responsibilities Involved in Object analysis, design and documentation OOAD of the application model using UML. Involved in development of the application using Spring Web MVC and other components of the Spring Framework, the controller being Spring Core. Also implemented Dependency Injection using the Spring IOC framework. Designed and developed User Interface, application modules using Wicket pages, Spring, JavaBeans, HTML, CSS, JavaScript and AJAX. Designed and developed interactive static HTML screens as screen level prototype, JavaScript for client side validation. Designed Service Adapter using Adapter Service Interface ASI framework to interact with mobile devices. Developed Action controller, Action Forms, Tiles Structure, Validation Form Beans, AJAX code, JavaScript and worked on integration. Used Cascading Style Sheet CSS for designing the web pages. Implementation and maintenance of a Java GUI application using JSF components. Extensive use of JSF Framework for Controller components and View components. Involved in transforming service response to JSON Response for the use of mobile device Apps. Used Spring Web component for support of web utilities. Used JSON Lint to validate JSON request and response parameters. Used XPath for selecting nodes from an XML document. Designed and built new SOAP web service interface implemented in Java using Apache SOAP Used AJAX to support dynamic page element rendering to enhance user experience. Used SVN as Version Control to check-in and checkout Data. Implemented Design Patterns like MVC, Session Facade, Factory, and DAO. Involved in component development and used design patterns such as Singleton, Factory and Data Access Object DAO in the implementation of the application. Used Spring Context for EJB Support and Spring DAO for enhanced JDBC and DAO support. Created Stored procedures using PL SQL for data modification Using DML insert, update, delete in Oracle. Used Spring ORM component for Hibernate support for manipulating data for Oracle g. Environment Java . , J EE , EJB . , Spring Framework, Apache Wicket, Adapter Service Interface ASI framework, HTML, JavaScript, JSF, XHTML, DHTML, JSON, JSON Lint, UML, IBM WebSphere . application server, Rational Rose, IBM Rational Software Architect, SVN, ANT and Oracle. Responsibilities Designed Use Case and Sequence Diagrams according to UML standard using Rational Rose. Implemented Model View Controller MVC- architecture and developed Form classes, Action Classes for the entire application using Struts Framework. Performed client side validations using JavaScript and server side validations using in built Struts Validation Framework. Implemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from the database. Transformed, Navigated and Formatted XML documents using XSL, XSLT. Used JMS for asynchronous exchange of message by applications on different platforms. Developed the view components using JSP, HTML, StrutsLogictags and Strutstaglibraries. Involved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. Involved in developing SQL queries, stored procedures, and functions. Creation of database objects like tables, views using oracle tools like Toad, and SQL plus. Involved in writing Stored Procedure in using PL SQL. Worked on Linux environment for jobs scheduling forInbound data on monthly basis. Used JUnit Testing Framework for performing Unit testing. Deployed application in WebSphereApplication Server and developed using Rational Application Developer RAD. Environment Struts . , Hibernate . , JSP, RAD, JMS, CVS, JavaScript,, XSL, XSLT, Servlets . , Websphere Application Server . , Oracle g. Responsibilities Web based search console for all products Attractive common look & feel, components on IE, Firefox browsers Single query initiates search across all products. Searching is done very fast in milliseconds . Combines all results from all terminals and presented to user. Developed presentation screens by using JSP, HTML and JavaScript. Developed Session beans for functionality as per the requirement. Prepared Unit test cases for existing functionality as per the requirement and execute the same. Created dynamic XSL to transform XML to target platform language, HTML. Involved in the Integration testing support and involved in bug fixing. Responsible for writing detail design documents and class diagrams and sequence diagrams. Used different Design patterns like MVC pattern, DAO pattern, and singleton to achieve clean separation of layers. Involved in Core Java coding by using Java APIs such as Collections, Multithreading, Exception Handling, Generics, Enumeration, and Java I O to fulfill the implementation of business logic. Developed Custom tag libraries to separate presentation and processing logic. Deployment of .ear files in Tomcat server. Worked on Hibernate persistence tier. This involves developing mapping files and Hibernate POJOs DAOs Used Lo j debugging tool to monitor the Error Logs. Involved in developing SQL queries, stored procedures, and functions. Involved in tracking and resolving Production issues. Environment Servlets . , JSP . , Eclipse, JDBC, JavaScript, HTML, Oracle, PL SQL, SVN, Hibernate . and Apache Tomcat EDUCATION Bachelors in Computer Science",
  "preprocessed_text": "candidate professional summary year professional experience designing developing testing internet intranet web-based application enterprise application using ee architecture core java concept experience working software development life cycle sdlc methodologies-agile waterfall model expertise using object oriented programming oops principle design pattern like singleton factory pattern prototype business delegate session facade service locator observer decorator front controller dao pattern extensive experience core java concept like exception handling multi-threading synchronization serialization io collection framework enterprisejava bean expertise development web enterprise-level application using spring hibernate strut framework ejb servlets experienced middleware persistence framework like hibernate jpa mapping java class database using hql implemented based corresponding view component view component html cs xsd xstl experienced front end framework jquery ajax javascript node.js reactjs angularjs angular extjs proficient client side validation client-server data interaction ajax node.js back bone.js hand experience developing solid understanding micro-services architecture service oriented architecture soa test-driven development extensively used different tag library likestruts tag jstl spring tag display tag xml xsd experienced framework spring mvc jakarta strut framework jsf spring hibernate experience spring mvc ioc aop spring jdbc spring jta spring io spring security spring boot spring microservices spring ribbon spring netflix spring zuul spring eureka withthymeleaf pivotal cloud foundry experience spring security user access management ldap configuration authentication authorization developed application using latest technology like ejb spring .x .x .x hibernate .x rest based web service axis jax w rule engine drool ilog xml api tool experienced distributed transaction management system spring jta based atomikos experience configuring deploying application tomcat websphere weblogic jboss server experienced developing unixshell script batch processing good knowledge apache storm used real-time stream processing end-to-end delivery response developed sql query procedure trigger stored procedure database oracle db mysql experienced working modern mean stack- mongodb express.js angularjsand nodejs experienced working multiple database like oracle sql server mysql db nosql db mongo cassandra cache database involved converting cassandra sql query spark transformation using spark rdds developed multiple pocs using scalaand deployed yarn cluster performance spark cassandra sql hand experience play framework mvc model object relational mapping tool like slick good experience using amazon web service aws aws sn sqs delivering message experienced aws ec container service docker vpc security group iam sn lambda route cloudwatchetc service experience aws cloud devops continuous integration continuous delivery ci cd pipeline build release management linux window administration support developed microservices using spring mvc spring boot spring cloud spring aop dependency injection jpa experience upgrading migrating various version mongo db different platform experienced performing unit testing using junit integration deployment application using tool ant maven debugging log j. experience junit frame work mockito easy mock springjunitrunner experienced development testing deployment enterprise application window unix platform using ide eclipse rational application developer rad netbeans intellij .x .x experience using different version controlling tracking system svn cv git rational clear case good knowledge apache active mq series camel widely used service bus experience streaming platform like apache kafka good understandingon azure mostly used service bus used azure tobuild deploy manage application global network datacenters experienced full stack front end technology using grunt j glup server yoman generator angular vue j expertise selenium automation using selenium webdriver selenium grid java junit powermonk performed integration deployment application done using tool ant maven gradle maintained selenium java automation code resource source control like cv svn time improvement new feature technical skill professional experience responsibility actively involved mock screen development project start-up phase efficiently managed task working delivering feature fast-paced scrum environment experience working agile development following scrum process sprint daily stand-up meeting involved developing ui layout front-end programming web application match requirement client developed ui layer application using html cs angular bootstrap written code typescript e implement angular component worked different changed procedure angularjs angular followed java ee design pattern coding guideline design develop application worked advanced mvc framework spring-ioc aop mvc spring mvc spring dao spring boot spring batch spring heroku spring security spring integration spring eureka spring netflixand batch used implementing backend functionality extensively used various spring framework module like mvc auto wiring spring security aop created injected spring service spring controller daos achieve dependency injection wire object business class participated coding spring aop component logging exception handling transactional model handle many request used advanced java feature like lambda expression array operation collection enhanced concurrency method etc throughout application well-defined programming worked java lambda adding functionality processing capability stream api facilitate pipeline processing used filter method eliminate element based criterion used hibernate object relational-mapping orm solution technique mapping data representation mvc model oracle relational data model sql-based schema used hibernate transaction management hibernate batch transaction hibernate cache concept involved development new functionality websphere commerce java ee websphere mq wrote sql query stored procedure enhanced performance running explain plan designed developed microservices using rest framework developed microservices using spring mvc spring boot spring cloud spring aop dependency injection developed microservices communicate using synchronous protocol rest implementingsoa deployed spring boot microservicesdocker container using amazon ec container service aws admin console utilized aws lambda platform upload data aws bucket trigger lambda function used microservice architecture spring boot-based service interacting combination rest apache kafka message broker implemented authentication authorization site minder spring security analysed current legacy infrastructure established business case built consensus virtualized iaa paas near term strategy saasmobile cloud service end state worked creation custom docker container image pushing image integration ofspring boot upgraded swagger new version maintaining look functionality ui hand experience mongodb installation configuring monitoring designing shared environment developed kafkaconsumers consume data kafkatopics produced well consumed restfulweb service using jersey api s. developed maven script developed build using maven continuous integration server like jenkins fixed defect identified qa uat production written highly referenced blog post error handling scala problem scala fix done web logic application server set deployed application involved ci cd process using git jenkins job creation maven build publish fabric implementation involved deploying application unix connect see log fixing uat production defect developed executed maintained selenium automation script web application hand experience jboss drool guvnor writing business rule decision table agenda filter knowledge base jbpm develop custom app configuration deployment-apps within splunk parse index multiple type log format across application environment created continuous integration build using antjenkins deployed websphere app server worked automation platform like ansible deployed application instance jboss server environment web service spring .x hibernate .x html jsp javascript jquery ajax gwt cs angular restful xml wsdl java ee scala kafka agile methodology jira process git design pattern pl sql junit websphere mq amazon elastic beanstalk maven eclipse ide apache kafka mongodb docker cv responsibility designed developed code exchange project using java ee platform actively involved analysis design development system testing user acceptance testing successfully followed agile methodology scrum cycle model used java-j ee pattern like model view controller mvc business delegate data transfer object data access object factory pattern designed developed end point controller business layer dao layer using hibernate spring ioc dependency injection extensively used mvc factory delegate singleton design pattern implemented soa develop rest based web service using apache axis developed rest web service client consume web service well enterprise wide web service designed developed presentation tier using spring mvc jsp integrating custom tag jstl jsp expression language ajax used hibernate framework back end development spring dependency injection middle layer development used spring mvc transaction management spring hibernate batch transaction hibernate cache concept modified spring controller service class support introduction spring framework used spring framework aop module implement logging application know application status worked spring quartz form based authentication cross-site forgery csrf token secured rest endpoint basic authentication worked spring quartz functionality scheduling task generating monthly report customer sending mail different policy deployed spring boot based micro service docker container using amazon ec container service using aws admin console used dao pattern fetch data database using hibernate carry various database developed various generic javascript function used validation developed application ass json xml restful web service consumer side using angularjs used spring inheritance develop bean already developed parent bean designed implemented rest web service using jax-rs spring rest used java message service jms reliable asynchronous exchange important information status report wrote angularjs service consume restful web service load data integrated java code api jsp page responsible setting upangularjs framework ui development worked swing rcp using oracle adf develop search application migration project wrote scala class interact database used source tree git subversion tool used hibernate transaction management hibernate batch transaction hibernate cache concept defined multiaction abstractwizardform simpleform controller using spring mvc framework providing clean division controller flexibility use interface providing thin web layer business layer developed screen using jsp javascript ajax ext j developed entire user interface using various ext j component like form panel tab panel view port editable grid used jenkins build deploy code dev sit environment deployed application code various remediation engine using jenkins used ajax extensively implement front end user interface feature application implemented soa develop web service using apache axis developed web service client consume web service well enterprise wide web service exposed web service client application sharing wsdls developed unit test case using mockito framework testing accuracy code logging done using slf log j. managed maintained nosql mongodb database production domain focused test driven development tdd thereby creating detailed junit test every single piece functionality actually writing functionality extensively worked toad interacting data base developing stored procedure promoting sql change qa production environment used apache maven project management building application environment java ee spring .x hibernate .x angular j html xml ajax cs javascript restful git maven mongo db application server wid rational application developer web service apache axis scala agile methodology jaxb jsp rad responsibility involved various sdlc phase like requirement gathering design analysis code development project developed using agile based scrum methodology implemented strut framework hibernate new version application involved coding presentation layer using strut javascript used jsp strut java script library like backbone jquery develop user interface developed action class dyna action form used validation framework developed xml application using xslt transformation involved developing user interface using html cs jsp java script created view page ui using jsp javascript jquery implemented marionette composite application library backbone.js order simplify large scale javascriptapplications extensively used java script enforce client side validation also used jquery ajax processing involved development maintenance various web service using ibm websphere interact application implemented xslt template apply access tab module based logged user role developed multiple tool including site scanning tool report analyzer tool used site scanning report generating wrote various select update insertsql query stored procedure sql server successfully executing offshore modeling effective time knowledge sharing offshore projectgroups weekly team meeting daily status update call used collection interface provide dynamic user interface handled java multi threading part back-end component one thread running user servesthat user gained hand-on development experience linux environment tomcat server built single application using angular j worked ext j rich web application involved unit testing troubleshooting debugging modifying program enhancement involved fixing bug bug defect application developed unix shell script automate job used jms asynchronous communication different module involved consuming producing soap based web service using jax-ws implemented soap soap jms communication worked part core team monitor enhance performance application provide guidance direction team member day-to-day activity environment jakarta strut framework core java hibernate web service cs eclipse helios cv web sphere application server unix linux aws junit html cs angular j backbone j json unix javascript servlets ext j jsp soap jdbc jquery pl sql responsibility involved object analysis design documentation ooad application model using uml involved development application using spring web mvc component spring framework controller spring core also implemented dependency injection using spring ioc framework designed developed user interface application module using wicket page spring javabeans html cs javascript ajax designed developed interactive static html screen screen level prototype javascript client side validation designed service adapter using adapter service interface asi framework interact mobile device developed action controller action form tile structure validation form bean ajax code javascript worked integration used cascading style sheet cs designing web page implementation maintenance java gui application using jsf component extensive use jsf framework controller component view component involved transforming service response json response use mobile device apps used spring web component support web utility used json lint validate json response parameter used xpath selecting node xml document designed built new soap web service interface implemented java using apache soap used ajax support dynamic element rendering enhance user experience used svn version control check-in checkout data implemented design pattern like mvc session facade factory dao involved component development used design pattern singleton factory data access object dao implementation application used spring context ejb support spring dao enhanced jdbc dao support created stored procedure using pl sql data modification using dml insert update delete oracle used spring orm component hibernate support manipulating data oracle g. environment java ee ejb spring framework apache wicket adapter service interface asi framework html javascript jsf xhtml dhtml json json lint uml ibm websphere application server rational rose ibm rational software architect svn ant oracle responsibility designed use case sequence diagram according uml standard using rational rose implemented model view controller mvc- architecture developed form class action class entire application using strut framework performed client side validation using javascript server side validation using built strut validation framework implemented data persistence functionality application using hibernate persist java object relational database used hibernate annotation reduce time configuration level accessed annotated bean hibernate dao layer used hql statement procedure fetch data database transformed navigated formatted xml document using xsl xslt used jms asynchronous exchange message application different platform developed view component using jsp html strutslogictags strutstaglibraries involved designing implementation session facade business delegate service locator pattern delegate appropriate resource involved developing sql query stored procedure function creation database object like table view using oracle tool like toad sql plus involved writing stored procedure using pl sql worked linux environment job scheduling forinbound data monthly basis used junit testing framework performing unit testing deployed application websphereapplication server developed using rational application developer rad environment strut hibernate jsp rad jms cv javascript xsl xslt servlets websphere application server oracle g. responsibility web based search console product attractive common look feel component ie firefox browser single query initiate search across product searching done fast millisecond combine result terminal presented user developed presentation screen using jsp html javascript developed session bean functionality per requirement prepared unit test case existing functionality per requirement execute created dynamic xsl transform xml target platform language html involved integration testing support involved bug fixing responsible writing detail design document class diagram sequence diagram used different design pattern like mvc pattern dao pattern singleton achieve clean separation layer involved core java coding using java apis collection multithreading exception handling generic enumeration java fulfill implementation business logic developed custom tag library separate presentation processing logic deployment .ear file tomcat server worked hibernate persistence tier involves developing mapping file hibernate pojos daos used lo debugging tool monitor error log involved developing sql query stored procedure function involved tracking resolving production issue environment servlets jsp eclipse jdbc javascript html oracle pl sql svn hibernate apache tomcat education bachelor computer science",
  "statistics": {
    "word_count": 3803,
    "unique_word_count": 1066,
    "avg_word_length": 5.150407572968709,
    "stopword_count": 698
  },
  "metadata": {
    "filename": "Candidate152_Java Fullstack Developer.docx",
    "file_size": 58788,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:55.536958",
    "input_filename": "Candidate152_Java Fullstack Developer.json"
  }
}