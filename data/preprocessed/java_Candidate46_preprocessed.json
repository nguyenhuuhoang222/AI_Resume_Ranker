{
  "id": "java_Candidate46",
  "raw_text": "Candidate 46\nSR. Java/J2ee Developer\nEmail: candidate46@gmail.com\t\t\t\t\t\tPH: 925-587-3512\nProfessional Summary:\n8+ Years of professional experience in Software Development Life Cycle (SDLC) core area such as Analysis, Design, Coding, Implementation Testing, and Deployment of Object Oriented and Web based Enterprise Applications using Java/J2EE technology. \nWide experience in Application Design and Development of Client/Server Applications, Servlets/Applet communication, Internet/Intranet based applications using OOA, OOD, OOP, SOA, MVC and J2EE. \nProficient in developing web based applications using Java and J2EE technologies like JSP, Servlets, EJB, Struts, JDBC, JMS, Spring, Hibernate, JSF, XML, SAX/DOM, JAX-B. \nExpertise in developing multi-tier applications using Struts MVC, JSF and Spring MVC. \nExtensive experience with AWS (AWS Cloud Formation, AWS ECS and EC2, S3 etc.\nCan configure Jenkins on EC2 servers and integrated it with AWS Code Commit.\nExperience in developing persistent layer with Hibernate interfaces and annotations with good performance optimization \nStrong experience implementing various J2EE design patterns like Singleton, Service Locator, Session Façade, Data Access Objects (DAO) and Factory for executing multi-tier, highly scalable, component based, and services driven Enterprise Java applications. \nExperience in implementing SOA architectures with web services using WSDL, SOAP and UDDI. \nExpertise in design and development of Web Services which includes handling SOAP/REST Requests and Response using WSDL, JAX-RPC, JAX-WS and Web Services authentications \nExpertise in building rich, interactive user interfaces using HTML, CSS, JavaScript, jQuery, Node.js and Angular.js. \nHands on experience in developing user interfaces with HTML, DHTML, JSP/JSTL, Bootstrap and CSS.\nWorked extensively with GUI frameworks JSF and Swing. \nStrong experience in developing XML Schemas, WSDL documents, XML Parsing and Binding for Web Service development \nExpertise in XML and schemas like XSD, DTD and validating/non-validating parsers of JAXP (SAX & DOM) and JAXB. \nVery good implementation experience of Object Oriented concepts, Multithreading and Java/scala.\nExperience in implementing JUNIT with Mockito/Power Mock test cases \nHands on experience in Test Driven Development (TDD) and expertise in Continuous Integration using Jenkins and task automation using ANT and Maven \nGood experience with version control systems like CVS, SVN and IBM Clear Case. \nGood working knowledge of XMLIDEs like Altova XML SPY. \nExperience with client side web technologies/frameworks such as Angular JS, Bootstrap CSS, Bower, Node JS, Ext JS and JQuery.\nExperience in build tools like Maven to build and deploy n-tier distributed enterprise applications. \nExperience in Importing data from various sources to the Cassandra cluster using Java API's. \nExperience in data modeling of Cassandra.\nExperience working in Kafka and Camel.\nExperienced in using Kafka as a distributed publisher-subscriber messaging system.\nStrong experience with MySQL, Oracle 9i/8i, DB2, and SQL Server 2000 and Excellent skills in creating and accessing Database using SQL Queries. \nCompetence in using Java IDE tools of Eclipse, Net Beans, My Eclipse and RAD. \nExpertise in deployment on Web/Application Servers like Tomcat7, JBoss7, WebSphere8.5 andweblogic11g. \nHave extensive experience in building and deploying applications on Web/Application Servers like JBoss, WebLogic, WebSphere, Glassfish and Tomcat.\nTechnical Skills: \nProgramming Languages: C, C++, Java Version 8 \nJava/J2EE Technologies: JSP 2.2, Servlets 3.0, EJB 3.1, JDBC 4.0 \nMessaging Servers: Active MQ, JMS \nProtocol specifications: SOAP 1.2, HTTP 1.0, RPC version 2.0 \nWeb Technologies: JavaScript 1.8.5, JQuery, AngularJS , XML 1.1, HTML 5.1, CSS 2.1, XTML 2.0, JSON RPC 2.0, Adobe Flex 3.0, WSDL 2.0, XML 2.0, XSD 1.1, AJAX \nFrameworks and Build Tools: Apache Struts, Hibernate 4.3, spring 4.1.5, ANT 1.9.3, Apache Maven 3.2.5, Log4J 1.2.17, Java EE Design Patterns \nWeb/Application Servers: Oracle WebLogic Application Server 12.1.3, IBM WebSphere Application Server 8.5, Apache Tomcat Webserver, JBoss  Application Sever 7.0 \nDatabases: MySQL, Big Data Hadoop, HDFS, Map Reduce, HIve, Oracle 9i/10g, MSSQL Server 2014, DB2 \nIDE Tools: Eclipse 4.4.2, NetBeans IDE 7.4, SDS, RAD 9.0.1 \nOperating Systems: Windows 7/8/8.1, UNIX, Linux Cent OS 7, Solaris 11, AIX (UNIX) 7.1, Windows Server 2008 R2.\nProfessional Experience: \nWalgreens - Deerfield, IL\t\t\t\t\t\tJune 2017 – Present.\nRole: Java/J2EE Developer\nResponsibilities: \nDesigned and developed user interface using front-end technologies like HTML, CSS, JavaScript, jQuery and AJAX. \nDeveloped UI Layer for the application using AngularJS, HTML5, CSS3, Bootstrap \nUsed Struts 2.x MVC framework and created Action Beans, Actions which determines the flow of the application based on the results obtained from the classes.(Controller). \nDeveloped application layout and composing tiles definitions, managed beans to use with JSF Spring Framework at Business Tier and uses Spring's Bean Factory for initializing services. \nDeveloped classes which handles the request parameters, process data, collect data retrieved from the database to List and Map interfaces and store it on objects.(Model) \nInvolved in integrating Single sign on which is provided by OIT as a web service. Used JAX-WS, XML RPC, JAXB technologies in generating client stubs. \nDeveloped internal application using Angular JS and Node JS connecting to Oracle on the backend.\nIn architecting various Business Layer and Data Management components of multi-tiered web based system over J2EE architecture. Responsible for JAVA, J2EE and Groovy coding / development.\nUsed Docker and Kitematic to run all the containers like Rabbit MQ, MySQL, mongo DB and static content by just running a small script in the terminal window.\nExperience in working with Groovy on Grails framework which makes creating complex workflows much simpler. \nBackend development using - Spring Boot, Spring Data, Java, Angular.js and groovy - repositories.\nUsed Apache Camel in the JBoss Fuse ESB as the integration platform for SOA Services. \nDeveloped GWT (Google Web Toolkit) 2.0 platform using API with MySQL as database and Tomcat.\nWorked on the modernization of a legacy and outsourced UI. Technologies used were Backbone.js, AngularJS, BootStrap.js and JQuery.\nDeveloped the User interfaces using HTML, PHP, JSF, JavaScript and AngularJS etc.\nInvolved in migration of the application from Sun Java Application server to Glassfish 3.2 environment. Responsible in mitigating the issues corresponding session stickiness, load balancing, setting up JDBC connection pools and other parameters on the app server. \nInvolved in creating, modifying and tuning SQL queries, prepared statements and stored procedures used by the application using PL/SQL developer and Oracle 9i as the database. \nUsed JNDI lookup in establishing a singleton database connection class using JDBC connection pools setup on the application server. \nDesigned and developed Microservices business components using Spring Boot. Consumed REST based Microservices with Rest template based on RESTful APIs.\nDeveloped MicroServices for Student, Tenant and Authorization modules.\nUsed Java Mailing or Messaging Service (JMS) API's for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems. \nUsed CVS code versioning system for code maintenance and used Log4j to generate logs used for maintenance and bug tracking. \nPerformed configuration, deployment and support of cloud services including Amazon Web Services (AWS).\nConfigured AWS Elastic Search to make for stream analytics.\nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS.\nBuild the application using TDD (Test Driven Development) approach. Used Oracle as database and Involved in the development of PL/SQL backend implementation and using SQL created Select, Update and Delete statements. \nInvolved in different phases of testing like Unit testing, regression, integration and stress testing using HP Load runner and also responsible for performance tuning, memory management and fixing bugs based on the test results. \nDeveloped web-based customer management software and SOA architecture using Facelets, my Faces /Richfaces, JSF, Spring and web services \n Environment: Java 1.7, J2EE, Net Beans 7.4, HTML, CSS,AWS, JavaScript, jQuery, Struts 1.2, JDBC, JNDI, Oracle 11g, Glassfish 3.2,  Apache Camel  ,ANT, jUnit4, Rabbit MQ, Log 4j, Backbone JS, PL/SQL developer, iText, Apache POI, Microservices.\nBANK OF AMERICA - Charlotte, NC\t\t\t\tSeptember 2016 – May 2017\nRole: JAVA DEVELOPER\nResponsibilities: \nWorked in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, analysis and development. \nDesigned and developed the front end using HTML, CSS, and JavaScript with Ajax. \nDesigned use case diagrams, class diagrams, and sequence diagrams as a part of Design Phase using Rational Rose. \nDeveloped the application implementing Spring MVC Architecture with Hibernate as ORM framework. \nUtilize Camel to integrate microservices with other microservices and RabbitMQ messaging exchanges.\nRabbitMQ was used to send/receive asynchronous data \nResponsible in developing Spring Boot Microservices from scratch.\nDeveloped single page applications, components using Angular JS directives, controllers, view and routing, service modules. \nKnowledge on Angular JS for effective Web Application Development.\nDeveloped a JavaScript performance testing toolkit for web and Node.js applications. \nUsed JNDI to perform lookup services for the various components of the system. \nDeveloped the Enterprise Java Beans (Stateless Session beans) to handle different transactions such as online funds transfer, bill payments to the service providers. \nDeveloped deployment descriptors for the EJB have to deploy on Web Sphere Application Server. \nUsed Mongo DB for persisting Json.\nJava Based Quality Center plugin which can be used in any tools such as Selenium, RFT etc. Developed Ruby on Rails web applications using MongoDB and back-ground processes using Resque and Redis.\nWorked on Distributed messaging system RabbitMQ to send messages to Existing Applications. \nImplemented Service Oriented Architecture (SOA) using JMS for sending and receiving messages while creating web services. \nDeveloped Web Services for data transfer from client to server and vice versa using Apache Axis, SOAP, WSDL, and UDDI. \nDesigned and coded highly-available systems/web applications with java script, Node.js. Provided Node.js for architecture. Used Hibernate to access database and perform database updating. \nExperience in working with Groovy on Grails framework which makes creating complex workflows much simpler. \nImplemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. \nInvolved in designing front-end screens using Java script, JSP, JSTL, Angular JS, Backbone JS, AJAX, HTML5, CSS3 and DHTML. \nInvolved in production support, monitoring server and error logs and Foreseeing the Potential Issues, and escalating to the higher levels.\nHands on experience in writing light weight Node.JS express server and used technologies like Ajax, JavaScript/JQuery, Json to make connections between server and databases like MongoDB and MySQL.\nExperience in working with the Columnar NoSQL Database like HBase, Cassandra to manage extremely large data sets. \nExperience in data extraction into DataStax Cassandra cluster from Oracle (RDBMS) using Java Driver or Sqoop tools.\nExtensively worked on MQ Series using point-point, publisher/subscriber messaging Domains for implementing Exchange of information through Messages. \nDeveloped XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems. \nImplemented various J2EE Design patterns like Singleton, Service Locator, Business Delegate, DAO, Transfer Object, and SOA. \nWorked on AJAX to develop an interactive Web Application and JavaScript for Data Validations. \nUsed Subversion to implement version control System. \nBuild ANT Script for the application and used Log4J for debugging. \nUsed JUnit Framework for the unit testing of all the java classes. \nEnvironment: Jdk 1.5, J2EE, EJB 2.0, JNDI 1.2, Hibernate 2.1, Spring 2.0, HTML,  JavaScript, XML, CSS, Node.js JUnit, UML, MQ Series, Web Services, SOAP, WSDL,  Backbone JS ,UDDI , AXIS 2, Ajax, JUnit, Ant, Eclipse 3.3, IBM Web Sphere 6.1, DB2,  subversion, Linux.\nPayPal - Sparks, MD\t\t\t\t\t\tJune 2015 – August 2016\nRole: Java/J2EE Developer\nResponsibilities: \nGathered requirements from the Product owner and designed mock-ups based on the requirements. \nDeveloped a loyalty marketing client using Web Services, MongoDB, and JS. \nExperience in RDBMS such as Oracle, SQL Server Mongo DB and writing stored procedures triggers, cursors, and optimizing queries using SQL.\nInvolved in all phases of the Software development life cycle (SDLC).\nInvolved with implementation of the JBOSS enterprise application server platform and DROOLS based on Rule engine.\nInvolved with the business Rule engine JSR-94 that support for DROOLS .\nFollowed agile methodologies to execute project.  \nDesigned, Modeled & Deployed MySql database Schema & Mongo database. Implemented Caching and Single Signon. All implementation was an AWS Cloud Services.\nUsed kafka for data streaming and pipelining.\nWorked on Solr, ElasticSearch, Kafka, Flume, MangoDB and Cassendra.\nUsed UML modeling diagrams to describe the structure and behavior of the system.  \nUtilized pair programming approach to ensure high quality code.  \nResponsible for managing and executing project tasks using Rally.  \nInstalled and configured JBOSS/Drools server with MySQL/Oracle persistence. Extracted rules data from the database and decision tables. \nUsed Drools rule in the java code to specify all the rules needed for the framework.\nUsed Bamboo as continues integration and build server. \nInvolved in creating a data model for a service where multiple providers were involved. \nInvolved in Creating and consuming SOAP and REST Web services using annotations. \nInvolved in generating JAXB classes from schema files. \nDeveloped several DAO classes interacting with EOD DB2 database and participated in writing JPA criteria builders and predicates. \nAutomatically start builds in Bamboo with commit-triggers. \nResponsible for creating feature branches and merge with master in GIT repository. \nWrote stored procedures, triggers and functions to perform database operations. \nImplemented Spring AOP for declarative transaction management. \nImplemented Spring's dependency injection for all the DAO's, Service Beans. \nInvolved in production deployment, supported. \nWorking with XML parsers & configuring of XML files like Web.xml, etc. \nInvolved in the integration of spring for implementing Dependency Injection (DI/IOC) \nDeveloped REST web services for external application integration. \nDeveloped service layer using various J2EE design patterns Singleton, DAO, Factory, and Repository, Builder. \nDeveloped a Message Driven Bean that uses JMS to manage backend transactions. \nPreparation of Test cases on JUnit during the unit testing and system testing phase.\n Environment: JDK 1.7, Glassfish Application Server, IntelliJ, Bamboo, Oracle 11.2 DB, Spring 3.0, Hibernate 2.0, Node.js, JUnit, REST Web services, GIT, Unix Shell scripts, Control M, SQL Developer, Oracle Virtual Box, Rally, Blaze.\nTD Ameritrade - Newark, NJ\t\t\t\t\tNovember 2013 – May 2015\nRole: Java/J2EE Developer\nResponsibilities: \nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements. \nImplemented the web-based application following the MVC architecture using Struts Framework and used Spring in developing beans which are used all over the application. \nDesigned the front-end using HTML, CSS, Java script, AJAX and jQuery. \nExtensively used Custom JSP tags to separate presentation from application logic. \nInvolved in writing SQL prepared statements, stored procedures, handled SQL Injection and persisted data using Hibernate session, transaction, and session factory objects. \nUsed ANT/MAVEN for compilation and building JAR, WAR and EAR files. \nUsed Table per hierarchy inheritance of hibernates and mapped polymorphic associations. \nDeveloped one-much, many-one, one-one annotation based mappings in Hibernate. \nDeveloped DAO service methods to populate the domain model objects using hibernate. \nUsed java collections API extensively such as Lists, Sets and Maps. \nWrote DAO classes using spring and Hibernate to interact with database for persistence. \nPerformed on e-Commerce by using JSF framework and JavaScript, Jquery HTML5 pages. \nWrote and tested Java Beans to retrieve trading data and subscriber's information from MySQL database server. \nConsumed REST based Microservices with Rest template based on RESTful APIs.\nAll the functionality is implemented using Spring IO / Spring Boot, MicroServices and Hibernate ORM.\nImplemented Unit and Integration test cases with JUNIT Framework based on Functional Flow. \nUsed JUnit/Eclipse for the unit testing of various modules. \nProject coordination with other Development teams, System managers and developed good working environment. \n Environment: Java/J2EE, JSP, Servlets, Struts2, JBoss Application Server, XML, HTML, CSS, Hibernate 4, spring 3, JMS, JavaScript, Oracle 10g, JUnit, JDBC, ANT and Microservices.\nBarklays\t\t\t\t\t\t\tJuly 2011 – October 2013\nRole: Java Developer\nDescription: It allows time tracking for customer and project related tasks. It collects time expenses for tasks associated with project and customer. After being collected the data can then be exported for invoice generation. Time tracking for every employee is maintained and generate based on several criteria. This generates an effective billing based on the number of hours the employee has worked and it can calculate the overtime bill also. The five main activities with actiTime are Registration of time expenses, task, Project and customer management, reporting and System administration. \n Responsibilities \nAs a junior developer, most of the work have done using core-java, algorithms for the problem-solving. \nInvolved in design, development, Object Oriented Analysis and testing the application. \nDeveloped Action Servlet, Action Form, Action Class, Java Beans classes using Struts Framework. \nUsed JavaScript for client side validations in the JSP and HTML pages. \nEnhance the debugging and trouble-shooting skills. \nUsed IBM RAD7 as IDE tool to develop the application and JIRA for bug and issue tracking \nUsed Subversion for software configuration management and version control. \nInvolved in the team of 8 people and delivery the tasks and monitor the team progress through JIIRA. \nMainly involved in developing applications using Java and J2EE using mostly Factory, Singleton, and Prototype patterns for the solutions. \nUsed SOA (Spring WS) for implementing third party Services. \nCreated servlets for redirecting to the proper JSP's in the application as apart in the MVC. \nDeployed the application on the WebSphere Application Server. \nPrepared manual test cases for test the application against requirements and specifications. \nConducted UAT testing for the Time collection Software with our team during the release. \n Environment: Java, JSP, HTML, CSS, XML, Subversion, Servlets, EJB, PHP, WebSphere Application Server 6.1, Web services, JIRA, Junit, RAD7.\nComputer Science Corporation\t\t\t\t\tMay 2009 – June 2011\nRole: Java/J2EE Developer\nProject: HPlan Application \nDescription: This project is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital. This package is used to computerize the activities of a servicing system. This package contains four modules. They are Administration, Patient Care System, Health Services and Auxiliary Services. Each module is having sub modules within this sub module will maintains storing, registering, details of joining patient details, and overall day activities maintains one particular database. \n Responsibilities \nTechnical analysis, design, development, and documentation with a focus on the implementation and agile development. \nDeveloped a web-based reporting system with JSP, DAO and Apache Struts-Validator using Struts framework. \nDesigned and Developed Struts Action classes, DAO, Views using Struts custom tags. \nDesigned and Developed the JSTL Tag Libraries for the View side. \nJersey implementation of JAX-RS is utilized to develop RESTful service. \nDeveloped Struts-based form validation, Application error handling using Struts Validator framework. \nDeveloped business objects, request handlers and JSPs for this project using Java (Servlets) and XML. \nStatus reporting to onsite team on behalf of entire team. \nWrote SQL queries to fetch database result on DB2. \nCreated Test Specifications, Test Documents, Test Data for all the applications worked with Rational Rose and Together. \n Environment: Java, J2EE, XML, MVC Design, EJB, Black-Box testing, Agile, Perl Scripting, PHP, JBOSS, DB2, TOAD, JavaScript, CSS, AJAX, Struts, Eclipse, UML, Restful Services, Rational Rose, LINUX",
  "cleaned_text": "Candidate SR. Java J ee Developer Email PH Professional Summary Years of professional experience in Software Development Life Cycle SDLC core area such as Analysis, Design, Coding, Implementation Testing, and Deployment of Object Oriented and Web based Enterprise Applications using Java J EE technology. Wide experience in Application Design and Development of Client Server Applications, Servlets Applet communication, Internet Intranet based applications using OOA, OOD, OOP, SOA, MVC and J EE. Proficient in developing web based applications using Java and J EE technologies like JSP, Servlets, EJB, Struts, JDBC, JMS, Spring, Hibernate, JSF, XML, SAX DOM, JAX-B. Expertise in developing multi-tier applications using Struts MVC, JSF and Spring MVC. Extensive experience with AWS AWS Cloud Formation, AWS ECS and EC , S etc. Can configure Jenkins on EC servers and integrated it with AWS Code Commit. Experience in developing persistent layer with Hibernate interfaces and annotations with good performance optimization Strong experience implementing various J EE design patterns like Singleton, Service Locator, Session Facade, Data Access Objects DAO and Factory for executing multi-tier, highly scalable, component based, and services driven Enterprise Java applications. Experience in implementing SOA architectures with web services using WSDL, SOAP and UDDI. Expertise in design and development of Web Services which includes handling SOAP REST Requests and Response using WSDL, JAX-RPC, JAX-WS and Web Services authentications Expertise in building rich, interactive user interfaces using HTML, CSS, JavaScript, jQuery, Node.js and Angular.js. Hands on experience in developing user interfaces with HTML, DHTML, JSP JSTL, Bootstrap and CSS. Worked extensively with GUI frameworks JSF and Swing. Strong experience in developing XML Schemas, WSDL documents, XML Parsing and Binding for Web Service development Expertise in XML and schemas like XSD, DTD and validating non-validating parsers of JAXP SAX & DOM and JAXB. Very good implementation experience of Object Oriented concepts, Multithreading and Java scala. Experience in implementing JUNIT with Mockito Power Mock test cases Hands on experience in Test Driven Development TDD and expertise in Continuous Integration using Jenkins and task automation using ANT and Maven Good experience with version control systems like CVS, SVN and IBM Clear Case. Good working knowledge of XMLIDEs like Altova XML SPY. Experience with client side web technologies frameworks such as Angular JS, Bootstrap CSS, Bower, Node JS, Ext JS and JQuery. Experience in build tools like Maven to build and deploy n-tier distributed enterprise applications. Experience in Importing data from various sources to the Cassandra cluster using Java API s. Experience in data modeling of Cassandra. Experience working in Kafka and Camel. Experienced in using Kafka as a distributed publisher-subscriber messaging system. Strong experience with MySQL, Oracle i i, DB , and SQL Server and Excellent skills in creating and accessing Database using SQL Queries. Competence in using Java IDE tools of Eclipse, Net Beans, My Eclipse and RAD. Expertise in deployment on Web Application Servers like Tomcat , JBoss , WebSphere . andweblogic g. Have extensive experience in building and deploying applications on Web Application Servers like JBoss, WebLogic, WebSphere, Glassfish and Tomcat. Technical Skills Programming Languages C, C , Java Version Java J EE Technologies JSP . , Servlets . , EJB . , JDBC . Messaging Servers Active MQ, JMS Protocol specifications SOAP . , HTTP . , RPC version . Web Technologies JavaScript . . , JQuery, AngularJS , XML . , HTML . , CSS . , XTML . , JSON RPC . , Adobe Flex . , WSDL . , XML . , XSD . , AJAX Frameworks and Build Tools Apache Struts, Hibernate . , spring . . , ANT . . , Apache Maven . . , Log J . . , Java EE Design Patterns Web Application Servers Oracle WebLogic Application Server . . , IBM WebSphere Application Server . , Apache Tomcat Webserver, JBoss Application Sever . Databases MySQL, Big Data Hadoop, HDFS, Map Reduce, HIve, Oracle i g, MSSQL Server , DB IDE Tools Eclipse . . , NetBeans IDE . , SDS, RAD . . Operating Systems Windows . , UNIX, Linux Cent OS , Solaris , AIX UNIX . , Windows Server R . Professional Experience Walgreens - Deerfield, IL June Present. Role Java J EE Developer Responsibilities Designed and developed user interface using front-end technologies like HTML, CSS, JavaScript, jQuery and AJAX. Developed UI Layer for the application using AngularJS, HTML , CSS , Bootstrap Used Struts .x MVC framework and created Action Beans, Actions which determines the flow of the application based on the results obtained from the classes. Controller . Developed application layout and composing tiles definitions, managed beans to use with JSF Spring Framework at Business Tier and uses Spring s Bean Factory for initializing services. Developed classes which handles the request parameters, process data, collect data retrieved from the database to List and Map interfaces and store it on objects. Model Involved in integrating Single sign on which is provided by OIT as a web service. Used JAX-WS, XML RPC, JAXB technologies in generating client stubs. Developed internal application using Angular JS and Node JS connecting to Oracle on the backend. In architecting various Business Layer and Data Management components of multi-tiered web based system over J EE architecture. Responsible for JAVA, J EE and Groovy coding development. Used Docker and Kitematic to run all the containers like Rabbit MQ, MySQL, mongo DB and static content by just running a small script in the terminal window. Experience in working with Groovy on Grails framework which makes creating complex workflows much simpler. Backend development using - Spring Boot, Spring Data, Java, Angular.js and groovy - repositories. Used Apache Camel in the JBoss Fuse ESB as the integration platform for SOA Services. Developed GWT Google Web Toolkit . platform using API with MySQL as database and Tomcat. Worked on the modernization of a legacy and outsourced UI. Technologies used were Backbone.js, AngularJS, BootStrap.js and JQuery. Developed the User interfaces using HTML, PHP, JSF, JavaScript and AngularJS etc. Involved in migration of the application from Sun Java Application server to Glassfish . environment. Responsible in mitigating the issues corresponding session stickiness, load balancing, setting up JDBC connection pools and other parameters on the app server. Involved in creating, modifying and tuning SQL queries, prepared statements and stored procedures used by the application using PL SQL developer and Oracle i as the database. Used JNDI lookup in establishing a singleton database connection class using JDBC connection pools setup on the application server. Designed and developed Microservices business components using Spring Boot. Consumed REST based Microservices with Rest template based on RESTful APIs. Developed MicroServices for Student, Tenant and Authorization modules. Used Java Mailing or Messaging Service JMS API s for mailing detailed notifications depending upon the success and failure once the backend process is complete and also for mailing administrator of any system related problems. Used CVS code versioning system for code maintenance and used Log j to generate logs used for maintenance and bug tracking. Performed configuration, deployment and support of cloud services including Amazon Web Services AWS . Configured AWS Elastic Search to make for stream analytics. Developed API for using AWS Lambda to manage the servers and run the code in the AWS. Build the application using TDD Test Driven Development approach. Used Oracle as database and Involved in the development of PL SQL backend implementation and using SQL created Select, Update and Delete statements. Involved in different phases of testing like Unit testing, regression, integration and stress testing using HP Load runner and also responsible for performance tuning, memory management and fixing bugs based on the test results. Developed web-based customer management software and SOA architecture using Facelets, my Faces Richfaces, JSF, Spring and web services Environment Java . , J EE, Net Beans . , HTML, CSS,AWS, JavaScript, jQuery, Struts . , JDBC, JNDI, Oracle g, Glassfish . , Apache Camel ,ANT, jUnit , Rabbit MQ, Log j, Backbone JS, PL SQL developer, iText, Apache POI, Microservices. BANK OF AMERICA - Charlotte, NC September May Role JAVA DEVELOPER Responsibilities Worked in various phases of Software Development Life Cycle SDLC such as requirements gathering, analysis and development. Designed and developed the front end using HTML, CSS, and JavaScript with Ajax. Designed use case diagrams, class diagrams, and sequence diagrams as a part of Design Phase using Rational Rose. Developed the application implementing Spring MVC Architecture with Hibernate as ORM framework. Utilize Camel to integrate microservices with other microservices and RabbitMQ messaging exchanges. RabbitMQ was used to send receive asynchronous data Responsible in developing Spring Boot Microservices from scratch. Developed single page applications, components using Angular JS directives, controllers, view and routing, service modules. Knowledge on Angular JS for effective Web Application Development. Developed a JavaScript performance testing toolkit for web and Node.js applications. Used JNDI to perform lookup services for the various components of the system. Developed the Enterprise Java Beans Stateless Session beans to handle different transactions such as online funds transfer, bill payments to the service providers. Developed deployment descriptors for the EJB have to deploy on Web Sphere Application Server. Used Mongo DB for persisting Json. Java Based Quality Center plugin which can be used in any tools such as Selenium, RFT etc. Developed Ruby on Rails web applications using MongoDB and back-ground processes using Resque and Redis. Worked on Distributed messaging system RabbitMQ to send messages to Existing Applications. Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services. Developed Web Services for data transfer from client to server and vice versa using Apache Axis, SOAP, WSDL, and UDDI. Designed and coded highly-available systems web applications with java script, Node.js. Provided Node.js for architecture. Used Hibernate to access database and perform database updating. Experience in working with Groovy on Grails framework which makes creating complex workflows much simpler. Implemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. Involved in designing front-end screens using Java script, JSP, JSTL, Angular JS, Backbone JS, AJAX, HTML , CSS and DHTML. Involved in production support, monitoring server and error logs and Foreseeing the Potential Issues, and escalating to the higher levels. Hands on experience in writing light weight Node.JS express server and used technologies like Ajax, JavaScript JQuery, Json to make connections between server and databases like MongoDB and MySQL. Experience in working with the Columnar NoSQL Database like HBase, Cassandra to manage extremely large data sets. Experience in data extraction into DataStax Cassandra cluster from Oracle RDBMS using Java Driver or Sqoop tools. Extensively worked on MQ Series using point-point, publisher subscriber messaging Domains for implementing Exchange of information through Messages. Developed XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems. Implemented various J EE Design patterns like Singleton, Service Locator, Business Delegate, DAO, Transfer Object, and SOA. Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations. Used Subversion to implement version control System. Build ANT Script for the application and used Log J for debugging. Used JUnit Framework for the unit testing of all the java classes. Environment Jdk . , J EE, EJB . , JNDI . , Hibernate . , Spring . , HTML, JavaScript, XML, CSS, Node.js JUnit, UML, MQ Series, Web Services, SOAP, WSDL, Backbone JS ,UDDI , AXIS , Ajax, JUnit, Ant, Eclipse . , IBM Web Sphere . , DB , subversion, Linux. PayPal - Sparks, MD June August Role Java J EE Developer Responsibilities Gathered requirements from the Product owner and designed mock-ups based on the requirements. Developed a loyalty marketing client using Web Services, MongoDB, and JS. Experience in RDBMS such as Oracle, SQL Server Mongo DB and writing stored procedures triggers, cursors, and optimizing queries using SQL. Involved in all phases of the Software development life cycle SDLC . Involved with implementation of the JBOSS enterprise application server platform and DROOLS based on Rule engine. Involved with the business Rule engine JSR- that support for DROOLS . Followed agile methodologies to execute project. Designed, Modeled & Deployed MySql database Schema & Mongo database. Implemented Caching and Single Signon. All implementation was an AWS Cloud Services. Used kafka for data streaming and pipelining. Worked on Solr, ElasticSearch, Kafka, Flume, MangoDB and Cassendra. Used UML modeling diagrams to describe the structure and behavior of the system. Utilized pair programming approach to ensure high quality code. Responsible for managing and executing project tasks using Rally. Installed and configured JBOSS Drools server with MySQL Oracle persistence. Extracted rules data from the database and decision tables. Used Drools rule in the java code to specify all the rules needed for the framework. Used Bamboo as continues integration and build server. Involved in creating a data model for a service where multiple providers were involved. Involved in Creating and consuming SOAP and REST Web services using annotations. Involved in generating JAXB classes from schema files. Developed several DAO classes interacting with EOD DB database and participated in writing JPA criteria builders and predicates. Automatically start builds in Bamboo with commit-triggers. Responsible for creating feature branches and merge with master in GIT repository. Wrote stored procedures, triggers and functions to perform database operations. Implemented Spring AOP for declarative transaction management. Implemented Spring s dependency injection for all the DAO s, Service Beans. Involved in production deployment, supported. Working with XML parsers & configuring of XML files like Web.xml, etc. Involved in the integration of spring for implementing Dependency Injection DI IOC Developed REST web services for external application integration. Developed service layer using various J EE design patterns Singleton, DAO, Factory, and Repository, Builder. Developed a Message Driven Bean that uses JMS to manage backend transactions. Preparation of Test cases on JUnit during the unit testing and system testing phase. Environment JDK . , Glassfish Application Server, IntelliJ, Bamboo, Oracle . DB, Spring . , Hibernate . , Node.js, JUnit, REST Web services, GIT, Unix Shell scripts, Control M, SQL Developer, Oracle Virtual Box, Rally, Blaze. TD Ameritrade - Newark, NJ November May Role Java J EE Developer Responsibilities Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements. Implemented the web-based application following the MVC architecture using Struts Framework and used Spring in developing beans which are used all over the application. Designed the front-end using HTML, CSS, Java script, AJAX and jQuery. Extensively used Custom JSP tags to separate presentation from application logic. Involved in writing SQL prepared statements, stored procedures, handled SQL Injection and persisted data using Hibernate session, transaction, and session factory objects. Used ANT MAVEN for compilation and building JAR, WAR and EAR files. Used Table per hierarchy inheritance of hibernates and mapped polymorphic associations. Developed one-much, many-one, one-one annotation based mappings in Hibernate. Developed DAO service methods to populate the domain model objects using hibernate. Used java collections API extensively such as Lists, Sets and Maps. Wrote DAO classes using spring and Hibernate to interact with database for persistence. Performed on e-Commerce by using JSF framework and JavaScript, Jquery HTML pages. Wrote and tested Java Beans to retrieve trading data and subscriber s information from MySQL database server. Consumed REST based Microservices with Rest template based on RESTful APIs. All the functionality is implemented using Spring IO Spring Boot, MicroServices and Hibernate ORM. Implemented Unit and Integration test cases with JUNIT Framework based on Functional Flow. Used JUnit Eclipse for the unit testing of various modules. Project coordination with other Development teams, System managers and developed good working environment. Environment Java J EE, JSP, Servlets, Struts , JBoss Application Server, XML, HTML, CSS, Hibernate , spring , JMS, JavaScript, Oracle g, JUnit, JDBC, ANT and Microservices. Barklays July October Role Java Developer Description It allows time tracking for customer and project related tasks. It collects time expenses for tasks associated with project and customer. After being collected the data can then be exported for invoice generation. Time tracking for every employee is maintained and generate based on several criteria. This generates an effective billing based on the number of hours the employee has worked and it can calculate the overtime bill also. The five main activities with actiTime are Registration of time expenses, task, Project and customer management, reporting and System administration. Responsibilities As a junior developer, most of the work have done using core-java, algorithms for the problem-solving. Involved in design, development, Object Oriented Analysis and testing the application. Developed Action Servlet, Action Form, Action Class, Java Beans classes using Struts Framework. Used JavaScript for client side validations in the JSP and HTML pages. Enhance the debugging and trouble-shooting skills. Used IBM RAD as IDE tool to develop the application and JIRA for bug and issue tracking Used Subversion for software configuration management and version control. Involved in the team of people and delivery the tasks and monitor the team progress through JIIRA. Mainly involved in developing applications using Java and J EE using mostly Factory, Singleton, and Prototype patterns for the solutions. Used SOA Spring WS for implementing third party Services. Created servlets for redirecting to the proper JSP s in the application as apart in the MVC. Deployed the application on the WebSphere Application Server. Prepared manual test cases for test the application against requirements and specifications. Conducted UAT testing for the Time collection Software with our team during the release. Environment Java, JSP, HTML, CSS, XML, Subversion, Servlets, EJB, PHP, WebSphere Application Server . , Web services, JIRA, Junit, RAD . Computer Science Corporation May June Role Java J EE Developer Project HPlan Application Description This project is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital. This package is used to computerize the activities of a servicing system. This package contains four modules. They are Administration, Patient Care System, Health Services and Auxiliary Services. Each module is having sub modules within this sub module will maintains storing, registering, details of joining patient details, and overall day activities maintains one particular database. Responsibilities Technical analysis, design, development, and documentation with a focus on the implementation and agile development. Developed a web-based reporting system with JSP, DAO and Apache Struts-Validator using Struts framework. Designed and Developed Struts Action classes, DAO, Views using Struts custom tags. Designed and Developed the JSTL Tag Libraries for the View side. Jersey implementation of JAX-RS is utilized to develop RESTful service. Developed Struts-based form validation, Application error handling using Struts Validator framework. Developed business objects, request handlers and JSPs for this project using Java Servlets and XML. Status reporting to onsite team on behalf of entire team. Wrote SQL queries to fetch database result on DB . Created Test Specifications, Test Documents, Test Data for all the applications worked with Rational Rose and Together. Environment Java, J EE, XML, MVC Design, EJB, Black-Box testing, Agile, Perl Scripting, PHP, JBOSS, DB , TOAD, JavaScript, CSS, AJAX, Struts, Eclipse, UML, Restful Services, Rational Rose, LINUX",
  "preprocessed_text": "candidate sr. java ee developer ph professional summary year professional experience software development life cycle sdlc core area analysis design coding implementation testing deployment object oriented web based enterprise application using java ee technology wide experience application design development client server application servlets applet communication internet intranet based application using ooa ood oop soa mvc ee proficient developing web based application using java ee technology like jsp servlets ejb strut jdbc jms spring hibernate jsf xml sax dom jax-b expertise developing multi-tier application using strut mvc jsf spring mvc extensive experience aws aws cloud formation aws ec ec etc configure jenkins ec server integrated aws code commit experience developing persistent layer hibernate interface annotation good performance optimization strong experience implementing various ee design pattern like singleton service locator session facade data access object dao factory executing multi-tier highly scalable component based service driven enterprise java application experience implementing soa architecture web service using wsdl soap uddi expertise design development web service includes handling soap rest request response using wsdl jax-rpc jax-ws web service authentication expertise building rich interactive user interface using html cs javascript jquery node.js angular.js hand experience developing user interface html dhtml jsp jstl bootstrap cs worked extensively gui framework jsf swing strong experience developing xml schema wsdl document xml parsing binding web service development expertise xml schema like xsd dtd validating non-validating parser jaxp sax dom jaxb good implementation experience object oriented concept multithreading java scala experience implementing junit mockito power mock test case hand experience test driven development tdd expertise continuous integration using jenkins task automation using ant maven good experience version control system like cv svn ibm clear case good working knowledge xmlides like altova xml spy experience client side web technology framework angular j bootstrap cs bower node j ext j jquery experience build tool like maven build deploy n-tier distributed enterprise application experience importing data various source cassandra cluster using java api s. experience data modeling cassandra experience working kafka camel experienced using kafka distributed publisher-subscriber messaging system strong experience mysql oracle db sql server excellent skill creating accessing database using sql query competence using java ide tool eclipse bean eclipse rad expertise deployment web application server like tomcat jboss websphere andweblogic g. extensive experience building deploying application web application server like jboss weblogic websphere glassfish tomcat technical skill programming language java version java ee technology jsp servlets ejb jdbc messaging server active mq jms protocol specification soap rpc version web technology javascript jquery angularjs xml html cs xtml json rpc adobe flex wsdl xml xsd ajax framework build tool apache strut hibernate spring ant apache maven log java ee design pattern web application server oracle weblogic application server ibm websphere application server apache tomcat webserver jboss application sever database mysql big data hadoop hdfs map reduce hive oracle mssql server db ide tool eclipse netbeans ide sd rad operating system window unix linux cent o solaris aix unix window server professional experience walgreens deerfield il june present role java ee developer responsibility designed developed user interface using front-end technology like html cs javascript jquery ajax developed ui layer application using angularjs html cs bootstrap used strut .x mvc framework created action bean action determines flow application based result obtained class controller developed application layout composing tile definition managed bean use jsf spring framework business tier us spring bean factory initializing service developed class handle parameter process data collect data retrieved database list map interface store object model involved integrating single sign provided oit web service used jax-ws xml rpc jaxb technology generating client stub developed internal application using angular j node j connecting oracle backend architecting various business layer data management component multi-tiered web based system ee architecture responsible java ee groovy coding development used docker kitematic run container like rabbit mq mysql mongo db static content running small script terminal window experience working groovy grail framework make creating complex workflow much simpler backend development using spring boot spring data java angular.js groovy repository used apache camel jboss fuse esb integration platform soa service developed gwt google web toolkit platform using api mysql database tomcat worked modernization legacy outsourced ui technology used backbone.js angularjs bootstrap.js jquery developed user interface using html php jsf javascript angularjs etc involved migration application sun java application server glassfish environment responsible mitigating issue corresponding session stickiness load balancing setting jdbc connection pool parameter app server involved creating modifying tuning sql query prepared statement stored procedure used application using pl sql developer oracle database used jndi lookup establishing singleton database connection class using jdbc connection pool setup application server designed developed microservices business component using spring boot consumed rest based microservices rest template based restful apis developed microservices student tenant authorization module used java mailing messaging service jms api mailing detailed notification depending success failure backend process complete also mailing administrator system related problem used cv code versioning system code maintenance used log generate log used maintenance bug tracking performed configuration deployment support cloud service including amazon web service aws configured aws elastic search make stream analytics developed api using aws lambda manage server run code aws build application using tdd test driven development approach used oracle database involved development pl sql backend implementation using sql created select update delete statement involved different phase testing like unit testing regression integration stress testing using hp load runner also responsible performance tuning memory management fixing bug based test result developed web-based customer management software soa architecture using facelets face richfaces jsf spring web service environment java ee bean html cs aws javascript jquery strut jdbc jndi oracle glassfish apache camel ant junit rabbit mq log backbone j pl sql developer itext apache poi microservices bank america charlotte nc september may role java developer responsibility worked various phase software development life cycle sdlc requirement gathering analysis development designed developed front end using html cs javascript ajax designed use case diagram class diagram sequence diagram part design phase using rational rose developed application implementing spring mvc architecture hibernate orm framework utilize camel integrate microservices microservices rabbitmq messaging exchange rabbitmq used send receive asynchronous data responsible developing spring boot microservices scratch developed single application component using angular j directive controller view routing service module knowledge angular j effective web application development developed javascript performance testing toolkit web node.js application used jndi perform lookup service various component system developed enterprise java bean stateless session bean handle different transaction online fund transfer bill payment service provider developed deployment descriptor ejb deploy web sphere application server used mongo db persisting json java based quality center plugin used tool selenium rft etc developed ruby rail web application using mongodb back-ground process using resque redis worked distributed messaging system rabbitmq send message existing application implemented service oriented architecture soa using jms sending receiving message creating web service developed web service data transfer client server vice versa using apache axis soap wsdl uddi designed coded highly-available system web application java script node.js provided node.js architecture used hibernate access database perform database updating experience working groovy grail framework make creating complex workflow much simpler implemented highly-scalable vertical horizontal performance efficient drool architecture involved designing front-end screen using java script jsp jstl angular j backbone j ajax html cs dhtml involved production support monitoring server error log foreseeing potential issue escalating higher level hand experience writing light weight node.js express server used technology like ajax javascript jquery json make connection server database like mongodb mysql experience working columnar nosql database like hbase cassandra manage extremely large data set experience data extraction datastax cassandra cluster oracle rdbms using java driver sqoop tool extensively worked mq series using point-point publisher subscriber messaging domain implementing exchange information message developed xml document generated xsl file payment transaction reserve transaction system implemented various ee design pattern like singleton service locator business delegate dao transfer object soa worked ajax develop interactive web application javascript data validation used subversion implement version control system build ant script application used log debugging used junit framework unit testing java class environment jdk ee ejb jndi hibernate spring html javascript xml cs node.js junit uml mq series web service soap wsdl backbone j uddi axis ajax junit ant eclipse ibm web sphere db subversion linux paypal spark md june august role java ee developer responsibility gathered requirement product owner designed mock-up based requirement developed loyalty marketing client using web service mongodb j experience rdbms oracle sql server mongo db writing stored procedure trigger cursor optimizing query using sql involved phase software development life cycle sdlc involved implementation jboss enterprise application server platform drool based rule engine involved business rule engine jsr- support drool followed agile methodology execute project designed modeled deployed mysql database schema mongo database implemented caching single signon implementation aws cloud service used kafka data streaming pipelining worked solr elasticsearch kafka flume mangodb cassendra used uml modeling diagram describe structure behavior system utilized pair programming approach ensure high quality code responsible managing executing project task using rally installed configured jboss drool server mysql oracle persistence extracted rule data database decision table used drool rule java code specify rule needed framework used bamboo continues integration build server involved creating data model service multiple provider involved involved creating consuming soap rest web service using annotation involved generating jaxb class schema file developed several dao class interacting eod db database participated writing jpa criterion builder predicate automatically start build bamboo commit-triggers responsible creating feature branch merge master git repository wrote stored procedure trigger function perform database operation implemented spring aop declarative transaction management implemented spring dependency injection dao service bean involved production deployment supported working xml parser configuring xml file like web.xml etc involved integration spring implementing dependency injection di ioc developed rest web service external application integration developed service layer using various ee design pattern singleton dao factory repository builder developed message driven bean us jms manage backend transaction preparation test case junit unit testing system testing phase environment jdk glassfish application server intellij bamboo oracle db spring hibernate node.js junit rest web service git unix shell script control sql developer oracle virtual box rally blaze td ameritrade newark nj november may role java ee developer responsibility involved system analysis design methodology well object oriented design development using ooad methodology capture model business requirement implemented web-based application following mvc architecture using strut framework used spring developing bean used application designed front-end using html cs java script ajax jquery extensively used custom jsp tag separate presentation application logic involved writing sql prepared statement stored procedure handled sql injection persisted data using hibernate session transaction session factory object used ant maven compilation building jar war ear file used table per hierarchy inheritance hibernates mapped polymorphic association developed one-much many-one one-one annotation based mapping hibernate developed dao service method populate domain model object using hibernate used java collection api extensively list set map wrote dao class using spring hibernate interact database persistence performed e-commerce using jsf framework javascript jquery html page wrote tested java bean retrieve trading data subscriber information mysql database server consumed rest based microservices rest template based restful apis functionality implemented using spring io spring boot microservices hibernate orm implemented unit integration test case junit framework based functional flow used junit eclipse unit testing various module project coordination development team system manager developed good working environment environment java ee jsp servlets strut jboss application server xml html cs hibernate spring jms javascript oracle junit jdbc ant microservices barklays july october role java developer description allows time tracking customer project related task collect time expense task associated project customer collected data exported invoice generation time tracking every employee maintained generate based several criterion generates effective billing based number hour employee worked calculate overtime bill also five main activity actitime registration time expense task project customer management reporting system administration responsibility junior developer work done using core-java algorithm problem-solving involved design development object oriented analysis testing application developed action servlet action form action class java bean class using strut framework used javascript client side validation jsp html page enhance debugging trouble-shooting skill used ibm rad ide tool develop application jira bug issue tracking used subversion software configuration management version control involved team people delivery task monitor team progress jiira mainly involved developing application using java ee using mostly factory singleton prototype pattern solution used soa spring w implementing third party service created servlets redirecting proper jsp application apart mvc deployed application websphere application server prepared manual test case test application requirement specification conducted uat testing time collection software team release environment java jsp html cs xml subversion servlets ejb php websphere application server web service jira junit rad computer science corporation may june role java ee developer project hplan application description project comprehensive integrated hospital management system super specialty hospital package used computerize activity servicing system package contains four module administration patient care system health service auxiliary service module sub module within sub module maintains storing registering detail joining patient detail overall day activity maintains one particular database responsibility technical analysis design development documentation focus implementation agile development developed web-based reporting system jsp dao apache struts-validator using strut framework designed developed strut action class dao view using strut custom tag designed developed jstl tag library view side jersey implementation jax-rs utilized develop restful service developed struts-based form validation application error handling using strut validator framework developed business object handler jsps project using java servlets xml status reporting onsite team behalf entire team wrote sql query fetch database result db created test specification test document test data application worked rational rose together environment java ee xml mvc design ejb black-box testing agile perl scripting php jboss db toad javascript cs ajax strut eclipse uml restful service rational rose linux",
  "statistics": {
    "word_count": 3616,
    "unique_word_count": 1044,
    "avg_word_length": 4.931692477876106,
    "stopword_count": 713
  },
  "metadata": {
    "filename": "java_Candidate46.docx",
    "file_size": 32109,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:20:52.584601",
    "input_filename": "java_Candidate46.json"
  }
}