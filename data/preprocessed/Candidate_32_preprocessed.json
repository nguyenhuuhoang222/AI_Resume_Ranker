{
  "id": "Candidate_32",
  "raw_text": "Candidate 32\nPhone: 469-677-7837\nEmail: \nSUMMARY\n8+ years of experience in developing and designing Web Based Internet/Intranet, Client- Server and Multi-tier distributed applications using latest J2EE technologies and various open source frameworks.\nExperienced in all stages of SDLC (Software Development Life Cycle) including proposal, process engineering, requirement analysis, design, development, testing, deployment and support.\nProficient in Object Oriented Analysis and Design (OOAD) based on Unified Modeling Language (UML).\nProficient in Java Multithreading, Collections API, Socket programming, Swing programming.\nUsed Adobe flex framework for building and maintaining web applications to deploy on all major platforms.\nExtensive knowledge of MVC architecture and J2EE Design Patterns like Singleton, Session Facade, Service locator, DAO, DTO and Value Object in the development of web based Enterprise Applications.\nGood in Java/J2EE technologies such as JSP, JSF, Servlets, EJB, XML, XSD, JNDIandWeb services.\nHands-on experience in Front-End technologies like AngularJS, Bootstrap, HTML5, ReactJS, NodeJS, JavaScript, CSS3, Jquery, Google Web Toolkit (GWT), Tag Libraries, Custom Tags, Ajax, Ext.Js used for Responsive web design. \nExperience in JSF, Prime-Faces and Rich-Faces framework for Developing the User Interface.\nExpertise with the package managers such as NPM and Bower.\nKnowledge in Docker Components like Docker Engine, Docker Hub, Virtual Machine and Docker Registry.\nExpert in major relational databases like Oracle, MySQL, SQLServer and DB2.\nGood working experience in No-SQL Database including MongoDB, Cassandra, CouchDB and DynamoDB.\nProven experience in writing Queries, Stored Procedures, Triggers, Cursors, Functions and Packages using TOAD.\nProficient in GUI&validation plug-ins like Tiles,Validator Frameworks and Custom Tag Libraries.\nImplemented various Ajax Frameworks such as JQuery, DOJO and JSON. Designed and developed various integration components using JMS and MQ Series.\nExpertise in developing Web Services for data transfer from client to server and vice versa using Apache Axis, REST, SOAP, WSDL, and UDDI.\nWritten and developed scripts for automating tasks using, Python, Ant 1.5, and UNIX shell programming.\nExposure to Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat and JBoss.\nHands on experience with source control tools like CVS, Clear Case, SVN, Git and Perforce.\nGood knowledge in working with Collections API, Multithreading and OOPs technologies.\nGood experience in using Amazon Web Services (AWS) and AWS SNS/SQS for delivering messages. \nDeveloped the Spring Features like Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Zuul, Spring Eureka, Spring Netflix, Spring Hystrix.\nDeveloped Struts based presentation layer, hibernate based DAO layer and integrated them using Spring Dependency injection, ORM and Web modules. \nExperienced in Middleware persistence framework like Hibernate/JPA, JDBC, iBatis for mapping Java POJO classes/Objects with database and using Hibernate Query Language (HQL).\nKnowledge in designing and implementing Solutions using EC2, S3, EBS, Elastic Load balancer and VPC.\nDeployed application updates to AWS Cloud and monitored the load balancing of different instances.\nExpertise in Cutting Edge Technologies like EJB, JMS, JTA, XML and Web SphereMQ Series with strong experience in Developing and Deploying Enterprise Java Beans on Application Servers like WebLogic, WebSphere and JBoss.\nExtensively worked on debugging using Logging Frameworks such as Apache Log4j.\nExperience in using Maven, Gradle, Ant builds and in Visualization tools like Tableau.\nPerformed Unit testing, Integration Testing& generating of test cases for web applications using Junit, JenkinsandLog4J.\nHands-on experience with IDE’s like IBM Eclipse, NetBeans, Spring Tool Suite(STS) and IntelliJ.\nTECHNICAL SKILLS\nPROFESSIONAL EXPERIENCE\nClient: Staples, Framingham, MA \t\t\t\t\t\tDuration:  Jan 2016 to till date\nRole: Sr. JAVA/J2EE Developer\nDescription: Staples mainly focuses on developing a Retail application for the Staples Incorporation for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Staplesis to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge.\nResponsibilities\nWorked in Agile, Scrum Environment’s and participated in requirement gathering, analysis and design.\nDefined and constructed layers, server-side objects and client-side interfaces based on Java/J2EE design patterns.\nDeveloped and implemented Swing and Spring MVC framework for the application. \nUtilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nDesigned Prototype and project layout skeletons using JQuery, CSS3, HTML5, XML, DHTML and JavaScript. \nDeveloped Single Page Applications (SPA’s) using AngularJS. Created Multiple & Nested Views, Routing, Controllers, Services and Custom Directives, Node.js, Bower and Grunt.\nCreated an in-memory data structure cache by using React DOM for updating browser efficiently.\nUsed AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client.\nCreating a responsive web application integrating Twitter Bootstrap with AngularJS and media queries.\nUsed react-redux library to connect Redux application state to ReactJS components.\nUsed redux store to combine different reducers to produce a global state.\nRESTful web services using Jersey for JAX-RS implementation and to transport detain JSON format.\nWorked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP. \nConsumed Web Services to fetch and direct credit card information from third party application.\nDeveloped new features for a REST SOA backend in Clojure and led evolution of an entire backend architecture.\nUsed a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers\nDeveloped Microservices using Spring Boot, Spring Security, Eureka, HATEOAS and deployed to AWS.\nImplemented the associated business modules integration using Spring, and Hibernate data mapping.\nUsed Spring dependency injection, annotations and Spring MVC components to implement business layer and navigation part of application.\nUsed various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nExposed and consumed SOAP based Web Services to communicate between systems. \nUsed ActiveMQ to improve the stability and scaled the system for more concurrent users.\nAssisted in planning, installation and execution of new JRules, ILOG server, Application server and Team server and developed designs and strategies for business rules and address problems including configuration of ILOG Rules.\nUsed Splunk SPL queries to generate reports.\nUsed Splunk forwarders to provide reliable collection to deliver data to Splunk for indexing, storage and analysis.\nImplementing procedures for designing, coding and testing of application code through ILOG Jrules.\nExpertise in programming using Scala, built Scala prototype for the application requirement and focused on types of functional Scala.\nConfigured and verified AWS workstations as per application requirement.\nUsed GWT and Amazon AWS (EC2/S3/EBS) for prototyping and subsequent evaluation.\nWorked on creation of custom Docker container images, tagging and pushing the images.\nCreated Mule ESB based tool suite for handling message transitioning, validation, enrichment and routing upstream and downstream entity data consumers.\nUsed JMS for reliable and asynchronous exchange of essential information such as payment status report.\nWrote SQL queries, stored procedures and enhanced performance by running explain plans.\nComposed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and Managing and maintaining Oracle and NoSQL databases in production domain.\n Wrote an integration application in Groovy for the Magento Shopping Cart Application and CounterPoint. \nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects. \nUsed log4j for logging and SVN for version control also occasionally employed GITHUB as repo store.\nUsed XStream API to transfer data back and forth between Spring MVC and Ext JS.\nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.\nWritten highly referenced blog posts on Error Handling in Scala and Problems that Scala Fixes.\nImplemented REST web services in Scala using Akka for tracking an application.\nUsed Maven goals for testing and packaging the various components and releasing on Apache Archiva for easy accessibility and maintenance within the organization\nUse of data structures and algorithms for time and memory complexity reduction.\nUsed DevOps to refer to emphasize the collaboration and communication of both software developers and information technology professionals while automating the process of software delivery and infrastructure changes.\nPerforming Smoke Testing and Acceptance Testing with Selenium in multiple Java platforms.\nFollowed TDD (Test Driven Development) methodology to write unit tests with JUNIT and Mockito. Write automated regression tests using JMeter.\nEnvironment: Java, J2EE, JDK 1.7/1.8, RCP, AWS SDK, Ext JS, Git, Swing, JFC, Spring 4.x, AWS SNS/SQS, hibernate4.x, Scala, Core Java, SOAP/Rest, Web Services, Python 2.7, JavaScript, Clojure, UML, HTML5, CSS, SASS, RAD 7, WAS 8 WSDL, SDK’s, JIRA 5.x/6.x, JAXB, Linux, JAX-WS, JAX RPC, JMS, UNIX, Selenium NOSQL(MongoDB), AngularJS1.5, ReactJS, AJAX, Apache JMeter, JQuery, Mule ESB JUnit, Maven, EMR.\nClient: Wells Fargo, Des Moines, IA. \t\t\t\t\t          Duration:  May 2014 to Dec 2015\nRole: Sr. JAVA/J2EE Developer\t\t\t\t\t\t\t\nDescription: Global Wires Application is a wires payment application for corporate and financial users for creating Domestic and International wires. They can also make postdated payments up to 60 days. These wires can be initiated as freeform or template wires. We provide optional security to these wires through Secure Validation. Secure Validation is a process which provides the additional security to the customers during their transactions, in the process of wires creation it will generate a onetime pass code to validate the user, this one-time code is sent to the user's mobile or email. \nResponsibilities\nDeveloped the J2EE application based on the Service Oriented Architecture.\nUsed Design Patterns like Singleton, Factory, Session Facade and DAO.\nDeveloped using new features of Java 1.7 Annotations, Generics, enhanced for loop and Enums. \nDeveloped screens using HTML, CSS, JavaScript, JQuery and AJAX, Node.js.\nCreation of prototypes using Inkspace and Quickview 3.0\nDesigned SOA integration using Apache CXF.  Enabled rapid service tier development.\nUsed AngularJS for DOM Manipulation, Filters, and Directives.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented Cross-browser Compatibility of UI pages for internet browsers such as Chrome, Firefox, and IE 9/10/11\nDebugged the application using Chrome Inspector, Firebug, IE Tester and many other debugging tools.\nCreated and injected Spring services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nUsed Spring Inheritance to develop beans from already developed parent beans.\nDeveloped Service Layer Using Spring, AspectJ and persistence layer using Hibernate.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, cache concepts.\nInvolved in implementing DAO layers using JPA standards and Hibernate API interfaces.\nCreated SQL queries, PL/SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using DB2 and JPA with Hibernate provider.\nExtensively used Hibernate mapping, HQL, EHCache, Query, Criteria, Transactions and Locking mechanisms.\nGot exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. \nDeveloped REST Web Service clients to consume those Web Services as well other enterprise Services.\nExposed the Web Services to the client applications by sharing the WSDL’s.\nImplemented SOA to develop REST Based Web services using Apache Axis\nCreated logical and physical data models putting to practice, concepts of normalization and RDBMS.\nUsed Jenkins to automate the build and deploy process. \nDeveloped and consumed Apache CXF based Web Services as part of Payments Application.\nFocused on Test Driven Development; thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nUsed Log4j utility to generate run-time logs.\nSVN was used for project management and version management.\nDeployed the application on JBOSSapplication server.\nEnvironment: J2EE, Springmok4.x, Spring MVC, Hibernate 3.x, AngularJS, jQuery, JSON, Servlets 2.3, JDBC, AJAX, Web services, SOAP, XML, Java Beans, XStream, Net Tool, Apache CXF 2.6, Apache POI, Ext JS, JQuery, JavaScript, JBOSS, Agile Methodology, Design Patterns, SVN, Apache Maven, JUnit, HTML Unit, XSLT, HTML/DHTML.\nClient: BCBS, Richardson, TX\t\t\t\t\t\tDuration: Nov 2012 – Apr 2014\nProject: Small Group Renewal\nRole: Sr. Java Developer\t\t\t\t\t\t\t\t\nDescription: Small Group Renewal(SGR) is the automated solution for streamlining the health insurance sales process.BA Renewals delivers information and tools created to assist with reselling or reacquiring existing accounts, presenting additional plan offerings and alternatives, and monitoring anniversary effective dates to reduce the forfeiture of any business opportunities. Workflow, Single Rating Engine (SRE), and other relevant common services are used to enable Renewing process automation.\nResponsibilities\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, testing, and monitoring.\nInvolved in Use Case Diagrams, Class Diagrams and Sequence diagrams using Rational Rose.\nSpring JMS was used to connect to ActiveMQ for interconnecting various internal systems.\nImplemented SOA web sphere appliance in the web services for the ease of error handling and load balancing.\nTested Web Services using SOAP UI and involved in composing test suites for operations.\nUsed Collection Framework and Multithreading for performing cache Operation.\nExtensively used various Spring Framework modules like DI(IOC), Bean Wiring, Inheritance, Auto Wiring, JDBC Templates, AOP and Spring Quartz Schedulers for Jobs.\nDeveloped session, entity beans and message driven beans.\nDeveloped, and debugged the EJB with WebSphere Application server.\nImplemented interceptors using Hibernate and build and release Spring Boot framework. \nGot exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. \nDesigned and developed web pages using with HTML, DHTML, XHTML, CSS, and JSP.\nAchieved role control functionality mainly by retrieving JSON data from AJAX and combining the retrieved data with jQuery to manipulate nodes in DOM tree.\nUtilized a combination of regular expression and jQuery Validation Plugin to conduct input check.\nWhile in the newer sub project, conducted validation in AngularJS way.\nCreated test cases to validate Regular Expressions.\nUsed XML/XSLT for transforming common XML format and SAML for Single Sign-On.\nDesigned configuration XML Schema for the application.\nUsed Regular Expressions to Serializable for pattern classes. \nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.\nUsed XML Http Request Object to provide asynchronous communication as part of AJAX implementation.\nExperience with KORN based scripts as part of triggering UNIX and J2EE based Jobs.\nUsed SOAP for Web Services by exchanging XML data between applications over HTTP.\nWSDL was used for publishing Web Service interfaces.\nJunit tests were written to test each module in the application. \nWrote Ant Scripts to automate the build and deploy process.\nPrepared the test plans and executed test cases for unit, integration and system testing using different automation tools like Junit, Soap UI and Fiddler.\nPerformance Testing experience using Jmeter.\nEnvironment:  Core Java/J2EE, Servlets, Java Spring, JSTL, EJB, JMS, XML, XSLT, JDBC, AJAX, IBM WebSphere Application Server 7.0, Oracle 10g, WSAD, IBM MQ, HTML, CSS, JavaScript, Eclipse, UML, Rational Rose, Windows XP, CVS, JUnit, ANT, Adobe Flex, Visio.\nClient: JPMorgan Chase, NY\t\t\t\t\t\t\tDuration: Feb 2011 – Oct 2012             \nPosition: Sr. Java Developer\nDescription:  CSR Dashboard is an internal facing application, accessed via the Prime View portal,which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events, with Corporate Actions and Money Transfer events to follow. This tool provides a CSR centric view of all key events for all families supported by a CSR, Team Lead or Area Manager.  As of today, Option Exercise and Corporate Actions have been on boarded. \nResponsibilities\nDeveloped the J2EE application based on the Service Oriented Architecture.\nUsed Spring Framework for dependency injection, integration of Hibernate using Spring ORM support, development of RESTful web services to give JSON output. \nUsed Spring MVC front controller pattern to handle requests from dispatcher servlet to handle incoming requests.\nConfigured Spring MVC from scratch using XML configurations, namespace handling, Spring security set up and giving access to resources.\nWrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections.\nUsed Hibernate in persistence layer, written hibernate mappings using Annotations, HQL, Criteria and Queries.\nInvolved in Design and Development of RESTful API.\nREST web services are created using Spring with Jackson Mappers to exchange data using JSON data structure.\nUsed SVN for source Version Control, resolving code conflicts and merging code base.\nDeployed the application in Web Logic Application Server.\nStrong experience in writing PL/SQL queries and performance tuning.\nDeveloped Unix Shell scripts to automate repetitive database processes. \nUsed Maven for dependency management, build applications and deploy to the containers, application servers and create versions in the repository.\nUsed JUnit for unit testing of the application and log4j for logging.\nEnvironment: Core Java, Java 1.6, Spring, Hibernate, SVN, Apache, Eclipse 3.3, JNDI, Log4j, JUnit, XML, XSD, AngularJS, Node.js, JQuery, HTML 5, bootstrap, JavaScript, Web Logic Application Server, Oracle, Windows XP, REST API, NetBeans, UNIX.\nClient: American Family Insurance Madison, WI                             \t\t  Duration: Nov 2009 –Jan 2011 \nRole:  Role: Java/J2EE Developer\nDescription: Sales Tool Project is an Online Auto Insurance Sales tool used to estimate the quote, calculate the     premium as per state rules and sell the quote to customers. Customers can access this tool from www.amfam.com and buy insurance online, Sales Tool Rewrite project is an enhancement and Integration project with the following major business requirements. Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questions/responses necessary to provide a quote premium.\nResponsibilities\nDeveloped presentation screens by using JSP, HTML and JavaScript. \nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the entire application using Struts Framework. \nPerformed client side validations using JavaScript and server side validations using in built Struts Validation Framework. \nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. \nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. \nUsed HQL statements and procedures to fetch the data from the database. \nTransformed, Navigated and Formatted XML documents using XSL, XSLT. \nUsed JMS for asynchronous exchange of message by applications on different platforms. \nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. \nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. \nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL. \nWorked on Linux environment for jobs scheduling for Inbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing. \nDeployed application in WebSphere Application Server and developed using Rational Application Developer RAD. \nEnvironment: Java, J2EE, JSP, Spring, Hibernate, JMS, XML, Web Services, SOAP, AJAX, HTML, JavaScript, CSS, Log4J, JUnit, Maven, WebSphere, Application Server, Eclipse, Oracle.\nClient: Value Labs\t\t\t\t   Duration: May 2008-Oct 2009\nRole: Java/J2EE Developer\nDescription:  BSHM builds a system, which helps both Doctor and patient in an efficient manner by providing information about the availability of Doctors, maintaining patient records according to their visit and generating reports of patients of their medications, Lab Findings, Problems List and serves the pharmacy maintenance also. The information may be very critical from both doctor's and patient's point of view, BSHM maintains a safe and secure database system for patients. BSHM stores patient's records efficiently and make them easily retrievable. The whole system modules are Appointments, patient chart, Reports, pharmacy, Administration.\nResponsibilities\nInvolved in Analysis and Design of the Project, which is based on MVC (Model-View-Controller) Architecture and Design Patterns.\nInvolved in developing prototypes of the product.\nCreated UML Use Cases, Sequence diagrams, Class diagrams and Page flow diagrams using Rational Rose.\nDesigned GUI Components using Tiles frame work and Validation frame work.\nDesigned and developed UI using HTML, JSP and Struts where users have all the items listed for auctions.\nDeveloped ANT scripts for builds and deployments.\nDeveloped Controller Servlets, Action and Form objects for process of interacting with Oracle database and retrieving dynamic data.\nResponsible for coding SQL Statements and Stored procedures for back end communication using JDBC.\nParsing of XML documents was done using SAX and DOM and XML transformation was done using XSLT.\nWrote JavaScript validations on the client side.\nInvolved in writing Detail Design Documents with UML Specifications.\nInvolved in unit testing and system testing and also responsible for preparing test scripts for the system testing.\nResponsible for packaging and deploying components in to the Tomcat.\nUsed java IO to create reports, which were mailed to be mailed to manager every hour.\nResponsible for performance tuning of the product and eliminating memory leakages in the product.\nParticipated in Code Review meetings with developers. \nEnvironment: CoreJava, Java Beans, JSP, Jbuilder, JavaScript, Servlets, JDBC, LOG4J, XML, XSLT, \nHTML, Struts, Tiles, SAX, DOM, Tomcat, UNIX, Oracle.",
  "cleaned_text": "Candidate Phone Email SUMMARY years of experience in developing and designing Web Based Internet Intranet, Client- Server and Multi-tier distributed applications using latest J EE technologies and various open source frameworks. Experienced in all stages of SDLC Software Development Life Cycle including proposal, process engineering, requirement analysis, design, development, testing, deployment and support. Proficient in Object Oriented Analysis and Design OOAD based on Unified Modeling Language UML . Proficient in Java Multithreading, Collections API, Socket programming, Swing programming. Used Adobe flex framework for building and maintaining web applications to deploy on all major platforms. Extensive knowledge of MVC architecture and J EE Design Patterns like Singleton, Session Facade, Service locator, DAO, DTO and Value Object in the development of web based Enterprise Applications. Good in Java J EE technologies such as JSP, JSF, Servlets, EJB, XML, XSD, JNDIandWeb services. Hands-on experience in Front-End technologies like AngularJS, Bootstrap, HTML , ReactJS, NodeJS, JavaScript, CSS , Jquery, Google Web Toolkit GWT , Tag Libraries, Custom Tags, Ajax, Ext.Js used for Responsive web design. Experience in JSF, Prime-Faces and Rich-Faces framework for Developing the User Interface. Expertise with the package managers such as NPM and Bower. Knowledge in Docker Components like Docker Engine, Docker Hub, Virtual Machine and Docker Registry. Expert in major relational databases like Oracle, MySQL, SQLServer and DB . Good working experience in No-SQL Database including MongoDB, Cassandra, CouchDB and DynamoDB. Proven experience in writing Queries, Stored Procedures, Triggers, Cursors, Functions and Packages using TOAD. Proficient in GUI&validation plug-ins like Tiles,Validator Frameworks and Custom Tag Libraries. Implemented various Ajax Frameworks such as JQuery, DOJO and JSON. Designed and developed various integration components using JMS and MQ Series. Expertise in developing Web Services for data transfer from client to server and vice versa using Apache Axis, REST, SOAP, WSDL, and UDDI. Written and developed scripts for automating tasks using, Python, Ant . , and UNIX shell programming. Exposure to Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat and JBoss. Hands on experience with source control tools like CVS, Clear Case, SVN, Git and Perforce. Good knowledge in working with Collections API, Multithreading and OOPs technologies. Good experience in using Amazon Web Services AWS and AWS SNS SQS for delivering messages. Developed the Spring Features like Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Zuul, Spring Eureka, Spring Netflix, Spring Hystrix. Developed Struts based presentation layer, hibernate based DAO layer and integrated them using Spring Dependency injection, ORM and Web modules. Experienced in Middleware persistence framework like Hibernate JPA, JDBC, iBatis for mapping Java POJO classes Objects with database and using Hibernate Query Language HQL . Knowledge in designing and implementing Solutions using EC , S , EBS, Elastic Load balancer and VPC. Deployed application updates to AWS Cloud and monitored the load balancing of different instances. Expertise in Cutting Edge Technologies like EJB, JMS, JTA, XML and Web SphereMQ Series with strong experience in Developing and Deploying Enterprise Java Beans on Application Servers like WebLogic, WebSphere and JBoss. Extensively worked on debugging using Logging Frameworks such as Apache Log j. Experience in using Maven, Gradle, Ant builds and in Visualization tools like Tableau. Performed Unit testing, Integration Testing& generating of test cases for web applications using Junit, JenkinsandLog J. Hands-on experience with IDEs like IBM Eclipse, NetBeans, Spring Tool Suite STS and IntelliJ. TECHNICAL SKILLS PROFESSIONAL EXPERIENCE Client Staples, Framingham, MA Duration Jan to till date Role Sr. JAVA J EE Developer Description Staples mainly focuses on developing a Retail application for the Staples Incorporation for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Staplesis to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge. Responsibilities Worked in Agile, Scrum Environments and participated in requirement gathering, analysis and design. Defined and constructed layers, server-side objects and client-side interfaces based on Java J EE design patterns. Developed and implemented Swing and Spring MVC framework for the application. Utilized Java features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application. Designed Prototype and project layout skeletons using JQuery, CSS , HTML , XML, DHTML and JavaScript. Developed Single Page Applications SPAs using AngularJS. Created Multiple & Nested Views, Routing, Controllers, Services and Custom Directives, Node.js, Bower and Grunt. Created an in-memory data structure cache by using React DOM for updating browser efficiently. Used AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client. Creating a responsive web application integrating Twitter Bootstrap with AngularJS and media queries. Used react-redux library to connect Redux application state to ReactJS components. Used redux store to combine different reducers to produce a global state. RESTful web services using Jersey for JAX-RS implementation and to transport detain JSON format. Worked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP. Consumed Web Services to fetch and direct credit card information from third party application. Developed new features for a REST SOA backend in Clojure and led evolution of an entire backend architecture. Used a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers Developed Microservices using Spring Boot, Spring Security, Eureka, HATEOAS and deployed to AWS. Implemented the associated business modules integration using Spring, and Hibernate data mapping. Used Spring dependency injection, annotations and Spring MVC components to implement business layer and navigation part of application. Used various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. Exposed and consumed SOAP based Web Services to communicate between systems. Used ActiveMQ to improve the stability and scaled the system for more concurrent users. Assisted in planning, installation and execution of new JRules, ILOG server, Application server and Team server and developed designs and strategies for business rules and address problems including configuration of ILOG Rules. Used Splunk SPL queries to generate reports. Used Splunk forwarders to provide reliable collection to deliver data to Splunk for indexing, storage and analysis. Implementing procedures for designing, coding and testing of application code through ILOG Jrules. Expertise in programming using Scala, built Scala prototype for the application requirement and focused on types of functional Scala. Configured and verified AWS workstations as per application requirement. Used GWT and Amazon AWS EC S EBS for prototyping and subsequent evaluation. Worked on creation of custom Docker container images, tagging and pushing the images. Created Mule ESB based tool suite for handling message transitioning, validation, enrichment and routing upstream and downstream entity data consumers. Used JMS for reliable and asynchronous exchange of essential information such as payment status report. Wrote SQL queries, stored procedures and enhanced performance by running explain plans. Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and Managing and maintaining Oracle and NoSQL databases in production domain. Wrote an integration application in Groovy for the Magento Shopping Cart Application and CounterPoint. Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects. Used log j for logging and SVN for version control also occasionally employed GITHUB as repo store. Used XStream API to transfer data back and forth between Spring MVC and Ext JS. Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins. Written highly referenced blog posts on Error Handling in Scala and Problems that Scala Fixes. Implemented REST web services in Scala using Akka for tracking an application. Used Maven goals for testing and packaging the various components and releasing on Apache Archiva for easy accessibility and maintenance within the organization Use of data structures and algorithms for time and memory complexity reduction. Used DevOps to refer to emphasize the collaboration and communication of both software developers and information technology professionals while automating the process of software delivery and infrastructure changes. Performing Smoke Testing and Acceptance Testing with Selenium in multiple Java platforms. Followed TDD Test Driven Development methodology to write unit tests with JUNIT and Mockito. Write automated regression tests using JMeter. Environment Java, J EE, JDK . . , RCP, AWS SDK, Ext JS, Git, Swing, JFC, Spring .x, AWS SNS SQS, hibernate .x, Scala, Core Java, SOAP Rest, Web Services, Python . , JavaScript, Clojure, UML, HTML , CSS, SASS, RAD , WAS WSDL, SDKs, JIRA .x .x, JAXB, Linux, JAX-WS, JAX RPC, JMS, UNIX, Selenium NOSQL MongoDB , AngularJS . , ReactJS, AJAX, Apache JMeter, JQuery, Mule ESB JUnit, Maven, EMR. Client Wells Fargo, Des Moines, IA. Duration May to Dec Role Sr. JAVA J EE Developer Description Global Wires Application is a wires payment application for corporate and financial users for creating Domestic and International wires. They can also make postdated payments up to days. These wires can be initiated as freeform or template wires. We provide optional security to these wires through Secure Validation. Secure Validation is a process which provides the additional security to the customers during their transactions, in the process of wires creation it will generate a onetime pass code to validate the user, this one-time code is sent to the user s mobile or email. Responsibilities Developed the J EE application based on the Service Oriented Architecture. Used Design Patterns like Singleton, Factory, Session Facade and DAO. Developed using new features of Java . Annotations, Generics, enhanced for loop and Enums. Developed screens using HTML, CSS, JavaScript, JQuery and AJAX, Node.js. Creation of prototypes using Inkspace and Quickview . Designed SOA integration using Apache CXF. Enabled rapid service tier development. Used AngularJS for DOM Manipulation, Filters, and Directives. Used Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes. Implemented Cross-browser Compatibility of UI pages for internet browsers such as Chrome, Firefox, and IE Debugged the application using Chrome Inspector, Firebug, IE Tester and many other debugging tools. Created and injected Spring services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes. Used Spring Inheritance to develop beans from already developed parent beans. Developed Service Layer Using Spring, AspectJ and persistence layer using Hibernate. Used Hibernate Transaction Management, Hibernate Batch Transactions, cache concepts. Involved in implementing DAO layers using JPA standards and Hibernate API interfaces. Created SQL queries, PL SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using DB and JPA with Hibernate provider. Extensively used Hibernate mapping, HQL, EHCache, Query, Criteria, Transactions and Locking mechanisms. Got exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. Developed REST Web Service clients to consume those Web Services as well other enterprise Services. Exposed the Web Services to the client applications by sharing the WSDLs. Implemented SOA to develop REST Based Web services using Apache Axis Created logical and physical data models putting to practice, concepts of normalization and RDBMS. Used Jenkins to automate the build and deploy process. Developed and consumed Apache CXF based Web Services as part of Payments Application. Focused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. Used Log j utility to generate run-time logs. SVN was used for project management and version management. Deployed the application on JBOSSapplication server. Environment J EE, Springmok .x, Spring MVC, Hibernate .x, AngularJS, jQuery, JSON, Servlets . , JDBC, AJAX, Web services, SOAP, XML, Java Beans, XStream, Net Tool, Apache CXF . , Apache POI, Ext JS, JQuery, JavaScript, JBOSS, Agile Methodology, Design Patterns, SVN, Apache Maven, JUnit, HTML Unit, XSLT, HTML DHTML. Client BCBS, Richardson, TX Duration Nov Apr Project Small Group Renewal Role Sr. Java Developer Description Small Group Renewal SGR is the automated solution for streamlining the health insurance sales process.BA Renewals delivers information and tools created to assist with reselling or reacquiring existing accounts, presenting additional plan offerings and alternatives, and monitoring anniversary effective dates to reduce the forfeiture of any business opportunities. Workflow, Single Rating Engine SRE , and other relevant common services are used to enable Renewing process automation. Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering, modeling, analysis, design, development, testing, and monitoring. Involved in Use Case Diagrams, Class Diagrams and Sequence diagrams using Rational Rose. Spring JMS was used to connect to ActiveMQ for interconnecting various internal systems. Implemented SOA web sphere appliance in the web services for the ease of error handling and load balancing. Tested Web Services using SOAP UI and involved in composing test suites for operations. Used Collection Framework and Multithreading for performing cache Operation. Extensively used various Spring Framework modules like DI IOC , Bean Wiring, Inheritance, Auto Wiring, JDBC Templates, AOP and Spring Quartz Schedulers for Jobs. Developed session, entity beans and message driven beans. Developed, and debugged the EJB with WebSphere Application server. Implemented interceptors using Hibernate and build and release Spring Boot framework. Got exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. Designed and developed web pages using with HTML, DHTML, XHTML, CSS, and JSP. Achieved role control functionality mainly by retrieving JSON data from AJAX and combining the retrieved data with jQuery to manipulate nodes in DOM tree. Utilized a combination of regular expression and jQuery Validation Plugin to conduct input check. While in the newer sub project, conducted validation in AngularJS way. Created test cases to validate Regular Expressions. Used XML XSLT for transforming common XML format and SAML for Single Sign-On. Designed configuration XML Schema for the application. Used Regular Expressions to Serializable for pattern classes. Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins. Used XML Http Request Object to provide asynchronous communication as part of AJAX implementation. Experience with KORN based scripts as part of triggering UNIX and J EE based Jobs. Used SOAP for Web Services by exchanging XML data between applications over HTTP. WSDL was used for publishing Web Service interfaces. Junit tests were written to test each module in the application. Wrote Ant Scripts to automate the build and deploy process. Prepared the test plans and executed test cases for unit, integration and system testing using different automation tools like Junit, Soap UI and Fiddler. Performance Testing experience using Jmeter. Environment Core Java J EE, Servlets, Java Spring, JSTL, EJB, JMS, XML, XSLT, JDBC, AJAX, IBM WebSphere Application Server . , Oracle g, WSAD, IBM MQ, HTML, CSS, JavaScript, Eclipse, UML, Rational Rose, Windows XP, CVS, JUnit, ANT, Adobe Flex, Visio. Client JPMorgan Chase, NY Duration Feb Oct Position Sr. Java Developer Description CSR Dashboard is an internal facing application, accessed via the Prime View portal,which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events, with Corporate Actions and Money Transfer events to follow. This tool provides a CSR centric view of all key events for all families supported by a CSR, Team Lead or Area Manager. As of today, Option Exercise and Corporate Actions have been on boarded. Responsibilities Developed the J EE application based on the Service Oriented Architecture. Used Spring Framework for dependency injection, integration of Hibernate using Spring ORM support, development of RESTful web services to give JSON output. Used Spring MVC front controller pattern to handle requests from dispatcher servlet to handle incoming requests. Configured Spring MVC from scratch using XML configurations, namespace handling, Spring security set up and giving access to resources. Wrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections. Used Hibernate in persistence layer, written hibernate mappings using Annotations, HQL, Criteria and Queries. Involved in Design and Development of RESTful API. REST web services are created using Spring with Jackson Mappers to exchange data using JSON data structure. Used SVN for source Version Control, resolving code conflicts and merging code base. Deployed the application in Web Logic Application Server. Strong experience in writing PL SQL queries and performance tuning. Developed Unix Shell scripts to automate repetitive database processes. Used Maven for dependency management, build applications and deploy to the containers, application servers and create versions in the repository. Used JUnit for unit testing of the application and log j for logging. Environment Core Java, Java . , Spring, Hibernate, SVN, Apache, Eclipse . , JNDI, Log j, JUnit, XML, XSD, AngularJS, Node.js, JQuery, HTML , bootstrap, JavaScript, Web Logic Application Server, Oracle, Windows XP, REST API, NetBeans, UNIX. Client American Family Insurance Madison, WI Duration Nov Jan Role Role Java J EE Developer Description Sales Tool Project is an Online Auto Insurance Sales tool used to estimate the quote, calculate the premium as per state rules and sell the quote to customers. Customers can access this tool from www.amfam.com and buy insurance online, Sales Tool Rewrite project is an enhancement and Integration project with the following major business requirements. Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questions responses necessary to provide a quote premium. Responsibilities Developed presentation screens by using JSP, HTML and JavaScript. Implemented Model View Controller MVC- architecture and developed Form classes, Action Classes for the entire application using Struts Framework. Performed client side validations using JavaScript and server side validations using in built Struts Validation Framework. Implemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from the database. Transformed, Navigated and Formatted XML documents using XSL, XSLT. Used JMS for asynchronous exchange of message by applications on different platforms. Developed the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. Involved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. Involved in developing SQL queries, stored procedures, and functions. Creation of database objects like tables, views using oracle tools like Toad, and SQL plus. Involved in writing Stored Procedure in using PL SQL. Worked on Linux environment for jobs scheduling for Inbound data on monthly basis. Used JUnit Testing Framework for performing Unit testing. Deployed application in WebSphere Application Server and developed using Rational Application Developer RAD. Environment Java, J EE, JSP, Spring, Hibernate, JMS, XML, Web Services, SOAP, AJAX, HTML, JavaScript, CSS, Log J, JUnit, Maven, WebSphere, Application Server, Eclipse, Oracle. Client Value Labs Duration May -Oct Role Java J EE Developer Description BSHM builds a system, which helps both Doctor and patient in an efficient manner by providing information about the availability of Doctors, maintaining patient records according to their visit and generating reports of patients of their medications, Lab Findings, Problems List and serves the pharmacy maintenance also. The information may be very critical from both doctor s and patient s point of view, BSHM maintains a safe and secure database system for patients. BSHM stores patient s records efficiently and make them easily retrievable. The whole system modules are Appointments, patient chart, Reports, pharmacy, Administration. Responsibilities Involved in Analysis and Design of the Project, which is based on MVC Model-View-Controller Architecture and Design Patterns. Involved in developing prototypes of the product. Created UML Use Cases, Sequence diagrams, Class diagrams and Page flow diagrams using Rational Rose. Designed GUI Components using Tiles frame work and Validation frame work. Designed and developed UI using HTML, JSP and Struts where users have all the items listed for auctions. Developed ANT scripts for builds and deployments. Developed Controller Servlets, Action and Form objects for process of interacting with Oracle database and retrieving dynamic data. Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC. Parsing of XML documents was done using SAX and DOM and XML transformation was done using XSLT. Wrote JavaScript validations on the client side. Involved in writing Detail Design Documents with UML Specifications. Involved in unit testing and system testing and also responsible for preparing test scripts for the system testing. Responsible for packaging and deploying components in to the Tomcat. Used java IO to create reports, which were mailed to be mailed to manager every hour. Responsible for performance tuning of the product and eliminating memory leakages in the product. Participated in Code Review meetings with developers. Environment CoreJava, Java Beans, JSP, Jbuilder, JavaScript, Servlets, JDBC, LOG J, XML, XSLT, HTML, Struts, Tiles, SAX, DOM, Tomcat, UNIX, Oracle.",
  "preprocessed_text": "candidate summary year experience developing designing web based internet intranet client- server multi-tier distributed application using latest ee technology various open source framework experienced stage sdlc software development life cycle including proposal process engineering requirement analysis design development testing deployment support proficient object oriented analysis design ooad based unified modeling language uml proficient java multithreading collection api socket programming swing programming used adobe flex framework building maintaining web application deploy major platform extensive knowledge mvc architecture ee design pattern like singleton session facade service locator dao dto value object development web based enterprise application good java ee technology jsp jsf servlets ejb xml xsd jndiandweb service hands-on experience front-end technology like angularjs bootstrap html reactjs nodejs javascript cs jquery google web toolkit gwt tag library custom tag ajax ext.js used responsive web design experience jsf prime-faces rich-faces framework developing user interface expertise package manager npm bower knowledge docker component like docker engine docker hub virtual machine docker registry expert major relational database like oracle mysql sqlserver db good working experience no-sql database including mongodb cassandra couchdb dynamodb proven experience writing query stored procedure trigger cursor function package using toad proficient gui validation plug-in like tile validator framework custom tag library implemented various ajax framework jquery dojo json designed developed various integration component using jms mq series expertise developing web service data transfer client server vice versa using apache axis rest soap wsdl uddi written developed script automating task using python ant unix shell programming exposure application server like bea weblogic ibm websphere apache tomcat jboss hand experience source control tool like cv clear case svn git perforce good knowledge working collection api multithreading oops technology good experience using amazon web service aws aws sn sqs delivering message developed spring feature like spring mvc spring dao spring boot spring batch spring heroku spring security spring integration spring zuul spring eureka spring netflix spring hystrix developed strut based presentation layer hibernate based dao layer integrated using spring dependency injection orm web module experienced middleware persistence framework like hibernate jpa jdbc ibatis mapping java pojo class object database using hibernate query language hql knowledge designing implementing solution using ec eb elastic load balancer vpc deployed application update aws cloud monitored load balancing different instance expertise cutting edge technology like ejb jms jta xml web spheremq series strong experience developing deploying enterprise java bean application server like weblogic websphere jboss extensively worked debugging using logging framework apache log j. experience using maven gradle ant build visualization tool like tableau performed unit testing integration testing generating test case web application using junit jenkinsandlog j. hands-on experience ides like ibm eclipse netbeans spring tool suite sts intellij technical skill professional experience client staple framingham duration jan till role sr. java ee developer description staple mainly focus developing retail application staple incorporation selling product printer scanner floppy office accessory sheet etc motive staplesis provide quick service consumer need quick purchase office accessory lesser bulk quantity generation internal feed like coupon rebate campaign additional challenge requires technical expertise well domain knowledge responsibility worked agile scrum environment participated requirement gathering analysis design defined constructed layer server-side object client-side interface based java ee design pattern developed implemented swing spring mvc framework application utilized java feature like lambda expression stream api bulk data operation collection would increase performance application designed prototype project layout skeleton using jquery cs html xml dhtml javascript developed single application spa using angularjs created multiple nested view routing controller service custom directive node.js bower grunt created in-memory data structure cache using react dom updating browser efficiently used angularjs creating animation based cs class new requirement surfaced client creating responsive web application integrating twitter bootstrap angularjs medium query used react-redux library connect redux application state reactjs component used redux store combine different reducer produce global state restful web service using jersey jax-rs implementation transport detain json format worked soa web service using soap transmission large block xml data consumed web service fetch direct credit card information third party application developed new feature rest soa backend clojure led evolution entire backend architecture used microservice architecture spring boot-based service interacting combination rest apache kafka message broker developed microservices using spring boot spring security eureka hateoas deployed aws implemented associated business module integration using spring hibernate data mapping used spring dependency injection annotation spring mvc component implement business layer navigation part application used various jquery bootstrap plug-in like picker bootstrap selector exposed consumed soap based web service communicate system used activemq improve stability scaled system concurrent user assisted planning installation execution new jrules ilog server application server team server developed design strategy business rule problem including configuration ilog rule used splunk spl query generate report used splunk forwarders provide reliable collection deliver data splunk indexing storage analysis implementing procedure designing coding testing application code ilog jrules expertise programming using scala built scala prototype application requirement focused type functional scala configured verified aws workstation per application requirement used gwt amazon aws ec eb prototyping subsequent evaluation worked creation custom docker container image tagging pushing image created mule esb based tool suite handling message transitioning validation enrichment routing upstream downstream entity data consumer used jms reliable asynchronous exchange essential information payment status report wrote sql query stored procedure enhanced performance running explain plan composed executed mongodb script insert update nosql database automating data change reporting managing maintaining oracle nosql database production domain wrote integration application groovy magento shopping cart application counterpoint created configured new jira project worked department maintain existing jira project used log logging svn version control also occasionally employed repo store used xstream api transfer data back forth spring mvc ext j developed maven script developed build using maven continuous integration server like jenkins written highly referenced blog post error handling scala problem scala fix implemented rest web service scala using akka tracking application used maven goal testing packaging various component releasing apache archiva easy accessibility maintenance within organization use data structure algorithm time memory complexity reduction used devops refer emphasize collaboration communication software developer information technology professional automating process software delivery infrastructure change performing smoke testing acceptance testing selenium multiple java platform followed tdd test driven development methodology write unit test junit mockito write automated regression test using jmeter environment java ee jdk rcp aws sdk ext j git swing jfc spring .x aws sn sqs hibernate .x scala core java soap rest web service python javascript clojure uml html cs sas rad wsdl sdks jira .x .x jaxb linux jax-ws jax rpc jms unix selenium nosql mongodb angularjs reactjs ajax apache jmeter jquery mule esb junit maven emr client well fargo de moines ia duration may dec role sr. java ee developer description global wire application wire payment application corporate financial user creating domestic international wire also make postdated payment day wire initiated freeform template wire provide optional security wire secure validation secure validation process provides additional security customer transaction process wire creation generate onetime pas code validate user one-time code sent user mobile responsibility developed ee application based service oriented architecture used design pattern like singleton factory session facade dao developed using new feature java annotation generic enhanced loop enums developed screen using html cs javascript jquery ajax node.js creation prototype using inkspace quickview designed soa integration using apache cxf enabled rapid service tier development used angularjs dom manipulation filter directive used twitter bootstrap create responsive web page displayed properly different screen size implemented cross-browser compatibility ui page internet browser chrome firefox ie debugged application using chrome inspector firebug ie tester many debugging tool created injected spring service spring controller daos achieve dependency injection wire object business class used spring inheritance develop bean already developed parent bean developed service layer using spring aspectj persistence layer using hibernate used hibernate transaction management hibernate batch transaction cache concept involved implementing dao layer using jpa standard hibernate api interface created sql query pl sql stored procedure function database layer studying required business object validating stored procedure using db jpa hibernate provider extensively used hibernate mapping hql ehcache query criterion transaction locking mechanism got exposure build deploy change production environment executing build script deploying compiled gwt client side code server side code production server developed rest web service client consume web service well enterprise service exposed web service client application sharing wsdls implemented soa develop rest based web service using apache axis created logical physical data model putting practice concept normalization rdbms used jenkins automate build deploy process developed consumed apache cxf based web service part payment application focused test driven development thereby creating detailed junit test every single piece functionality actually writing functionality used log utility generate run-time log svn used project management version management deployed application jbossapplication server environment ee springmok .x spring mvc hibernate .x angularjs jquery json servlets jdbc ajax web service soap xml java bean xstream tool apache cxf apache poi ext j jquery javascript jboss agile methodology design pattern svn apache maven junit html unit xslt html dhtml client bcbs richardson tx duration nov apr project small group renewal role sr. java developer description small group renewal sgr automated solution streamlining health insurance sale process.ba renewal delivers information tool created assist reselling reacquiring existing account presenting additional plan offering alternative monitoring anniversary effective date reduce forfeiture business opportunity workflow single rating engine sre relevant common service used enable renewing process automation responsibility involved various phase software development life cycle sdlc requirement gathering modeling analysis design development testing monitoring involved use case diagram class diagram sequence diagram using rational rose spring jms used connect activemq interconnecting various internal system implemented soa web sphere appliance web service ease error handling load balancing tested web service using soap ui involved composing test suite operation used collection framework multithreading performing cache operation extensively used various spring framework module like di ioc bean wiring inheritance auto wiring jdbc template aop spring quartz scheduler job developed session entity bean message driven bean developed debugged ejb websphere application server implemented interceptor using hibernate build release spring boot framework got exposure build deploy change production environment executing build script deploying compiled gwt client side code server side code production server designed developed web page using html dhtml xhtml cs jsp achieved role control functionality mainly retrieving json data ajax combining retrieved data jquery manipulate node dom tree utilized combination regular expression jquery validation plugin conduct input check newer sub project conducted validation angularjs way created test case validate regular expression used xml xslt transforming common xml format saml single sign-on designed configuration xml schema application used regular expression serializable pattern class developed maven script developed build using maven continuous integration server like jenkins used xml object provide asynchronous communication part ajax implementation experience korn based script part triggering unix ee based job used soap web service exchanging xml data application wsdl used publishing web service interface junit test written test module application wrote ant script automate build deploy process prepared test plan executed test case unit integration system testing using different automation tool like junit soap ui fiddler performance testing experience using jmeter environment core java ee servlets java spring jstl ejb jms xml xslt jdbc ajax ibm websphere application server oracle wsad ibm mq html cs javascript eclipse uml rational rose window xp cv junit ant adobe flex visio client jpmorgan chase ny duration feb oct position sr. java developer description csr dashboard internal facing application accessed via prime view portal currently designed serve csr need provide proactive superior client service option assignment event corporate action money transfer event follow tool provides csr centric view key event family supported csr team lead area manager today option exercise corporate action boarded responsibility developed ee application based service oriented architecture used spring framework dependency injection integration hibernate using spring orm support development restful web service give json output used spring mvc front controller pattern handle request dispatcher servlet handle incoming request configured spring mvc scratch using xml configuration namespace handling spring security set giving access resource wrote code transform xml document using jaxb marshalling unmarshalling using spring injection used hibernate persistence layer written hibernate mapping using annotation hql criterion query involved design development restful api rest web service created using spring jackson mapper exchange data using json data structure used svn source version control resolving code conflict merging code base deployed application web logic application server strong experience writing pl sql query performance tuning developed unix shell script automate repetitive database process used maven dependency management build application deploy container application server create version repository used junit unit testing application log logging environment core java java spring hibernate svn apache eclipse jndi log junit xml xsd angularjs node.js jquery html bootstrap javascript web logic application server oracle window xp rest api netbeans unix client american family insurance madison wi duration nov jan role role java ee developer description sale tool project online auto insurance sale tool used estimate quote calculate premium per state rule sell quote customer customer access tool www.amfam.com buy insurance online sale tool rewrite project enhancement integration project following major business requirement implement new online auto insurance sale process flow quoting reduce number question response necessary provide quote premium responsibility developed presentation screen using jsp html javascript implemented model view controller mvc- architecture developed form class action class entire application using strut framework performed client side validation using javascript server side validation using built strut validation framework implemented data persistence functionality application using hibernate persist java object relational database used hibernate annotation reduce time configuration level accessed annotated bean hibernate dao layer used hql statement procedure fetch data database transformed navigated formatted xml document using xsl xslt used jms asynchronous exchange message application different platform developed view component using jsp html strut logic tag strut tag library involved designing implementation session facade business delegate service locator pattern delegate appropriate resource involved developing sql query stored procedure function creation database object like table view using oracle tool like toad sql plus involved writing stored procedure using pl sql worked linux environment job scheduling inbound data monthly basis used junit testing framework performing unit testing deployed application websphere application server developed using rational application developer rad environment java ee jsp spring hibernate jms xml web service soap ajax html javascript cs log junit maven websphere application server eclipse oracle client value lab duration may -oct role java ee developer description bshm build system help doctor patient efficient manner providing information availability doctor maintaining patient record according visit generating report patient medication lab finding problem list serf pharmacy maintenance also information may critical doctor patient point view bshm maintains safe secure database system patient bshm store patient record efficiently make easily retrievable whole system module appointment patient chart report pharmacy administration responsibility involved analysis design project based mvc model-view-controller architecture design pattern involved developing prototype product created uml use case sequence diagram class diagram flow diagram using rational rose designed gui component using tile frame work validation frame work designed developed ui using html jsp strut user item listed auction developed ant script build deployment developed controller servlets action form object process interacting oracle database retrieving dynamic data responsible coding sql statement stored procedure back end communication using jdbc parsing xml document done using sax dom xml transformation done using xslt wrote javascript validation client side involved writing detail design document uml specification involved unit testing system testing also responsible preparing test script system testing responsible packaging deploying component tomcat used java io create report mailed mailed manager every hour responsible performance tuning product eliminating memory leakage product participated code review meeting developer environment corejava java bean jsp jbuilder javascript servlets jdbc log xml xslt html strut tile sax dom tomcat unix oracle",
  "statistics": {
    "word_count": 4045,
    "unique_word_count": 1228,
    "avg_word_length": 5.020024721878863,
    "stopword_count": 826
  },
  "metadata": {
    "filename": "Candidate_32.docx",
    "file_size": 50374,
    "processing_time": null,
    "processing_timestamp": "2025-09-09T23:21:02.335171",
    "input_filename": "Candidate_32.json"
  }
}